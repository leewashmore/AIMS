<UserControl x:Class="GreenField.LoginModule.Views.ViewLoginForm"
    xmlns:resources="clr-namespace:GreenField.LoginModule.Resources"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:toolkit="http://schemas.microsoft.com/winfx/2006/xaml/presentation/toolkit"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
    xmlns:support="clr-namespace:GreenField.LoginModule.SupportClasses"
    mc:Ignorable="d" FontSize="12" Width="400" >

    <UserControl.Resources>
        <resources:ResourceWrapper x:Key="ErrorMessagesList" />
        <Storyboard x:Name="missingFieldNotificationTransition">
            <DoubleAnimation From="0"
                             To="5"
                             Duration="00:00:0.1"
                             Storyboard.TargetName="missingFieldPopup"
                             Storyboard.TargetProperty="HorizontalOffset">
            </DoubleAnimation>
        </Storyboard>
        <Storyboard x:Name="invalidCredentialsNotificationTransition">
            <DoubleAnimation From="0"
                             To="5"
                             Duration="00:00:0.1"
                             Storyboard.TargetName="invalidCredentialsPopup"
                             Storyboard.TargetProperty="HorizontalOffset">
            </DoubleAnimation>
        </Storyboard>
        <Storyboard x:Name="unapprovedLoginNotificationTransition">
            <DoubleAnimation From="0"
                             To="5"
                             Duration="00:00:0.1"
                             Storyboard.TargetName="unapprovedLoginPopup"
                             Storyboard.TargetProperty="HorizontalOffset">
            </DoubleAnimation>
        </Storyboard>
        <Storyboard x:Name="lockedOutLoginNotificationTransition">
            <DoubleAnimation From="0"
                             To="5"
                             Duration="00:00:0.1"
                             Storyboard.TargetName="lockedOutLoginPopup"
                             Storyboard.TargetProperty="HorizontalOffset">
            </DoubleAnimation>
        </Storyboard>
        <Storyboard x:Name="FlipStartPasswordChange">
            <DoubleAnimation From="0"
                             To="90"
                             Duration="00:00:0.5"
                             Storyboard.TargetName="ViewPanelProjection"
                             Storyboard.TargetProperty="RotationY">
            </DoubleAnimation>
        </Storyboard>
        <Storyboard x:Name="FlipStartPasswordReset">
            <DoubleAnimation From="0"
                             To="90"
                             Duration="00:00:0.5"
                             Storyboard.TargetName="ViewPanelProjection"
                             Storyboard.TargetProperty="RotationY">
            </DoubleAnimation>
        </Storyboard>
        <Storyboard x:Name="FlipStartRegister">
            <DoubleAnimation From="0"
                             To="90"
                             Duration="00:00:0.5"
                             Storyboard.TargetName="ViewPanelProjection"
                             Storyboard.TargetProperty="RotationY">
            </DoubleAnimation>
        </Storyboard>
        <Storyboard x:Name="FlipEnd" >
            <DoubleAnimation From="270"
                             To="360"
                             Duration="00:00:0.5"
                             Storyboard.TargetName="ViewPanelProjection"
                             Storyboard.TargetProperty="RotationY">
            </DoubleAnimation>
        </Storyboard>
    </UserControl.Resources>

    <Border BorderBrush="Gray" BorderThickness="1" CornerRadius="15">
        <Border.Projection>
            <PlaneProjection x:Name="ViewPanelProjection"/>
        </Border.Projection>
        <Grid x:Name="LayoutRoot" Margin="5" >
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Opened" SourceName="missingFieldPopup">
                    <ei:ControlStoryboardAction Storyboard="{StaticResource missingFieldNotificationTransition}" ControlStoryboardOption="Play"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="Opened" SourceName="invalidCredentialsPopup">
                    <ei:ControlStoryboardAction Storyboard="{StaticResource invalidCredentialsNotificationTransition}" ControlStoryboardOption="Play"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="Opened" SourceName="unapprovedLoginPopup">
                    <ei:ControlStoryboardAction Storyboard="{StaticResource unapprovedLoginNotificationTransition}" ControlStoryboardOption="Play"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="Opened" SourceName="lockedOutLoginPopup">
                    <ei:ControlStoryboardAction Storyboard="{StaticResource lockedOutLoginNotificationTransition}" ControlStoryboardOption="Play"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="Completed" SourceName="FlipStartRegister">
                    <i:InvokeCommandAction Command="{Binding RegisterCommand}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="Completed" SourceName="FlipStartPasswordChange">
                    <i:InvokeCommandAction Command="{Binding PasswordChangeCommand}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="Completed" SourceName="FlipStartPasswordReset">
                    <i:InvokeCommandAction Command="{Binding PasswordResetCommand}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="Click" SourceName="hbtnRegister">
                    <ei:ControlStoryboardAction Storyboard="{StaticResource FlipStartRegister}" ControlStoryboardOption="Play"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="Click" SourceName="hbtnPasswordReset">
                    <ei:ControlStoryboardAction Storyboard="{StaticResource FlipStartPasswordReset}" ControlStoryboardOption="Play"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="Click" SourceName="hbtnPasswordChange">
                    <ei:ControlStoryboardAction Storyboard="{StaticResource FlipStartPasswordChange}" ControlStoryboardOption="Play"/>
                </i:EventTrigger>
                <ei:DataTrigger Binding="{Binding NavigateTo, Mode=TwoWay}" Value="true" Comparison="Equal">
                    <ei:ControlStoryboardAction Storyboard="{StaticResource FlipEnd}" ControlStoryboardOption="Play"/>
                </ei:DataTrigger>
            </i:Interaction.Triggers>

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="5,5,5,0">
                <TextBlock Width="328" Text="Login" FontWeight="Bold"/>
                <HyperlinkButton x:Name="hbtnRegister" FontSize="10" Margin="5,0,0,0" VerticalAlignment="Bottom" HorizontalContentAlignment="Right" 
                                 Content="Register" Foreground="DarkBlue"/>
                <Popup x:Name="missingFieldPopup" IsOpen="{Binding MissingFieldPopupIsOpen}" Child="{Binding MissingFieldPopupChild}" VerticalOffset="15"/>
                <Popup x:Name="invalidCredentialsPopup" IsOpen="{Binding InvalidCredentialsPopupIsOpen}" Child="{Binding InvalidCredentialsPopupChild}" VerticalOffset="15"/>
                <Popup x:Name="unapprovedLoginPopup" IsOpen="{Binding UnapprovedLoginPopupIsOpen}" Child="{Binding UnapprovedLoginPopupChild}" VerticalOffset="15"/>
                <Popup x:Name="lockedOutLoginPopup" IsOpen="{Binding LockedOutLoginPopupIsOpen}" Child="{Binding LockedOutLoginPopupChild}" VerticalOffset="15"/>
            </StackPanel>

            <toolkit:Separator VerticalAlignment="Bottom" Height="5" Margin="5,5,5,0" BorderThickness="1" BorderBrush="#193441"/>

            <StackPanel Grid.Row="1" Orientation="Vertical" Margin="5,5,5,0">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Login ID" TextAlignment="Left" VerticalAlignment="Center" Width="120" 
                               Foreground="{Binding LoginBorderBrush}"/>
                    <TextBox x:Name="tbLoginID"  Width="253" Margin="5,0,0,0"
                             BorderBrush="{Binding LoginBorderBrush}"
                             Text="{Binding LoginIdText, Mode=TwoWay}"
                             support:EnterKeyDown.Command="{Binding LoginCommand}"
                             support:EnterKeyDown.CommandArgument="{Binding Path=Text, RelativeSource={RelativeSource Self}}"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="0,5,0,0">
                    <TextBlock Text="Password" TextAlignment="Left" VerticalAlignment="Center" Width="120"
                               Foreground="{Binding PasswordBorderBrush}"/>
                    <PasswordBox x:Name="pbPassword" Width="253" Margin="5,0,0,0" 
                                 BorderBrush="{Binding PasswordBorderBrush}"
                                 Password="{Binding PasswordText, Mode=TwoWay}"
                                 support:EnterKeyDown.Command="{Binding LoginCommand}"
                                 support:EnterKeyDown.CommandArgument="{Binding Path=Password, RelativeSource={RelativeSource Self}}"/>                                 
                </StackPanel>
            </StackPanel>
            <TextBlock x:Name="tbCapsLockNotification" Grid.Row="2" Text="*Caps Lock is On" Visibility="Collapsed" FontSize="8" Margin="5,0,0,0" Foreground="DarkBlue" HorizontalAlignment="Left"/>
            <StackPanel Grid.Row="3" Orientation="Horizontal" HorizontalAlignment="Left" Margin="5">
                <telerik:RadButton x:Name="btnLogin" HorizontalAlignment="Left" Width="75"
                        Content="Login" Command="{Binding LoginCommand}"/>
            </StackPanel>

            <StackPanel Grid.Row="3" Orientation="Horizontal" HorizontalAlignment="Right" Margin="5">

                <HyperlinkButton x:Name="hbtnPasswordReset" FontSize="10" VerticalAlignment="Bottom" HorizontalContentAlignment="Right" 
                                 Content="Forgot Password?" Foreground="DarkBlue"/>
                <HyperlinkButton x:Name="hbtnPasswordChange" FontSize="10" Margin="5,0,0,0" VerticalAlignment="Bottom" HorizontalContentAlignment="Right" 
                                 Content="Change Password" Foreground="DarkBlue"/>
                
            </StackPanel>
        </Grid>

    </Border>
</UserControl>
