//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace GreenField.IssuerShares.Client.Backend.IssuerShares {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RootModel", Namespace="http://schemas.datacontract.org/2004/07/GreenField.IssuerShares.Server")]
    public partial class RootModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private GreenField.IssuerShares.Client.Backend.IssuerShares.IssuerModel IssuerField;
        
        private System.Collections.ObjectModel.ObservableCollection<GreenField.IssuerShares.Client.Backend.IssuerShares.ItemModel> ItemsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GreenField.IssuerShares.Client.Backend.IssuerShares.IssuerModel Issuer {
            get {
                return this.IssuerField;
            }
            set {
                if ((object.ReferenceEquals(this.IssuerField, value) != true)) {
                    this.IssuerField = value;
                    this.RaisePropertyChanged("Issuer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<GreenField.IssuerShares.Client.Backend.IssuerShares.ItemModel> Items {
            get {
                return this.ItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemsField, value) != true)) {
                    this.ItemsField = value;
                    this.RaisePropertyChanged("Items");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IssuerModel", Namespace="http://schemas.datacontract.org/2004/07/Aims.Data.Server")]
    public partial class IssuerModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string IdField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemModel", Namespace="http://schemas.datacontract.org/2004/07/GreenField.IssuerShares.Server")]
    public partial class ItemModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool PreferredField;
        
        private GreenField.IssuerShares.Client.Backend.IssuerShares.SecurityModel SecurityField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Preferred {
            get {
                return this.PreferredField;
            }
            set {
                if ((this.PreferredField.Equals(value) != true)) {
                    this.PreferredField = value;
                    this.RaisePropertyChanged("Preferred");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GreenField.IssuerShares.Client.Backend.IssuerShares.SecurityModel Security {
            get {
                return this.SecurityField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityField, value) != true)) {
                    this.SecurityField = value;
                    this.RaisePropertyChanged("Security");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SecurityModel", Namespace="http://schemas.datacontract.org/2004/07/Aims.Data.Server")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.IssuerShares.Client.Backend.IssuerShares.CompanySecurityModel))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.IssuerShares.Client.Backend.IssuerShares.FundModel))]
    public partial class SecurityModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string IdField;
        
        private string IssuerIdField;
        
        private string NameField;
        
        private string SecurityTypeField;
        
        private string ShortNameField;
        
        private string TickerField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IssuerId {
            get {
                return this.IssuerIdField;
            }
            set {
                if ((object.ReferenceEquals(this.IssuerIdField, value) != true)) {
                    this.IssuerIdField = value;
                    this.RaisePropertyChanged("IssuerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityType {
            get {
                return this.SecurityTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityTypeField, value) != true)) {
                    this.SecurityTypeField = value;
                    this.RaisePropertyChanged("SecurityType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortName {
            get {
                return this.ShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortNameField, value) != true)) {
                    this.ShortNameField = value;
                    this.RaisePropertyChanged("ShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ticker {
            get {
                return this.TickerField;
            }
            set {
                if ((object.ReferenceEquals(this.TickerField, value) != true)) {
                    this.TickerField = value;
                    this.RaisePropertyChanged("Ticker");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompanySecurityModel", Namespace="http://schemas.datacontract.org/2004/07/Aims.Data.Server")]
    public partial class CompanySecurityModel : GreenField.IssuerShares.Client.Backend.IssuerShares.SecurityModel {
        
        private GreenField.IssuerShares.Client.Backend.IssuerShares.CountryModel CountryField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GreenField.IssuerShares.Client.Backend.IssuerShares.CountryModel Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FundModel", Namespace="http://schemas.datacontract.org/2004/07/Aims.Data.Server")]
    public partial class FundModel : GreenField.IssuerShares.Client.Backend.IssuerShares.SecurityModel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CountryModel", Namespace="http://schemas.datacontract.org/2004/07/Aims.Data.Server")]
    public partial class CountryModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string IsoCodeField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsoCode {
            get {
                return this.IsoCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.IsoCodeField, value) != true)) {
                    this.IsoCodeField = value;
                    this.RaisePropertyChanged("IsoCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Backend.IssuerShares.IFacade")]
    public interface IFacade {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFacade/GetRootModel", ReplyAction="http://tempuri.org/IFacade/GetRootModelResponse")]
        System.IAsyncResult BeginGetRootModel(string securityShortName, System.AsyncCallback callback, object asyncState);
        
        GreenField.IssuerShares.Client.Backend.IssuerShares.RootModel EndGetRootModel(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFacade/GetIssuerSecurities", ReplyAction="http://tempuri.org/IFacade/GetIssuerSecuritiesResponse")]
        System.IAsyncResult BeginGetIssuerSecurities(string pattern, int atMost, string securityShortName, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<GreenField.IssuerShares.Client.Backend.IssuerShares.SecurityModel> EndGetIssuerSecurities(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFacade/UpdateIssueSharesComposition", ReplyAction="http://tempuri.org/IFacade/UpdateIssueSharesCompositionResponse")]
        System.IAsyncResult BeginUpdateIssueSharesComposition(GreenField.IssuerShares.Client.Backend.IssuerShares.RootModel model, System.AsyncCallback callback, object asyncState);
        
        GreenField.IssuerShares.Client.Backend.IssuerShares.RootModel EndUpdateIssueSharesComposition(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFacadeChannel : GreenField.IssuerShares.Client.Backend.IssuerShares.IFacade, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRootModelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRootModelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public GreenField.IssuerShares.Client.Backend.IssuerShares.RootModel Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((GreenField.IssuerShares.Client.Backend.IssuerShares.RootModel)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetIssuerSecuritiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetIssuerSecuritiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<GreenField.IssuerShares.Client.Backend.IssuerShares.SecurityModel> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<GreenField.IssuerShares.Client.Backend.IssuerShares.SecurityModel>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateIssueSharesCompositionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateIssueSharesCompositionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public GreenField.IssuerShares.Client.Backend.IssuerShares.RootModel Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((GreenField.IssuerShares.Client.Backend.IssuerShares.RootModel)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FacadeClient : System.ServiceModel.ClientBase<GreenField.IssuerShares.Client.Backend.IssuerShares.IFacade>, GreenField.IssuerShares.Client.Backend.IssuerShares.IFacade {
        
        private BeginOperationDelegate onBeginGetRootModelDelegate;
        
        private EndOperationDelegate onEndGetRootModelDelegate;
        
        private System.Threading.SendOrPostCallback onGetRootModelCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetIssuerSecuritiesDelegate;
        
        private EndOperationDelegate onEndGetIssuerSecuritiesDelegate;
        
        private System.Threading.SendOrPostCallback onGetIssuerSecuritiesCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateIssueSharesCompositionDelegate;
        
        private EndOperationDelegate onEndUpdateIssueSharesCompositionDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateIssueSharesCompositionCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public FacadeClient() {
        }
        
        public FacadeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FacadeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FacadeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FacadeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetRootModelCompletedEventArgs> GetRootModelCompleted;
        
        public event System.EventHandler<GetIssuerSecuritiesCompletedEventArgs> GetIssuerSecuritiesCompleted;
        
        public event System.EventHandler<UpdateIssueSharesCompositionCompletedEventArgs> UpdateIssueSharesCompositionCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.IssuerShares.Client.Backend.IssuerShares.IFacade.BeginGetRootModel(string securityShortName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRootModel(securityShortName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GreenField.IssuerShares.Client.Backend.IssuerShares.RootModel GreenField.IssuerShares.Client.Backend.IssuerShares.IFacade.EndGetRootModel(System.IAsyncResult result) {
            return base.Channel.EndGetRootModel(result);
        }
        
        private System.IAsyncResult OnBeginGetRootModel(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string securityShortName = ((string)(inValues[0]));
            return ((GreenField.IssuerShares.Client.Backend.IssuerShares.IFacade)(this)).BeginGetRootModel(securityShortName, callback, asyncState);
        }
        
        private object[] OnEndGetRootModel(System.IAsyncResult result) {
            GreenField.IssuerShares.Client.Backend.IssuerShares.RootModel retVal = ((GreenField.IssuerShares.Client.Backend.IssuerShares.IFacade)(this)).EndGetRootModel(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRootModelCompleted(object state) {
            if ((this.GetRootModelCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRootModelCompleted(this, new GetRootModelCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRootModelAsync(string securityShortName) {
            this.GetRootModelAsync(securityShortName, null);
        }
        
        public void GetRootModelAsync(string securityShortName, object userState) {
            if ((this.onBeginGetRootModelDelegate == null)) {
                this.onBeginGetRootModelDelegate = new BeginOperationDelegate(this.OnBeginGetRootModel);
            }
            if ((this.onEndGetRootModelDelegate == null)) {
                this.onEndGetRootModelDelegate = new EndOperationDelegate(this.OnEndGetRootModel);
            }
            if ((this.onGetRootModelCompletedDelegate == null)) {
                this.onGetRootModelCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRootModelCompleted);
            }
            base.InvokeAsync(this.onBeginGetRootModelDelegate, new object[] {
                        securityShortName}, this.onEndGetRootModelDelegate, this.onGetRootModelCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.IssuerShares.Client.Backend.IssuerShares.IFacade.BeginGetIssuerSecurities(string pattern, int atMost, string securityShortName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetIssuerSecurities(pattern, atMost, securityShortName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<GreenField.IssuerShares.Client.Backend.IssuerShares.SecurityModel> GreenField.IssuerShares.Client.Backend.IssuerShares.IFacade.EndGetIssuerSecurities(System.IAsyncResult result) {
            return base.Channel.EndGetIssuerSecurities(result);
        }
        
        private System.IAsyncResult OnBeginGetIssuerSecurities(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string pattern = ((string)(inValues[0]));
            int atMost = ((int)(inValues[1]));
            string securityShortName = ((string)(inValues[2]));
            return ((GreenField.IssuerShares.Client.Backend.IssuerShares.IFacade)(this)).BeginGetIssuerSecurities(pattern, atMost, securityShortName, callback, asyncState);
        }
        
        private object[] OnEndGetIssuerSecurities(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<GreenField.IssuerShares.Client.Backend.IssuerShares.SecurityModel> retVal = ((GreenField.IssuerShares.Client.Backend.IssuerShares.IFacade)(this)).EndGetIssuerSecurities(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetIssuerSecuritiesCompleted(object state) {
            if ((this.GetIssuerSecuritiesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetIssuerSecuritiesCompleted(this, new GetIssuerSecuritiesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetIssuerSecuritiesAsync(string pattern, int atMost, string securityShortName) {
            this.GetIssuerSecuritiesAsync(pattern, atMost, securityShortName, null);
        }
        
        public void GetIssuerSecuritiesAsync(string pattern, int atMost, string securityShortName, object userState) {
            if ((this.onBeginGetIssuerSecuritiesDelegate == null)) {
                this.onBeginGetIssuerSecuritiesDelegate = new BeginOperationDelegate(this.OnBeginGetIssuerSecurities);
            }
            if ((this.onEndGetIssuerSecuritiesDelegate == null)) {
                this.onEndGetIssuerSecuritiesDelegate = new EndOperationDelegate(this.OnEndGetIssuerSecurities);
            }
            if ((this.onGetIssuerSecuritiesCompletedDelegate == null)) {
                this.onGetIssuerSecuritiesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetIssuerSecuritiesCompleted);
            }
            base.InvokeAsync(this.onBeginGetIssuerSecuritiesDelegate, new object[] {
                        pattern,
                        atMost,
                        securityShortName}, this.onEndGetIssuerSecuritiesDelegate, this.onGetIssuerSecuritiesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.IssuerShares.Client.Backend.IssuerShares.IFacade.BeginUpdateIssueSharesComposition(GreenField.IssuerShares.Client.Backend.IssuerShares.RootModel model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateIssueSharesComposition(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GreenField.IssuerShares.Client.Backend.IssuerShares.RootModel GreenField.IssuerShares.Client.Backend.IssuerShares.IFacade.EndUpdateIssueSharesComposition(System.IAsyncResult result) {
            return base.Channel.EndUpdateIssueSharesComposition(result);
        }
        
        private System.IAsyncResult OnBeginUpdateIssueSharesComposition(object[] inValues, System.AsyncCallback callback, object asyncState) {
            GreenField.IssuerShares.Client.Backend.IssuerShares.RootModel model = ((GreenField.IssuerShares.Client.Backend.IssuerShares.RootModel)(inValues[0]));
            return ((GreenField.IssuerShares.Client.Backend.IssuerShares.IFacade)(this)).BeginUpdateIssueSharesComposition(model, callback, asyncState);
        }
        
        private object[] OnEndUpdateIssueSharesComposition(System.IAsyncResult result) {
            GreenField.IssuerShares.Client.Backend.IssuerShares.RootModel retVal = ((GreenField.IssuerShares.Client.Backend.IssuerShares.IFacade)(this)).EndUpdateIssueSharesComposition(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateIssueSharesCompositionCompleted(object state) {
            if ((this.UpdateIssueSharesCompositionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateIssueSharesCompositionCompleted(this, new UpdateIssueSharesCompositionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateIssueSharesCompositionAsync(GreenField.IssuerShares.Client.Backend.IssuerShares.RootModel model) {
            this.UpdateIssueSharesCompositionAsync(model, null);
        }
        
        public void UpdateIssueSharesCompositionAsync(GreenField.IssuerShares.Client.Backend.IssuerShares.RootModel model, object userState) {
            if ((this.onBeginUpdateIssueSharesCompositionDelegate == null)) {
                this.onBeginUpdateIssueSharesCompositionDelegate = new BeginOperationDelegate(this.OnBeginUpdateIssueSharesComposition);
            }
            if ((this.onEndUpdateIssueSharesCompositionDelegate == null)) {
                this.onEndUpdateIssueSharesCompositionDelegate = new EndOperationDelegate(this.OnEndUpdateIssueSharesComposition);
            }
            if ((this.onUpdateIssueSharesCompositionCompletedDelegate == null)) {
                this.onUpdateIssueSharesCompositionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateIssueSharesCompositionCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateIssueSharesCompositionDelegate, new object[] {
                        model}, this.onEndUpdateIssueSharesCompositionDelegate, this.onUpdateIssueSharesCompositionCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override GreenField.IssuerShares.Client.Backend.IssuerShares.IFacade CreateChannel() {
            return new FacadeClientChannel(this);
        }
        
        private class FacadeClientChannel : ChannelBase<GreenField.IssuerShares.Client.Backend.IssuerShares.IFacade>, GreenField.IssuerShares.Client.Backend.IssuerShares.IFacade {
            
            public FacadeClientChannel(System.ServiceModel.ClientBase<GreenField.IssuerShares.Client.Backend.IssuerShares.IFacade> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetRootModel(string securityShortName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = securityShortName;
                System.IAsyncResult _result = base.BeginInvoke("GetRootModel", _args, callback, asyncState);
                return _result;
            }
            
            public GreenField.IssuerShares.Client.Backend.IssuerShares.RootModel EndGetRootModel(System.IAsyncResult result) {
                object[] _args = new object[0];
                GreenField.IssuerShares.Client.Backend.IssuerShares.RootModel _result = ((GreenField.IssuerShares.Client.Backend.IssuerShares.RootModel)(base.EndInvoke("GetRootModel", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetIssuerSecurities(string pattern, int atMost, string securityShortName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = pattern;
                _args[1] = atMost;
                _args[2] = securityShortName;
                System.IAsyncResult _result = base.BeginInvoke("GetIssuerSecurities", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<GreenField.IssuerShares.Client.Backend.IssuerShares.SecurityModel> EndGetIssuerSecurities(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<GreenField.IssuerShares.Client.Backend.IssuerShares.SecurityModel> _result = ((System.Collections.ObjectModel.ObservableCollection<GreenField.IssuerShares.Client.Backend.IssuerShares.SecurityModel>)(base.EndInvoke("GetIssuerSecurities", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateIssueSharesComposition(GreenField.IssuerShares.Client.Backend.IssuerShares.RootModel model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("UpdateIssueSharesComposition", _args, callback, asyncState);
                return _result;
            }
            
            public GreenField.IssuerShares.Client.Backend.IssuerShares.RootModel EndUpdateIssueSharesComposition(System.IAsyncResult result) {
                object[] _args = new object[0];
                GreenField.IssuerShares.Client.Backend.IssuerShares.RootModel _result = ((GreenField.IssuerShares.Client.Backend.IssuerShares.RootModel)(base.EndInvoke("UpdateIssueSharesComposition", _args, result)));
                return _result;
            }
        }
    }
}
