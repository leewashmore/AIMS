//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace TopDown.FacingServer.Backend.Targeting {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BgaRootModel", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Targeting.Server.BroadGlobalAc" +
        "tive")]
    public partial class BgaRootModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime BenchmarkDateField;
        
        private TopDown.FacingServer.Backend.Targeting.BroadGlobalActivePortfolioModel BroadGlobalActiveProtfolioField;
        
        private TopDown.FacingServer.Backend.Targeting.CashModel CashField;
        
        private TopDown.FacingServer.Backend.Targeting.BgaFactorModel FactorsField;
        
        private TopDown.FacingServer.Backend.Targeting.GlobeModel GlobeField;
        
        private bool IsModifiedField;
        
        private TopDown.FacingServer.Backend.Targeting.ChangesetModel LatestBgapsfChangesetField;
        
        private TopDown.FacingServer.Backend.Targeting.ChangesetModel LatestBupstChangesetField;
        
        private TopDown.FacingServer.Backend.Targeting.ChangesetModel LatestTtbbvChangesetField;
        
        private TopDown.FacingServer.Backend.Targeting.ChangesetModel LatestTtbptChangesetField;
        
        private TopDown.FacingServer.Backend.Targeting.TargetingTypeModel TargetingTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BenchmarkDate {
            get {
                return this.BenchmarkDateField;
            }
            set {
                if ((this.BenchmarkDateField.Equals(value) != true)) {
                    this.BenchmarkDateField = value;
                    this.RaisePropertyChanged("BenchmarkDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.BroadGlobalActivePortfolioModel BroadGlobalActiveProtfolio {
            get {
                return this.BroadGlobalActiveProtfolioField;
            }
            set {
                if ((object.ReferenceEquals(this.BroadGlobalActiveProtfolioField, value) != true)) {
                    this.BroadGlobalActiveProtfolioField = value;
                    this.RaisePropertyChanged("BroadGlobalActiveProtfolio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.CashModel Cash {
            get {
                return this.CashField;
            }
            set {
                if ((object.ReferenceEquals(this.CashField, value) != true)) {
                    this.CashField = value;
                    this.RaisePropertyChanged("Cash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.BgaFactorModel Factors {
            get {
                return this.FactorsField;
            }
            set {
                if ((object.ReferenceEquals(this.FactorsField, value) != true)) {
                    this.FactorsField = value;
                    this.RaisePropertyChanged("Factors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.GlobeModel Globe {
            get {
                return this.GlobeField;
            }
            set {
                if ((object.ReferenceEquals(this.GlobeField, value) != true)) {
                    this.GlobeField = value;
                    this.RaisePropertyChanged("Globe");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsModified {
            get {
                return this.IsModifiedField;
            }
            set {
                if ((this.IsModifiedField.Equals(value) != true)) {
                    this.IsModifiedField = value;
                    this.RaisePropertyChanged("IsModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.ChangesetModel LatestBgapsfChangeset {
            get {
                return this.LatestBgapsfChangesetField;
            }
            set {
                if ((object.ReferenceEquals(this.LatestBgapsfChangesetField, value) != true)) {
                    this.LatestBgapsfChangesetField = value;
                    this.RaisePropertyChanged("LatestBgapsfChangeset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.ChangesetModel LatestBupstChangeset {
            get {
                return this.LatestBupstChangesetField;
            }
            set {
                if ((object.ReferenceEquals(this.LatestBupstChangesetField, value) != true)) {
                    this.LatestBupstChangesetField = value;
                    this.RaisePropertyChanged("LatestBupstChangeset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.ChangesetModel LatestTtbbvChangeset {
            get {
                return this.LatestTtbbvChangesetField;
            }
            set {
                if ((object.ReferenceEquals(this.LatestTtbbvChangesetField, value) != true)) {
                    this.LatestTtbbvChangesetField = value;
                    this.RaisePropertyChanged("LatestTtbbvChangeset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.ChangesetModel LatestTtbptChangeset {
            get {
                return this.LatestTtbptChangesetField;
            }
            set {
                if ((object.ReferenceEquals(this.LatestTtbptChangesetField, value) != true)) {
                    this.LatestTtbptChangesetField = value;
                    this.RaisePropertyChanged("LatestTtbptChangeset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.TargetingTypeModel TargetingType {
            get {
                return this.TargetingTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TargetingTypeField, value) != true)) {
                    this.TargetingTypeField = value;
                    this.RaisePropertyChanged("TargetingType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BroadGlobalActivePortfolioModel", Namespace="http://schemas.datacontract.org/2004/07/Aims.Data.Server")]
    public partial class BroadGlobalActivePortfolioModel : TopDown.FacingServer.Backend.Targeting.PortfolioModel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CashModel", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Targeting.Server.BroadGlobalAc" +
        "tive")]
    public partial class CashModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private TopDown.FacingServer.Backend.Targeting.NullableExpressionModel BaseField;
        
        private TopDown.FacingServer.Backend.Targeting.NullableExpressionModel ScaledField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.NullableExpressionModel Base {
            get {
                return this.BaseField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseField, value) != true)) {
                    this.BaseField = value;
                    this.RaisePropertyChanged("Base");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.NullableExpressionModel Scaled {
            get {
                return this.ScaledField;
            }
            set {
                if ((object.ReferenceEquals(this.ScaledField, value) != true)) {
                    this.ScaledField = value;
                    this.RaisePropertyChanged("Scaled");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BgaFactorModel", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Targeting.Server.BroadGlobalAc" +
        "tive")]
    public partial class BgaFactorModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.BgaFactorItemModel> ItemsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.BgaFactorItemModel> Items {
            get {
                return this.ItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemsField, value) != true)) {
                    this.ItemsField = value;
                    this.RaisePropertyChanged("Items");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GlobeModel", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Targeting.Server.BroadGlobalAc" +
        "tive")]
    public partial class GlobeModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private TopDown.FacingServer.Backend.Targeting.NullableExpressionModel BaseField;
        
        private TopDown.FacingServer.Backend.Targeting.ExpressionModel BenchmarkField;
        
        private TopDown.FacingServer.Backend.Targeting.ExpressionModel OverlayField;
        
        private TopDown.FacingServer.Backend.Targeting.NullableExpressionModel PortfolioAdjustmentField;
        
        private TopDown.FacingServer.Backend.Targeting.NullableExpressionModel PortfolioScaledField;
        
        private System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.GlobeResident> ResidentsField;
        
        private TopDown.FacingServer.Backend.Targeting.NullableExpressionModel TrueActiveField;
        
        private TopDown.FacingServer.Backend.Targeting.NullableExpressionModel TrueExposureField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.NullableExpressionModel Base {
            get {
                return this.BaseField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseField, value) != true)) {
                    this.BaseField = value;
                    this.RaisePropertyChanged("Base");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.ExpressionModel Benchmark {
            get {
                return this.BenchmarkField;
            }
            set {
                if ((object.ReferenceEquals(this.BenchmarkField, value) != true)) {
                    this.BenchmarkField = value;
                    this.RaisePropertyChanged("Benchmark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.ExpressionModel Overlay {
            get {
                return this.OverlayField;
            }
            set {
                if ((object.ReferenceEquals(this.OverlayField, value) != true)) {
                    this.OverlayField = value;
                    this.RaisePropertyChanged("Overlay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.NullableExpressionModel PortfolioAdjustment {
            get {
                return this.PortfolioAdjustmentField;
            }
            set {
                if ((object.ReferenceEquals(this.PortfolioAdjustmentField, value) != true)) {
                    this.PortfolioAdjustmentField = value;
                    this.RaisePropertyChanged("PortfolioAdjustment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.NullableExpressionModel PortfolioScaled {
            get {
                return this.PortfolioScaledField;
            }
            set {
                if ((object.ReferenceEquals(this.PortfolioScaledField, value) != true)) {
                    this.PortfolioScaledField = value;
                    this.RaisePropertyChanged("PortfolioScaled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.GlobeResident> Residents {
            get {
                return this.ResidentsField;
            }
            set {
                if ((object.ReferenceEquals(this.ResidentsField, value) != true)) {
                    this.ResidentsField = value;
                    this.RaisePropertyChanged("Residents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.NullableExpressionModel TrueActive {
            get {
                return this.TrueActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.TrueActiveField, value) != true)) {
                    this.TrueActiveField = value;
                    this.RaisePropertyChanged("TrueActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.NullableExpressionModel TrueExposure {
            get {
                return this.TrueExposureField;
            }
            set {
                if ((object.ReferenceEquals(this.TrueExposureField, value) != true)) {
                    this.TrueExposureField = value;
                    this.RaisePropertyChanged("TrueExposure");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChangesetModel", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Targeting.Server")]
    public partial class ChangesetModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int CalculationIdField;
        
        private int IdField;
        
        private System.DateTime TimestampField;
        
        private string UsernameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CalculationId {
            get {
                return this.CalculationIdField;
            }
            set {
                if ((this.CalculationIdField.Equals(value) != true)) {
                    this.CalculationIdField = value;
                    this.RaisePropertyChanged("CalculationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Timestamp {
            get {
                return this.TimestampField;
            }
            set {
                if ((this.TimestampField.Equals(value) != true)) {
                    this.TimestampField = value;
                    this.RaisePropertyChanged("Timestamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TargetingTypeModel", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Targeting.Server")]
    public partial class TargetingTypeModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IdField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PortfolioModel", Namespace="http://schemas.datacontract.org/2004/07/Aims.Data.Server")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TopDown.FacingServer.Backend.Targeting.BottomUpPortfolioModel))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TopDown.FacingServer.Backend.Targeting.BroadGlobalActivePortfolioModel))]
    public partial class PortfolioModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string IdField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BottomUpPortfolioModel", Namespace="http://schemas.datacontract.org/2004/07/Aims.Data.Server")]
    public partial class BottomUpPortfolioModel : TopDown.FacingServer.Backend.Targeting.PortfolioModel {
        
        private TopDown.FacingServer.Backend.Targeting.FundModel FundField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.FundModel Fund {
            get {
                return this.FundField;
            }
            set {
                if ((object.ReferenceEquals(this.FundField, value) != true)) {
                    this.FundField = value;
                    this.RaisePropertyChanged("Fund");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FundModel", Namespace="http://schemas.datacontract.org/2004/07/Aims.Data.Server")]
    public partial class FundModel : TopDown.FacingServer.Backend.Targeting.SecurityModel {
        
        private string ShortNameField;
        
        private string TickerField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortName {
            get {
                return this.ShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortNameField, value) != true)) {
                    this.ShortNameField = value;
                    this.RaisePropertyChanged("ShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ticker {
            get {
                return this.TickerField;
            }
            set {
                if ((object.ReferenceEquals(this.TickerField, value) != true)) {
                    this.TickerField = value;
                    this.RaisePropertyChanged("Ticker");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SecurityModel", Namespace="http://schemas.datacontract.org/2004/07/Aims.Data.Server")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TopDown.FacingServer.Backend.Targeting.CompanySecurityModel))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TopDown.FacingServer.Backend.Targeting.FundModel))]
    public partial class SecurityModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string IdField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompanySecurityModel", Namespace="http://schemas.datacontract.org/2004/07/Aims.Data.Server")]
    public partial class CompanySecurityModel : TopDown.FacingServer.Backend.Targeting.SecurityModel {
        
        private TopDown.FacingServer.Backend.Targeting.CountryModel CountryField;
        
        private string ShortNameField;
        
        private string TickerField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.CountryModel Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortName {
            get {
                return this.ShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortNameField, value) != true)) {
                    this.ShortNameField = value;
                    this.RaisePropertyChanged("ShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ticker {
            get {
                return this.TickerField;
            }
            set {
                if ((object.ReferenceEquals(this.TickerField, value) != true)) {
                    this.TickerField = value;
                    this.RaisePropertyChanged("Ticker");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CountryModel", Namespace="http://schemas.datacontract.org/2004/07/Aims.Data.Server")]
    public partial class CountryModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string IsoCodeField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsoCode {
            get {
                return this.IsoCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.IsoCodeField, value) != true)) {
                    this.IsoCodeField = value;
                    this.RaisePropertyChanged("IsoCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NullableExpressionModel", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Targeting.Server")]
    public partial class NullableExpressionModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.IssueModel> IssuesField;
        
        private System.Nullable<decimal> ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.IssueModel> Issues {
            get {
                return this.IssuesField;
            }
            set {
                if ((object.ReferenceEquals(this.IssuesField, value) != true)) {
                    this.IssuesField = value;
                    this.RaisePropertyChanged("Issues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IssueModel", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Targeting.Server")]
    public partial class IssueModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.IssueModel> IssuesField;
        
        private string MessageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.IssueModel> Issues {
            get {
                return this.IssuesField;
            }
            set {
                if ((object.ReferenceEquals(this.IssuesField, value) != true)) {
                    this.IssuesField = value;
                    this.RaisePropertyChanged("Issues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BgaFactorItemModel", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Targeting.Server.BroadGlobalAc" +
        "tive")]
    public partial class BgaFactorItemModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private TopDown.FacingServer.Backend.Targeting.BottomUpPortfolioModel BottomUpPortfolioField;
        
        private TopDown.FacingServer.Backend.Targeting.EditableExpressionModel OverlayFactorField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.BottomUpPortfolioModel BottomUpPortfolio {
            get {
                return this.BottomUpPortfolioField;
            }
            set {
                if ((object.ReferenceEquals(this.BottomUpPortfolioField, value) != true)) {
                    this.BottomUpPortfolioField = value;
                    this.RaisePropertyChanged("BottomUpPortfolio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.EditableExpressionModel OverlayFactor {
            get {
                return this.OverlayFactorField;
            }
            set {
                if ((object.ReferenceEquals(this.OverlayFactorField, value) != true)) {
                    this.OverlayFactorField = value;
                    this.RaisePropertyChanged("OverlayFactor");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EditableExpressionModel", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Targeting.Server")]
    public partial class EditableExpressionModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CommentField;
        
        private System.Nullable<decimal> DefaultValueField;
        
        private System.Nullable<decimal> DisplayValueField;
        
        private System.Nullable<decimal> EditedValueField;
        
        private System.Nullable<decimal> InitialValueField;
        
        private System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.IssueModel> IssuesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> DefaultValue {
            get {
                return this.DefaultValueField;
            }
            set {
                if ((this.DefaultValueField.Equals(value) != true)) {
                    this.DefaultValueField = value;
                    this.RaisePropertyChanged("DefaultValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> DisplayValue {
            get {
                return this.DisplayValueField;
            }
            set {
                if ((this.DisplayValueField.Equals(value) != true)) {
                    this.DisplayValueField = value;
                    this.RaisePropertyChanged("DisplayValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> EditedValue {
            get {
                return this.EditedValueField;
            }
            set {
                if ((this.EditedValueField.Equals(value) != true)) {
                    this.EditedValueField = value;
                    this.RaisePropertyChanged("EditedValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> InitialValue {
            get {
                return this.InitialValueField;
            }
            set {
                if ((this.InitialValueField.Equals(value) != true)) {
                    this.InitialValueField = value;
                    this.RaisePropertyChanged("InitialValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.IssueModel> Issues {
            get {
                return this.IssuesField;
            }
            set {
                if ((object.ReferenceEquals(this.IssuesField, value) != true)) {
                    this.IssuesField = value;
                    this.RaisePropertyChanged("Issues");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExpressionModel", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Targeting.Server")]
    public partial class ExpressionModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.IssueModel> IssuesField;
        
        private decimal ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.IssueModel> Issues {
            get {
                return this.IssuesField;
            }
            set {
                if ((object.ReferenceEquals(this.IssuesField, value) != true)) {
                    this.IssuesField = value;
                    this.RaisePropertyChanged("Issues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GlobeResident", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Targeting.Server.BroadGlobalAc" +
        "tive")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TopDown.FacingServer.Backend.Targeting.OtherModel))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TopDown.FacingServer.Backend.Targeting.BasketCountryModel))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TopDown.FacingServer.Backend.Targeting.UnsavedBasketCountryModel))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TopDown.FacingServer.Backend.Targeting.BgaCountryModel))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TopDown.FacingServer.Backend.Targeting.RegionModel))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TopDown.FacingServer.Backend.Targeting.BasketRegionModel))]
    public partial class GlobeResident : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OtherModel", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Targeting.Server.BroadGlobalAc" +
        "tive")]
    public partial class OtherModel : TopDown.FacingServer.Backend.Targeting.GlobeResident {
        
        private TopDown.FacingServer.Backend.Targeting.NullableExpressionModel BaseField;
        
        private TopDown.FacingServer.Backend.Targeting.NullableExpressionModel BaseActiveField;
        
        private System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.BasketCountryModel> BasketCountriesField;
        
        private TopDown.FacingServer.Backend.Targeting.ExpressionModel BenchmarkField;
        
        private TopDown.FacingServer.Backend.Targeting.ExpressionModel OverlayField;
        
        private TopDown.FacingServer.Backend.Targeting.NullableExpressionModel PortfolioAdjustmentField;
        
        private TopDown.FacingServer.Backend.Targeting.NullableExpressionModel PortfolioScaledField;
        
        private TopDown.FacingServer.Backend.Targeting.NullableExpressionModel TrueActiveField;
        
        private TopDown.FacingServer.Backend.Targeting.NullableExpressionModel TrueExposureField;
        
        private System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.UnsavedBasketCountryModel> UnsavedBasketCountriesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.NullableExpressionModel Base {
            get {
                return this.BaseField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseField, value) != true)) {
                    this.BaseField = value;
                    this.RaisePropertyChanged("Base");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.NullableExpressionModel BaseActive {
            get {
                return this.BaseActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseActiveField, value) != true)) {
                    this.BaseActiveField = value;
                    this.RaisePropertyChanged("BaseActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.BasketCountryModel> BasketCountries {
            get {
                return this.BasketCountriesField;
            }
            set {
                if ((object.ReferenceEquals(this.BasketCountriesField, value) != true)) {
                    this.BasketCountriesField = value;
                    this.RaisePropertyChanged("BasketCountries");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.ExpressionModel Benchmark {
            get {
                return this.BenchmarkField;
            }
            set {
                if ((object.ReferenceEquals(this.BenchmarkField, value) != true)) {
                    this.BenchmarkField = value;
                    this.RaisePropertyChanged("Benchmark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.ExpressionModel Overlay {
            get {
                return this.OverlayField;
            }
            set {
                if ((object.ReferenceEquals(this.OverlayField, value) != true)) {
                    this.OverlayField = value;
                    this.RaisePropertyChanged("Overlay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.NullableExpressionModel PortfolioAdjustment {
            get {
                return this.PortfolioAdjustmentField;
            }
            set {
                if ((object.ReferenceEquals(this.PortfolioAdjustmentField, value) != true)) {
                    this.PortfolioAdjustmentField = value;
                    this.RaisePropertyChanged("PortfolioAdjustment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.NullableExpressionModel PortfolioScaled {
            get {
                return this.PortfolioScaledField;
            }
            set {
                if ((object.ReferenceEquals(this.PortfolioScaledField, value) != true)) {
                    this.PortfolioScaledField = value;
                    this.RaisePropertyChanged("PortfolioScaled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.NullableExpressionModel TrueActive {
            get {
                return this.TrueActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.TrueActiveField, value) != true)) {
                    this.TrueActiveField = value;
                    this.RaisePropertyChanged("TrueActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.NullableExpressionModel TrueExposure {
            get {
                return this.TrueExposureField;
            }
            set {
                if ((object.ReferenceEquals(this.TrueExposureField, value) != true)) {
                    this.TrueExposureField = value;
                    this.RaisePropertyChanged("TrueExposure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.UnsavedBasketCountryModel> UnsavedBasketCountries {
            get {
                return this.UnsavedBasketCountriesField;
            }
            set {
                if ((object.ReferenceEquals(this.UnsavedBasketCountriesField, value) != true)) {
                    this.UnsavedBasketCountriesField = value;
                    this.RaisePropertyChanged("UnsavedBasketCountries");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BasketCountryModel", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Targeting.Server.BroadGlobalAc" +
        "tive")]
    public partial class BasketCountryModel : TopDown.FacingServer.Backend.Targeting.GlobeResident {
        
        private TopDown.FacingServer.Backend.Targeting.EditableExpressionModel BaseField;
        
        private TopDown.FacingServer.Backend.Targeting.NullableExpressionModel BaseActiveField;
        
        private TopDown.FacingServer.Backend.Targeting.CountryBasketModel BasketField;
        
        private TopDown.FacingServer.Backend.Targeting.ExpressionModel BenchmarkField;
        
        private TopDown.FacingServer.Backend.Targeting.ExpressionModel OverlayField;
        
        private TopDown.FacingServer.Backend.Targeting.EditableExpressionModel PortfolioAdjustmentField;
        
        private TopDown.FacingServer.Backend.Targeting.NullableExpressionModel PortfolioScaledField;
        
        private TopDown.FacingServer.Backend.Targeting.NullableExpressionModel TrueActiveField;
        
        private TopDown.FacingServer.Backend.Targeting.NullableExpressionModel TrueExposureField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.EditableExpressionModel Base {
            get {
                return this.BaseField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseField, value) != true)) {
                    this.BaseField = value;
                    this.RaisePropertyChanged("Base");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.NullableExpressionModel BaseActive {
            get {
                return this.BaseActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseActiveField, value) != true)) {
                    this.BaseActiveField = value;
                    this.RaisePropertyChanged("BaseActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.CountryBasketModel Basket {
            get {
                return this.BasketField;
            }
            set {
                if ((object.ReferenceEquals(this.BasketField, value) != true)) {
                    this.BasketField = value;
                    this.RaisePropertyChanged("Basket");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.ExpressionModel Benchmark {
            get {
                return this.BenchmarkField;
            }
            set {
                if ((object.ReferenceEquals(this.BenchmarkField, value) != true)) {
                    this.BenchmarkField = value;
                    this.RaisePropertyChanged("Benchmark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.ExpressionModel Overlay {
            get {
                return this.OverlayField;
            }
            set {
                if ((object.ReferenceEquals(this.OverlayField, value) != true)) {
                    this.OverlayField = value;
                    this.RaisePropertyChanged("Overlay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.EditableExpressionModel PortfolioAdjustment {
            get {
                return this.PortfolioAdjustmentField;
            }
            set {
                if ((object.ReferenceEquals(this.PortfolioAdjustmentField, value) != true)) {
                    this.PortfolioAdjustmentField = value;
                    this.RaisePropertyChanged("PortfolioAdjustment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.NullableExpressionModel PortfolioScaled {
            get {
                return this.PortfolioScaledField;
            }
            set {
                if ((object.ReferenceEquals(this.PortfolioScaledField, value) != true)) {
                    this.PortfolioScaledField = value;
                    this.RaisePropertyChanged("PortfolioScaled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.NullableExpressionModel TrueActive {
            get {
                return this.TrueActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.TrueActiveField, value) != true)) {
                    this.TrueActiveField = value;
                    this.RaisePropertyChanged("TrueActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.NullableExpressionModel TrueExposure {
            get {
                return this.TrueExposureField;
            }
            set {
                if ((object.ReferenceEquals(this.TrueExposureField, value) != true)) {
                    this.TrueExposureField = value;
                    this.RaisePropertyChanged("TrueExposure");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UnsavedBasketCountryModel", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Targeting.Server.BroadGlobalAc" +
        "tive")]
    public partial class UnsavedBasketCountryModel : TopDown.FacingServer.Backend.Targeting.GlobeResident {
        
        private TopDown.FacingServer.Backend.Targeting.EditableExpressionModel BaseField;
        
        private TopDown.FacingServer.Backend.Targeting.NullableExpressionModel BaseActiveField;
        
        private TopDown.FacingServer.Backend.Targeting.ExpressionModel BenchmarkField;
        
        private TopDown.FacingServer.Backend.Targeting.CountryModel CountryField;
        
        private TopDown.FacingServer.Backend.Targeting.ExpressionModel OverlayField;
        
        private TopDown.FacingServer.Backend.Targeting.EditableExpressionModel PortfolioAdjustmentField;
        
        private TopDown.FacingServer.Backend.Targeting.NullableExpressionModel PortfolioScaledField;
        
        private TopDown.FacingServer.Backend.Targeting.NullableExpressionModel TrueActiveField;
        
        private TopDown.FacingServer.Backend.Targeting.NullableExpressionModel TrueExposureField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.EditableExpressionModel Base {
            get {
                return this.BaseField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseField, value) != true)) {
                    this.BaseField = value;
                    this.RaisePropertyChanged("Base");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.NullableExpressionModel BaseActive {
            get {
                return this.BaseActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseActiveField, value) != true)) {
                    this.BaseActiveField = value;
                    this.RaisePropertyChanged("BaseActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.ExpressionModel Benchmark {
            get {
                return this.BenchmarkField;
            }
            set {
                if ((object.ReferenceEquals(this.BenchmarkField, value) != true)) {
                    this.BenchmarkField = value;
                    this.RaisePropertyChanged("Benchmark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.CountryModel Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.ExpressionModel Overlay {
            get {
                return this.OverlayField;
            }
            set {
                if ((object.ReferenceEquals(this.OverlayField, value) != true)) {
                    this.OverlayField = value;
                    this.RaisePropertyChanged("Overlay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.EditableExpressionModel PortfolioAdjustment {
            get {
                return this.PortfolioAdjustmentField;
            }
            set {
                if ((object.ReferenceEquals(this.PortfolioAdjustmentField, value) != true)) {
                    this.PortfolioAdjustmentField = value;
                    this.RaisePropertyChanged("PortfolioAdjustment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.NullableExpressionModel PortfolioScaled {
            get {
                return this.PortfolioScaledField;
            }
            set {
                if ((object.ReferenceEquals(this.PortfolioScaledField, value) != true)) {
                    this.PortfolioScaledField = value;
                    this.RaisePropertyChanged("PortfolioScaled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.NullableExpressionModel TrueActive {
            get {
                return this.TrueActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.TrueActiveField, value) != true)) {
                    this.TrueActiveField = value;
                    this.RaisePropertyChanged("TrueActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.NullableExpressionModel TrueExposure {
            get {
                return this.TrueExposureField;
            }
            set {
                if ((object.ReferenceEquals(this.TrueExposureField, value) != true)) {
                    this.TrueExposureField = value;
                    this.RaisePropertyChanged("TrueExposure");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BgaCountryModel", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Targeting.Server.BroadGlobalAc" +
        "tive")]
    public partial class BgaCountryModel : TopDown.FacingServer.Backend.Targeting.GlobeResident {
        
        private TopDown.FacingServer.Backend.Targeting.ExpressionModel BenchmarkField;
        
        private TopDown.FacingServer.Backend.Targeting.CountryModel CountryField;
        
        private TopDown.FacingServer.Backend.Targeting.ExpressionModel OverlayField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.ExpressionModel Benchmark {
            get {
                return this.BenchmarkField;
            }
            set {
                if ((object.ReferenceEquals(this.BenchmarkField, value) != true)) {
                    this.BenchmarkField = value;
                    this.RaisePropertyChanged("Benchmark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.CountryModel Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.ExpressionModel Overlay {
            get {
                return this.OverlayField;
            }
            set {
                if ((object.ReferenceEquals(this.OverlayField, value) != true)) {
                    this.OverlayField = value;
                    this.RaisePropertyChanged("Overlay");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegionModel", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Targeting.Server.BroadGlobalAc" +
        "tive")]
    public partial class RegionModel : TopDown.FacingServer.Backend.Targeting.GlobeResident {
        
        private TopDown.FacingServer.Backend.Targeting.NullableExpressionModel BaseField;
        
        private TopDown.FacingServer.Backend.Targeting.NullableExpressionModel BaseActiveField;
        
        private TopDown.FacingServer.Backend.Targeting.ExpressionModel BenchmarkField;
        
        private string NameField;
        
        private TopDown.FacingServer.Backend.Targeting.ExpressionModel OverlayField;
        
        private TopDown.FacingServer.Backend.Targeting.NullableExpressionModel PortfolioAdjustmentField;
        
        private TopDown.FacingServer.Backend.Targeting.NullableExpressionModel PortfolioScaledField;
        
        private System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.GlobeResident> ResidentsField;
        
        private TopDown.FacingServer.Backend.Targeting.NullableExpressionModel TrueActiveField;
        
        private TopDown.FacingServer.Backend.Targeting.NullableExpressionModel TrueExposureField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.NullableExpressionModel Base {
            get {
                return this.BaseField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseField, value) != true)) {
                    this.BaseField = value;
                    this.RaisePropertyChanged("Base");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.NullableExpressionModel BaseActive {
            get {
                return this.BaseActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseActiveField, value) != true)) {
                    this.BaseActiveField = value;
                    this.RaisePropertyChanged("BaseActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.ExpressionModel Benchmark {
            get {
                return this.BenchmarkField;
            }
            set {
                if ((object.ReferenceEquals(this.BenchmarkField, value) != true)) {
                    this.BenchmarkField = value;
                    this.RaisePropertyChanged("Benchmark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.ExpressionModel Overlay {
            get {
                return this.OverlayField;
            }
            set {
                if ((object.ReferenceEquals(this.OverlayField, value) != true)) {
                    this.OverlayField = value;
                    this.RaisePropertyChanged("Overlay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.NullableExpressionModel PortfolioAdjustment {
            get {
                return this.PortfolioAdjustmentField;
            }
            set {
                if ((object.ReferenceEquals(this.PortfolioAdjustmentField, value) != true)) {
                    this.PortfolioAdjustmentField = value;
                    this.RaisePropertyChanged("PortfolioAdjustment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.NullableExpressionModel PortfolioScaled {
            get {
                return this.PortfolioScaledField;
            }
            set {
                if ((object.ReferenceEquals(this.PortfolioScaledField, value) != true)) {
                    this.PortfolioScaledField = value;
                    this.RaisePropertyChanged("PortfolioScaled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.GlobeResident> Residents {
            get {
                return this.ResidentsField;
            }
            set {
                if ((object.ReferenceEquals(this.ResidentsField, value) != true)) {
                    this.ResidentsField = value;
                    this.RaisePropertyChanged("Residents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.NullableExpressionModel TrueActive {
            get {
                return this.TrueActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.TrueActiveField, value) != true)) {
                    this.TrueActiveField = value;
                    this.RaisePropertyChanged("TrueActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.NullableExpressionModel TrueExposure {
            get {
                return this.TrueExposureField;
            }
            set {
                if ((object.ReferenceEquals(this.TrueExposureField, value) != true)) {
                    this.TrueExposureField = value;
                    this.RaisePropertyChanged("TrueExposure");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BasketRegionModel", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Targeting.Server.BroadGlobalAc" +
        "tive")]
    public partial class BasketRegionModel : TopDown.FacingServer.Backend.Targeting.GlobeResident {
        
        private TopDown.FacingServer.Backend.Targeting.EditableExpressionModel BaseField;
        
        private TopDown.FacingServer.Backend.Targeting.NullableExpressionModel BaseActiveField;
        
        private TopDown.FacingServer.Backend.Targeting.RegionBasketModel BasketField;
        
        private TopDown.FacingServer.Backend.Targeting.ExpressionModel BenchmarkField;
        
        private System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.BgaCountryModel> CountriesField;
        
        private TopDown.FacingServer.Backend.Targeting.ExpressionModel OverlayField;
        
        private TopDown.FacingServer.Backend.Targeting.EditableExpressionModel PortfolioAdjustmentField;
        
        private TopDown.FacingServer.Backend.Targeting.NullableExpressionModel PortfolioScaledField;
        
        private TopDown.FacingServer.Backend.Targeting.NullableExpressionModel TrueActiveField;
        
        private TopDown.FacingServer.Backend.Targeting.NullableExpressionModel TrueExposureField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.EditableExpressionModel Base {
            get {
                return this.BaseField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseField, value) != true)) {
                    this.BaseField = value;
                    this.RaisePropertyChanged("Base");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.NullableExpressionModel BaseActive {
            get {
                return this.BaseActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseActiveField, value) != true)) {
                    this.BaseActiveField = value;
                    this.RaisePropertyChanged("BaseActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.RegionBasketModel Basket {
            get {
                return this.BasketField;
            }
            set {
                if ((object.ReferenceEquals(this.BasketField, value) != true)) {
                    this.BasketField = value;
                    this.RaisePropertyChanged("Basket");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.ExpressionModel Benchmark {
            get {
                return this.BenchmarkField;
            }
            set {
                if ((object.ReferenceEquals(this.BenchmarkField, value) != true)) {
                    this.BenchmarkField = value;
                    this.RaisePropertyChanged("Benchmark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.BgaCountryModel> Countries {
            get {
                return this.CountriesField;
            }
            set {
                if ((object.ReferenceEquals(this.CountriesField, value) != true)) {
                    this.CountriesField = value;
                    this.RaisePropertyChanged("Countries");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.ExpressionModel Overlay {
            get {
                return this.OverlayField;
            }
            set {
                if ((object.ReferenceEquals(this.OverlayField, value) != true)) {
                    this.OverlayField = value;
                    this.RaisePropertyChanged("Overlay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.EditableExpressionModel PortfolioAdjustment {
            get {
                return this.PortfolioAdjustmentField;
            }
            set {
                if ((object.ReferenceEquals(this.PortfolioAdjustmentField, value) != true)) {
                    this.PortfolioAdjustmentField = value;
                    this.RaisePropertyChanged("PortfolioAdjustment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.NullableExpressionModel PortfolioScaled {
            get {
                return this.PortfolioScaledField;
            }
            set {
                if ((object.ReferenceEquals(this.PortfolioScaledField, value) != true)) {
                    this.PortfolioScaledField = value;
                    this.RaisePropertyChanged("PortfolioScaled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.NullableExpressionModel TrueActive {
            get {
                return this.TrueActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.TrueActiveField, value) != true)) {
                    this.TrueActiveField = value;
                    this.RaisePropertyChanged("TrueActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.NullableExpressionModel TrueExposure {
            get {
                return this.TrueExposureField;
            }
            set {
                if ((object.ReferenceEquals(this.TrueExposureField, value) != true)) {
                    this.TrueExposureField = value;
                    this.RaisePropertyChanged("TrueExposure");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CountryBasketModel", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Targeting.Server")]
    public partial class CountryBasketModel : TopDown.FacingServer.Backend.Targeting.BasketModel {
        
        private TopDown.FacingServer.Backend.Targeting.CountryModel CountryField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.CountryModel Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BasketModel", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Targeting.Server")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TopDown.FacingServer.Backend.Targeting.RegionBasketModel))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TopDown.FacingServer.Backend.Targeting.CountryBasketModel))]
    public partial class BasketModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegionBasketModel", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Targeting.Server")]
    public partial class RegionBasketModel : TopDown.FacingServer.Backend.Targeting.BasketModel {
        
        private System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.CountryModel> CountriesField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.CountryModel> Countries {
            get {
                return this.CountriesField;
            }
            set {
                if ((object.ReferenceEquals(this.CountriesField, value) != true)) {
                    this.CountriesField = value;
                    this.RaisePropertyChanged("Countries");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BgaTargetingTypePickerModel", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Targeting.Server.BroadGlobalAc" +
        "tive.Picker")]
    public partial class BgaTargetingTypePickerModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IdField;
        
        private string NameField;
        
        private System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.BgaPortfolioPickerModel> PortfoliosField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.BgaPortfolioPickerModel> Portfolios {
            get {
                return this.PortfoliosField;
            }
            set {
                if ((object.ReferenceEquals(this.PortfoliosField, value) != true)) {
                    this.PortfoliosField = value;
                    this.RaisePropertyChanged("Portfolios");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BgaPortfolioPickerModel", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Targeting.Server.BroadGlobalAc" +
        "tive.Picker")]
    public partial class BgaPortfolioPickerModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string IdField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BtPickerModel", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Targeting.Server.BasketTargets" +
        "")]
    public partial class BtPickerModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.BtPickerTargetingGroupModel> TargetingGroupsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.BtPickerTargetingGroupModel> TargetingGroups {
            get {
                return this.TargetingGroupsField;
            }
            set {
                if ((object.ReferenceEquals(this.TargetingGroupsField, value) != true)) {
                    this.TargetingGroupsField = value;
                    this.RaisePropertyChanged("TargetingGroups");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BtPickerTargetingGroupModel", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Targeting.Server.BasketTargets" +
        "")]
    public partial class BtPickerTargetingGroupModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.BtPickerBasketModel> BasketsField;
        
        private int TargetingTypeGroupIdField;
        
        private string TargetingTypeGroupNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.BtPickerBasketModel> Baskets {
            get {
                return this.BasketsField;
            }
            set {
                if ((object.ReferenceEquals(this.BasketsField, value) != true)) {
                    this.BasketsField = value;
                    this.RaisePropertyChanged("Baskets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TargetingTypeGroupId {
            get {
                return this.TargetingTypeGroupIdField;
            }
            set {
                if ((this.TargetingTypeGroupIdField.Equals(value) != true)) {
                    this.TargetingTypeGroupIdField = value;
                    this.RaisePropertyChanged("TargetingTypeGroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TargetingTypeGroupName {
            get {
                return this.TargetingTypeGroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TargetingTypeGroupNameField, value) != true)) {
                    this.TargetingTypeGroupNameField = value;
                    this.RaisePropertyChanged("TargetingTypeGroupName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BtPickerBasketModel", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Targeting.Server.BasketTargets" +
        "")]
    public partial class BtPickerBasketModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IdField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BtRootModel", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Targeting.Server.BasketTargets" +
        "")]
    public partial class BtRootModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private TopDown.FacingServer.Backend.Targeting.NullableExpressionModel BaseActiveTotalField;
        
        private TopDown.FacingServer.Backend.Targeting.NullableExpressionModel BaseTotalField;
        
        private TopDown.FacingServer.Backend.Targeting.BasketModel BasketField;
        
        private System.DateTime BenchmarkDateField;
        
        private TopDown.FacingServer.Backend.Targeting.ExpressionModel BenchmarkTotalField;
        
        private bool IsModifiedField;
        
        private TopDown.FacingServer.Backend.Targeting.ChangesetModel LatestBaseChangesetField;
        
        private TopDown.FacingServer.Backend.Targeting.ChangesetModel LatestPortfolioTargetChangesetField;
        
        private System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.BtPorfolioModel> PortfoliosField;
        
        private System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.BtSecurityModel> SecuritiesField;
        
        private TopDown.FacingServer.Backend.Targeting.SecurityModel SecurityToBeAddedOptField;
        
        private TopDown.FacingServer.Backend.Targeting.TargetingTypeGroupModel TargetingTypeGroupField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.NullableExpressionModel BaseActiveTotal {
            get {
                return this.BaseActiveTotalField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseActiveTotalField, value) != true)) {
                    this.BaseActiveTotalField = value;
                    this.RaisePropertyChanged("BaseActiveTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.NullableExpressionModel BaseTotal {
            get {
                return this.BaseTotalField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseTotalField, value) != true)) {
                    this.BaseTotalField = value;
                    this.RaisePropertyChanged("BaseTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.BasketModel Basket {
            get {
                return this.BasketField;
            }
            set {
                if ((object.ReferenceEquals(this.BasketField, value) != true)) {
                    this.BasketField = value;
                    this.RaisePropertyChanged("Basket");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BenchmarkDate {
            get {
                return this.BenchmarkDateField;
            }
            set {
                if ((this.BenchmarkDateField.Equals(value) != true)) {
                    this.BenchmarkDateField = value;
                    this.RaisePropertyChanged("BenchmarkDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.ExpressionModel BenchmarkTotal {
            get {
                return this.BenchmarkTotalField;
            }
            set {
                if ((object.ReferenceEquals(this.BenchmarkTotalField, value) != true)) {
                    this.BenchmarkTotalField = value;
                    this.RaisePropertyChanged("BenchmarkTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsModified {
            get {
                return this.IsModifiedField;
            }
            set {
                if ((this.IsModifiedField.Equals(value) != true)) {
                    this.IsModifiedField = value;
                    this.RaisePropertyChanged("IsModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.ChangesetModel LatestBaseChangeset {
            get {
                return this.LatestBaseChangesetField;
            }
            set {
                if ((object.ReferenceEquals(this.LatestBaseChangesetField, value) != true)) {
                    this.LatestBaseChangesetField = value;
                    this.RaisePropertyChanged("LatestBaseChangeset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.ChangesetModel LatestPortfolioTargetChangeset {
            get {
                return this.LatestPortfolioTargetChangesetField;
            }
            set {
                if ((object.ReferenceEquals(this.LatestPortfolioTargetChangesetField, value) != true)) {
                    this.LatestPortfolioTargetChangesetField = value;
                    this.RaisePropertyChanged("LatestPortfolioTargetChangeset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.BtPorfolioModel> Portfolios {
            get {
                return this.PortfoliosField;
            }
            set {
                if ((object.ReferenceEquals(this.PortfoliosField, value) != true)) {
                    this.PortfoliosField = value;
                    this.RaisePropertyChanged("Portfolios");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.BtSecurityModel> Securities {
            get {
                return this.SecuritiesField;
            }
            set {
                if ((object.ReferenceEquals(this.SecuritiesField, value) != true)) {
                    this.SecuritiesField = value;
                    this.RaisePropertyChanged("Securities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.SecurityModel SecurityToBeAddedOpt {
            get {
                return this.SecurityToBeAddedOptField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityToBeAddedOptField, value) != true)) {
                    this.SecurityToBeAddedOptField = value;
                    this.RaisePropertyChanged("SecurityToBeAddedOpt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.TargetingTypeGroupModel TargetingTypeGroup {
            get {
                return this.TargetingTypeGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.TargetingTypeGroupField, value) != true)) {
                    this.TargetingTypeGroupField = value;
                    this.RaisePropertyChanged("TargetingTypeGroup");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TargetingTypeGroupModel", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Targeting.Server")]
    public partial class TargetingTypeGroupModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string BenchmarkIdOptField;
        
        private int IdField;
        
        private string NameField;
        
        private System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.TargetingTypeModel> TargetingTypesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BenchmarkIdOpt {
            get {
                return this.BenchmarkIdOptField;
            }
            set {
                if ((object.ReferenceEquals(this.BenchmarkIdOptField, value) != true)) {
                    this.BenchmarkIdOptField = value;
                    this.RaisePropertyChanged("BenchmarkIdOpt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.TargetingTypeModel> TargetingTypes {
            get {
                return this.TargetingTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.TargetingTypesField, value) != true)) {
                    this.TargetingTypesField = value;
                    this.RaisePropertyChanged("TargetingTypes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BtPorfolioModel", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Targeting.Server.BasketTargets" +
        "")]
    public partial class BtPorfolioModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private TopDown.FacingServer.Backend.Targeting.BroadGlobalActivePortfolioModel BroadGlobalActivePortfolioField;
        
        private TopDown.FacingServer.Backend.Targeting.NullableExpressionModel PortfolioTargetTotalField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.BroadGlobalActivePortfolioModel BroadGlobalActivePortfolio {
            get {
                return this.BroadGlobalActivePortfolioField;
            }
            set {
                if ((object.ReferenceEquals(this.BroadGlobalActivePortfolioField, value) != true)) {
                    this.BroadGlobalActivePortfolioField = value;
                    this.RaisePropertyChanged("BroadGlobalActivePortfolio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.NullableExpressionModel PortfolioTargetTotal {
            get {
                return this.PortfolioTargetTotalField;
            }
            set {
                if ((object.ReferenceEquals(this.PortfolioTargetTotalField, value) != true)) {
                    this.PortfolioTargetTotalField = value;
                    this.RaisePropertyChanged("PortfolioTargetTotal");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BtSecurityModel", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Targeting.Server.BasketTargets" +
        "")]
    public partial class BtSecurityModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private TopDown.FacingServer.Backend.Targeting.EditableExpressionModel BaseField;
        
        private TopDown.FacingServer.Backend.Targeting.NullableExpressionModel BaseActiveField;
        
        private TopDown.FacingServer.Backend.Targeting.ExpressionModel BenchmarkField;
        
        private System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.BtPortfolioTargetModel> PortfolioTargetsField;
        
        private TopDown.FacingServer.Backend.Targeting.SecurityModel SecurityField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.EditableExpressionModel Base {
            get {
                return this.BaseField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseField, value) != true)) {
                    this.BaseField = value;
                    this.RaisePropertyChanged("Base");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.NullableExpressionModel BaseActive {
            get {
                return this.BaseActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseActiveField, value) != true)) {
                    this.BaseActiveField = value;
                    this.RaisePropertyChanged("BaseActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.ExpressionModel Benchmark {
            get {
                return this.BenchmarkField;
            }
            set {
                if ((object.ReferenceEquals(this.BenchmarkField, value) != true)) {
                    this.BenchmarkField = value;
                    this.RaisePropertyChanged("Benchmark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.BtPortfolioTargetModel> PortfolioTargets {
            get {
                return this.PortfolioTargetsField;
            }
            set {
                if ((object.ReferenceEquals(this.PortfolioTargetsField, value) != true)) {
                    this.PortfolioTargetsField = value;
                    this.RaisePropertyChanged("PortfolioTargets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.SecurityModel Security {
            get {
                return this.SecurityField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityField, value) != true)) {
                    this.SecurityField = value;
                    this.RaisePropertyChanged("Security");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BtPortfolioTargetModel", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Targeting.Server.BasketTargets" +
        "")]
    public partial class BtPortfolioTargetModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private TopDown.FacingServer.Backend.Targeting.BroadGlobalActivePortfolioModel BroadGlobalActivePortfolioField;
        
        private TopDown.FacingServer.Backend.Targeting.EditableExpressionModel PortfolioTargetField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.BroadGlobalActivePortfolioModel BroadGlobalActivePortfolio {
            get {
                return this.BroadGlobalActivePortfolioField;
            }
            set {
                if ((object.ReferenceEquals(this.BroadGlobalActivePortfolioField, value) != true)) {
                    this.BroadGlobalActivePortfolioField = value;
                    this.RaisePropertyChanged("BroadGlobalActivePortfolio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.EditableExpressionModel PortfolioTarget {
            get {
                return this.PortfolioTargetField;
            }
            set {
                if ((object.ReferenceEquals(this.PortfolioTargetField, value) != true)) {
                    this.PortfolioTargetField = value;
                    this.RaisePropertyChanged("PortfolioTarget");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BuPickerModel", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Targeting.Server.BottomUp")]
    public partial class BuPickerModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.BottomUpPortfolioModel> BottomUpPortfoliosField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.BottomUpPortfolioModel> BottomUpPortfolios {
            get {
                return this.BottomUpPortfoliosField;
            }
            set {
                if ((object.ReferenceEquals(this.BottomUpPortfoliosField, value) != true)) {
                    this.BottomUpPortfoliosField = value;
                    this.RaisePropertyChanged("BottomUpPortfolios");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BuRootModel", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Targeting.Server.BottomUp")]
    public partial class BuRootModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string BottomUpPortfolioIdField;
        
        private TopDown.FacingServer.Backend.Targeting.NullableExpressionModel CashField;
        
        private TopDown.FacingServer.Backend.Targeting.ChangesetModel ChangesetModelField;
        
        private bool IsModifiedField;
        
        private System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.BuItemModel> ItemsField;
        
        private TopDown.FacingServer.Backend.Targeting.SecurityModel SecurityToBeAddedOptField;
        
        private TopDown.FacingServer.Backend.Targeting.NullableExpressionModel TargetTotalField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BottomUpPortfolioId {
            get {
                return this.BottomUpPortfolioIdField;
            }
            set {
                if ((object.ReferenceEquals(this.BottomUpPortfolioIdField, value) != true)) {
                    this.BottomUpPortfolioIdField = value;
                    this.RaisePropertyChanged("BottomUpPortfolioId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.NullableExpressionModel Cash {
            get {
                return this.CashField;
            }
            set {
                if ((object.ReferenceEquals(this.CashField, value) != true)) {
                    this.CashField = value;
                    this.RaisePropertyChanged("Cash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.ChangesetModel ChangesetModel {
            get {
                return this.ChangesetModelField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangesetModelField, value) != true)) {
                    this.ChangesetModelField = value;
                    this.RaisePropertyChanged("ChangesetModel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsModified {
            get {
                return this.IsModifiedField;
            }
            set {
                if ((this.IsModifiedField.Equals(value) != true)) {
                    this.IsModifiedField = value;
                    this.RaisePropertyChanged("IsModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.BuItemModel> Items {
            get {
                return this.ItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemsField, value) != true)) {
                    this.ItemsField = value;
                    this.RaisePropertyChanged("Items");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.SecurityModel SecurityToBeAddedOpt {
            get {
                return this.SecurityToBeAddedOptField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityToBeAddedOptField, value) != true)) {
                    this.SecurityToBeAddedOptField = value;
                    this.RaisePropertyChanged("SecurityToBeAddedOpt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.NullableExpressionModel TargetTotal {
            get {
                return this.TargetTotalField;
            }
            set {
                if ((object.ReferenceEquals(this.TargetTotalField, value) != true)) {
                    this.TargetTotalField = value;
                    this.RaisePropertyChanged("TargetTotal");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BuItemModel", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Targeting.Server.BottomUp")]
    public partial class BuItemModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private TopDown.FacingServer.Backend.Targeting.SecurityModel SecurityField;
        
        private TopDown.FacingServer.Backend.Targeting.EditableExpressionModel TargetField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.SecurityModel Security {
            get {
                return this.SecurityField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityField, value) != true)) {
                    this.SecurityField = value;
                    this.RaisePropertyChanged("Security");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TopDown.FacingServer.Backend.Targeting.EditableExpressionModel Target {
            get {
                return this.TargetField;
            }
            set {
                if ((object.ReferenceEquals(this.TargetField, value) != true)) {
                    this.TargetField = value;
                    this.RaisePropertyChanged("Target");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommentModel", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Targeting.Server")]
    public partial class CommentModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CommentField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Backend.Targeting.IFacade")]
    public interface IFacade {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFacade/GetBroadGlobalActive", ReplyAction="http://tempuri.org/IFacade/GetBroadGlobalActiveResponse")]
        System.IAsyncResult BeginGetBroadGlobalActive(int targetingTypeId, string bgaPortfolioId, System.AsyncCallback callback, object asyncState);
        
        TopDown.FacingServer.Backend.Targeting.BgaRootModel EndGetBroadGlobalActive(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFacade/GetTargetingTypePortfolioPicker", ReplyAction="http://tempuri.org/IFacade/GetTargetingTypePortfolioPickerResponse")]
        System.IAsyncResult BeginGetTargetingTypePortfolioPicker(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.BgaTargetingTypePickerModel> EndGetTargetingTypePortfolioPicker(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFacade/RecalculateBroadGlobalActive", ReplyAction="http://tempuri.org/IFacade/RecalculateBroadGlobalActiveResponse")]
        System.IAsyncResult BeginRecalculateBroadGlobalActive(TopDown.FacingServer.Backend.Targeting.BgaRootModel model, System.AsyncCallback callback, object asyncState);
        
        TopDown.FacingServer.Backend.Targeting.BgaRootModel EndRecalculateBroadGlobalActive(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFacade/PickSecurities", ReplyAction="http://tempuri.org/IFacade/PickSecuritiesResponse")]
        System.IAsyncResult BeginPickSecurities(string pattern, int atMost, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.SecurityModel> EndPickSecurities(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFacade/PickSecuritiesFromBasket", ReplyAction="http://tempuri.org/IFacade/PickSecuritiesFromBasketResponse")]
        System.IAsyncResult BeginPickSecuritiesFromBasket(string pattern, int atMost, int basketId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.SecurityModel> EndPickSecuritiesFromBasket(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFacade/SaveBroadGlobalActive", ReplyAction="http://tempuri.org/IFacade/SaveBroadGlobalActiveResponse")]
        System.IAsyncResult BeginSaveBroadGlobalActive(TopDown.FacingServer.Backend.Targeting.BgaRootModel model, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.IssueModel> EndSaveBroadGlobalActive(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFacade/GetBasketPicker", ReplyAction="http://tempuri.org/IFacade/GetBasketPickerResponse")]
        System.IAsyncResult BeginGetBasketPicker(System.AsyncCallback callback, object asyncState);
        
        TopDown.FacingServer.Backend.Targeting.BtPickerModel EndGetBasketPicker(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFacade/GetBasketTargets", ReplyAction="http://tempuri.org/IFacade/GetBasketTargetsResponse")]
        System.IAsyncResult BeginGetBasketTargets(int targetingTypeGroupId, int basketId, System.AsyncCallback callback, object asyncState);
        
        TopDown.FacingServer.Backend.Targeting.BtRootModel EndGetBasketTargets(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFacade/RecalculateBasketTargets", ReplyAction="http://tempuri.org/IFacade/RecalculateBasketTargetsResponse")]
        System.IAsyncResult BeginRecalculateBasketTargets(TopDown.FacingServer.Backend.Targeting.BtRootModel model, System.AsyncCallback callback, object asyncState);
        
        TopDown.FacingServer.Backend.Targeting.BtRootModel EndRecalculateBasketTargets(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFacade/SaveBasketTargets", ReplyAction="http://tempuri.org/IFacade/SaveBasketTargetsResponse")]
        System.IAsyncResult BeginSaveBasketTargets(TopDown.FacingServer.Backend.Targeting.BtRootModel model, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.IssueModel> EndSaveBasketTargets(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFacade/GetBottomUpPortfolioPicker", ReplyAction="http://tempuri.org/IFacade/GetBottomUpPortfolioPickerResponse")]
        System.IAsyncResult BeginGetBottomUpPortfolioPicker(System.AsyncCallback callback, object asyncState);
        
        TopDown.FacingServer.Backend.Targeting.BuPickerModel EndGetBottomUpPortfolioPicker(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFacade/GetBottomUpModel", ReplyAction="http://tempuri.org/IFacade/GetBottomUpModelResponse")]
        System.IAsyncResult BeginGetBottomUpModel(string bottomUpPortfolioId, System.AsyncCallback callback, object asyncState);
        
        TopDown.FacingServer.Backend.Targeting.BuRootModel EndGetBottomUpModel(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFacade/RecalculateBottomUp", ReplyAction="http://tempuri.org/IFacade/RecalculateBottomUpResponse")]
        System.IAsyncResult BeginRecalculateBottomUp(TopDown.FacingServer.Backend.Targeting.BuRootModel model, System.AsyncCallback callback, object asyncState);
        
        TopDown.FacingServer.Backend.Targeting.BuRootModel EndRecalculateBottomUp(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFacade/SaveBottomUp", ReplyAction="http://tempuri.org/IFacade/SaveBottomUpResponse")]
        System.IAsyncResult BeginSaveBottomUp(TopDown.FacingServer.Backend.Targeting.BuRootModel model, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.IssueModel> EndSaveBottomUp(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFacade/RequestCommentsForBasketPortfolioSecurityTarget", ReplyAction="http://tempuri.org/IFacade/RequestCommentsForBasketPortfolioSecurityTargetRespons" +
            "e")]
        System.IAsyncResult BeginRequestCommentsForBasketPortfolioSecurityTarget(int basketId, string broadGlbalActivePortfolioId, string securityId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.CommentModel> EndRequestCommentsForBasketPortfolioSecurityTarget(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFacade/RequestCommentsForTargetingTypeBasketBase", ReplyAction="http://tempuri.org/IFacade/RequestCommentsForTargetingTypeBasketBaseResponse")]
        System.IAsyncResult BeginRequestCommentsForTargetingTypeBasketBase(int targetingTypeGroupId, int basketId, string securityId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.CommentModel> EndRequestCommentsForTargetingTypeBasketBase(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFacadeChannel : TopDown.FacingServer.Backend.Targeting.IFacade, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBroadGlobalActiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBroadGlobalActiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public TopDown.FacingServer.Backend.Targeting.BgaRootModel Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TopDown.FacingServer.Backend.Targeting.BgaRootModel)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTargetingTypePortfolioPickerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTargetingTypePortfolioPickerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.BgaTargetingTypePickerModel> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.BgaTargetingTypePickerModel>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RecalculateBroadGlobalActiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RecalculateBroadGlobalActiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public TopDown.FacingServer.Backend.Targeting.BgaRootModel Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TopDown.FacingServer.Backend.Targeting.BgaRootModel)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PickSecuritiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PickSecuritiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.SecurityModel> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.SecurityModel>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PickSecuritiesFromBasketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PickSecuritiesFromBasketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.SecurityModel> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.SecurityModel>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveBroadGlobalActiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveBroadGlobalActiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.IssueModel> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.IssueModel>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBasketPickerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBasketPickerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public TopDown.FacingServer.Backend.Targeting.BtPickerModel Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TopDown.FacingServer.Backend.Targeting.BtPickerModel)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBasketTargetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBasketTargetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public TopDown.FacingServer.Backend.Targeting.BtRootModel Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TopDown.FacingServer.Backend.Targeting.BtRootModel)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RecalculateBasketTargetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RecalculateBasketTargetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public TopDown.FacingServer.Backend.Targeting.BtRootModel Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TopDown.FacingServer.Backend.Targeting.BtRootModel)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveBasketTargetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveBasketTargetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.IssueModel> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.IssueModel>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBottomUpPortfolioPickerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBottomUpPortfolioPickerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public TopDown.FacingServer.Backend.Targeting.BuPickerModel Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TopDown.FacingServer.Backend.Targeting.BuPickerModel)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBottomUpModelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBottomUpModelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public TopDown.FacingServer.Backend.Targeting.BuRootModel Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TopDown.FacingServer.Backend.Targeting.BuRootModel)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RecalculateBottomUpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RecalculateBottomUpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public TopDown.FacingServer.Backend.Targeting.BuRootModel Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TopDown.FacingServer.Backend.Targeting.BuRootModel)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveBottomUpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveBottomUpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.IssueModel> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.IssueModel>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RequestCommentsForBasketPortfolioSecurityTargetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RequestCommentsForBasketPortfolioSecurityTargetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.CommentModel> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.CommentModel>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RequestCommentsForTargetingTypeBasketBaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RequestCommentsForTargetingTypeBasketBaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.CommentModel> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.CommentModel>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FacadeClient : System.ServiceModel.ClientBase<TopDown.FacingServer.Backend.Targeting.IFacade>, TopDown.FacingServer.Backend.Targeting.IFacade {
        
        private BeginOperationDelegate onBeginGetBroadGlobalActiveDelegate;
        
        private EndOperationDelegate onEndGetBroadGlobalActiveDelegate;
        
        private System.Threading.SendOrPostCallback onGetBroadGlobalActiveCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTargetingTypePortfolioPickerDelegate;
        
        private EndOperationDelegate onEndGetTargetingTypePortfolioPickerDelegate;
        
        private System.Threading.SendOrPostCallback onGetTargetingTypePortfolioPickerCompletedDelegate;
        
        private BeginOperationDelegate onBeginRecalculateBroadGlobalActiveDelegate;
        
        private EndOperationDelegate onEndRecalculateBroadGlobalActiveDelegate;
        
        private System.Threading.SendOrPostCallback onRecalculateBroadGlobalActiveCompletedDelegate;
        
        private BeginOperationDelegate onBeginPickSecuritiesDelegate;
        
        private EndOperationDelegate onEndPickSecuritiesDelegate;
        
        private System.Threading.SendOrPostCallback onPickSecuritiesCompletedDelegate;
        
        private BeginOperationDelegate onBeginPickSecuritiesFromBasketDelegate;
        
        private EndOperationDelegate onEndPickSecuritiesFromBasketDelegate;
        
        private System.Threading.SendOrPostCallback onPickSecuritiesFromBasketCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveBroadGlobalActiveDelegate;
        
        private EndOperationDelegate onEndSaveBroadGlobalActiveDelegate;
        
        private System.Threading.SendOrPostCallback onSaveBroadGlobalActiveCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBasketPickerDelegate;
        
        private EndOperationDelegate onEndGetBasketPickerDelegate;
        
        private System.Threading.SendOrPostCallback onGetBasketPickerCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBasketTargetsDelegate;
        
        private EndOperationDelegate onEndGetBasketTargetsDelegate;
        
        private System.Threading.SendOrPostCallback onGetBasketTargetsCompletedDelegate;
        
        private BeginOperationDelegate onBeginRecalculateBasketTargetsDelegate;
        
        private EndOperationDelegate onEndRecalculateBasketTargetsDelegate;
        
        private System.Threading.SendOrPostCallback onRecalculateBasketTargetsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveBasketTargetsDelegate;
        
        private EndOperationDelegate onEndSaveBasketTargetsDelegate;
        
        private System.Threading.SendOrPostCallback onSaveBasketTargetsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBottomUpPortfolioPickerDelegate;
        
        private EndOperationDelegate onEndGetBottomUpPortfolioPickerDelegate;
        
        private System.Threading.SendOrPostCallback onGetBottomUpPortfolioPickerCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBottomUpModelDelegate;
        
        private EndOperationDelegate onEndGetBottomUpModelDelegate;
        
        private System.Threading.SendOrPostCallback onGetBottomUpModelCompletedDelegate;
        
        private BeginOperationDelegate onBeginRecalculateBottomUpDelegate;
        
        private EndOperationDelegate onEndRecalculateBottomUpDelegate;
        
        private System.Threading.SendOrPostCallback onRecalculateBottomUpCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveBottomUpDelegate;
        
        private EndOperationDelegate onEndSaveBottomUpDelegate;
        
        private System.Threading.SendOrPostCallback onSaveBottomUpCompletedDelegate;
        
        private BeginOperationDelegate onBeginRequestCommentsForBasketPortfolioSecurityTargetDelegate;
        
        private EndOperationDelegate onEndRequestCommentsForBasketPortfolioSecurityTargetDelegate;
        
        private System.Threading.SendOrPostCallback onRequestCommentsForBasketPortfolioSecurityTargetCompletedDelegate;
        
        private BeginOperationDelegate onBeginRequestCommentsForTargetingTypeBasketBaseDelegate;
        
        private EndOperationDelegate onEndRequestCommentsForTargetingTypeBasketBaseDelegate;
        
        private System.Threading.SendOrPostCallback onRequestCommentsForTargetingTypeBasketBaseCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public FacadeClient() {
        }
        
        public FacadeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FacadeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FacadeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FacadeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetBroadGlobalActiveCompletedEventArgs> GetBroadGlobalActiveCompleted;
        
        public event System.EventHandler<GetTargetingTypePortfolioPickerCompletedEventArgs> GetTargetingTypePortfolioPickerCompleted;
        
        public event System.EventHandler<RecalculateBroadGlobalActiveCompletedEventArgs> RecalculateBroadGlobalActiveCompleted;
        
        public event System.EventHandler<PickSecuritiesCompletedEventArgs> PickSecuritiesCompleted;
        
        public event System.EventHandler<PickSecuritiesFromBasketCompletedEventArgs> PickSecuritiesFromBasketCompleted;
        
        public event System.EventHandler<SaveBroadGlobalActiveCompletedEventArgs> SaveBroadGlobalActiveCompleted;
        
        public event System.EventHandler<GetBasketPickerCompletedEventArgs> GetBasketPickerCompleted;
        
        public event System.EventHandler<GetBasketTargetsCompletedEventArgs> GetBasketTargetsCompleted;
        
        public event System.EventHandler<RecalculateBasketTargetsCompletedEventArgs> RecalculateBasketTargetsCompleted;
        
        public event System.EventHandler<SaveBasketTargetsCompletedEventArgs> SaveBasketTargetsCompleted;
        
        public event System.EventHandler<GetBottomUpPortfolioPickerCompletedEventArgs> GetBottomUpPortfolioPickerCompleted;
        
        public event System.EventHandler<GetBottomUpModelCompletedEventArgs> GetBottomUpModelCompleted;
        
        public event System.EventHandler<RecalculateBottomUpCompletedEventArgs> RecalculateBottomUpCompleted;
        
        public event System.EventHandler<SaveBottomUpCompletedEventArgs> SaveBottomUpCompleted;
        
        public event System.EventHandler<RequestCommentsForBasketPortfolioSecurityTargetCompletedEventArgs> RequestCommentsForBasketPortfolioSecurityTargetCompleted;
        
        public event System.EventHandler<RequestCommentsForTargetingTypeBasketBaseCompletedEventArgs> RequestCommentsForTargetingTypeBasketBaseCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TopDown.FacingServer.Backend.Targeting.IFacade.BeginGetBroadGlobalActive(int targetingTypeId, string bgaPortfolioId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBroadGlobalActive(targetingTypeId, bgaPortfolioId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TopDown.FacingServer.Backend.Targeting.BgaRootModel TopDown.FacingServer.Backend.Targeting.IFacade.EndGetBroadGlobalActive(System.IAsyncResult result) {
            return base.Channel.EndGetBroadGlobalActive(result);
        }
        
        private System.IAsyncResult OnBeginGetBroadGlobalActive(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int targetingTypeId = ((int)(inValues[0]));
            string bgaPortfolioId = ((string)(inValues[1]));
            return ((TopDown.FacingServer.Backend.Targeting.IFacade)(this)).BeginGetBroadGlobalActive(targetingTypeId, bgaPortfolioId, callback, asyncState);
        }
        
        private object[] OnEndGetBroadGlobalActive(System.IAsyncResult result) {
            TopDown.FacingServer.Backend.Targeting.BgaRootModel retVal = ((TopDown.FacingServer.Backend.Targeting.IFacade)(this)).EndGetBroadGlobalActive(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBroadGlobalActiveCompleted(object state) {
            if ((this.GetBroadGlobalActiveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBroadGlobalActiveCompleted(this, new GetBroadGlobalActiveCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBroadGlobalActiveAsync(int targetingTypeId, string bgaPortfolioId) {
            this.GetBroadGlobalActiveAsync(targetingTypeId, bgaPortfolioId, null);
        }
        
        public void GetBroadGlobalActiveAsync(int targetingTypeId, string bgaPortfolioId, object userState) {
            if ((this.onBeginGetBroadGlobalActiveDelegate == null)) {
                this.onBeginGetBroadGlobalActiveDelegate = new BeginOperationDelegate(this.OnBeginGetBroadGlobalActive);
            }
            if ((this.onEndGetBroadGlobalActiveDelegate == null)) {
                this.onEndGetBroadGlobalActiveDelegate = new EndOperationDelegate(this.OnEndGetBroadGlobalActive);
            }
            if ((this.onGetBroadGlobalActiveCompletedDelegate == null)) {
                this.onGetBroadGlobalActiveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBroadGlobalActiveCompleted);
            }
            base.InvokeAsync(this.onBeginGetBroadGlobalActiveDelegate, new object[] {
                        targetingTypeId,
                        bgaPortfolioId}, this.onEndGetBroadGlobalActiveDelegate, this.onGetBroadGlobalActiveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TopDown.FacingServer.Backend.Targeting.IFacade.BeginGetTargetingTypePortfolioPicker(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTargetingTypePortfolioPicker(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.BgaTargetingTypePickerModel> TopDown.FacingServer.Backend.Targeting.IFacade.EndGetTargetingTypePortfolioPicker(System.IAsyncResult result) {
            return base.Channel.EndGetTargetingTypePortfolioPicker(result);
        }
        
        private System.IAsyncResult OnBeginGetTargetingTypePortfolioPicker(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((TopDown.FacingServer.Backend.Targeting.IFacade)(this)).BeginGetTargetingTypePortfolioPicker(callback, asyncState);
        }
        
        private object[] OnEndGetTargetingTypePortfolioPicker(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.BgaTargetingTypePickerModel> retVal = ((TopDown.FacingServer.Backend.Targeting.IFacade)(this)).EndGetTargetingTypePortfolioPicker(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTargetingTypePortfolioPickerCompleted(object state) {
            if ((this.GetTargetingTypePortfolioPickerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTargetingTypePortfolioPickerCompleted(this, new GetTargetingTypePortfolioPickerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTargetingTypePortfolioPickerAsync() {
            this.GetTargetingTypePortfolioPickerAsync(null);
        }
        
        public void GetTargetingTypePortfolioPickerAsync(object userState) {
            if ((this.onBeginGetTargetingTypePortfolioPickerDelegate == null)) {
                this.onBeginGetTargetingTypePortfolioPickerDelegate = new BeginOperationDelegate(this.OnBeginGetTargetingTypePortfolioPicker);
            }
            if ((this.onEndGetTargetingTypePortfolioPickerDelegate == null)) {
                this.onEndGetTargetingTypePortfolioPickerDelegate = new EndOperationDelegate(this.OnEndGetTargetingTypePortfolioPicker);
            }
            if ((this.onGetTargetingTypePortfolioPickerCompletedDelegate == null)) {
                this.onGetTargetingTypePortfolioPickerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTargetingTypePortfolioPickerCompleted);
            }
            base.InvokeAsync(this.onBeginGetTargetingTypePortfolioPickerDelegate, null, this.onEndGetTargetingTypePortfolioPickerDelegate, this.onGetTargetingTypePortfolioPickerCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TopDown.FacingServer.Backend.Targeting.IFacade.BeginRecalculateBroadGlobalActive(TopDown.FacingServer.Backend.Targeting.BgaRootModel model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRecalculateBroadGlobalActive(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TopDown.FacingServer.Backend.Targeting.BgaRootModel TopDown.FacingServer.Backend.Targeting.IFacade.EndRecalculateBroadGlobalActive(System.IAsyncResult result) {
            return base.Channel.EndRecalculateBroadGlobalActive(result);
        }
        
        private System.IAsyncResult OnBeginRecalculateBroadGlobalActive(object[] inValues, System.AsyncCallback callback, object asyncState) {
            TopDown.FacingServer.Backend.Targeting.BgaRootModel model = ((TopDown.FacingServer.Backend.Targeting.BgaRootModel)(inValues[0]));
            return ((TopDown.FacingServer.Backend.Targeting.IFacade)(this)).BeginRecalculateBroadGlobalActive(model, callback, asyncState);
        }
        
        private object[] OnEndRecalculateBroadGlobalActive(System.IAsyncResult result) {
            TopDown.FacingServer.Backend.Targeting.BgaRootModel retVal = ((TopDown.FacingServer.Backend.Targeting.IFacade)(this)).EndRecalculateBroadGlobalActive(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRecalculateBroadGlobalActiveCompleted(object state) {
            if ((this.RecalculateBroadGlobalActiveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RecalculateBroadGlobalActiveCompleted(this, new RecalculateBroadGlobalActiveCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RecalculateBroadGlobalActiveAsync(TopDown.FacingServer.Backend.Targeting.BgaRootModel model) {
            this.RecalculateBroadGlobalActiveAsync(model, null);
        }
        
        public void RecalculateBroadGlobalActiveAsync(TopDown.FacingServer.Backend.Targeting.BgaRootModel model, object userState) {
            if ((this.onBeginRecalculateBroadGlobalActiveDelegate == null)) {
                this.onBeginRecalculateBroadGlobalActiveDelegate = new BeginOperationDelegate(this.OnBeginRecalculateBroadGlobalActive);
            }
            if ((this.onEndRecalculateBroadGlobalActiveDelegate == null)) {
                this.onEndRecalculateBroadGlobalActiveDelegate = new EndOperationDelegate(this.OnEndRecalculateBroadGlobalActive);
            }
            if ((this.onRecalculateBroadGlobalActiveCompletedDelegate == null)) {
                this.onRecalculateBroadGlobalActiveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRecalculateBroadGlobalActiveCompleted);
            }
            base.InvokeAsync(this.onBeginRecalculateBroadGlobalActiveDelegate, new object[] {
                        model}, this.onEndRecalculateBroadGlobalActiveDelegate, this.onRecalculateBroadGlobalActiveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TopDown.FacingServer.Backend.Targeting.IFacade.BeginPickSecurities(string pattern, int atMost, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPickSecurities(pattern, atMost, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.SecurityModel> TopDown.FacingServer.Backend.Targeting.IFacade.EndPickSecurities(System.IAsyncResult result) {
            return base.Channel.EndPickSecurities(result);
        }
        
        private System.IAsyncResult OnBeginPickSecurities(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string pattern = ((string)(inValues[0]));
            int atMost = ((int)(inValues[1]));
            return ((TopDown.FacingServer.Backend.Targeting.IFacade)(this)).BeginPickSecurities(pattern, atMost, callback, asyncState);
        }
        
        private object[] OnEndPickSecurities(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.SecurityModel> retVal = ((TopDown.FacingServer.Backend.Targeting.IFacade)(this)).EndPickSecurities(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPickSecuritiesCompleted(object state) {
            if ((this.PickSecuritiesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PickSecuritiesCompleted(this, new PickSecuritiesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PickSecuritiesAsync(string pattern, int atMost) {
            this.PickSecuritiesAsync(pattern, atMost, null);
        }
        
        public void PickSecuritiesAsync(string pattern, int atMost, object userState) {
            if ((this.onBeginPickSecuritiesDelegate == null)) {
                this.onBeginPickSecuritiesDelegate = new BeginOperationDelegate(this.OnBeginPickSecurities);
            }
            if ((this.onEndPickSecuritiesDelegate == null)) {
                this.onEndPickSecuritiesDelegate = new EndOperationDelegate(this.OnEndPickSecurities);
            }
            if ((this.onPickSecuritiesCompletedDelegate == null)) {
                this.onPickSecuritiesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPickSecuritiesCompleted);
            }
            base.InvokeAsync(this.onBeginPickSecuritiesDelegate, new object[] {
                        pattern,
                        atMost}, this.onEndPickSecuritiesDelegate, this.onPickSecuritiesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TopDown.FacingServer.Backend.Targeting.IFacade.BeginPickSecuritiesFromBasket(string pattern, int atMost, int basketId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPickSecuritiesFromBasket(pattern, atMost, basketId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.SecurityModel> TopDown.FacingServer.Backend.Targeting.IFacade.EndPickSecuritiesFromBasket(System.IAsyncResult result) {
            return base.Channel.EndPickSecuritiesFromBasket(result);
        }
        
        private System.IAsyncResult OnBeginPickSecuritiesFromBasket(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string pattern = ((string)(inValues[0]));
            int atMost = ((int)(inValues[1]));
            int basketId = ((int)(inValues[2]));
            return ((TopDown.FacingServer.Backend.Targeting.IFacade)(this)).BeginPickSecuritiesFromBasket(pattern, atMost, basketId, callback, asyncState);
        }
        
        private object[] OnEndPickSecuritiesFromBasket(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.SecurityModel> retVal = ((TopDown.FacingServer.Backend.Targeting.IFacade)(this)).EndPickSecuritiesFromBasket(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPickSecuritiesFromBasketCompleted(object state) {
            if ((this.PickSecuritiesFromBasketCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PickSecuritiesFromBasketCompleted(this, new PickSecuritiesFromBasketCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PickSecuritiesFromBasketAsync(string pattern, int atMost, int basketId) {
            this.PickSecuritiesFromBasketAsync(pattern, atMost, basketId, null);
        }
        
        public void PickSecuritiesFromBasketAsync(string pattern, int atMost, int basketId, object userState) {
            if ((this.onBeginPickSecuritiesFromBasketDelegate == null)) {
                this.onBeginPickSecuritiesFromBasketDelegate = new BeginOperationDelegate(this.OnBeginPickSecuritiesFromBasket);
            }
            if ((this.onEndPickSecuritiesFromBasketDelegate == null)) {
                this.onEndPickSecuritiesFromBasketDelegate = new EndOperationDelegate(this.OnEndPickSecuritiesFromBasket);
            }
            if ((this.onPickSecuritiesFromBasketCompletedDelegate == null)) {
                this.onPickSecuritiesFromBasketCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPickSecuritiesFromBasketCompleted);
            }
            base.InvokeAsync(this.onBeginPickSecuritiesFromBasketDelegate, new object[] {
                        pattern,
                        atMost,
                        basketId}, this.onEndPickSecuritiesFromBasketDelegate, this.onPickSecuritiesFromBasketCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TopDown.FacingServer.Backend.Targeting.IFacade.BeginSaveBroadGlobalActive(TopDown.FacingServer.Backend.Targeting.BgaRootModel model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveBroadGlobalActive(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.IssueModel> TopDown.FacingServer.Backend.Targeting.IFacade.EndSaveBroadGlobalActive(System.IAsyncResult result) {
            return base.Channel.EndSaveBroadGlobalActive(result);
        }
        
        private System.IAsyncResult OnBeginSaveBroadGlobalActive(object[] inValues, System.AsyncCallback callback, object asyncState) {
            TopDown.FacingServer.Backend.Targeting.BgaRootModel model = ((TopDown.FacingServer.Backend.Targeting.BgaRootModel)(inValues[0]));
            return ((TopDown.FacingServer.Backend.Targeting.IFacade)(this)).BeginSaveBroadGlobalActive(model, callback, asyncState);
        }
        
        private object[] OnEndSaveBroadGlobalActive(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.IssueModel> retVal = ((TopDown.FacingServer.Backend.Targeting.IFacade)(this)).EndSaveBroadGlobalActive(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveBroadGlobalActiveCompleted(object state) {
            if ((this.SaveBroadGlobalActiveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveBroadGlobalActiveCompleted(this, new SaveBroadGlobalActiveCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveBroadGlobalActiveAsync(TopDown.FacingServer.Backend.Targeting.BgaRootModel model) {
            this.SaveBroadGlobalActiveAsync(model, null);
        }
        
        public void SaveBroadGlobalActiveAsync(TopDown.FacingServer.Backend.Targeting.BgaRootModel model, object userState) {
            if ((this.onBeginSaveBroadGlobalActiveDelegate == null)) {
                this.onBeginSaveBroadGlobalActiveDelegate = new BeginOperationDelegate(this.OnBeginSaveBroadGlobalActive);
            }
            if ((this.onEndSaveBroadGlobalActiveDelegate == null)) {
                this.onEndSaveBroadGlobalActiveDelegate = new EndOperationDelegate(this.OnEndSaveBroadGlobalActive);
            }
            if ((this.onSaveBroadGlobalActiveCompletedDelegate == null)) {
                this.onSaveBroadGlobalActiveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveBroadGlobalActiveCompleted);
            }
            base.InvokeAsync(this.onBeginSaveBroadGlobalActiveDelegate, new object[] {
                        model}, this.onEndSaveBroadGlobalActiveDelegate, this.onSaveBroadGlobalActiveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TopDown.FacingServer.Backend.Targeting.IFacade.BeginGetBasketPicker(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBasketPicker(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TopDown.FacingServer.Backend.Targeting.BtPickerModel TopDown.FacingServer.Backend.Targeting.IFacade.EndGetBasketPicker(System.IAsyncResult result) {
            return base.Channel.EndGetBasketPicker(result);
        }
        
        private System.IAsyncResult OnBeginGetBasketPicker(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((TopDown.FacingServer.Backend.Targeting.IFacade)(this)).BeginGetBasketPicker(callback, asyncState);
        }
        
        private object[] OnEndGetBasketPicker(System.IAsyncResult result) {
            TopDown.FacingServer.Backend.Targeting.BtPickerModel retVal = ((TopDown.FacingServer.Backend.Targeting.IFacade)(this)).EndGetBasketPicker(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBasketPickerCompleted(object state) {
            if ((this.GetBasketPickerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBasketPickerCompleted(this, new GetBasketPickerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBasketPickerAsync() {
            this.GetBasketPickerAsync(null);
        }
        
        public void GetBasketPickerAsync(object userState) {
            if ((this.onBeginGetBasketPickerDelegate == null)) {
                this.onBeginGetBasketPickerDelegate = new BeginOperationDelegate(this.OnBeginGetBasketPicker);
            }
            if ((this.onEndGetBasketPickerDelegate == null)) {
                this.onEndGetBasketPickerDelegate = new EndOperationDelegate(this.OnEndGetBasketPicker);
            }
            if ((this.onGetBasketPickerCompletedDelegate == null)) {
                this.onGetBasketPickerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBasketPickerCompleted);
            }
            base.InvokeAsync(this.onBeginGetBasketPickerDelegate, null, this.onEndGetBasketPickerDelegate, this.onGetBasketPickerCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TopDown.FacingServer.Backend.Targeting.IFacade.BeginGetBasketTargets(int targetingTypeGroupId, int basketId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBasketTargets(targetingTypeGroupId, basketId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TopDown.FacingServer.Backend.Targeting.BtRootModel TopDown.FacingServer.Backend.Targeting.IFacade.EndGetBasketTargets(System.IAsyncResult result) {
            return base.Channel.EndGetBasketTargets(result);
        }
        
        private System.IAsyncResult OnBeginGetBasketTargets(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int targetingTypeGroupId = ((int)(inValues[0]));
            int basketId = ((int)(inValues[1]));
            return ((TopDown.FacingServer.Backend.Targeting.IFacade)(this)).BeginGetBasketTargets(targetingTypeGroupId, basketId, callback, asyncState);
        }
        
        private object[] OnEndGetBasketTargets(System.IAsyncResult result) {
            TopDown.FacingServer.Backend.Targeting.BtRootModel retVal = ((TopDown.FacingServer.Backend.Targeting.IFacade)(this)).EndGetBasketTargets(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBasketTargetsCompleted(object state) {
            if ((this.GetBasketTargetsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBasketTargetsCompleted(this, new GetBasketTargetsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBasketTargetsAsync(int targetingTypeGroupId, int basketId) {
            this.GetBasketTargetsAsync(targetingTypeGroupId, basketId, null);
        }
        
        public void GetBasketTargetsAsync(int targetingTypeGroupId, int basketId, object userState) {
            if ((this.onBeginGetBasketTargetsDelegate == null)) {
                this.onBeginGetBasketTargetsDelegate = new BeginOperationDelegate(this.OnBeginGetBasketTargets);
            }
            if ((this.onEndGetBasketTargetsDelegate == null)) {
                this.onEndGetBasketTargetsDelegate = new EndOperationDelegate(this.OnEndGetBasketTargets);
            }
            if ((this.onGetBasketTargetsCompletedDelegate == null)) {
                this.onGetBasketTargetsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBasketTargetsCompleted);
            }
            base.InvokeAsync(this.onBeginGetBasketTargetsDelegate, new object[] {
                        targetingTypeGroupId,
                        basketId}, this.onEndGetBasketTargetsDelegate, this.onGetBasketTargetsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TopDown.FacingServer.Backend.Targeting.IFacade.BeginRecalculateBasketTargets(TopDown.FacingServer.Backend.Targeting.BtRootModel model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRecalculateBasketTargets(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TopDown.FacingServer.Backend.Targeting.BtRootModel TopDown.FacingServer.Backend.Targeting.IFacade.EndRecalculateBasketTargets(System.IAsyncResult result) {
            return base.Channel.EndRecalculateBasketTargets(result);
        }
        
        private System.IAsyncResult OnBeginRecalculateBasketTargets(object[] inValues, System.AsyncCallback callback, object asyncState) {
            TopDown.FacingServer.Backend.Targeting.BtRootModel model = ((TopDown.FacingServer.Backend.Targeting.BtRootModel)(inValues[0]));
            return ((TopDown.FacingServer.Backend.Targeting.IFacade)(this)).BeginRecalculateBasketTargets(model, callback, asyncState);
        }
        
        private object[] OnEndRecalculateBasketTargets(System.IAsyncResult result) {
            TopDown.FacingServer.Backend.Targeting.BtRootModel retVal = ((TopDown.FacingServer.Backend.Targeting.IFacade)(this)).EndRecalculateBasketTargets(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRecalculateBasketTargetsCompleted(object state) {
            if ((this.RecalculateBasketTargetsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RecalculateBasketTargetsCompleted(this, new RecalculateBasketTargetsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RecalculateBasketTargetsAsync(TopDown.FacingServer.Backend.Targeting.BtRootModel model) {
            this.RecalculateBasketTargetsAsync(model, null);
        }
        
        public void RecalculateBasketTargetsAsync(TopDown.FacingServer.Backend.Targeting.BtRootModel model, object userState) {
            if ((this.onBeginRecalculateBasketTargetsDelegate == null)) {
                this.onBeginRecalculateBasketTargetsDelegate = new BeginOperationDelegate(this.OnBeginRecalculateBasketTargets);
            }
            if ((this.onEndRecalculateBasketTargetsDelegate == null)) {
                this.onEndRecalculateBasketTargetsDelegate = new EndOperationDelegate(this.OnEndRecalculateBasketTargets);
            }
            if ((this.onRecalculateBasketTargetsCompletedDelegate == null)) {
                this.onRecalculateBasketTargetsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRecalculateBasketTargetsCompleted);
            }
            base.InvokeAsync(this.onBeginRecalculateBasketTargetsDelegate, new object[] {
                        model}, this.onEndRecalculateBasketTargetsDelegate, this.onRecalculateBasketTargetsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TopDown.FacingServer.Backend.Targeting.IFacade.BeginSaveBasketTargets(TopDown.FacingServer.Backend.Targeting.BtRootModel model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveBasketTargets(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.IssueModel> TopDown.FacingServer.Backend.Targeting.IFacade.EndSaveBasketTargets(System.IAsyncResult result) {
            return base.Channel.EndSaveBasketTargets(result);
        }
        
        private System.IAsyncResult OnBeginSaveBasketTargets(object[] inValues, System.AsyncCallback callback, object asyncState) {
            TopDown.FacingServer.Backend.Targeting.BtRootModel model = ((TopDown.FacingServer.Backend.Targeting.BtRootModel)(inValues[0]));
            return ((TopDown.FacingServer.Backend.Targeting.IFacade)(this)).BeginSaveBasketTargets(model, callback, asyncState);
        }
        
        private object[] OnEndSaveBasketTargets(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.IssueModel> retVal = ((TopDown.FacingServer.Backend.Targeting.IFacade)(this)).EndSaveBasketTargets(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveBasketTargetsCompleted(object state) {
            if ((this.SaveBasketTargetsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveBasketTargetsCompleted(this, new SaveBasketTargetsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveBasketTargetsAsync(TopDown.FacingServer.Backend.Targeting.BtRootModel model) {
            this.SaveBasketTargetsAsync(model, null);
        }
        
        public void SaveBasketTargetsAsync(TopDown.FacingServer.Backend.Targeting.BtRootModel model, object userState) {
            if ((this.onBeginSaveBasketTargetsDelegate == null)) {
                this.onBeginSaveBasketTargetsDelegate = new BeginOperationDelegate(this.OnBeginSaveBasketTargets);
            }
            if ((this.onEndSaveBasketTargetsDelegate == null)) {
                this.onEndSaveBasketTargetsDelegate = new EndOperationDelegate(this.OnEndSaveBasketTargets);
            }
            if ((this.onSaveBasketTargetsCompletedDelegate == null)) {
                this.onSaveBasketTargetsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveBasketTargetsCompleted);
            }
            base.InvokeAsync(this.onBeginSaveBasketTargetsDelegate, new object[] {
                        model}, this.onEndSaveBasketTargetsDelegate, this.onSaveBasketTargetsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TopDown.FacingServer.Backend.Targeting.IFacade.BeginGetBottomUpPortfolioPicker(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBottomUpPortfolioPicker(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TopDown.FacingServer.Backend.Targeting.BuPickerModel TopDown.FacingServer.Backend.Targeting.IFacade.EndGetBottomUpPortfolioPicker(System.IAsyncResult result) {
            return base.Channel.EndGetBottomUpPortfolioPicker(result);
        }
        
        private System.IAsyncResult OnBeginGetBottomUpPortfolioPicker(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((TopDown.FacingServer.Backend.Targeting.IFacade)(this)).BeginGetBottomUpPortfolioPicker(callback, asyncState);
        }
        
        private object[] OnEndGetBottomUpPortfolioPicker(System.IAsyncResult result) {
            TopDown.FacingServer.Backend.Targeting.BuPickerModel retVal = ((TopDown.FacingServer.Backend.Targeting.IFacade)(this)).EndGetBottomUpPortfolioPicker(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBottomUpPortfolioPickerCompleted(object state) {
            if ((this.GetBottomUpPortfolioPickerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBottomUpPortfolioPickerCompleted(this, new GetBottomUpPortfolioPickerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBottomUpPortfolioPickerAsync() {
            this.GetBottomUpPortfolioPickerAsync(null);
        }
        
        public void GetBottomUpPortfolioPickerAsync(object userState) {
            if ((this.onBeginGetBottomUpPortfolioPickerDelegate == null)) {
                this.onBeginGetBottomUpPortfolioPickerDelegate = new BeginOperationDelegate(this.OnBeginGetBottomUpPortfolioPicker);
            }
            if ((this.onEndGetBottomUpPortfolioPickerDelegate == null)) {
                this.onEndGetBottomUpPortfolioPickerDelegate = new EndOperationDelegate(this.OnEndGetBottomUpPortfolioPicker);
            }
            if ((this.onGetBottomUpPortfolioPickerCompletedDelegate == null)) {
                this.onGetBottomUpPortfolioPickerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBottomUpPortfolioPickerCompleted);
            }
            base.InvokeAsync(this.onBeginGetBottomUpPortfolioPickerDelegate, null, this.onEndGetBottomUpPortfolioPickerDelegate, this.onGetBottomUpPortfolioPickerCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TopDown.FacingServer.Backend.Targeting.IFacade.BeginGetBottomUpModel(string bottomUpPortfolioId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBottomUpModel(bottomUpPortfolioId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TopDown.FacingServer.Backend.Targeting.BuRootModel TopDown.FacingServer.Backend.Targeting.IFacade.EndGetBottomUpModel(System.IAsyncResult result) {
            return base.Channel.EndGetBottomUpModel(result);
        }
        
        private System.IAsyncResult OnBeginGetBottomUpModel(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string bottomUpPortfolioId = ((string)(inValues[0]));
            return ((TopDown.FacingServer.Backend.Targeting.IFacade)(this)).BeginGetBottomUpModel(bottomUpPortfolioId, callback, asyncState);
        }
        
        private object[] OnEndGetBottomUpModel(System.IAsyncResult result) {
            TopDown.FacingServer.Backend.Targeting.BuRootModel retVal = ((TopDown.FacingServer.Backend.Targeting.IFacade)(this)).EndGetBottomUpModel(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBottomUpModelCompleted(object state) {
            if ((this.GetBottomUpModelCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBottomUpModelCompleted(this, new GetBottomUpModelCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBottomUpModelAsync(string bottomUpPortfolioId) {
            this.GetBottomUpModelAsync(bottomUpPortfolioId, null);
        }
        
        public void GetBottomUpModelAsync(string bottomUpPortfolioId, object userState) {
            if ((this.onBeginGetBottomUpModelDelegate == null)) {
                this.onBeginGetBottomUpModelDelegate = new BeginOperationDelegate(this.OnBeginGetBottomUpModel);
            }
            if ((this.onEndGetBottomUpModelDelegate == null)) {
                this.onEndGetBottomUpModelDelegate = new EndOperationDelegate(this.OnEndGetBottomUpModel);
            }
            if ((this.onGetBottomUpModelCompletedDelegate == null)) {
                this.onGetBottomUpModelCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBottomUpModelCompleted);
            }
            base.InvokeAsync(this.onBeginGetBottomUpModelDelegate, new object[] {
                        bottomUpPortfolioId}, this.onEndGetBottomUpModelDelegate, this.onGetBottomUpModelCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TopDown.FacingServer.Backend.Targeting.IFacade.BeginRecalculateBottomUp(TopDown.FacingServer.Backend.Targeting.BuRootModel model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRecalculateBottomUp(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TopDown.FacingServer.Backend.Targeting.BuRootModel TopDown.FacingServer.Backend.Targeting.IFacade.EndRecalculateBottomUp(System.IAsyncResult result) {
            return base.Channel.EndRecalculateBottomUp(result);
        }
        
        private System.IAsyncResult OnBeginRecalculateBottomUp(object[] inValues, System.AsyncCallback callback, object asyncState) {
            TopDown.FacingServer.Backend.Targeting.BuRootModel model = ((TopDown.FacingServer.Backend.Targeting.BuRootModel)(inValues[0]));
            return ((TopDown.FacingServer.Backend.Targeting.IFacade)(this)).BeginRecalculateBottomUp(model, callback, asyncState);
        }
        
        private object[] OnEndRecalculateBottomUp(System.IAsyncResult result) {
            TopDown.FacingServer.Backend.Targeting.BuRootModel retVal = ((TopDown.FacingServer.Backend.Targeting.IFacade)(this)).EndRecalculateBottomUp(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRecalculateBottomUpCompleted(object state) {
            if ((this.RecalculateBottomUpCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RecalculateBottomUpCompleted(this, new RecalculateBottomUpCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RecalculateBottomUpAsync(TopDown.FacingServer.Backend.Targeting.BuRootModel model) {
            this.RecalculateBottomUpAsync(model, null);
        }
        
        public void RecalculateBottomUpAsync(TopDown.FacingServer.Backend.Targeting.BuRootModel model, object userState) {
            if ((this.onBeginRecalculateBottomUpDelegate == null)) {
                this.onBeginRecalculateBottomUpDelegate = new BeginOperationDelegate(this.OnBeginRecalculateBottomUp);
            }
            if ((this.onEndRecalculateBottomUpDelegate == null)) {
                this.onEndRecalculateBottomUpDelegate = new EndOperationDelegate(this.OnEndRecalculateBottomUp);
            }
            if ((this.onRecalculateBottomUpCompletedDelegate == null)) {
                this.onRecalculateBottomUpCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRecalculateBottomUpCompleted);
            }
            base.InvokeAsync(this.onBeginRecalculateBottomUpDelegate, new object[] {
                        model}, this.onEndRecalculateBottomUpDelegate, this.onRecalculateBottomUpCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TopDown.FacingServer.Backend.Targeting.IFacade.BeginSaveBottomUp(TopDown.FacingServer.Backend.Targeting.BuRootModel model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveBottomUp(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.IssueModel> TopDown.FacingServer.Backend.Targeting.IFacade.EndSaveBottomUp(System.IAsyncResult result) {
            return base.Channel.EndSaveBottomUp(result);
        }
        
        private System.IAsyncResult OnBeginSaveBottomUp(object[] inValues, System.AsyncCallback callback, object asyncState) {
            TopDown.FacingServer.Backend.Targeting.BuRootModel model = ((TopDown.FacingServer.Backend.Targeting.BuRootModel)(inValues[0]));
            return ((TopDown.FacingServer.Backend.Targeting.IFacade)(this)).BeginSaveBottomUp(model, callback, asyncState);
        }
        
        private object[] OnEndSaveBottomUp(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.IssueModel> retVal = ((TopDown.FacingServer.Backend.Targeting.IFacade)(this)).EndSaveBottomUp(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveBottomUpCompleted(object state) {
            if ((this.SaveBottomUpCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveBottomUpCompleted(this, new SaveBottomUpCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveBottomUpAsync(TopDown.FacingServer.Backend.Targeting.BuRootModel model) {
            this.SaveBottomUpAsync(model, null);
        }
        
        public void SaveBottomUpAsync(TopDown.FacingServer.Backend.Targeting.BuRootModel model, object userState) {
            if ((this.onBeginSaveBottomUpDelegate == null)) {
                this.onBeginSaveBottomUpDelegate = new BeginOperationDelegate(this.OnBeginSaveBottomUp);
            }
            if ((this.onEndSaveBottomUpDelegate == null)) {
                this.onEndSaveBottomUpDelegate = new EndOperationDelegate(this.OnEndSaveBottomUp);
            }
            if ((this.onSaveBottomUpCompletedDelegate == null)) {
                this.onSaveBottomUpCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveBottomUpCompleted);
            }
            base.InvokeAsync(this.onBeginSaveBottomUpDelegate, new object[] {
                        model}, this.onEndSaveBottomUpDelegate, this.onSaveBottomUpCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TopDown.FacingServer.Backend.Targeting.IFacade.BeginRequestCommentsForBasketPortfolioSecurityTarget(int basketId, string broadGlbalActivePortfolioId, string securityId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRequestCommentsForBasketPortfolioSecurityTarget(basketId, broadGlbalActivePortfolioId, securityId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.CommentModel> TopDown.FacingServer.Backend.Targeting.IFacade.EndRequestCommentsForBasketPortfolioSecurityTarget(System.IAsyncResult result) {
            return base.Channel.EndRequestCommentsForBasketPortfolioSecurityTarget(result);
        }
        
        private System.IAsyncResult OnBeginRequestCommentsForBasketPortfolioSecurityTarget(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int basketId = ((int)(inValues[0]));
            string broadGlbalActivePortfolioId = ((string)(inValues[1]));
            string securityId = ((string)(inValues[2]));
            return ((TopDown.FacingServer.Backend.Targeting.IFacade)(this)).BeginRequestCommentsForBasketPortfolioSecurityTarget(basketId, broadGlbalActivePortfolioId, securityId, callback, asyncState);
        }
        
        private object[] OnEndRequestCommentsForBasketPortfolioSecurityTarget(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.CommentModel> retVal = ((TopDown.FacingServer.Backend.Targeting.IFacade)(this)).EndRequestCommentsForBasketPortfolioSecurityTarget(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRequestCommentsForBasketPortfolioSecurityTargetCompleted(object state) {
            if ((this.RequestCommentsForBasketPortfolioSecurityTargetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RequestCommentsForBasketPortfolioSecurityTargetCompleted(this, new RequestCommentsForBasketPortfolioSecurityTargetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RequestCommentsForBasketPortfolioSecurityTargetAsync(int basketId, string broadGlbalActivePortfolioId, string securityId) {
            this.RequestCommentsForBasketPortfolioSecurityTargetAsync(basketId, broadGlbalActivePortfolioId, securityId, null);
        }
        
        public void RequestCommentsForBasketPortfolioSecurityTargetAsync(int basketId, string broadGlbalActivePortfolioId, string securityId, object userState) {
            if ((this.onBeginRequestCommentsForBasketPortfolioSecurityTargetDelegate == null)) {
                this.onBeginRequestCommentsForBasketPortfolioSecurityTargetDelegate = new BeginOperationDelegate(this.OnBeginRequestCommentsForBasketPortfolioSecurityTarget);
            }
            if ((this.onEndRequestCommentsForBasketPortfolioSecurityTargetDelegate == null)) {
                this.onEndRequestCommentsForBasketPortfolioSecurityTargetDelegate = new EndOperationDelegate(this.OnEndRequestCommentsForBasketPortfolioSecurityTarget);
            }
            if ((this.onRequestCommentsForBasketPortfolioSecurityTargetCompletedDelegate == null)) {
                this.onRequestCommentsForBasketPortfolioSecurityTargetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRequestCommentsForBasketPortfolioSecurityTargetCompleted);
            }
            base.InvokeAsync(this.onBeginRequestCommentsForBasketPortfolioSecurityTargetDelegate, new object[] {
                        basketId,
                        broadGlbalActivePortfolioId,
                        securityId}, this.onEndRequestCommentsForBasketPortfolioSecurityTargetDelegate, this.onRequestCommentsForBasketPortfolioSecurityTargetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TopDown.FacingServer.Backend.Targeting.IFacade.BeginRequestCommentsForTargetingTypeBasketBase(int targetingTypeGroupId, int basketId, string securityId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRequestCommentsForTargetingTypeBasketBase(targetingTypeGroupId, basketId, securityId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.CommentModel> TopDown.FacingServer.Backend.Targeting.IFacade.EndRequestCommentsForTargetingTypeBasketBase(System.IAsyncResult result) {
            return base.Channel.EndRequestCommentsForTargetingTypeBasketBase(result);
        }
        
        private System.IAsyncResult OnBeginRequestCommentsForTargetingTypeBasketBase(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int targetingTypeGroupId = ((int)(inValues[0]));
            int basketId = ((int)(inValues[1]));
            string securityId = ((string)(inValues[2]));
            return ((TopDown.FacingServer.Backend.Targeting.IFacade)(this)).BeginRequestCommentsForTargetingTypeBasketBase(targetingTypeGroupId, basketId, securityId, callback, asyncState);
        }
        
        private object[] OnEndRequestCommentsForTargetingTypeBasketBase(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.CommentModel> retVal = ((TopDown.FacingServer.Backend.Targeting.IFacade)(this)).EndRequestCommentsForTargetingTypeBasketBase(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRequestCommentsForTargetingTypeBasketBaseCompleted(object state) {
            if ((this.RequestCommentsForTargetingTypeBasketBaseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RequestCommentsForTargetingTypeBasketBaseCompleted(this, new RequestCommentsForTargetingTypeBasketBaseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RequestCommentsForTargetingTypeBasketBaseAsync(int targetingTypeGroupId, int basketId, string securityId) {
            this.RequestCommentsForTargetingTypeBasketBaseAsync(targetingTypeGroupId, basketId, securityId, null);
        }
        
        public void RequestCommentsForTargetingTypeBasketBaseAsync(int targetingTypeGroupId, int basketId, string securityId, object userState) {
            if ((this.onBeginRequestCommentsForTargetingTypeBasketBaseDelegate == null)) {
                this.onBeginRequestCommentsForTargetingTypeBasketBaseDelegate = new BeginOperationDelegate(this.OnBeginRequestCommentsForTargetingTypeBasketBase);
            }
            if ((this.onEndRequestCommentsForTargetingTypeBasketBaseDelegate == null)) {
                this.onEndRequestCommentsForTargetingTypeBasketBaseDelegate = new EndOperationDelegate(this.OnEndRequestCommentsForTargetingTypeBasketBase);
            }
            if ((this.onRequestCommentsForTargetingTypeBasketBaseCompletedDelegate == null)) {
                this.onRequestCommentsForTargetingTypeBasketBaseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRequestCommentsForTargetingTypeBasketBaseCompleted);
            }
            base.InvokeAsync(this.onBeginRequestCommentsForTargetingTypeBasketBaseDelegate, new object[] {
                        targetingTypeGroupId,
                        basketId,
                        securityId}, this.onEndRequestCommentsForTargetingTypeBasketBaseDelegate, this.onRequestCommentsForTargetingTypeBasketBaseCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override TopDown.FacingServer.Backend.Targeting.IFacade CreateChannel() {
            return new FacadeClientChannel(this);
        }
        
        private class FacadeClientChannel : ChannelBase<TopDown.FacingServer.Backend.Targeting.IFacade>, TopDown.FacingServer.Backend.Targeting.IFacade {
            
            public FacadeClientChannel(System.ServiceModel.ClientBase<TopDown.FacingServer.Backend.Targeting.IFacade> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetBroadGlobalActive(int targetingTypeId, string bgaPortfolioId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = targetingTypeId;
                _args[1] = bgaPortfolioId;
                System.IAsyncResult _result = base.BeginInvoke("GetBroadGlobalActive", _args, callback, asyncState);
                return _result;
            }
            
            public TopDown.FacingServer.Backend.Targeting.BgaRootModel EndGetBroadGlobalActive(System.IAsyncResult result) {
                object[] _args = new object[0];
                TopDown.FacingServer.Backend.Targeting.BgaRootModel _result = ((TopDown.FacingServer.Backend.Targeting.BgaRootModel)(base.EndInvoke("GetBroadGlobalActive", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTargetingTypePortfolioPicker(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetTargetingTypePortfolioPicker", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.BgaTargetingTypePickerModel> EndGetTargetingTypePortfolioPicker(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.BgaTargetingTypePickerModel> _result = ((System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.BgaTargetingTypePickerModel>)(base.EndInvoke("GetTargetingTypePortfolioPicker", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRecalculateBroadGlobalActive(TopDown.FacingServer.Backend.Targeting.BgaRootModel model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("RecalculateBroadGlobalActive", _args, callback, asyncState);
                return _result;
            }
            
            public TopDown.FacingServer.Backend.Targeting.BgaRootModel EndRecalculateBroadGlobalActive(System.IAsyncResult result) {
                object[] _args = new object[0];
                TopDown.FacingServer.Backend.Targeting.BgaRootModel _result = ((TopDown.FacingServer.Backend.Targeting.BgaRootModel)(base.EndInvoke("RecalculateBroadGlobalActive", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPickSecurities(string pattern, int atMost, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = pattern;
                _args[1] = atMost;
                System.IAsyncResult _result = base.BeginInvoke("PickSecurities", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.SecurityModel> EndPickSecurities(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.SecurityModel> _result = ((System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.SecurityModel>)(base.EndInvoke("PickSecurities", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPickSecuritiesFromBasket(string pattern, int atMost, int basketId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = pattern;
                _args[1] = atMost;
                _args[2] = basketId;
                System.IAsyncResult _result = base.BeginInvoke("PickSecuritiesFromBasket", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.SecurityModel> EndPickSecuritiesFromBasket(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.SecurityModel> _result = ((System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.SecurityModel>)(base.EndInvoke("PickSecuritiesFromBasket", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveBroadGlobalActive(TopDown.FacingServer.Backend.Targeting.BgaRootModel model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("SaveBroadGlobalActive", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.IssueModel> EndSaveBroadGlobalActive(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.IssueModel> _result = ((System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.IssueModel>)(base.EndInvoke("SaveBroadGlobalActive", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetBasketPicker(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetBasketPicker", _args, callback, asyncState);
                return _result;
            }
            
            public TopDown.FacingServer.Backend.Targeting.BtPickerModel EndGetBasketPicker(System.IAsyncResult result) {
                object[] _args = new object[0];
                TopDown.FacingServer.Backend.Targeting.BtPickerModel _result = ((TopDown.FacingServer.Backend.Targeting.BtPickerModel)(base.EndInvoke("GetBasketPicker", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetBasketTargets(int targetingTypeGroupId, int basketId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = targetingTypeGroupId;
                _args[1] = basketId;
                System.IAsyncResult _result = base.BeginInvoke("GetBasketTargets", _args, callback, asyncState);
                return _result;
            }
            
            public TopDown.FacingServer.Backend.Targeting.BtRootModel EndGetBasketTargets(System.IAsyncResult result) {
                object[] _args = new object[0];
                TopDown.FacingServer.Backend.Targeting.BtRootModel _result = ((TopDown.FacingServer.Backend.Targeting.BtRootModel)(base.EndInvoke("GetBasketTargets", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRecalculateBasketTargets(TopDown.FacingServer.Backend.Targeting.BtRootModel model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("RecalculateBasketTargets", _args, callback, asyncState);
                return _result;
            }
            
            public TopDown.FacingServer.Backend.Targeting.BtRootModel EndRecalculateBasketTargets(System.IAsyncResult result) {
                object[] _args = new object[0];
                TopDown.FacingServer.Backend.Targeting.BtRootModel _result = ((TopDown.FacingServer.Backend.Targeting.BtRootModel)(base.EndInvoke("RecalculateBasketTargets", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveBasketTargets(TopDown.FacingServer.Backend.Targeting.BtRootModel model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("SaveBasketTargets", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.IssueModel> EndSaveBasketTargets(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.IssueModel> _result = ((System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.IssueModel>)(base.EndInvoke("SaveBasketTargets", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetBottomUpPortfolioPicker(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetBottomUpPortfolioPicker", _args, callback, asyncState);
                return _result;
            }
            
            public TopDown.FacingServer.Backend.Targeting.BuPickerModel EndGetBottomUpPortfolioPicker(System.IAsyncResult result) {
                object[] _args = new object[0];
                TopDown.FacingServer.Backend.Targeting.BuPickerModel _result = ((TopDown.FacingServer.Backend.Targeting.BuPickerModel)(base.EndInvoke("GetBottomUpPortfolioPicker", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetBottomUpModel(string bottomUpPortfolioId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = bottomUpPortfolioId;
                System.IAsyncResult _result = base.BeginInvoke("GetBottomUpModel", _args, callback, asyncState);
                return _result;
            }
            
            public TopDown.FacingServer.Backend.Targeting.BuRootModel EndGetBottomUpModel(System.IAsyncResult result) {
                object[] _args = new object[0];
                TopDown.FacingServer.Backend.Targeting.BuRootModel _result = ((TopDown.FacingServer.Backend.Targeting.BuRootModel)(base.EndInvoke("GetBottomUpModel", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRecalculateBottomUp(TopDown.FacingServer.Backend.Targeting.BuRootModel model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("RecalculateBottomUp", _args, callback, asyncState);
                return _result;
            }
            
            public TopDown.FacingServer.Backend.Targeting.BuRootModel EndRecalculateBottomUp(System.IAsyncResult result) {
                object[] _args = new object[0];
                TopDown.FacingServer.Backend.Targeting.BuRootModel _result = ((TopDown.FacingServer.Backend.Targeting.BuRootModel)(base.EndInvoke("RecalculateBottomUp", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveBottomUp(TopDown.FacingServer.Backend.Targeting.BuRootModel model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("SaveBottomUp", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.IssueModel> EndSaveBottomUp(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.IssueModel> _result = ((System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.IssueModel>)(base.EndInvoke("SaveBottomUp", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRequestCommentsForBasketPortfolioSecurityTarget(int basketId, string broadGlbalActivePortfolioId, string securityId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = basketId;
                _args[1] = broadGlbalActivePortfolioId;
                _args[2] = securityId;
                System.IAsyncResult _result = base.BeginInvoke("RequestCommentsForBasketPortfolioSecurityTarget", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.CommentModel> EndRequestCommentsForBasketPortfolioSecurityTarget(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.CommentModel> _result = ((System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.CommentModel>)(base.EndInvoke("RequestCommentsForBasketPortfolioSecurityTarget", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRequestCommentsForTargetingTypeBasketBase(int targetingTypeGroupId, int basketId, string securityId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = targetingTypeGroupId;
                _args[1] = basketId;
                _args[2] = securityId;
                System.IAsyncResult _result = base.BeginInvoke("RequestCommentsForTargetingTypeBasketBase", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.CommentModel> EndRequestCommentsForTargetingTypeBasketBase(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.CommentModel> _result = ((System.Collections.ObjectModel.ObservableCollection<TopDown.FacingServer.Backend.Targeting.CommentModel>)(base.EndInvoke("RequestCommentsForTargetingTypeBasketBase", _args, result)));
                return _result;
            }
        }
    }
}
