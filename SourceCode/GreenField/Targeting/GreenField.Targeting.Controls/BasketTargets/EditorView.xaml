<UserControl x:Class="GreenField.Targeting.Controls.BasketTargets.EditorView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:sdk="http://schemas.microsoft.com/winfx/2006/xaml/presentation/sdk"
    xmlns:toolkit="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Input.Toolkit"
    xmlns:mine="clr-namespace:GreenField.Targeting.Controls.BasketTargets"
    xmlns:local="clr-namespace:GreenField.Targeting.Controls"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:data="clr-namespace:System.Windows.Data;assembly=System.Windows"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    mc:Ignorable="d" d:DesignHeight="300" d:DesignWidth="400">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/GreenField.Targeting.Controls;component/CommonTemplates.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <mine:CellTemplateSelector x:Key="nameCellTemplateSelector">
                <mine:CellTemplateSelector.TotalTemplate>
                    <DataTemplate>
                        <TextBlock Style="{StaticResource nicelyMarginedTextboxStyle}" FontWeight="Bold">Total</TextBlock>
                    </DataTemplate>
                </mine:CellTemplateSelector.TotalTemplate>
                <mine:CellTemplateSelector.SecurityTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Security.Name}" Style="{StaticResource nicelyMarginedTextboxStyle}" >
                            <toolkit:ContextMenuService.ContextMenu>
                                <toolkit:ContextMenu>
                                    <toolkit:MenuItem Header="Reset to base" CommandParameter="{Binding}" Click="WhenSecurityResetToBase" />
                                    <toolkit:MenuItem Header="Restore to unedited" CommandParameter="{Binding}" Click="WhenSecurityRestoreToUnedited" />
                                </toolkit:ContextMenu>
                            </toolkit:ContextMenuService.ContextMenu>
                        </TextBlock>
                    </DataTemplate>
                </mine:CellTemplateSelector.SecurityTemplate>
            </mine:CellTemplateSelector>

            <mine:CellTemplateSelector x:Key="benchmarkCellTemplateSelector" >
                <mine:CellTemplateSelector.TotalTemplate>
                    <DataTemplate>
                        <ContentControl Content="{Binding BenchmarkTotal}" ContentTemplate="{StaticResource valueTemplate}" Style="{StaticResource valueContentStyle}"/>
                    </DataTemplate>
                </mine:CellTemplateSelector.TotalTemplate>
                <mine:CellTemplateSelector.SecurityTemplate>
                    <DataTemplate>
                        <ContentControl Content="{Binding Benchmark}" ContentTemplate="{StaticResource valueTemplate}" Style="{StaticResource valueContentStyle}"/>
                    </DataTemplate>
                </mine:CellTemplateSelector.SecurityTemplate>
            </mine:CellTemplateSelector>

            <mine:CellTemplateSelector x:Key="baseActiveCellTemplateSelector" >
                <mine:CellTemplateSelector.TotalTemplate>
                    <DataTemplate>
                        <ContentControl Content="{Binding BaseActiveTotal}" ContentTemplate="{StaticResource valueTemplate}" Style="{StaticResource valueContentStyle}"/>
                    </DataTemplate>
                </mine:CellTemplateSelector.TotalTemplate>
                <mine:CellTemplateSelector.SecurityTemplate>
                    <DataTemplate>
                        <ContentControl Content="{Binding BaseActive}" ContentTemplate="{StaticResource valueTemplate}" Style="{StaticResource valueContentStyle}"/>
                    </DataTemplate>
                </mine:CellTemplateSelector.SecurityTemplate>
            </mine:CellTemplateSelector>

            <mine:CellTemplateSelector x:Key="baseCellTemplateSelector">
                <mine:CellTemplateSelector.TotalTemplate>
                    <DataTemplate>
                        <ContentControl Content="{Binding BaseTotal}" ContentTemplate="{StaticResource valueTemplate}" Style="{StaticResource valueContentStyle}"/>
                    </DataTemplate>
                </mine:CellTemplateSelector.TotalTemplate>
                <mine:CellTemplateSelector.SecurityTemplate>
                    <DataTemplate>
                        <ContentControl Content="{Binding Base}" ContentTemplate="{StaticResource editableValueTemplate}" Style="{StaticResource editableValueContentStyle}" />
                    </DataTemplate>
                </mine:CellTemplateSelector.SecurityTemplate>
            </mine:CellTemplateSelector>

            <mine:RootModelToPortfolioTargetTotalConverter x:Key="rootModelToPortfolioTargetTotalConverter" />
            <mine:SecurityModelToPortfolioTargetConverter x:Key="securityModelToPortfolioTargetConverter" />

            <mine:CellTemplateSelector x:Key="portfolioTargetTemplateSelector">
                <mine:CellTemplateSelector.SecurityTemplate>
                    <DataTemplate>
                        <ContentControl Content="{Binding Converter={StaticResource securityModelToPortfolioTargetConverter}}" ContentTemplate="{StaticResource editableValueTemplate}" Style="{StaticResource editableValueContentStyle}" />
                    </DataTemplate>
                </mine:CellTemplateSelector.SecurityTemplate>
                <mine:CellTemplateSelector.TotalTemplate>
                    <DataTemplate>
                        <ContentControl Content="{Binding Converter={StaticResource rootModelToPortfolioTargetTotalConverter}}" ContentTemplate="{StaticResource valueTemplate}" Style="{StaticResource valueContentStyle}" />
                    </DataTemplate>
                </mine:CellTemplateSelector.TotalTemplate>
            </mine:CellTemplateSelector>


            <mine:CellTemplateSelector x:Key="tickerCellTemplateSelector">
                <mine:CellTemplateSelector.SecurityTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Security.Ticker}" Style="{StaticResource nicelyMarginedTextboxStyle}" />
                    </DataTemplate>
                </mine:CellTemplateSelector.SecurityTemplate>
                <mine:CellTemplateSelector.TotalTemplate>
                    <DataTemplate></DataTemplate>
                </mine:CellTemplateSelector.TotalTemplate>
            </mine:CellTemplateSelector>


            <Style TargetType="sdk:DataGridColumnHeader" x:Key="headerStyle">
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <TextBlock Text="{Binding Name}" >
                                <toolkit:ContextMenuService.ContextMenu>
                                    <toolkit:ContextMenu>
                                        <toolkit:MenuItem Header="Reset to base" CommandParameter="{Binding Index}" Click="WhenResetToBase" />
                                        <toolkit:MenuItem Header="Restore to unedited" CommandParameter="{Binding Index}" Click="WhenRestoreToUnedited" />
                                    </toolkit:ContextMenu>
                                </toolkit:ContextMenuService.ContextMenu>
                            </TextBlock>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


        </ResourceDictionary>
    </UserControl.Resources>

    <StackPanel Orientation="Vertical">

        <sdk:DataGrid ItemsSource="{Binding Lines}" AutoGenerateColumns="False" FrozenColumnCount="5" x:Name="grid">
            <sdk:DataGrid.Columns>

                <sdk:DataGridTemplateColumn Header="Security">
                    <sdk:DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ContentControl Content="{Binding}" ContentTemplate="{Binding Converter={StaticResource nameCellTemplateSelector}}"  Style="{StaticResource valueContentStyle}" />
                        </DataTemplate>
                    </sdk:DataGridTemplateColumn.CellTemplate>
                </sdk:DataGridTemplateColumn>

                <sdk:DataGridTemplateColumn Header="Ticker">
                    <sdk:DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ContentControl Content="{Binding}" ContentTemplate="{Binding Converter={StaticResource tickerCellTemplateSelector}}" />
                        </DataTemplate>
                    </sdk:DataGridTemplateColumn.CellTemplate>
                </sdk:DataGridTemplateColumn>

                <sdk:DataGridTemplateColumn Header="Benchmark">
                    <sdk:DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ContentControl Content="{Binding}" ContentTemplate="{Binding Converter={StaticResource benchmarkCellTemplateSelector}}" Style="{StaticResource valueContentStyle}" />
                        </DataTemplate>
                    </sdk:DataGridTemplateColumn.CellTemplate>
                </sdk:DataGridTemplateColumn>

                <sdk:DataGridTemplateColumn Header="Base" CellStyle="{StaticResource editableValueCellStyle}">
                    <sdk:DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ContentControl Content="{Binding}" ContentTemplate="{Binding Converter={StaticResource baseCellTemplateSelector}}" Style="{StaticResource editableValueContentStyle}" />
                        </DataTemplate>
                    </sdk:DataGridTemplateColumn.CellTemplate>
                </sdk:DataGridTemplateColumn>

                <sdk:DataGridTemplateColumn Header="Base Active" >
                    <sdk:DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ContentControl Content="{Binding}" ContentTemplate="{Binding Converter={StaticResource baseActiveCellTemplateSelector}}" Style="{StaticResource valueContentStyle}" />
                        </DataTemplate>
                    </sdk:DataGridTemplateColumn.CellTemplate>
                </sdk:DataGridTemplateColumn>

            </sdk:DataGrid.Columns>



            <i:Interaction.Behaviors>
                <mine:DataGridDynamicColumnsBehavior
                    HeaderStyle="{StaticResource headerStyle}"
                    ColumnsData="{Binding Portfolios}"
                    AreEmptyColumnShown="{Binding AreEmptyColumnsShown}"
                    
                >
                    <mine:DataGridDynamicColumnsBehavior.CellTemplate>
                        <DataTemplate>
                            <!-- the Content="{Binding}" is defined in the code so don't bother setting it here in XAML, it will be overriden -->
                            <ContentControl ContentTemplate="{Binding Converter={StaticResource portfolioTargetTemplateSelector}}" Style="{StaticResource editableValueContentStyle}" />
                        </DataTemplate>
                    </mine:DataGridDynamicColumnsBehavior.CellTemplate>
                </mine:DataGridDynamicColumnsBehavior>
            </i:Interaction.Behaviors>

        </sdk:DataGrid>

    </StackPanel>

</UserControl>
