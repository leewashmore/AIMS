<UserControl
    x:Class="GreenField.Targeting.Controls.BroadGlobalActive.EditorView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:k="http://schemas.telerik.com/2008/xaml/presentation"
    xmlns:mine="clr-namespace:GreenField.Targeting.Controls.BroadGlobalActive"
	xmlns:sdk="http://schemas.microsoft.com/winfx/2006/xaml/presentation/sdk"
    xmlns:local="clr-namespace:GreenField.Targeting.Controls"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    mc:Ignorable="d" d:DesignHeight="300" d:DesignWidth="400"
>

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/GreenField.Targeting.Controls;component/CommonTemplates.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <local:IntToLeftPaddingConverter x:Key="levelToPaddingConverter" />

            <!-- name cell template selector -->
            <mine:GlobalResidentToDataTemplateConverter x:Key="nameCellTemplateSelector">

                <mine:GlobalResidentToDataTemplateConverter.DefaultTemplate>
                    <DataTemplate>
                        <TextBlock Padding="{Binding Level, Converter={StaticResource levelToPaddingConverter}, ConverterParameter=20}" />
                    </DataTemplate>
                </mine:GlobalResidentToDataTemplateConverter.DefaultTemplate>

                <mine:GlobalResidentToDataTemplateConverter.BasketRegionTemplate>
                    <DataTemplate>
                        <Button>
                            <Button.Template>
                                <ControlTemplate>
                                    <TextBlock Text="{Binding Basket.Name}" Padding="{Binding Level, Converter={StaticResource levelToPaddingConverter}, ConverterParameter=20}" />
                                </ControlTemplate>
                            </Button.Template>
                            <i:Interaction.Behaviors>
                                <local:ToggleBehavior Switch="{Binding IsExpanded, Mode=TwoWay}" />
                            </i:Interaction.Behaviors>
                        </Button>
                    </DataTemplate>
                </mine:GlobalResidentToDataTemplateConverter.BasketRegionTemplate>

                <mine:GlobalResidentToDataTemplateConverter.BasketCountryTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Basket.Country.Name}" Padding="{Binding Level, Converter={StaticResource levelToPaddingConverter}, ConverterParameter=20}" />
                    </DataTemplate>
                </mine:GlobalResidentToDataTemplateConverter.BasketCountryTemplate>

                <mine:GlobalResidentToDataTemplateConverter.RegionTemplate>
                    <DataTemplate>
                        <Button>
                            <Button.Template>
                                <ControlTemplate>
                                    <TextBlock Text="{Binding Name}" Padding="{Binding Level, Converter={StaticResource levelToPaddingConverter}, ConverterParameter=20}" />
                                </ControlTemplate>
                            </Button.Template>
                            <i:Interaction.Behaviors>
                                <local:ToggleBehavior Switch="{Binding IsExpanded, Mode=TwoWay}" />
                            </i:Interaction.Behaviors>
                        </Button>
                    </DataTemplate>
                </mine:GlobalResidentToDataTemplateConverter.RegionTemplate>

                <mine:GlobalResidentToDataTemplateConverter.CountryTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Country.Name}" Padding="{Binding Level, Converter={StaticResource levelToPaddingConverter}, ConverterParameter=20}" />
                    </DataTemplate>
                </mine:GlobalResidentToDataTemplateConverter.CountryTemplate>

                <mine:GlobalResidentToDataTemplateConverter.OtherTemplate>
                    <DataTemplate>
                        <Button>
                            <Button.Template>
                                <ControlTemplate>
                                    <TextBlock Padding="{Binding Level, Converter={StaticResource levelToPaddingConverter}, ConverterParameter=20}" >Other</TextBlock>
                                </ControlTemplate>
                            </Button.Template>
                            <i:Interaction.Behaviors>
                                <local:ToggleBehavior Switch="{Binding IsExpanded, Mode=TwoWay}" />
                            </i:Interaction.Behaviors>
                        </Button>
                        
                        
                    </DataTemplate>
                </mine:GlobalResidentToDataTemplateConverter.OtherTemplate>

                <mine:GlobalResidentToDataTemplateConverter.CashLineTemplate>
                    <DataTemplate>
                        <TextBlock Style="{StaticResource nicelyMarginedTextboxStyle}">Cash</TextBlock>
                    </DataTemplate>
                </mine:GlobalResidentToDataTemplateConverter.CashLineTemplate>

                <mine:GlobalResidentToDataTemplateConverter.TotalLineTemplate>
                    <DataTemplate>
                        <TextBlock Style="{StaticResource nicelyMarginedTextboxStyle}">Total</TextBlock>
                    </DataTemplate>
                </mine:GlobalResidentToDataTemplateConverter.TotalLineTemplate>

                <mine:GlobalResidentToDataTemplateConverter.UnsavedBasketCountryTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Country.Name}" Padding="{Binding Level, Converter={StaticResource levelToPaddingConverter}, ConverterParameter=20}" />
                    </DataTemplate>
                </mine:GlobalResidentToDataTemplateConverter.UnsavedBasketCountryTemplate>

            </mine:GlobalResidentToDataTemplateConverter>

            <mine:GlobalResidentToDataTemplateConverter x:Key="baseTemplateSelector"
                BasketCountryTemplate="{StaticResource editableValueTemplate}"
                BasketRegionTemplate="{StaticResource editableValueTemplate}"
                UnsavedBasketCountryTemplate="{StaticResource editableValueTemplate}"
                DefaultTemplate="{StaticResource valueTemplate}"
            >
            </mine:GlobalResidentToDataTemplateConverter>


            <DataTemplate x:Key="portfolioAdjustmentTemplate">
                <ContentControl Content="{Binding PortfolioAdjustment}" ContentTemplate="{StaticResource editableValueTemplate}" Style="{StaticResource editableValueContentStyle}" />
            </DataTemplate>

            <mine:GlobalResidentToDataTemplateConverter x:Key="portfolioAdjustmentTemplateSelector"
                BasketCountryTemplate="{StaticResource portfolioAdjustmentTemplate}"
                BasketRegionTemplate="{StaticResource portfolioAdjustmentTemplate}"
                UnsavedBasketCountryTemplate="{StaticResource portfolioAdjustmentTemplate}"
            >
                <mine:GlobalResidentToDataTemplateConverter.DefaultTemplate>
                    <DataTemplate />
                </mine:GlobalResidentToDataTemplateConverter.DefaultTemplate>
            </mine:GlobalResidentToDataTemplateConverter>
            
            
        </ResourceDictionary>
    </UserControl.Resources>

    <i:Interaction.Behaviors>
        <local:ShowCommentsWindowBehavior Comments="{Binding Comments}" />
    </i:Interaction.Behaviors>

    <Grid Background="White">

        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">

            <sdk:DataGrid AutoGenerateColumns="false" ItemsSource="{Binding Residents}">
                <i:Interaction.Behaviors>
                    <local:DataGridRowVisibilityBehavior  />
                </i:Interaction.Behaviors>
                <sdk:DataGrid.Columns>

                    <sdk:DataGridTemplateColumn Width="*" Header="Name">
                        <sdk:DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ContentControl
                                    Content="{Binding}"
                                    ContentTemplate="{Binding Converter={StaticResource nameCellTemplateSelector}}"
                                    HorizontalAlignment="Stretch"
                                    HorizontalContentAlignment="Stretch"
								/>
                            </DataTemplate>
                        </sdk:DataGridTemplateColumn.CellTemplate>

                    </sdk:DataGridTemplateColumn>

                    <sdk:DataGridTemplateColumn Header="Benchmark" CellStyle="{StaticResource valueCellStyle}" >
                        <sdk:DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ContentControl Content="{Binding Benchmark}" ContentTemplate="{StaticResource valueTemplate}" Style="{StaticResource valueContentStyle}" />
                            </DataTemplate>
                        </sdk:DataGridTemplateColumn.CellTemplate>
                    </sdk:DataGridTemplateColumn>

                    <local:EditableColumn Header="Base" CellStyle="{StaticResource editableValueCellStyle}">
                        <local:EditableColumn.CellTemplate>
                            <DataTemplate>
                                <ContentControl
                                    Content="{Binding Base}"
                                    ContentTemplate="{Binding Converter={StaticResource baseTemplateSelector}}"
                                    Style="{StaticResource editableValueContentStyle}"
								/>
                            </DataTemplate>
                        </local:EditableColumn.CellTemplate>
                    </local:EditableColumn>

                    <sdk:DataGridTemplateColumn Header="Base Active" CellStyle="{StaticResource valueCellStyle}">
                        <sdk:DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ContentControl Content="{Binding BaseActive}" ContentTemplate="{StaticResource valueTemplate}" Style="{StaticResource valueContentStyle}" />
                            </DataTemplate>
                        </sdk:DataGridTemplateColumn.CellTemplate>
                    </sdk:DataGridTemplateColumn>

                    <sdk:DataGridTemplateColumn Header="Overlay" CellStyle="{StaticResource valueCellStyle}">
                        <sdk:DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ContentControl Content="{Binding Overlay}" ContentTemplate="{StaticResource valueTemplate}" Style="{StaticResource valueContentStyle}" />
                            </DataTemplate>
                        </sdk:DataGridTemplateColumn.CellTemplate>
                    </sdk:DataGridTemplateColumn>

                    <sdk:DataGridTemplateColumn Header="Portfolio Adj" CellStyle="{StaticResource editableValueCellStyle}">
                        <sdk:DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ContentControl Content="{Binding}" ContentTemplate="{Binding Converter={StaticResource portfolioAdjustmentTemplateSelector}}" Style="{StaticResource editableValueContentStyle}" />
                            </DataTemplate>
                        </sdk:DataGridTemplateColumn.CellTemplate>
                    </sdk:DataGridTemplateColumn>

                    <sdk:DataGridTemplateColumn Header="Portfolio Scaled" CellStyle="{StaticResource valueCellStyle}">
                        <sdk:DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ContentControl Content="{Binding PortfolioScaled}" ContentTemplate="{StaticResource valueTemplate}" Style="{StaticResource valueContentStyle}"/>
                            </DataTemplate>
                        </sdk:DataGridTemplateColumn.CellTemplate>
                    </sdk:DataGridTemplateColumn>

                    <sdk:DataGridTemplateColumn Header="True Exposure" CellStyle="{StaticResource valueCellStyle}">
                        <sdk:DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ContentControl Content="{Binding TrueExposure}" ContentTemplate="{StaticResource valueTemplate}" Style="{StaticResource valueContentStyle}"/>
                            </DataTemplate>
                        </sdk:DataGridTemplateColumn.CellTemplate>
                    </sdk:DataGridTemplateColumn>


                    <sdk:DataGridTemplateColumn Header="True Active" CellStyle="{StaticResource valueCellStyle}">
                        <sdk:DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ContentControl Content="{Binding TrueActive}" ContentTemplate="{StaticResource valueTemplate}" Style="{StaticResource valueContentStyle}"/>
                            </DataTemplate>
                        </sdk:DataGridTemplateColumn.CellTemplate>
                    </sdk:DataGridTemplateColumn>

                </sdk:DataGrid.Columns>

            </sdk:DataGrid>

        </Grid>
    </Grid>

</UserControl>
