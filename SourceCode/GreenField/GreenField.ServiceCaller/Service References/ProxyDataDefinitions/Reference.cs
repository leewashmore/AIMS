//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.261
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace GreenField.ServiceCaller.ProxyDataDefinitions {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SecurityOverviewData", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.DataContracts")]
    public partial class SecurityOverviewData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CountryField;
        
        private string CurrencyField;
        
        private string DescriptionField;
        
        private string FiscalYearEndField;
        
        private string IndustryField;
        
        private string IssueNameField;
        
        private string PrimaryAnalystField;
        
        private string SectorField;
        
        private string SubIndustryField;
        
        private string TickerField;
        
        private string WebsiteField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FiscalYearEnd {
            get {
                return this.FiscalYearEndField;
            }
            set {
                if ((object.ReferenceEquals(this.FiscalYearEndField, value) != true)) {
                    this.FiscalYearEndField = value;
                    this.RaisePropertyChanged("FiscalYearEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Industry {
            get {
                return this.IndustryField;
            }
            set {
                if ((object.ReferenceEquals(this.IndustryField, value) != true)) {
                    this.IndustryField = value;
                    this.RaisePropertyChanged("Industry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IssueName {
            get {
                return this.IssueNameField;
            }
            set {
                if ((object.ReferenceEquals(this.IssueNameField, value) != true)) {
                    this.IssueNameField = value;
                    this.RaisePropertyChanged("IssueName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryAnalyst {
            get {
                return this.PrimaryAnalystField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryAnalystField, value) != true)) {
                    this.PrimaryAnalystField = value;
                    this.RaisePropertyChanged("PrimaryAnalyst");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sector {
            get {
                return this.SectorField;
            }
            set {
                if ((object.ReferenceEquals(this.SectorField, value) != true)) {
                    this.SectorField = value;
                    this.RaisePropertyChanged("Sector");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubIndustry {
            get {
                return this.SubIndustryField;
            }
            set {
                if ((object.ReferenceEquals(this.SubIndustryField, value) != true)) {
                    this.SubIndustryField = value;
                    this.RaisePropertyChanged("SubIndustry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ticker {
            get {
                return this.TickerField;
            }
            set {
                if ((object.ReferenceEquals(this.TickerField, value) != true)) {
                    this.TickerField = value;
                    this.RaisePropertyChanged("Ticker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Website {
            get {
                return this.WebsiteField;
            }
            set {
                if ((object.ReferenceEquals(this.WebsiteField, value) != true)) {
                    this.WebsiteField = value;
                    this.RaisePropertyChanged("Website");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntitySelectionData", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.DataContracts")]
    public partial class EntitySelectionData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string InstrumentIDField;
        
        private string LongNameField;
        
        private string SecurityTypeField;
        
        private string ShortNameField;
        
        private int SortOrderField;
        
        private string TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InstrumentID {
            get {
                return this.InstrumentIDField;
            }
            set {
                if ((object.ReferenceEquals(this.InstrumentIDField, value) != true)) {
                    this.InstrumentIDField = value;
                    this.RaisePropertyChanged("InstrumentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LongName {
            get {
                return this.LongNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LongNameField, value) != true)) {
                    this.LongNameField = value;
                    this.RaisePropertyChanged("LongName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityType {
            get {
                return this.SecurityTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityTypeField, value) != true)) {
                    this.SecurityTypeField = value;
                    this.RaisePropertyChanged("SecurityType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortName {
            get {
                return this.ShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortNameField, value) != true)) {
                    this.ShortNameField = value;
                    this.RaisePropertyChanged("ShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SortOrder {
            get {
                return this.SortOrderField;
            }
            set {
                if ((this.SortOrderField.Equals(value) != true)) {
                    this.SortOrderField = value;
                    this.RaisePropertyChanged("SortOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PricingReferenceData", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.DataContracts")]
    public partial class PricingReferenceData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private decimal AdjustedDollarPriceField;
        
        private GreenField.ServiceCaller.ProxyDataDefinitions.Brush ChartColorField;
        
        private decimal DailyClosingPriceField;
        
        private decimal DailyGrossReturnField;
        
        private decimal DailyPriceReturnField;
        
        private decimal DailySpotFXField;
        
        private System.DateTime FromDateField;
        
        private decimal IndexedPriceField;
        
        private string InstrumentIDField;
        
        private string IssueNameField;
        
        private string TickerField;
        
        private string TypeField;
        
        private decimal VolumeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AdjustedDollarPrice {
            get {
                return this.AdjustedDollarPriceField;
            }
            set {
                if ((this.AdjustedDollarPriceField.Equals(value) != true)) {
                    this.AdjustedDollarPriceField = value;
                    this.RaisePropertyChanged("AdjustedDollarPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GreenField.ServiceCaller.ProxyDataDefinitions.Brush ChartColor {
            get {
                return this.ChartColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ChartColorField, value) != true)) {
                    this.ChartColorField = value;
                    this.RaisePropertyChanged("ChartColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DailyClosingPrice {
            get {
                return this.DailyClosingPriceField;
            }
            set {
                if ((this.DailyClosingPriceField.Equals(value) != true)) {
                    this.DailyClosingPriceField = value;
                    this.RaisePropertyChanged("DailyClosingPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DailyGrossReturn {
            get {
                return this.DailyGrossReturnField;
            }
            set {
                if ((this.DailyGrossReturnField.Equals(value) != true)) {
                    this.DailyGrossReturnField = value;
                    this.RaisePropertyChanged("DailyGrossReturn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DailyPriceReturn {
            get {
                return this.DailyPriceReturnField;
            }
            set {
                if ((this.DailyPriceReturnField.Equals(value) != true)) {
                    this.DailyPriceReturnField = value;
                    this.RaisePropertyChanged("DailyPriceReturn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DailySpotFX {
            get {
                return this.DailySpotFXField;
            }
            set {
                if ((this.DailySpotFXField.Equals(value) != true)) {
                    this.DailySpotFXField = value;
                    this.RaisePropertyChanged("DailySpotFX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FromDate {
            get {
                return this.FromDateField;
            }
            set {
                if ((this.FromDateField.Equals(value) != true)) {
                    this.FromDateField = value;
                    this.RaisePropertyChanged("FromDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal IndexedPrice {
            get {
                return this.IndexedPriceField;
            }
            set {
                if ((this.IndexedPriceField.Equals(value) != true)) {
                    this.IndexedPriceField = value;
                    this.RaisePropertyChanged("IndexedPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InstrumentID {
            get {
                return this.InstrumentIDField;
            }
            set {
                if ((object.ReferenceEquals(this.InstrumentIDField, value) != true)) {
                    this.InstrumentIDField = value;
                    this.RaisePropertyChanged("InstrumentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IssueName {
            get {
                return this.IssueNameField;
            }
            set {
                if ((object.ReferenceEquals(this.IssueNameField, value) != true)) {
                    this.IssueNameField = value;
                    this.RaisePropertyChanged("IssueName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ticker {
            get {
                return this.TickerField;
            }
            set {
                if ((object.ReferenceEquals(this.TickerField, value) != true)) {
                    this.TickerField = value;
                    this.RaisePropertyChanged("Ticker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Volume {
            get {
                return this.VolumeField;
            }
            set {
                if ((this.VolumeField.Equals(value) != true)) {
                    this.VolumeField = value;
                    this.RaisePropertyChanged("Volume");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Brush", Namespace="http://schemas.datacontract.org/2004/07/System.Drawing")]
    public partial class Brush : GreenField.ServiceCaller.ProxyDataDefinitions.MarshalByRefObject {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MarshalByRefObject", Namespace="http://schemas.datacontract.org/2004/07/System")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.ProxyDataDefinitions.Brush))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.UserBenchmarkPreference>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.ProxyDataDefinitions.UserBenchmarkPreference))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.SecurityOverviewData>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.ProxyDataDefinitions.SecurityOverviewData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.EntitySelectionData>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.ProxyDataDefinitions.EntitySelectionData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.PricingReferenceData>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.ProxyDataDefinitions.PricingReferenceData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.ProxyDataDefinitions.MarketCapitalizationData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.AssetAllocationData>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.ProxyDataDefinitions.AssetAllocationData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.SectorBreakdownData>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.ProxyDataDefinitions.SectorBreakdownData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RegionBreakdownData>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.ProxyDataDefinitions.RegionBreakdownData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.TopHoldingsData>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.ProxyDataDefinitions.TopHoldingsData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.IndexConstituentsData>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.ProxyDataDefinitions.IndexConstituentsData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.MorningSnapshotData>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.ProxyDataDefinitions.MorningSnapshotData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceSectorData>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceSectorData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceActivePositionData>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceActivePositionData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceSecurityData>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceSecurityData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceData>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceCountrySpecificData>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceCountrySpecificData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.PerformanceGraphData>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.ProxyDataDefinitions.PerformanceGraphData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.PerformanceGridData>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.ProxyDataDefinitions.PerformanceGridData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.AttributionData>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.ProxyDataDefinitions.AttributionData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.UnrealizedGainLossData>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.ProxyDataDefinitions.UnrealizedGainLossData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.HoldingsPercentageData>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.ProxyDataDefinitions.HoldingsPercentageData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.TopBenchmarkSecuritiesData>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.ProxyDataDefinitions.TopBenchmarkSecuritiesData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.PortfolioRiskReturnData>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.ProxyDataDefinitions.PortfolioRiskReturnData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.HeatMapData>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.ProxyDataDefinitions.HeatMapData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.ProxyDataDefinitions.PerformanceType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.ProxyDataDefinitions.ComplexObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.ProxyDataDefinitions.StructuralObject))]
    public partial class MarshalByRefObject : object, System.ComponentModel.INotifyPropertyChanged {
        
        private object @__identityField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public object @__identity {
            get {
                return this.@__identityField;
            }
            set {
                if ((object.ReferenceEquals(this.@__identityField, value) != true)) {
                    this.@__identityField = value;
                    this.RaisePropertyChanged("__identity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserBenchmarkPreference", Namespace="http://schemas.datacontract.org/2004/07/GreenField.DAL", IsReference=true)]
    public partial class UserBenchmarkPreference : GreenField.ServiceCaller.ProxyDataDefinitions.ComplexObject {
        
        private string BenchmarkNameField;
        
        private System.Nullable<int> BenchmarkOrderField;
        
        private string BenchmarkReturnTypeField;
        
        private string GroupNameField;
        
        private int GroupOrderField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BenchmarkName {
            get {
                return this.BenchmarkNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BenchmarkNameField, value) != true)) {
                    this.BenchmarkNameField = value;
                    this.RaisePropertyChanged("BenchmarkName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BenchmarkOrder {
            get {
                return this.BenchmarkOrderField;
            }
            set {
                if ((this.BenchmarkOrderField.Equals(value) != true)) {
                    this.BenchmarkOrderField = value;
                    this.RaisePropertyChanged("BenchmarkOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BenchmarkReturnType {
            get {
                return this.BenchmarkReturnTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.BenchmarkReturnTypeField, value) != true)) {
                    this.BenchmarkReturnTypeField = value;
                    this.RaisePropertyChanged("BenchmarkReturnType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupName {
            get {
                return this.GroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNameField, value) != true)) {
                    this.GroupNameField = value;
                    this.RaisePropertyChanged("GroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GroupOrder {
            get {
                return this.GroupOrderField;
            }
            set {
                if ((this.GroupOrderField.Equals(value) != true)) {
                    this.GroupOrderField = value;
                    this.RaisePropertyChanged("GroupOrder");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FundSelectionData", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.DataContracts")]
    public partial class FundSelectionData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CategoryField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BenchmarkSelectionData", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.DataContracts")]
    public partial class BenchmarkSelectionData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MarketCapitalizationData", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.DataContracts")]
    public partial class MarketCapitalizationData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double BenchmarkLargeShareField;
        
        private double BenchmarkMediumShareField;
        
        private double BenchmarkMegaShareField;
        
        private double BenchmarkMicroShareField;
        
        private double BenchmarkSmallShareField;
        
        private long BenchmarkWeightedAverageField;
        
        private long BenchmarkWeightedMedianField;
        
        private string LargeLowerLimitField;
        
        private string MediumLowerLimitField;
        
        private string MegaLowerLimitField;
        
        private double PortfolioLargeShareField;
        
        private double PortfolioMediumShareField;
        
        private double PortfolioMegaShareField;
        
        private double PortfolioMicroShareField;
        
        private double PortfolioSmallShareField;
        
        private long PortfolioWeightedAverageField;
        
        private long PortfolioWeightedMedianField;
        
        private string SmallLowerLimitField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double BenchmarkLargeShare {
            get {
                return this.BenchmarkLargeShareField;
            }
            set {
                if ((this.BenchmarkLargeShareField.Equals(value) != true)) {
                    this.BenchmarkLargeShareField = value;
                    this.RaisePropertyChanged("BenchmarkLargeShare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double BenchmarkMediumShare {
            get {
                return this.BenchmarkMediumShareField;
            }
            set {
                if ((this.BenchmarkMediumShareField.Equals(value) != true)) {
                    this.BenchmarkMediumShareField = value;
                    this.RaisePropertyChanged("BenchmarkMediumShare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double BenchmarkMegaShare {
            get {
                return this.BenchmarkMegaShareField;
            }
            set {
                if ((this.BenchmarkMegaShareField.Equals(value) != true)) {
                    this.BenchmarkMegaShareField = value;
                    this.RaisePropertyChanged("BenchmarkMegaShare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double BenchmarkMicroShare {
            get {
                return this.BenchmarkMicroShareField;
            }
            set {
                if ((this.BenchmarkMicroShareField.Equals(value) != true)) {
                    this.BenchmarkMicroShareField = value;
                    this.RaisePropertyChanged("BenchmarkMicroShare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double BenchmarkSmallShare {
            get {
                return this.BenchmarkSmallShareField;
            }
            set {
                if ((this.BenchmarkSmallShareField.Equals(value) != true)) {
                    this.BenchmarkSmallShareField = value;
                    this.RaisePropertyChanged("BenchmarkSmallShare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BenchmarkWeightedAverage {
            get {
                return this.BenchmarkWeightedAverageField;
            }
            set {
                if ((this.BenchmarkWeightedAverageField.Equals(value) != true)) {
                    this.BenchmarkWeightedAverageField = value;
                    this.RaisePropertyChanged("BenchmarkWeightedAverage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BenchmarkWeightedMedian {
            get {
                return this.BenchmarkWeightedMedianField;
            }
            set {
                if ((this.BenchmarkWeightedMedianField.Equals(value) != true)) {
                    this.BenchmarkWeightedMedianField = value;
                    this.RaisePropertyChanged("BenchmarkWeightedMedian");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LargeLowerLimit {
            get {
                return this.LargeLowerLimitField;
            }
            set {
                if ((object.ReferenceEquals(this.LargeLowerLimitField, value) != true)) {
                    this.LargeLowerLimitField = value;
                    this.RaisePropertyChanged("LargeLowerLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MediumLowerLimit {
            get {
                return this.MediumLowerLimitField;
            }
            set {
                if ((object.ReferenceEquals(this.MediumLowerLimitField, value) != true)) {
                    this.MediumLowerLimitField = value;
                    this.RaisePropertyChanged("MediumLowerLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MegaLowerLimit {
            get {
                return this.MegaLowerLimitField;
            }
            set {
                if ((object.ReferenceEquals(this.MegaLowerLimitField, value) != true)) {
                    this.MegaLowerLimitField = value;
                    this.RaisePropertyChanged("MegaLowerLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PortfolioLargeShare {
            get {
                return this.PortfolioLargeShareField;
            }
            set {
                if ((this.PortfolioLargeShareField.Equals(value) != true)) {
                    this.PortfolioLargeShareField = value;
                    this.RaisePropertyChanged("PortfolioLargeShare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PortfolioMediumShare {
            get {
                return this.PortfolioMediumShareField;
            }
            set {
                if ((this.PortfolioMediumShareField.Equals(value) != true)) {
                    this.PortfolioMediumShareField = value;
                    this.RaisePropertyChanged("PortfolioMediumShare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PortfolioMegaShare {
            get {
                return this.PortfolioMegaShareField;
            }
            set {
                if ((this.PortfolioMegaShareField.Equals(value) != true)) {
                    this.PortfolioMegaShareField = value;
                    this.RaisePropertyChanged("PortfolioMegaShare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PortfolioMicroShare {
            get {
                return this.PortfolioMicroShareField;
            }
            set {
                if ((this.PortfolioMicroShareField.Equals(value) != true)) {
                    this.PortfolioMicroShareField = value;
                    this.RaisePropertyChanged("PortfolioMicroShare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PortfolioSmallShare {
            get {
                return this.PortfolioSmallShareField;
            }
            set {
                if ((this.PortfolioSmallShareField.Equals(value) != true)) {
                    this.PortfolioSmallShareField = value;
                    this.RaisePropertyChanged("PortfolioSmallShare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PortfolioWeightedAverage {
            get {
                return this.PortfolioWeightedAverageField;
            }
            set {
                if ((this.PortfolioWeightedAverageField.Equals(value) != true)) {
                    this.PortfolioWeightedAverageField = value;
                    this.RaisePropertyChanged("PortfolioWeightedAverage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PortfolioWeightedMedian {
            get {
                return this.PortfolioWeightedMedianField;
            }
            set {
                if ((this.PortfolioWeightedMedianField.Equals(value) != true)) {
                    this.PortfolioWeightedMedianField = value;
                    this.RaisePropertyChanged("PortfolioWeightedMedian");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SmallLowerLimit {
            get {
                return this.SmallLowerLimitField;
            }
            set {
                if ((object.ReferenceEquals(this.SmallLowerLimitField, value) != true)) {
                    this.SmallLowerLimitField = value;
                    this.RaisePropertyChanged("SmallLowerLimit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AssetAllocationData", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.DataContracts")]
    public partial class AssetAllocationData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<double> BenchmarkShareField;
        
        private System.Nullable<double> BetShareField;
        
        private string CountryField;
        
        private System.Nullable<double> ModelShareField;
        
        private System.Nullable<double> PortfolioShareField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> BenchmarkShare {
            get {
                return this.BenchmarkShareField;
            }
            set {
                if ((this.BenchmarkShareField.Equals(value) != true)) {
                    this.BenchmarkShareField = value;
                    this.RaisePropertyChanged("BenchmarkShare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> BetShare {
            get {
                return this.BetShareField;
            }
            set {
                if ((this.BetShareField.Equals(value) != true)) {
                    this.BetShareField = value;
                    this.RaisePropertyChanged("BetShare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> ModelShare {
            get {
                return this.ModelShareField;
            }
            set {
                if ((this.ModelShareField.Equals(value) != true)) {
                    this.ModelShareField = value;
                    this.RaisePropertyChanged("ModelShare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> PortfolioShare {
            get {
                return this.PortfolioShareField;
            }
            set {
                if ((this.PortfolioShareField.Equals(value) != true)) {
                    this.PortfolioShareField = value;
                    this.RaisePropertyChanged("PortfolioShare");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SectorBreakdownData", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.DataContracts")]
    public partial class SectorBreakdownData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<double> BenchmarkShareField;
        
        private System.Nullable<double> BetShareField;
        
        private string IndustryField;
        
        private System.Nullable<double> PortfolioShareField;
        
        private string SectorField;
        
        private string SecurityField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> BenchmarkShare {
            get {
                return this.BenchmarkShareField;
            }
            set {
                if ((this.BenchmarkShareField.Equals(value) != true)) {
                    this.BenchmarkShareField = value;
                    this.RaisePropertyChanged("BenchmarkShare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> BetShare {
            get {
                return this.BetShareField;
            }
            set {
                if ((this.BetShareField.Equals(value) != true)) {
                    this.BetShareField = value;
                    this.RaisePropertyChanged("BetShare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Industry {
            get {
                return this.IndustryField;
            }
            set {
                if ((object.ReferenceEquals(this.IndustryField, value) != true)) {
                    this.IndustryField = value;
                    this.RaisePropertyChanged("Industry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> PortfolioShare {
            get {
                return this.PortfolioShareField;
            }
            set {
                if ((this.PortfolioShareField.Equals(value) != true)) {
                    this.PortfolioShareField = value;
                    this.RaisePropertyChanged("PortfolioShare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sector {
            get {
                return this.SectorField;
            }
            set {
                if ((object.ReferenceEquals(this.SectorField, value) != true)) {
                    this.SectorField = value;
                    this.RaisePropertyChanged("Sector");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Security {
            get {
                return this.SecurityField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityField, value) != true)) {
                    this.SecurityField = value;
                    this.RaisePropertyChanged("Security");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegionBreakdownData", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.DataContracts")]
    public partial class RegionBreakdownData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<double> BenchmarkShareField;
        
        private System.Nullable<double> BetShareField;
        
        private string CountryField;
        
        private System.Nullable<double> PortfolioShareField;
        
        private string RegionField;
        
        private string SecurityField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> BenchmarkShare {
            get {
                return this.BenchmarkShareField;
            }
            set {
                if ((this.BenchmarkShareField.Equals(value) != true)) {
                    this.BenchmarkShareField = value;
                    this.RaisePropertyChanged("BenchmarkShare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> BetShare {
            get {
                return this.BetShareField;
            }
            set {
                if ((this.BetShareField.Equals(value) != true)) {
                    this.BetShareField = value;
                    this.RaisePropertyChanged("BetShare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> PortfolioShare {
            get {
                return this.PortfolioShareField;
            }
            set {
                if ((this.PortfolioShareField.Equals(value) != true)) {
                    this.PortfolioShareField = value;
                    this.RaisePropertyChanged("PortfolioShare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Region {
            get {
                return this.RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionField, value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Security {
            get {
                return this.SecurityField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityField, value) != true)) {
                    this.SecurityField = value;
                    this.RaisePropertyChanged("Security");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TopHoldingsData", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.DataContracts")]
    public partial class TopHoldingsData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<double> BenchmarkShareField;
        
        private System.Nullable<double> BetShareField;
        
        private string HoldingField;
        
        private System.Nullable<float> MarketValueField;
        
        private System.Nullable<double> PortfolioShareField;
        
        private string TickerField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> BenchmarkShare {
            get {
                return this.BenchmarkShareField;
            }
            set {
                if ((this.BenchmarkShareField.Equals(value) != true)) {
                    this.BenchmarkShareField = value;
                    this.RaisePropertyChanged("BenchmarkShare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> BetShare {
            get {
                return this.BetShareField;
            }
            set {
                if ((this.BetShareField.Equals(value) != true)) {
                    this.BetShareField = value;
                    this.RaisePropertyChanged("BetShare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Holding {
            get {
                return this.HoldingField;
            }
            set {
                if ((object.ReferenceEquals(this.HoldingField, value) != true)) {
                    this.HoldingField = value;
                    this.RaisePropertyChanged("Holding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<float> MarketValue {
            get {
                return this.MarketValueField;
            }
            set {
                if ((this.MarketValueField.Equals(value) != true)) {
                    this.MarketValueField = value;
                    this.RaisePropertyChanged("MarketValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> PortfolioShare {
            get {
                return this.PortfolioShareField;
            }
            set {
                if ((this.PortfolioShareField.Equals(value) != true)) {
                    this.PortfolioShareField = value;
                    this.RaisePropertyChanged("PortfolioShare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ticker {
            get {
                return this.TickerField;
            }
            set {
                if ((object.ReferenceEquals(this.TickerField, value) != true)) {
                    this.TickerField = value;
                    this.RaisePropertyChanged("Ticker");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IndexConstituentsData", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.DataContracts")]
    public partial class IndexConstituentsData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ConstituentNameField;
        
        private string CountryField;
        
        private double DailyReturnUSDField;
        
        private string IndustryField;
        
        private string RegionField;
        
        private string SectorField;
        
        private string SubIndustryField;
        
        private System.Nullable<double> WeightField;
        
        private System.Nullable<double> WeightCountryField;
        
        private System.Nullable<double> WeightIndustryField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConstituentName {
            get {
                return this.ConstituentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ConstituentNameField, value) != true)) {
                    this.ConstituentNameField = value;
                    this.RaisePropertyChanged("ConstituentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double DailyReturnUSD {
            get {
                return this.DailyReturnUSDField;
            }
            set {
                if ((this.DailyReturnUSDField.Equals(value) != true)) {
                    this.DailyReturnUSDField = value;
                    this.RaisePropertyChanged("DailyReturnUSD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Industry {
            get {
                return this.IndustryField;
            }
            set {
                if ((object.ReferenceEquals(this.IndustryField, value) != true)) {
                    this.IndustryField = value;
                    this.RaisePropertyChanged("Industry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Region {
            get {
                return this.RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionField, value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sector {
            get {
                return this.SectorField;
            }
            set {
                if ((object.ReferenceEquals(this.SectorField, value) != true)) {
                    this.SectorField = value;
                    this.RaisePropertyChanged("Sector");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubIndustry {
            get {
                return this.SubIndustryField;
            }
            set {
                if ((object.ReferenceEquals(this.SubIndustryField, value) != true)) {
                    this.SubIndustryField = value;
                    this.RaisePropertyChanged("SubIndustry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> WeightCountry {
            get {
                return this.WeightCountryField;
            }
            set {
                if ((this.WeightCountryField.Equals(value) != true)) {
                    this.WeightCountryField = value;
                    this.RaisePropertyChanged("WeightCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> WeightIndustry {
            get {
                return this.WeightIndustryField;
            }
            set {
                if ((this.WeightIndustryField.Equals(value) != true)) {
                    this.WeightIndustryField = value;
                    this.RaisePropertyChanged("WeightIndustry");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MorningSnapshotData", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.DataContracts")]
    public partial class MorningSnapshotData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<double> DTDField;
        
        private System.Nullable<double> IIIPreviousYearPriceField;
        
        private System.Nullable<double> IIPreviousYearPriceField;
        
        private System.Nullable<double> MTDField;
        
        private GreenField.ServiceCaller.ProxyDataDefinitions.UserBenchmarkPreference MorningSnapshotPreferenceInfoField;
        
        private System.Nullable<double> PreviousYearPriceField;
        
        private System.Nullable<double> QTDField;
        
        private System.Nullable<double> WTDField;
        
        private System.Nullable<double> YTDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> DTD {
            get {
                return this.DTDField;
            }
            set {
                if ((this.DTDField.Equals(value) != true)) {
                    this.DTDField = value;
                    this.RaisePropertyChanged("DTD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> IIIPreviousYearPrice {
            get {
                return this.IIIPreviousYearPriceField;
            }
            set {
                if ((this.IIIPreviousYearPriceField.Equals(value) != true)) {
                    this.IIIPreviousYearPriceField = value;
                    this.RaisePropertyChanged("IIIPreviousYearPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> IIPreviousYearPrice {
            get {
                return this.IIPreviousYearPriceField;
            }
            set {
                if ((this.IIPreviousYearPriceField.Equals(value) != true)) {
                    this.IIPreviousYearPriceField = value;
                    this.RaisePropertyChanged("IIPreviousYearPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> MTD {
            get {
                return this.MTDField;
            }
            set {
                if ((this.MTDField.Equals(value) != true)) {
                    this.MTDField = value;
                    this.RaisePropertyChanged("MTD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GreenField.ServiceCaller.ProxyDataDefinitions.UserBenchmarkPreference MorningSnapshotPreferenceInfo {
            get {
                return this.MorningSnapshotPreferenceInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.MorningSnapshotPreferenceInfoField, value) != true)) {
                    this.MorningSnapshotPreferenceInfoField = value;
                    this.RaisePropertyChanged("MorningSnapshotPreferenceInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> PreviousYearPrice {
            get {
                return this.PreviousYearPriceField;
            }
            set {
                if ((this.PreviousYearPriceField.Equals(value) != true)) {
                    this.PreviousYearPriceField = value;
                    this.RaisePropertyChanged("PreviousYearPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> QTD {
            get {
                return this.QTDField;
            }
            set {
                if ((this.QTDField.Equals(value) != true)) {
                    this.QTDField = value;
                    this.RaisePropertyChanged("QTD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> WTD {
            get {
                return this.WTDField;
            }
            set {
                if ((this.WTDField.Equals(value) != true)) {
                    this.WTDField = value;
                    this.RaisePropertyChanged("WTD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> YTD {
            get {
                return this.YTDField;
            }
            set {
                if ((this.YTDField.Equals(value) != true)) {
                    this.YTDField = value;
                    this.RaisePropertyChanged("YTD");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RelativePerformanceSectorData", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.DataContracts")]
    public partial class RelativePerformanceSectorData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int SectorIDField;
        
        private string SectorNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SectorID {
            get {
                return this.SectorIDField;
            }
            set {
                if ((this.SectorIDField.Equals(value) != true)) {
                    this.SectorIDField = value;
                    this.RaisePropertyChanged("SectorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SectorName {
            get {
                return this.SectorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SectorNameField, value) != true)) {
                    this.SectorNameField = value;
                    this.RaisePropertyChanged("SectorName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RelativePerformanceActivePositionData", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.DataContracts")]
    public partial class RelativePerformanceActivePositionData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<double> ActivePositionField;
        
        private System.Nullable<double> BenchmarkWeightField;
        
        private string EntityField;
        
        private System.Nullable<double> FundWeightField;
        
        private System.Nullable<double> MarketValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> ActivePosition {
            get {
                return this.ActivePositionField;
            }
            set {
                if ((this.ActivePositionField.Equals(value) != true)) {
                    this.ActivePositionField = value;
                    this.RaisePropertyChanged("ActivePosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> BenchmarkWeight {
            get {
                return this.BenchmarkWeightField;
            }
            set {
                if ((this.BenchmarkWeightField.Equals(value) != true)) {
                    this.BenchmarkWeightField = value;
                    this.RaisePropertyChanged("BenchmarkWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Entity {
            get {
                return this.EntityField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityField, value) != true)) {
                    this.EntityField = value;
                    this.RaisePropertyChanged("Entity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> FundWeight {
            get {
                return this.FundWeightField;
            }
            set {
                if ((this.FundWeightField.Equals(value) != true)) {
                    this.FundWeightField = value;
                    this.RaisePropertyChanged("FundWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> MarketValue {
            get {
                return this.MarketValueField;
            }
            set {
                if ((this.MarketValueField.Equals(value) != true)) {
                    this.MarketValueField = value;
                    this.RaisePropertyChanged("MarketValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RelativePerformanceSecurityData", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.DataContracts")]
    public partial class RelativePerformanceSecurityData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double SecurityActivePositionField;
        
        private double SecurityAlphaField;
        
        private string SecurityCountryIDField;
        
        private string SecurityNameField;
        
        private string SecuritySectorNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SecurityActivePosition {
            get {
                return this.SecurityActivePositionField;
            }
            set {
                if ((this.SecurityActivePositionField.Equals(value) != true)) {
                    this.SecurityActivePositionField = value;
                    this.RaisePropertyChanged("SecurityActivePosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SecurityAlpha {
            get {
                return this.SecurityAlphaField;
            }
            set {
                if ((this.SecurityAlphaField.Equals(value) != true)) {
                    this.SecurityAlphaField = value;
                    this.RaisePropertyChanged("SecurityAlpha");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityCountryID {
            get {
                return this.SecurityCountryIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityCountryIDField, value) != true)) {
                    this.SecurityCountryIDField = value;
                    this.RaisePropertyChanged("SecurityCountryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityName {
            get {
                return this.SecurityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityNameField, value) != true)) {
                    this.SecurityNameField = value;
                    this.RaisePropertyChanged("SecurityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecuritySectorName {
            get {
                return this.SecuritySectorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SecuritySectorNameField, value) != true)) {
                    this.SecuritySectorNameField = value;
                    this.RaisePropertyChanged("SecuritySectorName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RelativePerformanceData", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.DataContracts")]
    public partial class RelativePerformanceData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<double> AggregateCountryActivePositionField;
        
        private System.Nullable<double> AggregateCountryAlphaField;
        
        private System.Nullable<double> AggregateCountryBenchmarkShareField;
        
        private System.Nullable<double> AggregateCountryPortfolioShareField;
        
        private string CountryIDField;
        
        private System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceCountrySpecificData> RelativePerformanceCountrySpecificInfoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> AggregateCountryActivePosition {
            get {
                return this.AggregateCountryActivePositionField;
            }
            set {
                if ((this.AggregateCountryActivePositionField.Equals(value) != true)) {
                    this.AggregateCountryActivePositionField = value;
                    this.RaisePropertyChanged("AggregateCountryActivePosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> AggregateCountryAlpha {
            get {
                return this.AggregateCountryAlphaField;
            }
            set {
                if ((this.AggregateCountryAlphaField.Equals(value) != true)) {
                    this.AggregateCountryAlphaField = value;
                    this.RaisePropertyChanged("AggregateCountryAlpha");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> AggregateCountryBenchmarkShare {
            get {
                return this.AggregateCountryBenchmarkShareField;
            }
            set {
                if ((this.AggregateCountryBenchmarkShareField.Equals(value) != true)) {
                    this.AggregateCountryBenchmarkShareField = value;
                    this.RaisePropertyChanged("AggregateCountryBenchmarkShare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> AggregateCountryPortfolioShare {
            get {
                return this.AggregateCountryPortfolioShareField;
            }
            set {
                if ((this.AggregateCountryPortfolioShareField.Equals(value) != true)) {
                    this.AggregateCountryPortfolioShareField = value;
                    this.RaisePropertyChanged("AggregateCountryPortfolioShare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryID {
            get {
                return this.CountryIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryIDField, value) != true)) {
                    this.CountryIDField = value;
                    this.RaisePropertyChanged("CountryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceCountrySpecificData> RelativePerformanceCountrySpecificInfo {
            get {
                return this.RelativePerformanceCountrySpecificInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.RelativePerformanceCountrySpecificInfoField, value) != true)) {
                    this.RelativePerformanceCountrySpecificInfoField = value;
                    this.RaisePropertyChanged("RelativePerformanceCountrySpecificInfo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RelativePerformanceCountrySpecificData", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.DataContracts")]
    public partial class RelativePerformanceCountrySpecificData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<double> ActivePositionField;
        
        private System.Nullable<double> AlphaField;
        
        private System.Nullable<double> BenchmarkShareField;
        
        private System.Nullable<double> PortfolioShareField;
        
        private int SectorIDField;
        
        private string SectorNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> ActivePosition {
            get {
                return this.ActivePositionField;
            }
            set {
                if ((this.ActivePositionField.Equals(value) != true)) {
                    this.ActivePositionField = value;
                    this.RaisePropertyChanged("ActivePosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Alpha {
            get {
                return this.AlphaField;
            }
            set {
                if ((this.AlphaField.Equals(value) != true)) {
                    this.AlphaField = value;
                    this.RaisePropertyChanged("Alpha");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> BenchmarkShare {
            get {
                return this.BenchmarkShareField;
            }
            set {
                if ((this.BenchmarkShareField.Equals(value) != true)) {
                    this.BenchmarkShareField = value;
                    this.RaisePropertyChanged("BenchmarkShare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> PortfolioShare {
            get {
                return this.PortfolioShareField;
            }
            set {
                if ((this.PortfolioShareField.Equals(value) != true)) {
                    this.PortfolioShareField = value;
                    this.RaisePropertyChanged("PortfolioShare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SectorID {
            get {
                return this.SectorIDField;
            }
            set {
                if ((this.SectorIDField.Equals(value) != true)) {
                    this.SectorIDField = value;
                    this.RaisePropertyChanged("SectorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SectorName {
            get {
                return this.SectorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SectorNameField, value) != true)) {
                    this.SectorNameField = value;
                    this.RaisePropertyChanged("SectorName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PerformanceGraphData", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.DataContracts")]
    public partial class PerformanceGraphData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string BENCHMARK_IDField;
        
        private double BENCHMARK_PERFORMANCEField;
        
        private System.DateTime EFFECTIVE_DATEField;
        
        private double FIFTH_YEARField;
        
        private double FIRST_YEARField;
        
        private double MTDField;
        
        private string PORTFOLIO_IDField;
        
        private double PORTFOLIO_PERFORMANCEField;
        
        private double QTDField;
        
        private double TENTH_YEARField;
        
        private double THIRD_YEARField;
        
        private double YTDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BENCHMARK_ID {
            get {
                return this.BENCHMARK_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.BENCHMARK_IDField, value) != true)) {
                    this.BENCHMARK_IDField = value;
                    this.RaisePropertyChanged("BENCHMARK_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double BENCHMARK_PERFORMANCE {
            get {
                return this.BENCHMARK_PERFORMANCEField;
            }
            set {
                if ((this.BENCHMARK_PERFORMANCEField.Equals(value) != true)) {
                    this.BENCHMARK_PERFORMANCEField = value;
                    this.RaisePropertyChanged("BENCHMARK_PERFORMANCE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EFFECTIVE_DATE {
            get {
                return this.EFFECTIVE_DATEField;
            }
            set {
                if ((this.EFFECTIVE_DATEField.Equals(value) != true)) {
                    this.EFFECTIVE_DATEField = value;
                    this.RaisePropertyChanged("EFFECTIVE_DATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FIFTH_YEAR {
            get {
                return this.FIFTH_YEARField;
            }
            set {
                if ((this.FIFTH_YEARField.Equals(value) != true)) {
                    this.FIFTH_YEARField = value;
                    this.RaisePropertyChanged("FIFTH_YEAR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FIRST_YEAR {
            get {
                return this.FIRST_YEARField;
            }
            set {
                if ((this.FIRST_YEARField.Equals(value) != true)) {
                    this.FIRST_YEARField = value;
                    this.RaisePropertyChanged("FIRST_YEAR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MTD {
            get {
                return this.MTDField;
            }
            set {
                if ((this.MTDField.Equals(value) != true)) {
                    this.MTDField = value;
                    this.RaisePropertyChanged("MTD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PORTFOLIO_ID {
            get {
                return this.PORTFOLIO_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.PORTFOLIO_IDField, value) != true)) {
                    this.PORTFOLIO_IDField = value;
                    this.RaisePropertyChanged("PORTFOLIO_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PORTFOLIO_PERFORMANCE {
            get {
                return this.PORTFOLIO_PERFORMANCEField;
            }
            set {
                if ((this.PORTFOLIO_PERFORMANCEField.Equals(value) != true)) {
                    this.PORTFOLIO_PERFORMANCEField = value;
                    this.RaisePropertyChanged("PORTFOLIO_PERFORMANCE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double QTD {
            get {
                return this.QTDField;
            }
            set {
                if ((this.QTDField.Equals(value) != true)) {
                    this.QTDField = value;
                    this.RaisePropertyChanged("QTD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TENTH_YEAR {
            get {
                return this.TENTH_YEARField;
            }
            set {
                if ((this.TENTH_YEARField.Equals(value) != true)) {
                    this.TENTH_YEARField = value;
                    this.RaisePropertyChanged("TENTH_YEAR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double THIRD_YEAR {
            get {
                return this.THIRD_YEARField;
            }
            set {
                if ((this.THIRD_YEARField.Equals(value) != true)) {
                    this.THIRD_YEARField = value;
                    this.RaisePropertyChanged("THIRD_YEAR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double YTD {
            get {
                return this.YTDField;
            }
            set {
                if ((this.YTDField.Equals(value) != true)) {
                    this.YTDField = value;
                    this.RaisePropertyChanged("YTD");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PerformanceGridData", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.DataContracts")]
    public partial class PerformanceGridData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double FIFTH_YEARField;
        
        private double FIRST_YEARField;
        
        private double MTDField;
        
        private double QTDField;
        
        private double TENTH_YEARField;
        
        private double THIRD_YEARField;
        
        private double YTDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FIFTH_YEAR {
            get {
                return this.FIFTH_YEARField;
            }
            set {
                if ((this.FIFTH_YEARField.Equals(value) != true)) {
                    this.FIFTH_YEARField = value;
                    this.RaisePropertyChanged("FIFTH_YEAR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FIRST_YEAR {
            get {
                return this.FIRST_YEARField;
            }
            set {
                if ((this.FIRST_YEARField.Equals(value) != true)) {
                    this.FIRST_YEARField = value;
                    this.RaisePropertyChanged("FIRST_YEAR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MTD {
            get {
                return this.MTDField;
            }
            set {
                if ((this.MTDField.Equals(value) != true)) {
                    this.MTDField = value;
                    this.RaisePropertyChanged("MTD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double QTD {
            get {
                return this.QTDField;
            }
            set {
                if ((this.QTDField.Equals(value) != true)) {
                    this.QTDField = value;
                    this.RaisePropertyChanged("QTD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TENTH_YEAR {
            get {
                return this.TENTH_YEARField;
            }
            set {
                if ((this.TENTH_YEARField.Equals(value) != true)) {
                    this.TENTH_YEARField = value;
                    this.RaisePropertyChanged("TENTH_YEAR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double THIRD_YEAR {
            get {
                return this.THIRD_YEARField;
            }
            set {
                if ((this.THIRD_YEARField.Equals(value) != true)) {
                    this.THIRD_YEARField = value;
                    this.RaisePropertyChanged("THIRD_YEAR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double YTD {
            get {
                return this.YTDField;
            }
            set {
                if ((this.YTDField.Equals(value) != true)) {
                    this.YTDField = value;
                    this.RaisePropertyChanged("YTD");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AttributionData", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.DataContracts")]
    public partial class AttributionData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double ASSET_ALLOCATIONField;
        
        private double BENCHMARK_RETURNField;
        
        private double BENCHMARK_WEIGHTField;
        
        private string COUNTRY_IDField;
        
        private string COUNTRY_NAMEField;
        
        private double PORTFOLIO_RETURNField;
        
        private double PORTFOLIO_WEIGHTField;
        
        private double STOCK_SELECTION_TOTALField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ASSET_ALLOCATION {
            get {
                return this.ASSET_ALLOCATIONField;
            }
            set {
                if ((this.ASSET_ALLOCATIONField.Equals(value) != true)) {
                    this.ASSET_ALLOCATIONField = value;
                    this.RaisePropertyChanged("ASSET_ALLOCATION");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double BENCHMARK_RETURN {
            get {
                return this.BENCHMARK_RETURNField;
            }
            set {
                if ((this.BENCHMARK_RETURNField.Equals(value) != true)) {
                    this.BENCHMARK_RETURNField = value;
                    this.RaisePropertyChanged("BENCHMARK_RETURN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double BENCHMARK_WEIGHT {
            get {
                return this.BENCHMARK_WEIGHTField;
            }
            set {
                if ((this.BENCHMARK_WEIGHTField.Equals(value) != true)) {
                    this.BENCHMARK_WEIGHTField = value;
                    this.RaisePropertyChanged("BENCHMARK_WEIGHT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COUNTRY_ID {
            get {
                return this.COUNTRY_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.COUNTRY_IDField, value) != true)) {
                    this.COUNTRY_IDField = value;
                    this.RaisePropertyChanged("COUNTRY_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COUNTRY_NAME {
            get {
                return this.COUNTRY_NAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.COUNTRY_NAMEField, value) != true)) {
                    this.COUNTRY_NAMEField = value;
                    this.RaisePropertyChanged("COUNTRY_NAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PORTFOLIO_RETURN {
            get {
                return this.PORTFOLIO_RETURNField;
            }
            set {
                if ((this.PORTFOLIO_RETURNField.Equals(value) != true)) {
                    this.PORTFOLIO_RETURNField = value;
                    this.RaisePropertyChanged("PORTFOLIO_RETURN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PORTFOLIO_WEIGHT {
            get {
                return this.PORTFOLIO_WEIGHTField;
            }
            set {
                if ((this.PORTFOLIO_WEIGHTField.Equals(value) != true)) {
                    this.PORTFOLIO_WEIGHTField = value;
                    this.RaisePropertyChanged("PORTFOLIO_WEIGHT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double STOCK_SELECTION_TOTAL {
            get {
                return this.STOCK_SELECTION_TOTALField;
            }
            set {
                if ((this.STOCK_SELECTION_TOTALField.Equals(value) != true)) {
                    this.STOCK_SELECTION_TOTALField = value;
                    this.RaisePropertyChanged("STOCK_SELECTION_TOTAL");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UnrealizedGainLossData", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.DataContracts")]
    public partial class UnrealizedGainLossData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double AdjustedPriceField;
        
        private decimal CostField;
        
        private decimal DailyClosingPriceField;
        
        private decimal DailyGrossReturnField;
        
        private decimal DailyPriceReturnField;
        
        private decimal DailySpotFXField;
        
        private System.DateTime FromDateField;
        
        private string InstrumentIDField;
        
        private string IssueNameField;
        
        private double MovingAverageField;
        
        private double NinetyDayWtAvgField;
        
        private string TickerField;
        
        private string TypeField;
        
        private double UnrealizedGainLossField;
        
        private decimal VolumeField;
        
        private double WtAvgCostField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AdjustedPrice {
            get {
                return this.AdjustedPriceField;
            }
            set {
                if ((this.AdjustedPriceField.Equals(value) != true)) {
                    this.AdjustedPriceField = value;
                    this.RaisePropertyChanged("AdjustedPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Cost {
            get {
                return this.CostField;
            }
            set {
                if ((this.CostField.Equals(value) != true)) {
                    this.CostField = value;
                    this.RaisePropertyChanged("Cost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DailyClosingPrice {
            get {
                return this.DailyClosingPriceField;
            }
            set {
                if ((this.DailyClosingPriceField.Equals(value) != true)) {
                    this.DailyClosingPriceField = value;
                    this.RaisePropertyChanged("DailyClosingPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DailyGrossReturn {
            get {
                return this.DailyGrossReturnField;
            }
            set {
                if ((this.DailyGrossReturnField.Equals(value) != true)) {
                    this.DailyGrossReturnField = value;
                    this.RaisePropertyChanged("DailyGrossReturn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DailyPriceReturn {
            get {
                return this.DailyPriceReturnField;
            }
            set {
                if ((this.DailyPriceReturnField.Equals(value) != true)) {
                    this.DailyPriceReturnField = value;
                    this.RaisePropertyChanged("DailyPriceReturn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DailySpotFX {
            get {
                return this.DailySpotFXField;
            }
            set {
                if ((this.DailySpotFXField.Equals(value) != true)) {
                    this.DailySpotFXField = value;
                    this.RaisePropertyChanged("DailySpotFX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FromDate {
            get {
                return this.FromDateField;
            }
            set {
                if ((this.FromDateField.Equals(value) != true)) {
                    this.FromDateField = value;
                    this.RaisePropertyChanged("FromDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InstrumentID {
            get {
                return this.InstrumentIDField;
            }
            set {
                if ((object.ReferenceEquals(this.InstrumentIDField, value) != true)) {
                    this.InstrumentIDField = value;
                    this.RaisePropertyChanged("InstrumentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IssueName {
            get {
                return this.IssueNameField;
            }
            set {
                if ((object.ReferenceEquals(this.IssueNameField, value) != true)) {
                    this.IssueNameField = value;
                    this.RaisePropertyChanged("IssueName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MovingAverage {
            get {
                return this.MovingAverageField;
            }
            set {
                if ((this.MovingAverageField.Equals(value) != true)) {
                    this.MovingAverageField = value;
                    this.RaisePropertyChanged("MovingAverage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double NinetyDayWtAvg {
            get {
                return this.NinetyDayWtAvgField;
            }
            set {
                if ((this.NinetyDayWtAvgField.Equals(value) != true)) {
                    this.NinetyDayWtAvgField = value;
                    this.RaisePropertyChanged("NinetyDayWtAvg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ticker {
            get {
                return this.TickerField;
            }
            set {
                if ((object.ReferenceEquals(this.TickerField, value) != true)) {
                    this.TickerField = value;
                    this.RaisePropertyChanged("Ticker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double UnrealizedGainLoss {
            get {
                return this.UnrealizedGainLossField;
            }
            set {
                if ((this.UnrealizedGainLossField.Equals(value) != true)) {
                    this.UnrealizedGainLossField = value;
                    this.RaisePropertyChanged("UnrealizedGainLoss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Volume {
            get {
                return this.VolumeField;
            }
            set {
                if ((this.VolumeField.Equals(value) != true)) {
                    this.VolumeField = value;
                    this.RaisePropertyChanged("Volume");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double WtAvgCost {
            get {
                return this.WtAvgCostField;
            }
            set {
                if ((this.WtAvgCostField.Equals(value) != true)) {
                    this.WtAvgCostField = value;
                    this.RaisePropertyChanged("WtAvgCost");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HoldingsPercentageData", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.DataContracts")]
    public partial class HoldingsPercentageData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string BenchmarkNameField;
        
        private double BenchmarkWeightField;
        
        private System.DateTime EffectiveDateField;
        
        private string FundNameField;
        
        private double PortfolioWeightField;
        
        private string SegmentNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BenchmarkName {
            get {
                return this.BenchmarkNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BenchmarkNameField, value) != true)) {
                    this.BenchmarkNameField = value;
                    this.RaisePropertyChanged("BenchmarkName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double BenchmarkWeight {
            get {
                return this.BenchmarkWeightField;
            }
            set {
                if ((this.BenchmarkWeightField.Equals(value) != true)) {
                    this.BenchmarkWeightField = value;
                    this.RaisePropertyChanged("BenchmarkWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EffectiveDate {
            get {
                return this.EffectiveDateField;
            }
            set {
                if ((this.EffectiveDateField.Equals(value) != true)) {
                    this.EffectiveDateField = value;
                    this.RaisePropertyChanged("EffectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FundName {
            get {
                return this.FundNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FundNameField, value) != true)) {
                    this.FundNameField = value;
                    this.RaisePropertyChanged("FundName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PortfolioWeight {
            get {
                return this.PortfolioWeightField;
            }
            set {
                if ((this.PortfolioWeightField.Equals(value) != true)) {
                    this.PortfolioWeightField = value;
                    this.RaisePropertyChanged("PortfolioWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SegmentName {
            get {
                return this.SegmentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SegmentNameField, value) != true)) {
                    this.SegmentNameField = value;
                    this.RaisePropertyChanged("SegmentName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TopBenchmarkSecuritiesData", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.DataContracts")]
    public partial class TopBenchmarkSecuritiesData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string IssuerNameField;
        
        private double MTDField;
        
        private double PreviousYearField;
        
        private double QTDField;
        
        private double SecondPreviousYearField;
        
        private double ThirdPreviousYearField;
        
        private double WeightField;
        
        private double YTDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IssuerName {
            get {
                return this.IssuerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.IssuerNameField, value) != true)) {
                    this.IssuerNameField = value;
                    this.RaisePropertyChanged("IssuerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MTD {
            get {
                return this.MTDField;
            }
            set {
                if ((this.MTDField.Equals(value) != true)) {
                    this.MTDField = value;
                    this.RaisePropertyChanged("MTD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PreviousYear {
            get {
                return this.PreviousYearField;
            }
            set {
                if ((this.PreviousYearField.Equals(value) != true)) {
                    this.PreviousYearField = value;
                    this.RaisePropertyChanged("PreviousYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double QTD {
            get {
                return this.QTDField;
            }
            set {
                if ((this.QTDField.Equals(value) != true)) {
                    this.QTDField = value;
                    this.RaisePropertyChanged("QTD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SecondPreviousYear {
            get {
                return this.SecondPreviousYearField;
            }
            set {
                if ((this.SecondPreviousYearField.Equals(value) != true)) {
                    this.SecondPreviousYearField = value;
                    this.RaisePropertyChanged("SecondPreviousYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ThirdPreviousYear {
            get {
                return this.ThirdPreviousYearField;
            }
            set {
                if ((this.ThirdPreviousYearField.Equals(value) != true)) {
                    this.ThirdPreviousYearField = value;
                    this.RaisePropertyChanged("ThirdPreviousYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double YTD {
            get {
                return this.YTDField;
            }
            set {
                if ((this.YTDField.Equals(value) != true)) {
                    this.YTDField = value;
                    this.RaisePropertyChanged("YTD");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PortfolioRiskReturnData", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.DataContracts")]
    public partial class PortfolioRiskReturnData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string BenchMarkValueField;
        
        private string DataPointNameField;
        
        private string PortfolioValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BenchMarkValue {
            get {
                return this.BenchMarkValueField;
            }
            set {
                if ((object.ReferenceEquals(this.BenchMarkValueField, value) != true)) {
                    this.BenchMarkValueField = value;
                    this.RaisePropertyChanged("BenchMarkValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DataPointName {
            get {
                return this.DataPointNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DataPointNameField, value) != true)) {
                    this.DataPointNameField = value;
                    this.RaisePropertyChanged("DataPointName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PortfolioValue {
            get {
                return this.PortfolioValueField;
            }
            set {
                if ((object.ReferenceEquals(this.PortfolioValueField, value) != true)) {
                    this.PortfolioValueField = value;
                    this.RaisePropertyChanged("PortfolioValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HeatMapData", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.DataContracts")]
    public partial class HeatMapData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CountryIDField;
        
        private GreenField.ServiceCaller.ProxyDataDefinitions.PerformanceType CountryPerformanceField;
        
        private System.Nullable<double> CountryYTDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryID {
            get {
                return this.CountryIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryIDField, value) != true)) {
                    this.CountryIDField = value;
                    this.RaisePropertyChanged("CountryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GreenField.ServiceCaller.ProxyDataDefinitions.PerformanceType CountryPerformance {
            get {
                return this.CountryPerformanceField;
            }
            set {
                if ((this.CountryPerformanceField.Equals(value) != true)) {
                    this.CountryPerformanceField = value;
                    this.RaisePropertyChanged("CountryPerformance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> CountryYTD {
            get {
                return this.CountryYTDField;
            }
            set {
                if ((this.CountryYTDField.Equals(value) != true)) {
                    this.CountryYTDField = value;
                    this.RaisePropertyChanged("CountryYTD");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PerformanceType", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.DataContracts")]
    public enum PerformanceType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NO_RELATION = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UNDER_PERFORMING = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FLAT_PERFORMING = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OVER_PERFORMING = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ComplexObject", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses", IsReference=true)]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.ProxyDataDefinitions.UserBenchmarkPreference))]
    public partial class ComplexObject : GreenField.ServiceCaller.ProxyDataDefinitions.StructuralObject {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StructuralObject", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses", IsReference=true)]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.ProxyDataDefinitions.ComplexObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.ProxyDataDefinitions.UserBenchmarkPreference))]
    public partial class StructuralObject : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProxyDataDefinitions.ProxyDataOperations")]
    public interface ProxyDataOperations {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ProxyDataOperations/RetrieveSecurityReferenceData", ReplyAction="http://tempuri.org/ProxyDataOperations/RetrieveSecurityReferenceDataResponse")]
        System.IAsyncResult BeginRetrieveSecurityReferenceData(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.SecurityOverviewData> EndRetrieveSecurityReferenceData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ProxyDataOperations/RetrieveSecurityReferenceDataByTicker", ReplyAction="http://tempuri.org/ProxyDataOperations/RetrieveSecurityReferenceDataByTickerRespo" +
            "nse")]
        System.IAsyncResult BeginRetrieveSecurityReferenceDataByTicker(string ticker, System.AsyncCallback callback, object asyncState);
        
        GreenField.ServiceCaller.ProxyDataDefinitions.SecurityOverviewData EndRetrieveSecurityReferenceDataByTicker(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ProxyDataOperations/RetrievePricingReferenceData", ReplyAction="http://tempuri.org/ProxyDataOperations/RetrievePricingReferenceDataResponse")]
        System.IAsyncResult BeginRetrievePricingReferenceData(System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.EntitySelectionData> entityIdentifiers, System.DateTime startDateTime, System.DateTime endDateTime, bool totalReturnCheck, string frequencyDuration, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.PricingReferenceData> EndRetrievePricingReferenceData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ProxyDataOperations/RetrieveEntitySelectionData", ReplyAction="http://tempuri.org/ProxyDataOperations/RetrieveEntitySelectionDataResponse")]
        System.IAsyncResult BeginRetrieveEntitySelectionData(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.EntitySelectionData> EndRetrieveEntitySelectionData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ProxyDataOperations/RetrieveFundSelectionData", ReplyAction="http://tempuri.org/ProxyDataOperations/RetrieveFundSelectionDataResponse")]
        System.IAsyncResult BeginRetrieveFundSelectionData(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData> EndRetrieveFundSelectionData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ProxyDataOperations/RetrieveBenchmarkSelectionData", ReplyAction="http://tempuri.org/ProxyDataOperations/RetrieveBenchmarkSelectionDataResponse")]
        System.IAsyncResult BeginRetrieveBenchmarkSelectionData(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData> EndRetrieveBenchmarkSelectionData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ProxyDataOperations/RetrieveMarketCapitalizationData", ReplyAction="http://tempuri.org/ProxyDataOperations/RetrieveMarketCapitalizationDataResponse")]
        System.IAsyncResult BeginRetrieveMarketCapitalizationData(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, System.AsyncCallback callback, object asyncState);
        
        GreenField.ServiceCaller.ProxyDataDefinitions.MarketCapitalizationData EndRetrieveMarketCapitalizationData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ProxyDataOperations/RetrieveAssetAllocationData", ReplyAction="http://tempuri.org/ProxyDataOperations/RetrieveAssetAllocationDataResponse")]
        System.IAsyncResult BeginRetrieveAssetAllocationData(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.AssetAllocationData> EndRetrieveAssetAllocationData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ProxyDataOperations/RetrieveSectorBreakdownData", ReplyAction="http://tempuri.org/ProxyDataOperations/RetrieveSectorBreakdownDataResponse")]
        System.IAsyncResult BeginRetrieveSectorBreakdownData(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.SectorBreakdownData> EndRetrieveSectorBreakdownData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ProxyDataOperations/RetrieveRegionBreakdownData", ReplyAction="http://tempuri.org/ProxyDataOperations/RetrieveRegionBreakdownDataResponse")]
        System.IAsyncResult BeginRetrieveRegionBreakdownData(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RegionBreakdownData> EndRetrieveRegionBreakdownData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ProxyDataOperations/RetrieveTopHoldingsData", ReplyAction="http://tempuri.org/ProxyDataOperations/RetrieveTopHoldingsDataResponse")]
        System.IAsyncResult BeginRetrieveTopHoldingsData(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.TopHoldingsData> EndRetrieveTopHoldingsData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ProxyDataOperations/RetrieveIndexConstituentsData", ReplyAction="http://tempuri.org/ProxyDataOperations/RetrieveIndexConstituentsDataResponse")]
        System.IAsyncResult BeginRetrieveIndexConstituentsData(GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.IndexConstituentsData> EndRetrieveIndexConstituentsData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ProxyDataOperations/RetrieveValuesForFilters", ReplyAction="http://tempuri.org/ProxyDataOperations/RetrieveValuesForFiltersResponse")]
        System.IAsyncResult BeginRetrieveValuesForFilters(string filterType, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<string> EndRetrieveValuesForFilters(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ProxyDataOperations/RetrieveUserPreferenceBenchmarkData", ReplyAction="http://tempuri.org/ProxyDataOperations/RetrieveUserPreferenceBenchmarkDataRespons" +
            "e")]
        System.IAsyncResult BeginRetrieveUserPreferenceBenchmarkData(string userName, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.UserBenchmarkPreference> EndRetrieveUserPreferenceBenchmarkData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ProxyDataOperations/RetrieveMorningSnapshotData", ReplyAction="http://tempuri.org/ProxyDataOperations/RetrieveMorningSnapshotDataResponse")]
        System.IAsyncResult BeginRetrieveMorningSnapshotData(System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.UserBenchmarkPreference> userBenchmarkPreference, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.MorningSnapshotData> EndRetrieveMorningSnapshotData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ProxyDataOperations/AddUserPreferenceBenchmarkGroup", ReplyAction="http://tempuri.org/ProxyDataOperations/AddUserPreferenceBenchmarkGroupResponse")]
        System.IAsyncResult BeginAddUserPreferenceBenchmarkGroup(string userName, string groupName, System.AsyncCallback callback, object asyncState);
        
        bool EndAddUserPreferenceBenchmarkGroup(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ProxyDataOperations/RemoveUserPreferenceBenchmarkGroup", ReplyAction="http://tempuri.org/ProxyDataOperations/RemoveUserPreferenceBenchmarkGroupResponse" +
            "")]
        System.IAsyncResult BeginRemoveUserPreferenceBenchmarkGroup(string userName, string groupname, System.AsyncCallback callback, object asyncState);
        
        bool EndRemoveUserPreferenceBenchmarkGroup(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ProxyDataOperations/AddUserPreferenceBenchmark", ReplyAction="http://tempuri.org/ProxyDataOperations/AddUserPreferenceBenchmarkResponse")]
        System.IAsyncResult BeginAddUserPreferenceBenchmark(string userName, GreenField.ServiceCaller.ProxyDataDefinitions.UserBenchmarkPreference userBenchmarkPreference, System.AsyncCallback callback, object asyncState);
        
        bool EndAddUserPreferenceBenchmark(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ProxyDataOperations/RemoveUserPreferenceBenchmark", ReplyAction="http://tempuri.org/ProxyDataOperations/RemoveUserPreferenceBenchmarkResponse")]
        System.IAsyncResult BeginRemoveUserPreferenceBenchmark(string userName, GreenField.ServiceCaller.ProxyDataDefinitions.UserBenchmarkPreference userBenchmarkPreference, System.AsyncCallback callback, object asyncState);
        
        bool EndRemoveUserPreferenceBenchmark(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ProxyDataOperations/RetrieveRelativePerformanceSectorData", ReplyAction="http://tempuri.org/ProxyDataOperations/RetrieveRelativePerformanceSectorDataRespo" +
            "nse")]
        System.IAsyncResult BeginRetrieveRelativePerformanceSectorData(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceSectorData> EndRetrieveRelativePerformanceSectorData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ProxyDataOperations/RetrieveRelativePerformanceCountryActivePo" +
            "sitionData", ReplyAction="http://tempuri.org/ProxyDataOperations/RetrieveRelativePerformanceCountryActivePo" +
            "sitionDataResponse")]
        System.IAsyncResult BeginRetrieveRelativePerformanceCountryActivePositionData(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, string countryID, System.Nullable<int> sectorID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceActivePositionData> EndRetrieveRelativePerformanceCountryActivePositionData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ProxyDataOperations/RetrieveRelativePerformanceSectorActivePos" +
            "itionData", ReplyAction="http://tempuri.org/ProxyDataOperations/RetrieveRelativePerformanceSectorActivePos" +
            "itionDataResponse")]
        System.IAsyncResult BeginRetrieveRelativePerformanceSectorActivePositionData(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, string countryID, System.Nullable<int> sectorID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceActivePositionData> EndRetrieveRelativePerformanceSectorActivePositionData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ProxyDataOperations/RetrieveRelativePerformanceSecurityActiveP" +
            "ositionData", ReplyAction="http://tempuri.org/ProxyDataOperations/RetrieveRelativePerformanceSecurityActiveP" +
            "ositionDataResponse")]
        System.IAsyncResult BeginRetrieveRelativePerformanceSecurityActivePositionData(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, string countryID, System.Nullable<int> sectorID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceActivePositionData> EndRetrieveRelativePerformanceSecurityActivePositionData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ProxyDataOperations/RetrieveRelativePerformanceSecurityData", ReplyAction="http://tempuri.org/ProxyDataOperations/RetrieveRelativePerformanceSecurityDataRes" +
            "ponse")]
        System.IAsyncResult BeginRetrieveRelativePerformanceSecurityData(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, string countryID, System.Nullable<int> sectorID, int order, System.Nullable<int> maxRecords, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceSecurityData> EndRetrieveRelativePerformanceSecurityData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ProxyDataOperations/RetrieveRelativePerformanceData", ReplyAction="http://tempuri.org/ProxyDataOperations/RetrieveRelativePerformanceDataResponse")]
        System.IAsyncResult BeginRetrieveRelativePerformanceData(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceData> EndRetrieveRelativePerformanceData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ProxyDataOperations/RetrievePerformanceGraphData", ReplyAction="http://tempuri.org/ProxyDataOperations/RetrievePerformanceGraphDataResponse")]
        System.IAsyncResult BeginRetrievePerformanceGraphData(string nameOfFund, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.PerformanceGraphData> EndRetrievePerformanceGraphData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ProxyDataOperations/RetrievePerformanceGridData", ReplyAction="http://tempuri.org/ProxyDataOperations/RetrievePerformanceGridDataResponse")]
        System.IAsyncResult BeginRetrievePerformanceGridData(string nameOfFund, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.PerformanceGridData> EndRetrievePerformanceGridData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ProxyDataOperations/RetrieveAttributionData", ReplyAction="http://tempuri.org/ProxyDataOperations/RetrieveAttributionDataResponse")]
        System.IAsyncResult BeginRetrieveAttributionData(string nameOfFund, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.AttributionData> EndRetrieveAttributionData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ProxyDataOperations/RetrieveUnrealizedGainLossData", ReplyAction="http://tempuri.org/ProxyDataOperations/RetrieveUnrealizedGainLossDataResponse")]
        System.IAsyncResult BeginRetrieveUnrealizedGainLossData(string entityIdentifier, System.DateTime startDateTime, System.DateTime endDateTime, string frequencyInterval, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.UnrealizedGainLossData> EndRetrieveUnrealizedGainLossData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ProxyDataOperations/RetrieveHoldingsPercentageData", ReplyAction="http://tempuri.org/ProxyDataOperations/RetrieveHoldingsPercentageDataResponse")]
        System.IAsyncResult BeginRetrieveHoldingsPercentageData(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, System.DateTime effectiveDate, string filterType, string filterValue, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.HoldingsPercentageData> EndRetrieveHoldingsPercentageData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ProxyDataOperations/RetrieveHoldingsPercentageDataForRegion", ReplyAction="http://tempuri.org/ProxyDataOperations/RetrieveHoldingsPercentageDataForRegionRes" +
            "ponse")]
        System.IAsyncResult BeginRetrieveHoldingsPercentageDataForRegion(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, System.DateTime effectiveDate, string filterType, string filterValue, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.HoldingsPercentageData> EndRetrieveHoldingsPercentageDataForRegion(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ProxyDataOperations/RetrieveTopBenchmarkSecuritiesData", ReplyAction="http://tempuri.org/ProxyDataOperations/RetrieveTopBenchmarkSecuritiesDataResponse" +
            "")]
        System.IAsyncResult BeginRetrieveTopBenchmarkSecuritiesData(GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.TopBenchmarkSecuritiesData> EndRetrieveTopBenchmarkSecuritiesData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ProxyDataOperations/RetrievePortfolioRiskReturnData", ReplyAction="http://tempuri.org/ProxyDataOperations/RetrievePortfolioRiskReturnDataResponse")]
        System.IAsyncResult BeginRetrievePortfolioRiskReturnData(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.PortfolioRiskReturnData> EndRetrievePortfolioRiskReturnData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ProxyDataOperations/RetrieveHeatMapData", ReplyAction="http://tempuri.org/ProxyDataOperations/RetrieveHeatMapDataResponse")]
        System.IAsyncResult BeginRetrieveHeatMapData(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.HeatMapData> EndRetrieveHeatMapData(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ProxyDataOperationsChannel : GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrieveSecurityReferenceDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrieveSecurityReferenceDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.SecurityOverviewData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.SecurityOverviewData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrieveSecurityReferenceDataByTickerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrieveSecurityReferenceDataByTickerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public GreenField.ServiceCaller.ProxyDataDefinitions.SecurityOverviewData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((GreenField.ServiceCaller.ProxyDataDefinitions.SecurityOverviewData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrievePricingReferenceDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrievePricingReferenceDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.PricingReferenceData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.PricingReferenceData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrieveEntitySelectionDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrieveEntitySelectionDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.EntitySelectionData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.EntitySelectionData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrieveFundSelectionDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrieveFundSelectionDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrieveBenchmarkSelectionDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrieveBenchmarkSelectionDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrieveMarketCapitalizationDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrieveMarketCapitalizationDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public GreenField.ServiceCaller.ProxyDataDefinitions.MarketCapitalizationData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((GreenField.ServiceCaller.ProxyDataDefinitions.MarketCapitalizationData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrieveAssetAllocationDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrieveAssetAllocationDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.AssetAllocationData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.AssetAllocationData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrieveSectorBreakdownDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrieveSectorBreakdownDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.SectorBreakdownData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.SectorBreakdownData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrieveRegionBreakdownDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrieveRegionBreakdownDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RegionBreakdownData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RegionBreakdownData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrieveTopHoldingsDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrieveTopHoldingsDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.TopHoldingsData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.TopHoldingsData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrieveIndexConstituentsDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrieveIndexConstituentsDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.IndexConstituentsData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.IndexConstituentsData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrieveValuesForFiltersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrieveValuesForFiltersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrieveUserPreferenceBenchmarkDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrieveUserPreferenceBenchmarkDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.UserBenchmarkPreference> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.UserBenchmarkPreference>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrieveMorningSnapshotDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrieveMorningSnapshotDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.MorningSnapshotData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.MorningSnapshotData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddUserPreferenceBenchmarkGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddUserPreferenceBenchmarkGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RemoveUserPreferenceBenchmarkGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RemoveUserPreferenceBenchmarkGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddUserPreferenceBenchmarkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddUserPreferenceBenchmarkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RemoveUserPreferenceBenchmarkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RemoveUserPreferenceBenchmarkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrieveRelativePerformanceSectorDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrieveRelativePerformanceSectorDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceSectorData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceSectorData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrieveRelativePerformanceCountryActivePositionDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrieveRelativePerformanceCountryActivePositionDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceActivePositionData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceActivePositionData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrieveRelativePerformanceSectorActivePositionDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrieveRelativePerformanceSectorActivePositionDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceActivePositionData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceActivePositionData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrieveRelativePerformanceSecurityActivePositionDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrieveRelativePerformanceSecurityActivePositionDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceActivePositionData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceActivePositionData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrieveRelativePerformanceSecurityDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrieveRelativePerformanceSecurityDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceSecurityData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceSecurityData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrieveRelativePerformanceDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrieveRelativePerformanceDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrievePerformanceGraphDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrievePerformanceGraphDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.PerformanceGraphData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.PerformanceGraphData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrievePerformanceGridDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrievePerformanceGridDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.PerformanceGridData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.PerformanceGridData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrieveAttributionDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrieveAttributionDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.AttributionData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.AttributionData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrieveUnrealizedGainLossDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrieveUnrealizedGainLossDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.UnrealizedGainLossData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.UnrealizedGainLossData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrieveHoldingsPercentageDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrieveHoldingsPercentageDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.HoldingsPercentageData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.HoldingsPercentageData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrieveHoldingsPercentageDataForRegionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrieveHoldingsPercentageDataForRegionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.HoldingsPercentageData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.HoldingsPercentageData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrieveTopBenchmarkSecuritiesDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrieveTopBenchmarkSecuritiesDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.TopBenchmarkSecuritiesData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.TopBenchmarkSecuritiesData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrievePortfolioRiskReturnDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrievePortfolioRiskReturnDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.PortfolioRiskReturnData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.PortfolioRiskReturnData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrieveHeatMapDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrieveHeatMapDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.HeatMapData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.HeatMapData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProxyDataOperationsClient : System.ServiceModel.ClientBase<GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations>, GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations {
        
        private BeginOperationDelegate onBeginRetrieveSecurityReferenceDataDelegate;
        
        private EndOperationDelegate onEndRetrieveSecurityReferenceDataDelegate;
        
        private System.Threading.SendOrPostCallback onRetrieveSecurityReferenceDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrieveSecurityReferenceDataByTickerDelegate;
        
        private EndOperationDelegate onEndRetrieveSecurityReferenceDataByTickerDelegate;
        
        private System.Threading.SendOrPostCallback onRetrieveSecurityReferenceDataByTickerCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrievePricingReferenceDataDelegate;
        
        private EndOperationDelegate onEndRetrievePricingReferenceDataDelegate;
        
        private System.Threading.SendOrPostCallback onRetrievePricingReferenceDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrieveEntitySelectionDataDelegate;
        
        private EndOperationDelegate onEndRetrieveEntitySelectionDataDelegate;
        
        private System.Threading.SendOrPostCallback onRetrieveEntitySelectionDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrieveFundSelectionDataDelegate;
        
        private EndOperationDelegate onEndRetrieveFundSelectionDataDelegate;
        
        private System.Threading.SendOrPostCallback onRetrieveFundSelectionDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrieveBenchmarkSelectionDataDelegate;
        
        private EndOperationDelegate onEndRetrieveBenchmarkSelectionDataDelegate;
        
        private System.Threading.SendOrPostCallback onRetrieveBenchmarkSelectionDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrieveMarketCapitalizationDataDelegate;
        
        private EndOperationDelegate onEndRetrieveMarketCapitalizationDataDelegate;
        
        private System.Threading.SendOrPostCallback onRetrieveMarketCapitalizationDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrieveAssetAllocationDataDelegate;
        
        private EndOperationDelegate onEndRetrieveAssetAllocationDataDelegate;
        
        private System.Threading.SendOrPostCallback onRetrieveAssetAllocationDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrieveSectorBreakdownDataDelegate;
        
        private EndOperationDelegate onEndRetrieveSectorBreakdownDataDelegate;
        
        private System.Threading.SendOrPostCallback onRetrieveSectorBreakdownDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrieveRegionBreakdownDataDelegate;
        
        private EndOperationDelegate onEndRetrieveRegionBreakdownDataDelegate;
        
        private System.Threading.SendOrPostCallback onRetrieveRegionBreakdownDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrieveTopHoldingsDataDelegate;
        
        private EndOperationDelegate onEndRetrieveTopHoldingsDataDelegate;
        
        private System.Threading.SendOrPostCallback onRetrieveTopHoldingsDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrieveIndexConstituentsDataDelegate;
        
        private EndOperationDelegate onEndRetrieveIndexConstituentsDataDelegate;
        
        private System.Threading.SendOrPostCallback onRetrieveIndexConstituentsDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrieveValuesForFiltersDelegate;
        
        private EndOperationDelegate onEndRetrieveValuesForFiltersDelegate;
        
        private System.Threading.SendOrPostCallback onRetrieveValuesForFiltersCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrieveUserPreferenceBenchmarkDataDelegate;
        
        private EndOperationDelegate onEndRetrieveUserPreferenceBenchmarkDataDelegate;
        
        private System.Threading.SendOrPostCallback onRetrieveUserPreferenceBenchmarkDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrieveMorningSnapshotDataDelegate;
        
        private EndOperationDelegate onEndRetrieveMorningSnapshotDataDelegate;
        
        private System.Threading.SendOrPostCallback onRetrieveMorningSnapshotDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddUserPreferenceBenchmarkGroupDelegate;
        
        private EndOperationDelegate onEndAddUserPreferenceBenchmarkGroupDelegate;
        
        private System.Threading.SendOrPostCallback onAddUserPreferenceBenchmarkGroupCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveUserPreferenceBenchmarkGroupDelegate;
        
        private EndOperationDelegate onEndRemoveUserPreferenceBenchmarkGroupDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveUserPreferenceBenchmarkGroupCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddUserPreferenceBenchmarkDelegate;
        
        private EndOperationDelegate onEndAddUserPreferenceBenchmarkDelegate;
        
        private System.Threading.SendOrPostCallback onAddUserPreferenceBenchmarkCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveUserPreferenceBenchmarkDelegate;
        
        private EndOperationDelegate onEndRemoveUserPreferenceBenchmarkDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveUserPreferenceBenchmarkCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrieveRelativePerformanceSectorDataDelegate;
        
        private EndOperationDelegate onEndRetrieveRelativePerformanceSectorDataDelegate;
        
        private System.Threading.SendOrPostCallback onRetrieveRelativePerformanceSectorDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrieveRelativePerformanceCountryActivePositionDataDelegate;
        
        private EndOperationDelegate onEndRetrieveRelativePerformanceCountryActivePositionDataDelegate;
        
        private System.Threading.SendOrPostCallback onRetrieveRelativePerformanceCountryActivePositionDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrieveRelativePerformanceSectorActivePositionDataDelegate;
        
        private EndOperationDelegate onEndRetrieveRelativePerformanceSectorActivePositionDataDelegate;
        
        private System.Threading.SendOrPostCallback onRetrieveRelativePerformanceSectorActivePositionDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrieveRelativePerformanceSecurityActivePositionDataDelegate;
        
        private EndOperationDelegate onEndRetrieveRelativePerformanceSecurityActivePositionDataDelegate;
        
        private System.Threading.SendOrPostCallback onRetrieveRelativePerformanceSecurityActivePositionDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrieveRelativePerformanceSecurityDataDelegate;
        
        private EndOperationDelegate onEndRetrieveRelativePerformanceSecurityDataDelegate;
        
        private System.Threading.SendOrPostCallback onRetrieveRelativePerformanceSecurityDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrieveRelativePerformanceDataDelegate;
        
        private EndOperationDelegate onEndRetrieveRelativePerformanceDataDelegate;
        
        private System.Threading.SendOrPostCallback onRetrieveRelativePerformanceDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrievePerformanceGraphDataDelegate;
        
        private EndOperationDelegate onEndRetrievePerformanceGraphDataDelegate;
        
        private System.Threading.SendOrPostCallback onRetrievePerformanceGraphDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrievePerformanceGridDataDelegate;
        
        private EndOperationDelegate onEndRetrievePerformanceGridDataDelegate;
        
        private System.Threading.SendOrPostCallback onRetrievePerformanceGridDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrieveAttributionDataDelegate;
        
        private EndOperationDelegate onEndRetrieveAttributionDataDelegate;
        
        private System.Threading.SendOrPostCallback onRetrieveAttributionDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrieveUnrealizedGainLossDataDelegate;
        
        private EndOperationDelegate onEndRetrieveUnrealizedGainLossDataDelegate;
        
        private System.Threading.SendOrPostCallback onRetrieveUnrealizedGainLossDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrieveHoldingsPercentageDataDelegate;
        
        private EndOperationDelegate onEndRetrieveHoldingsPercentageDataDelegate;
        
        private System.Threading.SendOrPostCallback onRetrieveHoldingsPercentageDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrieveHoldingsPercentageDataForRegionDelegate;
        
        private EndOperationDelegate onEndRetrieveHoldingsPercentageDataForRegionDelegate;
        
        private System.Threading.SendOrPostCallback onRetrieveHoldingsPercentageDataForRegionCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrieveTopBenchmarkSecuritiesDataDelegate;
        
        private EndOperationDelegate onEndRetrieveTopBenchmarkSecuritiesDataDelegate;
        
        private System.Threading.SendOrPostCallback onRetrieveTopBenchmarkSecuritiesDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrievePortfolioRiskReturnDataDelegate;
        
        private EndOperationDelegate onEndRetrievePortfolioRiskReturnDataDelegate;
        
        private System.Threading.SendOrPostCallback onRetrievePortfolioRiskReturnDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrieveHeatMapDataDelegate;
        
        private EndOperationDelegate onEndRetrieveHeatMapDataDelegate;
        
        private System.Threading.SendOrPostCallback onRetrieveHeatMapDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ProxyDataOperationsClient() {
        }
        
        public ProxyDataOperationsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProxyDataOperationsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProxyDataOperationsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProxyDataOperationsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<RetrieveSecurityReferenceDataCompletedEventArgs> RetrieveSecurityReferenceDataCompleted;
        
        public event System.EventHandler<RetrieveSecurityReferenceDataByTickerCompletedEventArgs> RetrieveSecurityReferenceDataByTickerCompleted;
        
        public event System.EventHandler<RetrievePricingReferenceDataCompletedEventArgs> RetrievePricingReferenceDataCompleted;
        
        public event System.EventHandler<RetrieveEntitySelectionDataCompletedEventArgs> RetrieveEntitySelectionDataCompleted;
        
        public event System.EventHandler<RetrieveFundSelectionDataCompletedEventArgs> RetrieveFundSelectionDataCompleted;
        
        public event System.EventHandler<RetrieveBenchmarkSelectionDataCompletedEventArgs> RetrieveBenchmarkSelectionDataCompleted;
        
        public event System.EventHandler<RetrieveMarketCapitalizationDataCompletedEventArgs> RetrieveMarketCapitalizationDataCompleted;
        
        public event System.EventHandler<RetrieveAssetAllocationDataCompletedEventArgs> RetrieveAssetAllocationDataCompleted;
        
        public event System.EventHandler<RetrieveSectorBreakdownDataCompletedEventArgs> RetrieveSectorBreakdownDataCompleted;
        
        public event System.EventHandler<RetrieveRegionBreakdownDataCompletedEventArgs> RetrieveRegionBreakdownDataCompleted;
        
        public event System.EventHandler<RetrieveTopHoldingsDataCompletedEventArgs> RetrieveTopHoldingsDataCompleted;
        
        public event System.EventHandler<RetrieveIndexConstituentsDataCompletedEventArgs> RetrieveIndexConstituentsDataCompleted;
        
        public event System.EventHandler<RetrieveValuesForFiltersCompletedEventArgs> RetrieveValuesForFiltersCompleted;
        
        public event System.EventHandler<RetrieveUserPreferenceBenchmarkDataCompletedEventArgs> RetrieveUserPreferenceBenchmarkDataCompleted;
        
        public event System.EventHandler<RetrieveMorningSnapshotDataCompletedEventArgs> RetrieveMorningSnapshotDataCompleted;
        
        public event System.EventHandler<AddUserPreferenceBenchmarkGroupCompletedEventArgs> AddUserPreferenceBenchmarkGroupCompleted;
        
        public event System.EventHandler<RemoveUserPreferenceBenchmarkGroupCompletedEventArgs> RemoveUserPreferenceBenchmarkGroupCompleted;
        
        public event System.EventHandler<AddUserPreferenceBenchmarkCompletedEventArgs> AddUserPreferenceBenchmarkCompleted;
        
        public event System.EventHandler<RemoveUserPreferenceBenchmarkCompletedEventArgs> RemoveUserPreferenceBenchmarkCompleted;
        
        public event System.EventHandler<RetrieveRelativePerformanceSectorDataCompletedEventArgs> RetrieveRelativePerformanceSectorDataCompleted;
        
        public event System.EventHandler<RetrieveRelativePerformanceCountryActivePositionDataCompletedEventArgs> RetrieveRelativePerformanceCountryActivePositionDataCompleted;
        
        public event System.EventHandler<RetrieveRelativePerformanceSectorActivePositionDataCompletedEventArgs> RetrieveRelativePerformanceSectorActivePositionDataCompleted;
        
        public event System.EventHandler<RetrieveRelativePerformanceSecurityActivePositionDataCompletedEventArgs> RetrieveRelativePerformanceSecurityActivePositionDataCompleted;
        
        public event System.EventHandler<RetrieveRelativePerformanceSecurityDataCompletedEventArgs> RetrieveRelativePerformanceSecurityDataCompleted;
        
        public event System.EventHandler<RetrieveRelativePerformanceDataCompletedEventArgs> RetrieveRelativePerformanceDataCompleted;
        
        public event System.EventHandler<RetrievePerformanceGraphDataCompletedEventArgs> RetrievePerformanceGraphDataCompleted;
        
        public event System.EventHandler<RetrievePerformanceGridDataCompletedEventArgs> RetrievePerformanceGridDataCompleted;
        
        public event System.EventHandler<RetrieveAttributionDataCompletedEventArgs> RetrieveAttributionDataCompleted;
        
        public event System.EventHandler<RetrieveUnrealizedGainLossDataCompletedEventArgs> RetrieveUnrealizedGainLossDataCompleted;
        
        public event System.EventHandler<RetrieveHoldingsPercentageDataCompletedEventArgs> RetrieveHoldingsPercentageDataCompleted;
        
        public event System.EventHandler<RetrieveHoldingsPercentageDataForRegionCompletedEventArgs> RetrieveHoldingsPercentageDataForRegionCompleted;
        
        public event System.EventHandler<RetrieveTopBenchmarkSecuritiesDataCompletedEventArgs> RetrieveTopBenchmarkSecuritiesDataCompleted;
        
        public event System.EventHandler<RetrievePortfolioRiskReturnDataCompletedEventArgs> RetrievePortfolioRiskReturnDataCompleted;
        
        public event System.EventHandler<RetrieveHeatMapDataCompletedEventArgs> RetrieveHeatMapDataCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.BeginRetrieveSecurityReferenceData(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrieveSecurityReferenceData(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.SecurityOverviewData> GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.EndRetrieveSecurityReferenceData(System.IAsyncResult result) {
            return base.Channel.EndRetrieveSecurityReferenceData(result);
        }
        
        private System.IAsyncResult OnBeginRetrieveSecurityReferenceData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).BeginRetrieveSecurityReferenceData(callback, asyncState);
        }
        
        private object[] OnEndRetrieveSecurityReferenceData(System.IAsyncResult result) {
            System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.SecurityOverviewData> retVal = ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).EndRetrieveSecurityReferenceData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrieveSecurityReferenceDataCompleted(object state) {
            if ((this.RetrieveSecurityReferenceDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrieveSecurityReferenceDataCompleted(this, new RetrieveSecurityReferenceDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrieveSecurityReferenceDataAsync() {
            this.RetrieveSecurityReferenceDataAsync(null);
        }
        
        public void RetrieveSecurityReferenceDataAsync(object userState) {
            if ((this.onBeginRetrieveSecurityReferenceDataDelegate == null)) {
                this.onBeginRetrieveSecurityReferenceDataDelegate = new BeginOperationDelegate(this.OnBeginRetrieveSecurityReferenceData);
            }
            if ((this.onEndRetrieveSecurityReferenceDataDelegate == null)) {
                this.onEndRetrieveSecurityReferenceDataDelegate = new EndOperationDelegate(this.OnEndRetrieveSecurityReferenceData);
            }
            if ((this.onRetrieveSecurityReferenceDataCompletedDelegate == null)) {
                this.onRetrieveSecurityReferenceDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrieveSecurityReferenceDataCompleted);
            }
            base.InvokeAsync(this.onBeginRetrieveSecurityReferenceDataDelegate, null, this.onEndRetrieveSecurityReferenceDataDelegate, this.onRetrieveSecurityReferenceDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.BeginRetrieveSecurityReferenceDataByTicker(string ticker, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrieveSecurityReferenceDataByTicker(ticker, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GreenField.ServiceCaller.ProxyDataDefinitions.SecurityOverviewData GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.EndRetrieveSecurityReferenceDataByTicker(System.IAsyncResult result) {
            return base.Channel.EndRetrieveSecurityReferenceDataByTicker(result);
        }
        
        private System.IAsyncResult OnBeginRetrieveSecurityReferenceDataByTicker(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ticker = ((string)(inValues[0]));
            return ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).BeginRetrieveSecurityReferenceDataByTicker(ticker, callback, asyncState);
        }
        
        private object[] OnEndRetrieveSecurityReferenceDataByTicker(System.IAsyncResult result) {
            GreenField.ServiceCaller.ProxyDataDefinitions.SecurityOverviewData retVal = ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).EndRetrieveSecurityReferenceDataByTicker(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrieveSecurityReferenceDataByTickerCompleted(object state) {
            if ((this.RetrieveSecurityReferenceDataByTickerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrieveSecurityReferenceDataByTickerCompleted(this, new RetrieveSecurityReferenceDataByTickerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrieveSecurityReferenceDataByTickerAsync(string ticker) {
            this.RetrieveSecurityReferenceDataByTickerAsync(ticker, null);
        }
        
        public void RetrieveSecurityReferenceDataByTickerAsync(string ticker, object userState) {
            if ((this.onBeginRetrieveSecurityReferenceDataByTickerDelegate == null)) {
                this.onBeginRetrieveSecurityReferenceDataByTickerDelegate = new BeginOperationDelegate(this.OnBeginRetrieveSecurityReferenceDataByTicker);
            }
            if ((this.onEndRetrieveSecurityReferenceDataByTickerDelegate == null)) {
                this.onEndRetrieveSecurityReferenceDataByTickerDelegate = new EndOperationDelegate(this.OnEndRetrieveSecurityReferenceDataByTicker);
            }
            if ((this.onRetrieveSecurityReferenceDataByTickerCompletedDelegate == null)) {
                this.onRetrieveSecurityReferenceDataByTickerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrieveSecurityReferenceDataByTickerCompleted);
            }
            base.InvokeAsync(this.onBeginRetrieveSecurityReferenceDataByTickerDelegate, new object[] {
                        ticker}, this.onEndRetrieveSecurityReferenceDataByTickerDelegate, this.onRetrieveSecurityReferenceDataByTickerCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.BeginRetrievePricingReferenceData(System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.EntitySelectionData> entityIdentifiers, System.DateTime startDateTime, System.DateTime endDateTime, bool totalReturnCheck, string frequencyDuration, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrievePricingReferenceData(entityIdentifiers, startDateTime, endDateTime, totalReturnCheck, frequencyDuration, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.PricingReferenceData> GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.EndRetrievePricingReferenceData(System.IAsyncResult result) {
            return base.Channel.EndRetrievePricingReferenceData(result);
        }
        
        private System.IAsyncResult OnBeginRetrievePricingReferenceData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.EntitySelectionData> entityIdentifiers = ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.EntitySelectionData>)(inValues[0]));
            System.DateTime startDateTime = ((System.DateTime)(inValues[1]));
            System.DateTime endDateTime = ((System.DateTime)(inValues[2]));
            bool totalReturnCheck = ((bool)(inValues[3]));
            string frequencyDuration = ((string)(inValues[4]));
            return ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).BeginRetrievePricingReferenceData(entityIdentifiers, startDateTime, endDateTime, totalReturnCheck, frequencyDuration, callback, asyncState);
        }
        
        private object[] OnEndRetrievePricingReferenceData(System.IAsyncResult result) {
            System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.PricingReferenceData> retVal = ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).EndRetrievePricingReferenceData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrievePricingReferenceDataCompleted(object state) {
            if ((this.RetrievePricingReferenceDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrievePricingReferenceDataCompleted(this, new RetrievePricingReferenceDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrievePricingReferenceDataAsync(System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.EntitySelectionData> entityIdentifiers, System.DateTime startDateTime, System.DateTime endDateTime, bool totalReturnCheck, string frequencyDuration) {
            this.RetrievePricingReferenceDataAsync(entityIdentifiers, startDateTime, endDateTime, totalReturnCheck, frequencyDuration, null);
        }
        
        public void RetrievePricingReferenceDataAsync(System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.EntitySelectionData> entityIdentifiers, System.DateTime startDateTime, System.DateTime endDateTime, bool totalReturnCheck, string frequencyDuration, object userState) {
            if ((this.onBeginRetrievePricingReferenceDataDelegate == null)) {
                this.onBeginRetrievePricingReferenceDataDelegate = new BeginOperationDelegate(this.OnBeginRetrievePricingReferenceData);
            }
            if ((this.onEndRetrievePricingReferenceDataDelegate == null)) {
                this.onEndRetrievePricingReferenceDataDelegate = new EndOperationDelegate(this.OnEndRetrievePricingReferenceData);
            }
            if ((this.onRetrievePricingReferenceDataCompletedDelegate == null)) {
                this.onRetrievePricingReferenceDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrievePricingReferenceDataCompleted);
            }
            base.InvokeAsync(this.onBeginRetrievePricingReferenceDataDelegate, new object[] {
                        entityIdentifiers,
                        startDateTime,
                        endDateTime,
                        totalReturnCheck,
                        frequencyDuration}, this.onEndRetrievePricingReferenceDataDelegate, this.onRetrievePricingReferenceDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.BeginRetrieveEntitySelectionData(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrieveEntitySelectionData(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.EntitySelectionData> GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.EndRetrieveEntitySelectionData(System.IAsyncResult result) {
            return base.Channel.EndRetrieveEntitySelectionData(result);
        }
        
        private System.IAsyncResult OnBeginRetrieveEntitySelectionData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).BeginRetrieveEntitySelectionData(callback, asyncState);
        }
        
        private object[] OnEndRetrieveEntitySelectionData(System.IAsyncResult result) {
            System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.EntitySelectionData> retVal = ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).EndRetrieveEntitySelectionData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrieveEntitySelectionDataCompleted(object state) {
            if ((this.RetrieveEntitySelectionDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrieveEntitySelectionDataCompleted(this, new RetrieveEntitySelectionDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrieveEntitySelectionDataAsync() {
            this.RetrieveEntitySelectionDataAsync(null);
        }
        
        public void RetrieveEntitySelectionDataAsync(object userState) {
            if ((this.onBeginRetrieveEntitySelectionDataDelegate == null)) {
                this.onBeginRetrieveEntitySelectionDataDelegate = new BeginOperationDelegate(this.OnBeginRetrieveEntitySelectionData);
            }
            if ((this.onEndRetrieveEntitySelectionDataDelegate == null)) {
                this.onEndRetrieveEntitySelectionDataDelegate = new EndOperationDelegate(this.OnEndRetrieveEntitySelectionData);
            }
            if ((this.onRetrieveEntitySelectionDataCompletedDelegate == null)) {
                this.onRetrieveEntitySelectionDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrieveEntitySelectionDataCompleted);
            }
            base.InvokeAsync(this.onBeginRetrieveEntitySelectionDataDelegate, null, this.onEndRetrieveEntitySelectionDataDelegate, this.onRetrieveEntitySelectionDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.BeginRetrieveFundSelectionData(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrieveFundSelectionData(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData> GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.EndRetrieveFundSelectionData(System.IAsyncResult result) {
            return base.Channel.EndRetrieveFundSelectionData(result);
        }
        
        private System.IAsyncResult OnBeginRetrieveFundSelectionData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).BeginRetrieveFundSelectionData(callback, asyncState);
        }
        
        private object[] OnEndRetrieveFundSelectionData(System.IAsyncResult result) {
            System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData> retVal = ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).EndRetrieveFundSelectionData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrieveFundSelectionDataCompleted(object state) {
            if ((this.RetrieveFundSelectionDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrieveFundSelectionDataCompleted(this, new RetrieveFundSelectionDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrieveFundSelectionDataAsync() {
            this.RetrieveFundSelectionDataAsync(null);
        }
        
        public void RetrieveFundSelectionDataAsync(object userState) {
            if ((this.onBeginRetrieveFundSelectionDataDelegate == null)) {
                this.onBeginRetrieveFundSelectionDataDelegate = new BeginOperationDelegate(this.OnBeginRetrieveFundSelectionData);
            }
            if ((this.onEndRetrieveFundSelectionDataDelegate == null)) {
                this.onEndRetrieveFundSelectionDataDelegate = new EndOperationDelegate(this.OnEndRetrieveFundSelectionData);
            }
            if ((this.onRetrieveFundSelectionDataCompletedDelegate == null)) {
                this.onRetrieveFundSelectionDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrieveFundSelectionDataCompleted);
            }
            base.InvokeAsync(this.onBeginRetrieveFundSelectionDataDelegate, null, this.onEndRetrieveFundSelectionDataDelegate, this.onRetrieveFundSelectionDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.BeginRetrieveBenchmarkSelectionData(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrieveBenchmarkSelectionData(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData> GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.EndRetrieveBenchmarkSelectionData(System.IAsyncResult result) {
            return base.Channel.EndRetrieveBenchmarkSelectionData(result);
        }
        
        private System.IAsyncResult OnBeginRetrieveBenchmarkSelectionData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).BeginRetrieveBenchmarkSelectionData(callback, asyncState);
        }
        
        private object[] OnEndRetrieveBenchmarkSelectionData(System.IAsyncResult result) {
            System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData> retVal = ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).EndRetrieveBenchmarkSelectionData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrieveBenchmarkSelectionDataCompleted(object state) {
            if ((this.RetrieveBenchmarkSelectionDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrieveBenchmarkSelectionDataCompleted(this, new RetrieveBenchmarkSelectionDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrieveBenchmarkSelectionDataAsync() {
            this.RetrieveBenchmarkSelectionDataAsync(null);
        }
        
        public void RetrieveBenchmarkSelectionDataAsync(object userState) {
            if ((this.onBeginRetrieveBenchmarkSelectionDataDelegate == null)) {
                this.onBeginRetrieveBenchmarkSelectionDataDelegate = new BeginOperationDelegate(this.OnBeginRetrieveBenchmarkSelectionData);
            }
            if ((this.onEndRetrieveBenchmarkSelectionDataDelegate == null)) {
                this.onEndRetrieveBenchmarkSelectionDataDelegate = new EndOperationDelegate(this.OnEndRetrieveBenchmarkSelectionData);
            }
            if ((this.onRetrieveBenchmarkSelectionDataCompletedDelegate == null)) {
                this.onRetrieveBenchmarkSelectionDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrieveBenchmarkSelectionDataCompleted);
            }
            base.InvokeAsync(this.onBeginRetrieveBenchmarkSelectionDataDelegate, null, this.onEndRetrieveBenchmarkSelectionDataDelegate, this.onRetrieveBenchmarkSelectionDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.BeginRetrieveMarketCapitalizationData(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrieveMarketCapitalizationData(fundSelectionData, benchmarkSelectionData, effectiveDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GreenField.ServiceCaller.ProxyDataDefinitions.MarketCapitalizationData GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.EndRetrieveMarketCapitalizationData(System.IAsyncResult result) {
            return base.Channel.EndRetrieveMarketCapitalizationData(result);
        }
        
        private System.IAsyncResult OnBeginRetrieveMarketCapitalizationData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData = ((GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData)(inValues[0]));
            GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData = ((GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData)(inValues[1]));
            System.DateTime effectiveDate = ((System.DateTime)(inValues[2]));
            return ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).BeginRetrieveMarketCapitalizationData(fundSelectionData, benchmarkSelectionData, effectiveDate, callback, asyncState);
        }
        
        private object[] OnEndRetrieveMarketCapitalizationData(System.IAsyncResult result) {
            GreenField.ServiceCaller.ProxyDataDefinitions.MarketCapitalizationData retVal = ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).EndRetrieveMarketCapitalizationData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrieveMarketCapitalizationDataCompleted(object state) {
            if ((this.RetrieveMarketCapitalizationDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrieveMarketCapitalizationDataCompleted(this, new RetrieveMarketCapitalizationDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrieveMarketCapitalizationDataAsync(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate) {
            this.RetrieveMarketCapitalizationDataAsync(fundSelectionData, benchmarkSelectionData, effectiveDate, null);
        }
        
        public void RetrieveMarketCapitalizationDataAsync(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, object userState) {
            if ((this.onBeginRetrieveMarketCapitalizationDataDelegate == null)) {
                this.onBeginRetrieveMarketCapitalizationDataDelegate = new BeginOperationDelegate(this.OnBeginRetrieveMarketCapitalizationData);
            }
            if ((this.onEndRetrieveMarketCapitalizationDataDelegate == null)) {
                this.onEndRetrieveMarketCapitalizationDataDelegate = new EndOperationDelegate(this.OnEndRetrieveMarketCapitalizationData);
            }
            if ((this.onRetrieveMarketCapitalizationDataCompletedDelegate == null)) {
                this.onRetrieveMarketCapitalizationDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrieveMarketCapitalizationDataCompleted);
            }
            base.InvokeAsync(this.onBeginRetrieveMarketCapitalizationDataDelegate, new object[] {
                        fundSelectionData,
                        benchmarkSelectionData,
                        effectiveDate}, this.onEndRetrieveMarketCapitalizationDataDelegate, this.onRetrieveMarketCapitalizationDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.BeginRetrieveAssetAllocationData(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrieveAssetAllocationData(fundSelectionData, benchmarkSelectionData, effectiveDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.AssetAllocationData> GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.EndRetrieveAssetAllocationData(System.IAsyncResult result) {
            return base.Channel.EndRetrieveAssetAllocationData(result);
        }
        
        private System.IAsyncResult OnBeginRetrieveAssetAllocationData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData = ((GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData)(inValues[0]));
            GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData = ((GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData)(inValues[1]));
            System.DateTime effectiveDate = ((System.DateTime)(inValues[2]));
            return ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).BeginRetrieveAssetAllocationData(fundSelectionData, benchmarkSelectionData, effectiveDate, callback, asyncState);
        }
        
        private object[] OnEndRetrieveAssetAllocationData(System.IAsyncResult result) {
            System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.AssetAllocationData> retVal = ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).EndRetrieveAssetAllocationData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrieveAssetAllocationDataCompleted(object state) {
            if ((this.RetrieveAssetAllocationDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrieveAssetAllocationDataCompleted(this, new RetrieveAssetAllocationDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrieveAssetAllocationDataAsync(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate) {
            this.RetrieveAssetAllocationDataAsync(fundSelectionData, benchmarkSelectionData, effectiveDate, null);
        }
        
        public void RetrieveAssetAllocationDataAsync(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, object userState) {
            if ((this.onBeginRetrieveAssetAllocationDataDelegate == null)) {
                this.onBeginRetrieveAssetAllocationDataDelegate = new BeginOperationDelegate(this.OnBeginRetrieveAssetAllocationData);
            }
            if ((this.onEndRetrieveAssetAllocationDataDelegate == null)) {
                this.onEndRetrieveAssetAllocationDataDelegate = new EndOperationDelegate(this.OnEndRetrieveAssetAllocationData);
            }
            if ((this.onRetrieveAssetAllocationDataCompletedDelegate == null)) {
                this.onRetrieveAssetAllocationDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrieveAssetAllocationDataCompleted);
            }
            base.InvokeAsync(this.onBeginRetrieveAssetAllocationDataDelegate, new object[] {
                        fundSelectionData,
                        benchmarkSelectionData,
                        effectiveDate}, this.onEndRetrieveAssetAllocationDataDelegate, this.onRetrieveAssetAllocationDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.BeginRetrieveSectorBreakdownData(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrieveSectorBreakdownData(fundSelectionData, benchmarkSelectionData, effectiveDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.SectorBreakdownData> GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.EndRetrieveSectorBreakdownData(System.IAsyncResult result) {
            return base.Channel.EndRetrieveSectorBreakdownData(result);
        }
        
        private System.IAsyncResult OnBeginRetrieveSectorBreakdownData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData = ((GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData)(inValues[0]));
            GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData = ((GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData)(inValues[1]));
            System.DateTime effectiveDate = ((System.DateTime)(inValues[2]));
            return ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).BeginRetrieveSectorBreakdownData(fundSelectionData, benchmarkSelectionData, effectiveDate, callback, asyncState);
        }
        
        private object[] OnEndRetrieveSectorBreakdownData(System.IAsyncResult result) {
            System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.SectorBreakdownData> retVal = ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).EndRetrieveSectorBreakdownData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrieveSectorBreakdownDataCompleted(object state) {
            if ((this.RetrieveSectorBreakdownDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrieveSectorBreakdownDataCompleted(this, new RetrieveSectorBreakdownDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrieveSectorBreakdownDataAsync(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate) {
            this.RetrieveSectorBreakdownDataAsync(fundSelectionData, benchmarkSelectionData, effectiveDate, null);
        }
        
        public void RetrieveSectorBreakdownDataAsync(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, object userState) {
            if ((this.onBeginRetrieveSectorBreakdownDataDelegate == null)) {
                this.onBeginRetrieveSectorBreakdownDataDelegate = new BeginOperationDelegate(this.OnBeginRetrieveSectorBreakdownData);
            }
            if ((this.onEndRetrieveSectorBreakdownDataDelegate == null)) {
                this.onEndRetrieveSectorBreakdownDataDelegate = new EndOperationDelegate(this.OnEndRetrieveSectorBreakdownData);
            }
            if ((this.onRetrieveSectorBreakdownDataCompletedDelegate == null)) {
                this.onRetrieveSectorBreakdownDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrieveSectorBreakdownDataCompleted);
            }
            base.InvokeAsync(this.onBeginRetrieveSectorBreakdownDataDelegate, new object[] {
                        fundSelectionData,
                        benchmarkSelectionData,
                        effectiveDate}, this.onEndRetrieveSectorBreakdownDataDelegate, this.onRetrieveSectorBreakdownDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.BeginRetrieveRegionBreakdownData(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrieveRegionBreakdownData(fundSelectionData, benchmarkSelectionData, effectiveDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RegionBreakdownData> GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.EndRetrieveRegionBreakdownData(System.IAsyncResult result) {
            return base.Channel.EndRetrieveRegionBreakdownData(result);
        }
        
        private System.IAsyncResult OnBeginRetrieveRegionBreakdownData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData = ((GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData)(inValues[0]));
            GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData = ((GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData)(inValues[1]));
            System.DateTime effectiveDate = ((System.DateTime)(inValues[2]));
            return ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).BeginRetrieveRegionBreakdownData(fundSelectionData, benchmarkSelectionData, effectiveDate, callback, asyncState);
        }
        
        private object[] OnEndRetrieveRegionBreakdownData(System.IAsyncResult result) {
            System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RegionBreakdownData> retVal = ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).EndRetrieveRegionBreakdownData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrieveRegionBreakdownDataCompleted(object state) {
            if ((this.RetrieveRegionBreakdownDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrieveRegionBreakdownDataCompleted(this, new RetrieveRegionBreakdownDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrieveRegionBreakdownDataAsync(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate) {
            this.RetrieveRegionBreakdownDataAsync(fundSelectionData, benchmarkSelectionData, effectiveDate, null);
        }
        
        public void RetrieveRegionBreakdownDataAsync(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, object userState) {
            if ((this.onBeginRetrieveRegionBreakdownDataDelegate == null)) {
                this.onBeginRetrieveRegionBreakdownDataDelegate = new BeginOperationDelegate(this.OnBeginRetrieveRegionBreakdownData);
            }
            if ((this.onEndRetrieveRegionBreakdownDataDelegate == null)) {
                this.onEndRetrieveRegionBreakdownDataDelegate = new EndOperationDelegate(this.OnEndRetrieveRegionBreakdownData);
            }
            if ((this.onRetrieveRegionBreakdownDataCompletedDelegate == null)) {
                this.onRetrieveRegionBreakdownDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrieveRegionBreakdownDataCompleted);
            }
            base.InvokeAsync(this.onBeginRetrieveRegionBreakdownDataDelegate, new object[] {
                        fundSelectionData,
                        benchmarkSelectionData,
                        effectiveDate}, this.onEndRetrieveRegionBreakdownDataDelegate, this.onRetrieveRegionBreakdownDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.BeginRetrieveTopHoldingsData(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrieveTopHoldingsData(fundSelectionData, benchmarkSelectionData, effectiveDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.TopHoldingsData> GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.EndRetrieveTopHoldingsData(System.IAsyncResult result) {
            return base.Channel.EndRetrieveTopHoldingsData(result);
        }
        
        private System.IAsyncResult OnBeginRetrieveTopHoldingsData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData = ((GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData)(inValues[0]));
            GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData = ((GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData)(inValues[1]));
            System.DateTime effectiveDate = ((System.DateTime)(inValues[2]));
            return ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).BeginRetrieveTopHoldingsData(fundSelectionData, benchmarkSelectionData, effectiveDate, callback, asyncState);
        }
        
        private object[] OnEndRetrieveTopHoldingsData(System.IAsyncResult result) {
            System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.TopHoldingsData> retVal = ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).EndRetrieveTopHoldingsData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrieveTopHoldingsDataCompleted(object state) {
            if ((this.RetrieveTopHoldingsDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrieveTopHoldingsDataCompleted(this, new RetrieveTopHoldingsDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrieveTopHoldingsDataAsync(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate) {
            this.RetrieveTopHoldingsDataAsync(fundSelectionData, benchmarkSelectionData, effectiveDate, null);
        }
        
        public void RetrieveTopHoldingsDataAsync(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, object userState) {
            if ((this.onBeginRetrieveTopHoldingsDataDelegate == null)) {
                this.onBeginRetrieveTopHoldingsDataDelegate = new BeginOperationDelegate(this.OnBeginRetrieveTopHoldingsData);
            }
            if ((this.onEndRetrieveTopHoldingsDataDelegate == null)) {
                this.onEndRetrieveTopHoldingsDataDelegate = new EndOperationDelegate(this.OnEndRetrieveTopHoldingsData);
            }
            if ((this.onRetrieveTopHoldingsDataCompletedDelegate == null)) {
                this.onRetrieveTopHoldingsDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrieveTopHoldingsDataCompleted);
            }
            base.InvokeAsync(this.onBeginRetrieveTopHoldingsDataDelegate, new object[] {
                        fundSelectionData,
                        benchmarkSelectionData,
                        effectiveDate}, this.onEndRetrieveTopHoldingsDataDelegate, this.onRetrieveTopHoldingsDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.BeginRetrieveIndexConstituentsData(GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrieveIndexConstituentsData(benchmarkSelectionData, effectiveDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.IndexConstituentsData> GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.EndRetrieveIndexConstituentsData(System.IAsyncResult result) {
            return base.Channel.EndRetrieveIndexConstituentsData(result);
        }
        
        private System.IAsyncResult OnBeginRetrieveIndexConstituentsData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData = ((GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData)(inValues[0]));
            System.DateTime effectiveDate = ((System.DateTime)(inValues[1]));
            return ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).BeginRetrieveIndexConstituentsData(benchmarkSelectionData, effectiveDate, callback, asyncState);
        }
        
        private object[] OnEndRetrieveIndexConstituentsData(System.IAsyncResult result) {
            System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.IndexConstituentsData> retVal = ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).EndRetrieveIndexConstituentsData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrieveIndexConstituentsDataCompleted(object state) {
            if ((this.RetrieveIndexConstituentsDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrieveIndexConstituentsDataCompleted(this, new RetrieveIndexConstituentsDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrieveIndexConstituentsDataAsync(GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate) {
            this.RetrieveIndexConstituentsDataAsync(benchmarkSelectionData, effectiveDate, null);
        }
        
        public void RetrieveIndexConstituentsDataAsync(GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, object userState) {
            if ((this.onBeginRetrieveIndexConstituentsDataDelegate == null)) {
                this.onBeginRetrieveIndexConstituentsDataDelegate = new BeginOperationDelegate(this.OnBeginRetrieveIndexConstituentsData);
            }
            if ((this.onEndRetrieveIndexConstituentsDataDelegate == null)) {
                this.onEndRetrieveIndexConstituentsDataDelegate = new EndOperationDelegate(this.OnEndRetrieveIndexConstituentsData);
            }
            if ((this.onRetrieveIndexConstituentsDataCompletedDelegate == null)) {
                this.onRetrieveIndexConstituentsDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrieveIndexConstituentsDataCompleted);
            }
            base.InvokeAsync(this.onBeginRetrieveIndexConstituentsDataDelegate, new object[] {
                        benchmarkSelectionData,
                        effectiveDate}, this.onEndRetrieveIndexConstituentsDataDelegate, this.onRetrieveIndexConstituentsDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.BeginRetrieveValuesForFilters(string filterType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrieveValuesForFilters(filterType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<string> GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.EndRetrieveValuesForFilters(System.IAsyncResult result) {
            return base.Channel.EndRetrieveValuesForFilters(result);
        }
        
        private System.IAsyncResult OnBeginRetrieveValuesForFilters(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string filterType = ((string)(inValues[0]));
            return ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).BeginRetrieveValuesForFilters(filterType, callback, asyncState);
        }
        
        private object[] OnEndRetrieveValuesForFilters(System.IAsyncResult result) {
            System.Collections.Generic.List<string> retVal = ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).EndRetrieveValuesForFilters(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrieveValuesForFiltersCompleted(object state) {
            if ((this.RetrieveValuesForFiltersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrieveValuesForFiltersCompleted(this, new RetrieveValuesForFiltersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrieveValuesForFiltersAsync(string filterType) {
            this.RetrieveValuesForFiltersAsync(filterType, null);
        }
        
        public void RetrieveValuesForFiltersAsync(string filterType, object userState) {
            if ((this.onBeginRetrieveValuesForFiltersDelegate == null)) {
                this.onBeginRetrieveValuesForFiltersDelegate = new BeginOperationDelegate(this.OnBeginRetrieveValuesForFilters);
            }
            if ((this.onEndRetrieveValuesForFiltersDelegate == null)) {
                this.onEndRetrieveValuesForFiltersDelegate = new EndOperationDelegate(this.OnEndRetrieveValuesForFilters);
            }
            if ((this.onRetrieveValuesForFiltersCompletedDelegate == null)) {
                this.onRetrieveValuesForFiltersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrieveValuesForFiltersCompleted);
            }
            base.InvokeAsync(this.onBeginRetrieveValuesForFiltersDelegate, new object[] {
                        filterType}, this.onEndRetrieveValuesForFiltersDelegate, this.onRetrieveValuesForFiltersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.BeginRetrieveUserPreferenceBenchmarkData(string userName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrieveUserPreferenceBenchmarkData(userName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.UserBenchmarkPreference> GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.EndRetrieveUserPreferenceBenchmarkData(System.IAsyncResult result) {
            return base.Channel.EndRetrieveUserPreferenceBenchmarkData(result);
        }
        
        private System.IAsyncResult OnBeginRetrieveUserPreferenceBenchmarkData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            return ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).BeginRetrieveUserPreferenceBenchmarkData(userName, callback, asyncState);
        }
        
        private object[] OnEndRetrieveUserPreferenceBenchmarkData(System.IAsyncResult result) {
            System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.UserBenchmarkPreference> retVal = ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).EndRetrieveUserPreferenceBenchmarkData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrieveUserPreferenceBenchmarkDataCompleted(object state) {
            if ((this.RetrieveUserPreferenceBenchmarkDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrieveUserPreferenceBenchmarkDataCompleted(this, new RetrieveUserPreferenceBenchmarkDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrieveUserPreferenceBenchmarkDataAsync(string userName) {
            this.RetrieveUserPreferenceBenchmarkDataAsync(userName, null);
        }
        
        public void RetrieveUserPreferenceBenchmarkDataAsync(string userName, object userState) {
            if ((this.onBeginRetrieveUserPreferenceBenchmarkDataDelegate == null)) {
                this.onBeginRetrieveUserPreferenceBenchmarkDataDelegate = new BeginOperationDelegate(this.OnBeginRetrieveUserPreferenceBenchmarkData);
            }
            if ((this.onEndRetrieveUserPreferenceBenchmarkDataDelegate == null)) {
                this.onEndRetrieveUserPreferenceBenchmarkDataDelegate = new EndOperationDelegate(this.OnEndRetrieveUserPreferenceBenchmarkData);
            }
            if ((this.onRetrieveUserPreferenceBenchmarkDataCompletedDelegate == null)) {
                this.onRetrieveUserPreferenceBenchmarkDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrieveUserPreferenceBenchmarkDataCompleted);
            }
            base.InvokeAsync(this.onBeginRetrieveUserPreferenceBenchmarkDataDelegate, new object[] {
                        userName}, this.onEndRetrieveUserPreferenceBenchmarkDataDelegate, this.onRetrieveUserPreferenceBenchmarkDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.BeginRetrieveMorningSnapshotData(System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.UserBenchmarkPreference> userBenchmarkPreference, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrieveMorningSnapshotData(userBenchmarkPreference, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.MorningSnapshotData> GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.EndRetrieveMorningSnapshotData(System.IAsyncResult result) {
            return base.Channel.EndRetrieveMorningSnapshotData(result);
        }
        
        private System.IAsyncResult OnBeginRetrieveMorningSnapshotData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.UserBenchmarkPreference> userBenchmarkPreference = ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.UserBenchmarkPreference>)(inValues[0]));
            return ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).BeginRetrieveMorningSnapshotData(userBenchmarkPreference, callback, asyncState);
        }
        
        private object[] OnEndRetrieveMorningSnapshotData(System.IAsyncResult result) {
            System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.MorningSnapshotData> retVal = ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).EndRetrieveMorningSnapshotData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrieveMorningSnapshotDataCompleted(object state) {
            if ((this.RetrieveMorningSnapshotDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrieveMorningSnapshotDataCompleted(this, new RetrieveMorningSnapshotDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrieveMorningSnapshotDataAsync(System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.UserBenchmarkPreference> userBenchmarkPreference) {
            this.RetrieveMorningSnapshotDataAsync(userBenchmarkPreference, null);
        }
        
        public void RetrieveMorningSnapshotDataAsync(System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.UserBenchmarkPreference> userBenchmarkPreference, object userState) {
            if ((this.onBeginRetrieveMorningSnapshotDataDelegate == null)) {
                this.onBeginRetrieveMorningSnapshotDataDelegate = new BeginOperationDelegate(this.OnBeginRetrieveMorningSnapshotData);
            }
            if ((this.onEndRetrieveMorningSnapshotDataDelegate == null)) {
                this.onEndRetrieveMorningSnapshotDataDelegate = new EndOperationDelegate(this.OnEndRetrieveMorningSnapshotData);
            }
            if ((this.onRetrieveMorningSnapshotDataCompletedDelegate == null)) {
                this.onRetrieveMorningSnapshotDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrieveMorningSnapshotDataCompleted);
            }
            base.InvokeAsync(this.onBeginRetrieveMorningSnapshotDataDelegate, new object[] {
                        userBenchmarkPreference}, this.onEndRetrieveMorningSnapshotDataDelegate, this.onRetrieveMorningSnapshotDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.BeginAddUserPreferenceBenchmarkGroup(string userName, string groupName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUserPreferenceBenchmarkGroup(userName, groupName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.EndAddUserPreferenceBenchmarkGroup(System.IAsyncResult result) {
            return base.Channel.EndAddUserPreferenceBenchmarkGroup(result);
        }
        
        private System.IAsyncResult OnBeginAddUserPreferenceBenchmarkGroup(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            string groupName = ((string)(inValues[1]));
            return ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).BeginAddUserPreferenceBenchmarkGroup(userName, groupName, callback, asyncState);
        }
        
        private object[] OnEndAddUserPreferenceBenchmarkGroup(System.IAsyncResult result) {
            bool retVal = ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).EndAddUserPreferenceBenchmarkGroup(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddUserPreferenceBenchmarkGroupCompleted(object state) {
            if ((this.AddUserPreferenceBenchmarkGroupCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUserPreferenceBenchmarkGroupCompleted(this, new AddUserPreferenceBenchmarkGroupCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUserPreferenceBenchmarkGroupAsync(string userName, string groupName) {
            this.AddUserPreferenceBenchmarkGroupAsync(userName, groupName, null);
        }
        
        public void AddUserPreferenceBenchmarkGroupAsync(string userName, string groupName, object userState) {
            if ((this.onBeginAddUserPreferenceBenchmarkGroupDelegate == null)) {
                this.onBeginAddUserPreferenceBenchmarkGroupDelegate = new BeginOperationDelegate(this.OnBeginAddUserPreferenceBenchmarkGroup);
            }
            if ((this.onEndAddUserPreferenceBenchmarkGroupDelegate == null)) {
                this.onEndAddUserPreferenceBenchmarkGroupDelegate = new EndOperationDelegate(this.OnEndAddUserPreferenceBenchmarkGroup);
            }
            if ((this.onAddUserPreferenceBenchmarkGroupCompletedDelegate == null)) {
                this.onAddUserPreferenceBenchmarkGroupCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUserPreferenceBenchmarkGroupCompleted);
            }
            base.InvokeAsync(this.onBeginAddUserPreferenceBenchmarkGroupDelegate, new object[] {
                        userName,
                        groupName}, this.onEndAddUserPreferenceBenchmarkGroupDelegate, this.onAddUserPreferenceBenchmarkGroupCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.BeginRemoveUserPreferenceBenchmarkGroup(string userName, string groupname, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveUserPreferenceBenchmarkGroup(userName, groupname, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.EndRemoveUserPreferenceBenchmarkGroup(System.IAsyncResult result) {
            return base.Channel.EndRemoveUserPreferenceBenchmarkGroup(result);
        }
        
        private System.IAsyncResult OnBeginRemoveUserPreferenceBenchmarkGroup(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            string groupname = ((string)(inValues[1]));
            return ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).BeginRemoveUserPreferenceBenchmarkGroup(userName, groupname, callback, asyncState);
        }
        
        private object[] OnEndRemoveUserPreferenceBenchmarkGroup(System.IAsyncResult result) {
            bool retVal = ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).EndRemoveUserPreferenceBenchmarkGroup(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRemoveUserPreferenceBenchmarkGroupCompleted(object state) {
            if ((this.RemoveUserPreferenceBenchmarkGroupCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveUserPreferenceBenchmarkGroupCompleted(this, new RemoveUserPreferenceBenchmarkGroupCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveUserPreferenceBenchmarkGroupAsync(string userName, string groupname) {
            this.RemoveUserPreferenceBenchmarkGroupAsync(userName, groupname, null);
        }
        
        public void RemoveUserPreferenceBenchmarkGroupAsync(string userName, string groupname, object userState) {
            if ((this.onBeginRemoveUserPreferenceBenchmarkGroupDelegate == null)) {
                this.onBeginRemoveUserPreferenceBenchmarkGroupDelegate = new BeginOperationDelegate(this.OnBeginRemoveUserPreferenceBenchmarkGroup);
            }
            if ((this.onEndRemoveUserPreferenceBenchmarkGroupDelegate == null)) {
                this.onEndRemoveUserPreferenceBenchmarkGroupDelegate = new EndOperationDelegate(this.OnEndRemoveUserPreferenceBenchmarkGroup);
            }
            if ((this.onRemoveUserPreferenceBenchmarkGroupCompletedDelegate == null)) {
                this.onRemoveUserPreferenceBenchmarkGroupCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveUserPreferenceBenchmarkGroupCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveUserPreferenceBenchmarkGroupDelegate, new object[] {
                        userName,
                        groupname}, this.onEndRemoveUserPreferenceBenchmarkGroupDelegate, this.onRemoveUserPreferenceBenchmarkGroupCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.BeginAddUserPreferenceBenchmark(string userName, GreenField.ServiceCaller.ProxyDataDefinitions.UserBenchmarkPreference userBenchmarkPreference, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUserPreferenceBenchmark(userName, userBenchmarkPreference, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.EndAddUserPreferenceBenchmark(System.IAsyncResult result) {
            return base.Channel.EndAddUserPreferenceBenchmark(result);
        }
        
        private System.IAsyncResult OnBeginAddUserPreferenceBenchmark(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            GreenField.ServiceCaller.ProxyDataDefinitions.UserBenchmarkPreference userBenchmarkPreference = ((GreenField.ServiceCaller.ProxyDataDefinitions.UserBenchmarkPreference)(inValues[1]));
            return ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).BeginAddUserPreferenceBenchmark(userName, userBenchmarkPreference, callback, asyncState);
        }
        
        private object[] OnEndAddUserPreferenceBenchmark(System.IAsyncResult result) {
            bool retVal = ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).EndAddUserPreferenceBenchmark(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddUserPreferenceBenchmarkCompleted(object state) {
            if ((this.AddUserPreferenceBenchmarkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUserPreferenceBenchmarkCompleted(this, new AddUserPreferenceBenchmarkCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUserPreferenceBenchmarkAsync(string userName, GreenField.ServiceCaller.ProxyDataDefinitions.UserBenchmarkPreference userBenchmarkPreference) {
            this.AddUserPreferenceBenchmarkAsync(userName, userBenchmarkPreference, null);
        }
        
        public void AddUserPreferenceBenchmarkAsync(string userName, GreenField.ServiceCaller.ProxyDataDefinitions.UserBenchmarkPreference userBenchmarkPreference, object userState) {
            if ((this.onBeginAddUserPreferenceBenchmarkDelegate == null)) {
                this.onBeginAddUserPreferenceBenchmarkDelegate = new BeginOperationDelegate(this.OnBeginAddUserPreferenceBenchmark);
            }
            if ((this.onEndAddUserPreferenceBenchmarkDelegate == null)) {
                this.onEndAddUserPreferenceBenchmarkDelegate = new EndOperationDelegate(this.OnEndAddUserPreferenceBenchmark);
            }
            if ((this.onAddUserPreferenceBenchmarkCompletedDelegate == null)) {
                this.onAddUserPreferenceBenchmarkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUserPreferenceBenchmarkCompleted);
            }
            base.InvokeAsync(this.onBeginAddUserPreferenceBenchmarkDelegate, new object[] {
                        userName,
                        userBenchmarkPreference}, this.onEndAddUserPreferenceBenchmarkDelegate, this.onAddUserPreferenceBenchmarkCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.BeginRemoveUserPreferenceBenchmark(string userName, GreenField.ServiceCaller.ProxyDataDefinitions.UserBenchmarkPreference userBenchmarkPreference, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveUserPreferenceBenchmark(userName, userBenchmarkPreference, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.EndRemoveUserPreferenceBenchmark(System.IAsyncResult result) {
            return base.Channel.EndRemoveUserPreferenceBenchmark(result);
        }
        
        private System.IAsyncResult OnBeginRemoveUserPreferenceBenchmark(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            GreenField.ServiceCaller.ProxyDataDefinitions.UserBenchmarkPreference userBenchmarkPreference = ((GreenField.ServiceCaller.ProxyDataDefinitions.UserBenchmarkPreference)(inValues[1]));
            return ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).BeginRemoveUserPreferenceBenchmark(userName, userBenchmarkPreference, callback, asyncState);
        }
        
        private object[] OnEndRemoveUserPreferenceBenchmark(System.IAsyncResult result) {
            bool retVal = ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).EndRemoveUserPreferenceBenchmark(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRemoveUserPreferenceBenchmarkCompleted(object state) {
            if ((this.RemoveUserPreferenceBenchmarkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveUserPreferenceBenchmarkCompleted(this, new RemoveUserPreferenceBenchmarkCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveUserPreferenceBenchmarkAsync(string userName, GreenField.ServiceCaller.ProxyDataDefinitions.UserBenchmarkPreference userBenchmarkPreference) {
            this.RemoveUserPreferenceBenchmarkAsync(userName, userBenchmarkPreference, null);
        }
        
        public void RemoveUserPreferenceBenchmarkAsync(string userName, GreenField.ServiceCaller.ProxyDataDefinitions.UserBenchmarkPreference userBenchmarkPreference, object userState) {
            if ((this.onBeginRemoveUserPreferenceBenchmarkDelegate == null)) {
                this.onBeginRemoveUserPreferenceBenchmarkDelegate = new BeginOperationDelegate(this.OnBeginRemoveUserPreferenceBenchmark);
            }
            if ((this.onEndRemoveUserPreferenceBenchmarkDelegate == null)) {
                this.onEndRemoveUserPreferenceBenchmarkDelegate = new EndOperationDelegate(this.OnEndRemoveUserPreferenceBenchmark);
            }
            if ((this.onRemoveUserPreferenceBenchmarkCompletedDelegate == null)) {
                this.onRemoveUserPreferenceBenchmarkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveUserPreferenceBenchmarkCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveUserPreferenceBenchmarkDelegate, new object[] {
                        userName,
                        userBenchmarkPreference}, this.onEndRemoveUserPreferenceBenchmarkDelegate, this.onRemoveUserPreferenceBenchmarkCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.BeginRetrieveRelativePerformanceSectorData(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrieveRelativePerformanceSectorData(fundSelectionData, benchmarkSelectionData, effectiveDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceSectorData> GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.EndRetrieveRelativePerformanceSectorData(System.IAsyncResult result) {
            return base.Channel.EndRetrieveRelativePerformanceSectorData(result);
        }
        
        private System.IAsyncResult OnBeginRetrieveRelativePerformanceSectorData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData = ((GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData)(inValues[0]));
            GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData = ((GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData)(inValues[1]));
            System.DateTime effectiveDate = ((System.DateTime)(inValues[2]));
            return ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).BeginRetrieveRelativePerformanceSectorData(fundSelectionData, benchmarkSelectionData, effectiveDate, callback, asyncState);
        }
        
        private object[] OnEndRetrieveRelativePerformanceSectorData(System.IAsyncResult result) {
            System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceSectorData> retVal = ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).EndRetrieveRelativePerformanceSectorData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrieveRelativePerformanceSectorDataCompleted(object state) {
            if ((this.RetrieveRelativePerformanceSectorDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrieveRelativePerformanceSectorDataCompleted(this, new RetrieveRelativePerformanceSectorDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrieveRelativePerformanceSectorDataAsync(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate) {
            this.RetrieveRelativePerformanceSectorDataAsync(fundSelectionData, benchmarkSelectionData, effectiveDate, null);
        }
        
        public void RetrieveRelativePerformanceSectorDataAsync(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, object userState) {
            if ((this.onBeginRetrieveRelativePerformanceSectorDataDelegate == null)) {
                this.onBeginRetrieveRelativePerformanceSectorDataDelegate = new BeginOperationDelegate(this.OnBeginRetrieveRelativePerformanceSectorData);
            }
            if ((this.onEndRetrieveRelativePerformanceSectorDataDelegate == null)) {
                this.onEndRetrieveRelativePerformanceSectorDataDelegate = new EndOperationDelegate(this.OnEndRetrieveRelativePerformanceSectorData);
            }
            if ((this.onRetrieveRelativePerformanceSectorDataCompletedDelegate == null)) {
                this.onRetrieveRelativePerformanceSectorDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrieveRelativePerformanceSectorDataCompleted);
            }
            base.InvokeAsync(this.onBeginRetrieveRelativePerformanceSectorDataDelegate, new object[] {
                        fundSelectionData,
                        benchmarkSelectionData,
                        effectiveDate}, this.onEndRetrieveRelativePerformanceSectorDataDelegate, this.onRetrieveRelativePerformanceSectorDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.BeginRetrieveRelativePerformanceCountryActivePositionData(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, string countryID, System.Nullable<int> sectorID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrieveRelativePerformanceCountryActivePositionData(fundSelectionData, benchmarkSelectionData, effectiveDate, countryID, sectorID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceActivePositionData> GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.EndRetrieveRelativePerformanceCountryActivePositionData(System.IAsyncResult result) {
            return base.Channel.EndRetrieveRelativePerformanceCountryActivePositionData(result);
        }
        
        private System.IAsyncResult OnBeginRetrieveRelativePerformanceCountryActivePositionData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData = ((GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData)(inValues[0]));
            GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData = ((GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData)(inValues[1]));
            System.DateTime effectiveDate = ((System.DateTime)(inValues[2]));
            string countryID = ((string)(inValues[3]));
            System.Nullable<int> sectorID = ((System.Nullable<int>)(inValues[4]));
            return ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).BeginRetrieveRelativePerformanceCountryActivePositionData(fundSelectionData, benchmarkSelectionData, effectiveDate, countryID, sectorID, callback, asyncState);
        }
        
        private object[] OnEndRetrieveRelativePerformanceCountryActivePositionData(System.IAsyncResult result) {
            System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceActivePositionData> retVal = ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).EndRetrieveRelativePerformanceCountryActivePositionData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrieveRelativePerformanceCountryActivePositionDataCompleted(object state) {
            if ((this.RetrieveRelativePerformanceCountryActivePositionDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrieveRelativePerformanceCountryActivePositionDataCompleted(this, new RetrieveRelativePerformanceCountryActivePositionDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrieveRelativePerformanceCountryActivePositionDataAsync(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, string countryID, System.Nullable<int> sectorID) {
            this.RetrieveRelativePerformanceCountryActivePositionDataAsync(fundSelectionData, benchmarkSelectionData, effectiveDate, countryID, sectorID, null);
        }
        
        public void RetrieveRelativePerformanceCountryActivePositionDataAsync(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, string countryID, System.Nullable<int> sectorID, object userState) {
            if ((this.onBeginRetrieveRelativePerformanceCountryActivePositionDataDelegate == null)) {
                this.onBeginRetrieveRelativePerformanceCountryActivePositionDataDelegate = new BeginOperationDelegate(this.OnBeginRetrieveRelativePerformanceCountryActivePositionData);
            }
            if ((this.onEndRetrieveRelativePerformanceCountryActivePositionDataDelegate == null)) {
                this.onEndRetrieveRelativePerformanceCountryActivePositionDataDelegate = new EndOperationDelegate(this.OnEndRetrieveRelativePerformanceCountryActivePositionData);
            }
            if ((this.onRetrieveRelativePerformanceCountryActivePositionDataCompletedDelegate == null)) {
                this.onRetrieveRelativePerformanceCountryActivePositionDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrieveRelativePerformanceCountryActivePositionDataCompleted);
            }
            base.InvokeAsync(this.onBeginRetrieveRelativePerformanceCountryActivePositionDataDelegate, new object[] {
                        fundSelectionData,
                        benchmarkSelectionData,
                        effectiveDate,
                        countryID,
                        sectorID}, this.onEndRetrieveRelativePerformanceCountryActivePositionDataDelegate, this.onRetrieveRelativePerformanceCountryActivePositionDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.BeginRetrieveRelativePerformanceSectorActivePositionData(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, string countryID, System.Nullable<int> sectorID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrieveRelativePerformanceSectorActivePositionData(fundSelectionData, benchmarkSelectionData, effectiveDate, countryID, sectorID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceActivePositionData> GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.EndRetrieveRelativePerformanceSectorActivePositionData(System.IAsyncResult result) {
            return base.Channel.EndRetrieveRelativePerformanceSectorActivePositionData(result);
        }
        
        private System.IAsyncResult OnBeginRetrieveRelativePerformanceSectorActivePositionData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData = ((GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData)(inValues[0]));
            GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData = ((GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData)(inValues[1]));
            System.DateTime effectiveDate = ((System.DateTime)(inValues[2]));
            string countryID = ((string)(inValues[3]));
            System.Nullable<int> sectorID = ((System.Nullable<int>)(inValues[4]));
            return ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).BeginRetrieveRelativePerformanceSectorActivePositionData(fundSelectionData, benchmarkSelectionData, effectiveDate, countryID, sectorID, callback, asyncState);
        }
        
        private object[] OnEndRetrieveRelativePerformanceSectorActivePositionData(System.IAsyncResult result) {
            System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceActivePositionData> retVal = ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).EndRetrieveRelativePerformanceSectorActivePositionData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrieveRelativePerformanceSectorActivePositionDataCompleted(object state) {
            if ((this.RetrieveRelativePerformanceSectorActivePositionDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrieveRelativePerformanceSectorActivePositionDataCompleted(this, new RetrieveRelativePerformanceSectorActivePositionDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrieveRelativePerformanceSectorActivePositionDataAsync(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, string countryID, System.Nullable<int> sectorID) {
            this.RetrieveRelativePerformanceSectorActivePositionDataAsync(fundSelectionData, benchmarkSelectionData, effectiveDate, countryID, sectorID, null);
        }
        
        public void RetrieveRelativePerformanceSectorActivePositionDataAsync(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, string countryID, System.Nullable<int> sectorID, object userState) {
            if ((this.onBeginRetrieveRelativePerformanceSectorActivePositionDataDelegate == null)) {
                this.onBeginRetrieveRelativePerformanceSectorActivePositionDataDelegate = new BeginOperationDelegate(this.OnBeginRetrieveRelativePerformanceSectorActivePositionData);
            }
            if ((this.onEndRetrieveRelativePerformanceSectorActivePositionDataDelegate == null)) {
                this.onEndRetrieveRelativePerformanceSectorActivePositionDataDelegate = new EndOperationDelegate(this.OnEndRetrieveRelativePerformanceSectorActivePositionData);
            }
            if ((this.onRetrieveRelativePerformanceSectorActivePositionDataCompletedDelegate == null)) {
                this.onRetrieveRelativePerformanceSectorActivePositionDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrieveRelativePerformanceSectorActivePositionDataCompleted);
            }
            base.InvokeAsync(this.onBeginRetrieveRelativePerformanceSectorActivePositionDataDelegate, new object[] {
                        fundSelectionData,
                        benchmarkSelectionData,
                        effectiveDate,
                        countryID,
                        sectorID}, this.onEndRetrieveRelativePerformanceSectorActivePositionDataDelegate, this.onRetrieveRelativePerformanceSectorActivePositionDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.BeginRetrieveRelativePerformanceSecurityActivePositionData(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, string countryID, System.Nullable<int> sectorID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrieveRelativePerformanceSecurityActivePositionData(fundSelectionData, benchmarkSelectionData, effectiveDate, countryID, sectorID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceActivePositionData> GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.EndRetrieveRelativePerformanceSecurityActivePositionData(System.IAsyncResult result) {
            return base.Channel.EndRetrieveRelativePerformanceSecurityActivePositionData(result);
        }
        
        private System.IAsyncResult OnBeginRetrieveRelativePerformanceSecurityActivePositionData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData = ((GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData)(inValues[0]));
            GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData = ((GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData)(inValues[1]));
            System.DateTime effectiveDate = ((System.DateTime)(inValues[2]));
            string countryID = ((string)(inValues[3]));
            System.Nullable<int> sectorID = ((System.Nullable<int>)(inValues[4]));
            return ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).BeginRetrieveRelativePerformanceSecurityActivePositionData(fundSelectionData, benchmarkSelectionData, effectiveDate, countryID, sectorID, callback, asyncState);
        }
        
        private object[] OnEndRetrieveRelativePerformanceSecurityActivePositionData(System.IAsyncResult result) {
            System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceActivePositionData> retVal = ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).EndRetrieveRelativePerformanceSecurityActivePositionData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrieveRelativePerformanceSecurityActivePositionDataCompleted(object state) {
            if ((this.RetrieveRelativePerformanceSecurityActivePositionDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrieveRelativePerformanceSecurityActivePositionDataCompleted(this, new RetrieveRelativePerformanceSecurityActivePositionDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrieveRelativePerformanceSecurityActivePositionDataAsync(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, string countryID, System.Nullable<int> sectorID) {
            this.RetrieveRelativePerformanceSecurityActivePositionDataAsync(fundSelectionData, benchmarkSelectionData, effectiveDate, countryID, sectorID, null);
        }
        
        public void RetrieveRelativePerformanceSecurityActivePositionDataAsync(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, string countryID, System.Nullable<int> sectorID, object userState) {
            if ((this.onBeginRetrieveRelativePerformanceSecurityActivePositionDataDelegate == null)) {
                this.onBeginRetrieveRelativePerformanceSecurityActivePositionDataDelegate = new BeginOperationDelegate(this.OnBeginRetrieveRelativePerformanceSecurityActivePositionData);
            }
            if ((this.onEndRetrieveRelativePerformanceSecurityActivePositionDataDelegate == null)) {
                this.onEndRetrieveRelativePerformanceSecurityActivePositionDataDelegate = new EndOperationDelegate(this.OnEndRetrieveRelativePerformanceSecurityActivePositionData);
            }
            if ((this.onRetrieveRelativePerformanceSecurityActivePositionDataCompletedDelegate == null)) {
                this.onRetrieveRelativePerformanceSecurityActivePositionDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrieveRelativePerformanceSecurityActivePositionDataCompleted);
            }
            base.InvokeAsync(this.onBeginRetrieveRelativePerformanceSecurityActivePositionDataDelegate, new object[] {
                        fundSelectionData,
                        benchmarkSelectionData,
                        effectiveDate,
                        countryID,
                        sectorID}, this.onEndRetrieveRelativePerformanceSecurityActivePositionDataDelegate, this.onRetrieveRelativePerformanceSecurityActivePositionDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.BeginRetrieveRelativePerformanceSecurityData(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, string countryID, System.Nullable<int> sectorID, int order, System.Nullable<int> maxRecords, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrieveRelativePerformanceSecurityData(fundSelectionData, benchmarkSelectionData, effectiveDate, countryID, sectorID, order, maxRecords, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceSecurityData> GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.EndRetrieveRelativePerformanceSecurityData(System.IAsyncResult result) {
            return base.Channel.EndRetrieveRelativePerformanceSecurityData(result);
        }
        
        private System.IAsyncResult OnBeginRetrieveRelativePerformanceSecurityData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData = ((GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData)(inValues[0]));
            GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData = ((GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData)(inValues[1]));
            System.DateTime effectiveDate = ((System.DateTime)(inValues[2]));
            string countryID = ((string)(inValues[3]));
            System.Nullable<int> sectorID = ((System.Nullable<int>)(inValues[4]));
            int order = ((int)(inValues[5]));
            System.Nullable<int> maxRecords = ((System.Nullable<int>)(inValues[6]));
            return ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).BeginRetrieveRelativePerformanceSecurityData(fundSelectionData, benchmarkSelectionData, effectiveDate, countryID, sectorID, order, maxRecords, callback, asyncState);
        }
        
        private object[] OnEndRetrieveRelativePerformanceSecurityData(System.IAsyncResult result) {
            System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceSecurityData> retVal = ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).EndRetrieveRelativePerformanceSecurityData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrieveRelativePerformanceSecurityDataCompleted(object state) {
            if ((this.RetrieveRelativePerformanceSecurityDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrieveRelativePerformanceSecurityDataCompleted(this, new RetrieveRelativePerformanceSecurityDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrieveRelativePerformanceSecurityDataAsync(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, string countryID, System.Nullable<int> sectorID, int order, System.Nullable<int> maxRecords) {
            this.RetrieveRelativePerformanceSecurityDataAsync(fundSelectionData, benchmarkSelectionData, effectiveDate, countryID, sectorID, order, maxRecords, null);
        }
        
        public void RetrieveRelativePerformanceSecurityDataAsync(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, string countryID, System.Nullable<int> sectorID, int order, System.Nullable<int> maxRecords, object userState) {
            if ((this.onBeginRetrieveRelativePerformanceSecurityDataDelegate == null)) {
                this.onBeginRetrieveRelativePerformanceSecurityDataDelegate = new BeginOperationDelegate(this.OnBeginRetrieveRelativePerformanceSecurityData);
            }
            if ((this.onEndRetrieveRelativePerformanceSecurityDataDelegate == null)) {
                this.onEndRetrieveRelativePerformanceSecurityDataDelegate = new EndOperationDelegate(this.OnEndRetrieveRelativePerformanceSecurityData);
            }
            if ((this.onRetrieveRelativePerformanceSecurityDataCompletedDelegate == null)) {
                this.onRetrieveRelativePerformanceSecurityDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrieveRelativePerformanceSecurityDataCompleted);
            }
            base.InvokeAsync(this.onBeginRetrieveRelativePerformanceSecurityDataDelegate, new object[] {
                        fundSelectionData,
                        benchmarkSelectionData,
                        effectiveDate,
                        countryID,
                        sectorID,
                        order,
                        maxRecords}, this.onEndRetrieveRelativePerformanceSecurityDataDelegate, this.onRetrieveRelativePerformanceSecurityDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.BeginRetrieveRelativePerformanceData(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrieveRelativePerformanceData(fundSelectionData, benchmarkSelectionData, effectiveDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceData> GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.EndRetrieveRelativePerformanceData(System.IAsyncResult result) {
            return base.Channel.EndRetrieveRelativePerformanceData(result);
        }
        
        private System.IAsyncResult OnBeginRetrieveRelativePerformanceData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData = ((GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData)(inValues[0]));
            GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData = ((GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData)(inValues[1]));
            System.DateTime effectiveDate = ((System.DateTime)(inValues[2]));
            return ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).BeginRetrieveRelativePerformanceData(fundSelectionData, benchmarkSelectionData, effectiveDate, callback, asyncState);
        }
        
        private object[] OnEndRetrieveRelativePerformanceData(System.IAsyncResult result) {
            System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceData> retVal = ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).EndRetrieveRelativePerformanceData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrieveRelativePerformanceDataCompleted(object state) {
            if ((this.RetrieveRelativePerformanceDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrieveRelativePerformanceDataCompleted(this, new RetrieveRelativePerformanceDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrieveRelativePerformanceDataAsync(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate) {
            this.RetrieveRelativePerformanceDataAsync(fundSelectionData, benchmarkSelectionData, effectiveDate, null);
        }
        
        public void RetrieveRelativePerformanceDataAsync(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, object userState) {
            if ((this.onBeginRetrieveRelativePerformanceDataDelegate == null)) {
                this.onBeginRetrieveRelativePerformanceDataDelegate = new BeginOperationDelegate(this.OnBeginRetrieveRelativePerformanceData);
            }
            if ((this.onEndRetrieveRelativePerformanceDataDelegate == null)) {
                this.onEndRetrieveRelativePerformanceDataDelegate = new EndOperationDelegate(this.OnEndRetrieveRelativePerformanceData);
            }
            if ((this.onRetrieveRelativePerformanceDataCompletedDelegate == null)) {
                this.onRetrieveRelativePerformanceDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrieveRelativePerformanceDataCompleted);
            }
            base.InvokeAsync(this.onBeginRetrieveRelativePerformanceDataDelegate, new object[] {
                        fundSelectionData,
                        benchmarkSelectionData,
                        effectiveDate}, this.onEndRetrieveRelativePerformanceDataDelegate, this.onRetrieveRelativePerformanceDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.BeginRetrievePerformanceGraphData(string nameOfFund, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrievePerformanceGraphData(nameOfFund, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.PerformanceGraphData> GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.EndRetrievePerformanceGraphData(System.IAsyncResult result) {
            return base.Channel.EndRetrievePerformanceGraphData(result);
        }
        
        private System.IAsyncResult OnBeginRetrievePerformanceGraphData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string nameOfFund = ((string)(inValues[0]));
            return ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).BeginRetrievePerformanceGraphData(nameOfFund, callback, asyncState);
        }
        
        private object[] OnEndRetrievePerformanceGraphData(System.IAsyncResult result) {
            System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.PerformanceGraphData> retVal = ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).EndRetrievePerformanceGraphData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrievePerformanceGraphDataCompleted(object state) {
            if ((this.RetrievePerformanceGraphDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrievePerformanceGraphDataCompleted(this, new RetrievePerformanceGraphDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrievePerformanceGraphDataAsync(string nameOfFund) {
            this.RetrievePerformanceGraphDataAsync(nameOfFund, null);
        }
        
        public void RetrievePerformanceGraphDataAsync(string nameOfFund, object userState) {
            if ((this.onBeginRetrievePerformanceGraphDataDelegate == null)) {
                this.onBeginRetrievePerformanceGraphDataDelegate = new BeginOperationDelegate(this.OnBeginRetrievePerformanceGraphData);
            }
            if ((this.onEndRetrievePerformanceGraphDataDelegate == null)) {
                this.onEndRetrievePerformanceGraphDataDelegate = new EndOperationDelegate(this.OnEndRetrievePerformanceGraphData);
            }
            if ((this.onRetrievePerformanceGraphDataCompletedDelegate == null)) {
                this.onRetrievePerformanceGraphDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrievePerformanceGraphDataCompleted);
            }
            base.InvokeAsync(this.onBeginRetrievePerformanceGraphDataDelegate, new object[] {
                        nameOfFund}, this.onEndRetrievePerformanceGraphDataDelegate, this.onRetrievePerformanceGraphDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.BeginRetrievePerformanceGridData(string nameOfFund, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrievePerformanceGridData(nameOfFund, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.PerformanceGridData> GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.EndRetrievePerformanceGridData(System.IAsyncResult result) {
            return base.Channel.EndRetrievePerformanceGridData(result);
        }
        
        private System.IAsyncResult OnBeginRetrievePerformanceGridData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string nameOfFund = ((string)(inValues[0]));
            return ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).BeginRetrievePerformanceGridData(nameOfFund, callback, asyncState);
        }
        
        private object[] OnEndRetrievePerformanceGridData(System.IAsyncResult result) {
            System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.PerformanceGridData> retVal = ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).EndRetrievePerformanceGridData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrievePerformanceGridDataCompleted(object state) {
            if ((this.RetrievePerformanceGridDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrievePerformanceGridDataCompleted(this, new RetrievePerformanceGridDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrievePerformanceGridDataAsync(string nameOfFund) {
            this.RetrievePerformanceGridDataAsync(nameOfFund, null);
        }
        
        public void RetrievePerformanceGridDataAsync(string nameOfFund, object userState) {
            if ((this.onBeginRetrievePerformanceGridDataDelegate == null)) {
                this.onBeginRetrievePerformanceGridDataDelegate = new BeginOperationDelegate(this.OnBeginRetrievePerformanceGridData);
            }
            if ((this.onEndRetrievePerformanceGridDataDelegate == null)) {
                this.onEndRetrievePerformanceGridDataDelegate = new EndOperationDelegate(this.OnEndRetrievePerformanceGridData);
            }
            if ((this.onRetrievePerformanceGridDataCompletedDelegate == null)) {
                this.onRetrievePerformanceGridDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrievePerformanceGridDataCompleted);
            }
            base.InvokeAsync(this.onBeginRetrievePerformanceGridDataDelegate, new object[] {
                        nameOfFund}, this.onEndRetrievePerformanceGridDataDelegate, this.onRetrievePerformanceGridDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.BeginRetrieveAttributionData(string nameOfFund, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrieveAttributionData(nameOfFund, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.AttributionData> GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.EndRetrieveAttributionData(System.IAsyncResult result) {
            return base.Channel.EndRetrieveAttributionData(result);
        }
        
        private System.IAsyncResult OnBeginRetrieveAttributionData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string nameOfFund = ((string)(inValues[0]));
            return ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).BeginRetrieveAttributionData(nameOfFund, callback, asyncState);
        }
        
        private object[] OnEndRetrieveAttributionData(System.IAsyncResult result) {
            System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.AttributionData> retVal = ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).EndRetrieveAttributionData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrieveAttributionDataCompleted(object state) {
            if ((this.RetrieveAttributionDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrieveAttributionDataCompleted(this, new RetrieveAttributionDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrieveAttributionDataAsync(string nameOfFund) {
            this.RetrieveAttributionDataAsync(nameOfFund, null);
        }
        
        public void RetrieveAttributionDataAsync(string nameOfFund, object userState) {
            if ((this.onBeginRetrieveAttributionDataDelegate == null)) {
                this.onBeginRetrieveAttributionDataDelegate = new BeginOperationDelegate(this.OnBeginRetrieveAttributionData);
            }
            if ((this.onEndRetrieveAttributionDataDelegate == null)) {
                this.onEndRetrieveAttributionDataDelegate = new EndOperationDelegate(this.OnEndRetrieveAttributionData);
            }
            if ((this.onRetrieveAttributionDataCompletedDelegate == null)) {
                this.onRetrieveAttributionDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrieveAttributionDataCompleted);
            }
            base.InvokeAsync(this.onBeginRetrieveAttributionDataDelegate, new object[] {
                        nameOfFund}, this.onEndRetrieveAttributionDataDelegate, this.onRetrieveAttributionDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.BeginRetrieveUnrealizedGainLossData(string entityIdentifier, System.DateTime startDateTime, System.DateTime endDateTime, string frequencyInterval, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrieveUnrealizedGainLossData(entityIdentifier, startDateTime, endDateTime, frequencyInterval, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.UnrealizedGainLossData> GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.EndRetrieveUnrealizedGainLossData(System.IAsyncResult result) {
            return base.Channel.EndRetrieveUnrealizedGainLossData(result);
        }
        
        private System.IAsyncResult OnBeginRetrieveUnrealizedGainLossData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string entityIdentifier = ((string)(inValues[0]));
            System.DateTime startDateTime = ((System.DateTime)(inValues[1]));
            System.DateTime endDateTime = ((System.DateTime)(inValues[2]));
            string frequencyInterval = ((string)(inValues[3]));
            return ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).BeginRetrieveUnrealizedGainLossData(entityIdentifier, startDateTime, endDateTime, frequencyInterval, callback, asyncState);
        }
        
        private object[] OnEndRetrieveUnrealizedGainLossData(System.IAsyncResult result) {
            System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.UnrealizedGainLossData> retVal = ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).EndRetrieveUnrealizedGainLossData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrieveUnrealizedGainLossDataCompleted(object state) {
            if ((this.RetrieveUnrealizedGainLossDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrieveUnrealizedGainLossDataCompleted(this, new RetrieveUnrealizedGainLossDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrieveUnrealizedGainLossDataAsync(string entityIdentifier, System.DateTime startDateTime, System.DateTime endDateTime, string frequencyInterval) {
            this.RetrieveUnrealizedGainLossDataAsync(entityIdentifier, startDateTime, endDateTime, frequencyInterval, null);
        }
        
        public void RetrieveUnrealizedGainLossDataAsync(string entityIdentifier, System.DateTime startDateTime, System.DateTime endDateTime, string frequencyInterval, object userState) {
            if ((this.onBeginRetrieveUnrealizedGainLossDataDelegate == null)) {
                this.onBeginRetrieveUnrealizedGainLossDataDelegate = new BeginOperationDelegate(this.OnBeginRetrieveUnrealizedGainLossData);
            }
            if ((this.onEndRetrieveUnrealizedGainLossDataDelegate == null)) {
                this.onEndRetrieveUnrealizedGainLossDataDelegate = new EndOperationDelegate(this.OnEndRetrieveUnrealizedGainLossData);
            }
            if ((this.onRetrieveUnrealizedGainLossDataCompletedDelegate == null)) {
                this.onRetrieveUnrealizedGainLossDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrieveUnrealizedGainLossDataCompleted);
            }
            base.InvokeAsync(this.onBeginRetrieveUnrealizedGainLossDataDelegate, new object[] {
                        entityIdentifier,
                        startDateTime,
                        endDateTime,
                        frequencyInterval}, this.onEndRetrieveUnrealizedGainLossDataDelegate, this.onRetrieveUnrealizedGainLossDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.BeginRetrieveHoldingsPercentageData(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, System.DateTime effectiveDate, string filterType, string filterValue, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrieveHoldingsPercentageData(fundSelectionData, effectiveDate, filterType, filterValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.HoldingsPercentageData> GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.EndRetrieveHoldingsPercentageData(System.IAsyncResult result) {
            return base.Channel.EndRetrieveHoldingsPercentageData(result);
        }
        
        private System.IAsyncResult OnBeginRetrieveHoldingsPercentageData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData = ((GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData)(inValues[0]));
            System.DateTime effectiveDate = ((System.DateTime)(inValues[1]));
            string filterType = ((string)(inValues[2]));
            string filterValue = ((string)(inValues[3]));
            return ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).BeginRetrieveHoldingsPercentageData(fundSelectionData, effectiveDate, filterType, filterValue, callback, asyncState);
        }
        
        private object[] OnEndRetrieveHoldingsPercentageData(System.IAsyncResult result) {
            System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.HoldingsPercentageData> retVal = ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).EndRetrieveHoldingsPercentageData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrieveHoldingsPercentageDataCompleted(object state) {
            if ((this.RetrieveHoldingsPercentageDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrieveHoldingsPercentageDataCompleted(this, new RetrieveHoldingsPercentageDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrieveHoldingsPercentageDataAsync(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, System.DateTime effectiveDate, string filterType, string filterValue) {
            this.RetrieveHoldingsPercentageDataAsync(fundSelectionData, effectiveDate, filterType, filterValue, null);
        }
        
        public void RetrieveHoldingsPercentageDataAsync(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, System.DateTime effectiveDate, string filterType, string filterValue, object userState) {
            if ((this.onBeginRetrieveHoldingsPercentageDataDelegate == null)) {
                this.onBeginRetrieveHoldingsPercentageDataDelegate = new BeginOperationDelegate(this.OnBeginRetrieveHoldingsPercentageData);
            }
            if ((this.onEndRetrieveHoldingsPercentageDataDelegate == null)) {
                this.onEndRetrieveHoldingsPercentageDataDelegate = new EndOperationDelegate(this.OnEndRetrieveHoldingsPercentageData);
            }
            if ((this.onRetrieveHoldingsPercentageDataCompletedDelegate == null)) {
                this.onRetrieveHoldingsPercentageDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrieveHoldingsPercentageDataCompleted);
            }
            base.InvokeAsync(this.onBeginRetrieveHoldingsPercentageDataDelegate, new object[] {
                        fundSelectionData,
                        effectiveDate,
                        filterType,
                        filterValue}, this.onEndRetrieveHoldingsPercentageDataDelegate, this.onRetrieveHoldingsPercentageDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.BeginRetrieveHoldingsPercentageDataForRegion(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, System.DateTime effectiveDate, string filterType, string filterValue, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrieveHoldingsPercentageDataForRegion(fundSelectionData, effectiveDate, filterType, filterValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.HoldingsPercentageData> GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.EndRetrieveHoldingsPercentageDataForRegion(System.IAsyncResult result) {
            return base.Channel.EndRetrieveHoldingsPercentageDataForRegion(result);
        }
        
        private System.IAsyncResult OnBeginRetrieveHoldingsPercentageDataForRegion(object[] inValues, System.AsyncCallback callback, object asyncState) {
            GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData = ((GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData)(inValues[0]));
            System.DateTime effectiveDate = ((System.DateTime)(inValues[1]));
            string filterType = ((string)(inValues[2]));
            string filterValue = ((string)(inValues[3]));
            return ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).BeginRetrieveHoldingsPercentageDataForRegion(fundSelectionData, effectiveDate, filterType, filterValue, callback, asyncState);
        }
        
        private object[] OnEndRetrieveHoldingsPercentageDataForRegion(System.IAsyncResult result) {
            System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.HoldingsPercentageData> retVal = ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).EndRetrieveHoldingsPercentageDataForRegion(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrieveHoldingsPercentageDataForRegionCompleted(object state) {
            if ((this.RetrieveHoldingsPercentageDataForRegionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrieveHoldingsPercentageDataForRegionCompleted(this, new RetrieveHoldingsPercentageDataForRegionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrieveHoldingsPercentageDataForRegionAsync(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, System.DateTime effectiveDate, string filterType, string filterValue) {
            this.RetrieveHoldingsPercentageDataForRegionAsync(fundSelectionData, effectiveDate, filterType, filterValue, null);
        }
        
        public void RetrieveHoldingsPercentageDataForRegionAsync(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, System.DateTime effectiveDate, string filterType, string filterValue, object userState) {
            if ((this.onBeginRetrieveHoldingsPercentageDataForRegionDelegate == null)) {
                this.onBeginRetrieveHoldingsPercentageDataForRegionDelegate = new BeginOperationDelegate(this.OnBeginRetrieveHoldingsPercentageDataForRegion);
            }
            if ((this.onEndRetrieveHoldingsPercentageDataForRegionDelegate == null)) {
                this.onEndRetrieveHoldingsPercentageDataForRegionDelegate = new EndOperationDelegate(this.OnEndRetrieveHoldingsPercentageDataForRegion);
            }
            if ((this.onRetrieveHoldingsPercentageDataForRegionCompletedDelegate == null)) {
                this.onRetrieveHoldingsPercentageDataForRegionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrieveHoldingsPercentageDataForRegionCompleted);
            }
            base.InvokeAsync(this.onBeginRetrieveHoldingsPercentageDataForRegionDelegate, new object[] {
                        fundSelectionData,
                        effectiveDate,
                        filterType,
                        filterValue}, this.onEndRetrieveHoldingsPercentageDataForRegionDelegate, this.onRetrieveHoldingsPercentageDataForRegionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.BeginRetrieveTopBenchmarkSecuritiesData(GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrieveTopBenchmarkSecuritiesData(benchmarkSelectionData, effectiveDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.TopBenchmarkSecuritiesData> GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.EndRetrieveTopBenchmarkSecuritiesData(System.IAsyncResult result) {
            return base.Channel.EndRetrieveTopBenchmarkSecuritiesData(result);
        }
        
        private System.IAsyncResult OnBeginRetrieveTopBenchmarkSecuritiesData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData = ((GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData)(inValues[0]));
            System.DateTime effectiveDate = ((System.DateTime)(inValues[1]));
            return ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).BeginRetrieveTopBenchmarkSecuritiesData(benchmarkSelectionData, effectiveDate, callback, asyncState);
        }
        
        private object[] OnEndRetrieveTopBenchmarkSecuritiesData(System.IAsyncResult result) {
            System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.TopBenchmarkSecuritiesData> retVal = ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).EndRetrieveTopBenchmarkSecuritiesData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrieveTopBenchmarkSecuritiesDataCompleted(object state) {
            if ((this.RetrieveTopBenchmarkSecuritiesDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrieveTopBenchmarkSecuritiesDataCompleted(this, new RetrieveTopBenchmarkSecuritiesDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrieveTopBenchmarkSecuritiesDataAsync(GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate) {
            this.RetrieveTopBenchmarkSecuritiesDataAsync(benchmarkSelectionData, effectiveDate, null);
        }
        
        public void RetrieveTopBenchmarkSecuritiesDataAsync(GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, object userState) {
            if ((this.onBeginRetrieveTopBenchmarkSecuritiesDataDelegate == null)) {
                this.onBeginRetrieveTopBenchmarkSecuritiesDataDelegate = new BeginOperationDelegate(this.OnBeginRetrieveTopBenchmarkSecuritiesData);
            }
            if ((this.onEndRetrieveTopBenchmarkSecuritiesDataDelegate == null)) {
                this.onEndRetrieveTopBenchmarkSecuritiesDataDelegate = new EndOperationDelegate(this.OnEndRetrieveTopBenchmarkSecuritiesData);
            }
            if ((this.onRetrieveTopBenchmarkSecuritiesDataCompletedDelegate == null)) {
                this.onRetrieveTopBenchmarkSecuritiesDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrieveTopBenchmarkSecuritiesDataCompleted);
            }
            base.InvokeAsync(this.onBeginRetrieveTopBenchmarkSecuritiesDataDelegate, new object[] {
                        benchmarkSelectionData,
                        effectiveDate}, this.onEndRetrieveTopBenchmarkSecuritiesDataDelegate, this.onRetrieveTopBenchmarkSecuritiesDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.BeginRetrievePortfolioRiskReturnData(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrievePortfolioRiskReturnData(fundSelectionData, benchmarkSelectionData, effectiveDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.PortfolioRiskReturnData> GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.EndRetrievePortfolioRiskReturnData(System.IAsyncResult result) {
            return base.Channel.EndRetrievePortfolioRiskReturnData(result);
        }
        
        private System.IAsyncResult OnBeginRetrievePortfolioRiskReturnData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData = ((GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData)(inValues[0]));
            GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData = ((GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData)(inValues[1]));
            System.DateTime effectiveDate = ((System.DateTime)(inValues[2]));
            return ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).BeginRetrievePortfolioRiskReturnData(fundSelectionData, benchmarkSelectionData, effectiveDate, callback, asyncState);
        }
        
        private object[] OnEndRetrievePortfolioRiskReturnData(System.IAsyncResult result) {
            System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.PortfolioRiskReturnData> retVal = ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).EndRetrievePortfolioRiskReturnData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrievePortfolioRiskReturnDataCompleted(object state) {
            if ((this.RetrievePortfolioRiskReturnDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrievePortfolioRiskReturnDataCompleted(this, new RetrievePortfolioRiskReturnDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrievePortfolioRiskReturnDataAsync(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate) {
            this.RetrievePortfolioRiskReturnDataAsync(fundSelectionData, benchmarkSelectionData, effectiveDate, null);
        }
        
        public void RetrievePortfolioRiskReturnDataAsync(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, object userState) {
            if ((this.onBeginRetrievePortfolioRiskReturnDataDelegate == null)) {
                this.onBeginRetrievePortfolioRiskReturnDataDelegate = new BeginOperationDelegate(this.OnBeginRetrievePortfolioRiskReturnData);
            }
            if ((this.onEndRetrievePortfolioRiskReturnDataDelegate == null)) {
                this.onEndRetrievePortfolioRiskReturnDataDelegate = new EndOperationDelegate(this.OnEndRetrievePortfolioRiskReturnData);
            }
            if ((this.onRetrievePortfolioRiskReturnDataCompletedDelegate == null)) {
                this.onRetrievePortfolioRiskReturnDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrievePortfolioRiskReturnDataCompleted);
            }
            base.InvokeAsync(this.onBeginRetrievePortfolioRiskReturnDataDelegate, new object[] {
                        fundSelectionData,
                        benchmarkSelectionData,
                        effectiveDate}, this.onEndRetrievePortfolioRiskReturnDataDelegate, this.onRetrievePortfolioRiskReturnDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.BeginRetrieveHeatMapData(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrieveHeatMapData(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.HeatMapData> GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations.EndRetrieveHeatMapData(System.IAsyncResult result) {
            return base.Channel.EndRetrieveHeatMapData(result);
        }
        
        private System.IAsyncResult OnBeginRetrieveHeatMapData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).BeginRetrieveHeatMapData(callback, asyncState);
        }
        
        private object[] OnEndRetrieveHeatMapData(System.IAsyncResult result) {
            System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.HeatMapData> retVal = ((GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations)(this)).EndRetrieveHeatMapData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrieveHeatMapDataCompleted(object state) {
            if ((this.RetrieveHeatMapDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrieveHeatMapDataCompleted(this, new RetrieveHeatMapDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrieveHeatMapDataAsync() {
            this.RetrieveHeatMapDataAsync(null);
        }
        
        public void RetrieveHeatMapDataAsync(object userState) {
            if ((this.onBeginRetrieveHeatMapDataDelegate == null)) {
                this.onBeginRetrieveHeatMapDataDelegate = new BeginOperationDelegate(this.OnBeginRetrieveHeatMapData);
            }
            if ((this.onEndRetrieveHeatMapDataDelegate == null)) {
                this.onEndRetrieveHeatMapDataDelegate = new EndOperationDelegate(this.OnEndRetrieveHeatMapData);
            }
            if ((this.onRetrieveHeatMapDataCompletedDelegate == null)) {
                this.onRetrieveHeatMapDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrieveHeatMapDataCompleted);
            }
            base.InvokeAsync(this.onBeginRetrieveHeatMapDataDelegate, null, this.onEndRetrieveHeatMapDataDelegate, this.onRetrieveHeatMapDataCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations CreateChannel() {
            return new ProxyDataOperationsClientChannel(this);
        }
        
        private class ProxyDataOperationsClientChannel : ChannelBase<GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations>, GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations {
            
            public ProxyDataOperationsClientChannel(System.ServiceModel.ClientBase<GreenField.ServiceCaller.ProxyDataDefinitions.ProxyDataOperations> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginRetrieveSecurityReferenceData(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("RetrieveSecurityReferenceData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.SecurityOverviewData> EndRetrieveSecurityReferenceData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.SecurityOverviewData> _result = ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.SecurityOverviewData>)(base.EndInvoke("RetrieveSecurityReferenceData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetrieveSecurityReferenceDataByTicker(string ticker, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ticker;
                System.IAsyncResult _result = base.BeginInvoke("RetrieveSecurityReferenceDataByTicker", _args, callback, asyncState);
                return _result;
            }
            
            public GreenField.ServiceCaller.ProxyDataDefinitions.SecurityOverviewData EndRetrieveSecurityReferenceDataByTicker(System.IAsyncResult result) {
                object[] _args = new object[0];
                GreenField.ServiceCaller.ProxyDataDefinitions.SecurityOverviewData _result = ((GreenField.ServiceCaller.ProxyDataDefinitions.SecurityOverviewData)(base.EndInvoke("RetrieveSecurityReferenceDataByTicker", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetrievePricingReferenceData(System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.EntitySelectionData> entityIdentifiers, System.DateTime startDateTime, System.DateTime endDateTime, bool totalReturnCheck, string frequencyDuration, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = entityIdentifiers;
                _args[1] = startDateTime;
                _args[2] = endDateTime;
                _args[3] = totalReturnCheck;
                _args[4] = frequencyDuration;
                System.IAsyncResult _result = base.BeginInvoke("RetrievePricingReferenceData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.PricingReferenceData> EndRetrievePricingReferenceData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.PricingReferenceData> _result = ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.PricingReferenceData>)(base.EndInvoke("RetrievePricingReferenceData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetrieveEntitySelectionData(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("RetrieveEntitySelectionData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.EntitySelectionData> EndRetrieveEntitySelectionData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.EntitySelectionData> _result = ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.EntitySelectionData>)(base.EndInvoke("RetrieveEntitySelectionData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetrieveFundSelectionData(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("RetrieveFundSelectionData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData> EndRetrieveFundSelectionData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData> _result = ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData>)(base.EndInvoke("RetrieveFundSelectionData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetrieveBenchmarkSelectionData(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("RetrieveBenchmarkSelectionData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData> EndRetrieveBenchmarkSelectionData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData> _result = ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData>)(base.EndInvoke("RetrieveBenchmarkSelectionData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetrieveMarketCapitalizationData(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = fundSelectionData;
                _args[1] = benchmarkSelectionData;
                _args[2] = effectiveDate;
                System.IAsyncResult _result = base.BeginInvoke("RetrieveMarketCapitalizationData", _args, callback, asyncState);
                return _result;
            }
            
            public GreenField.ServiceCaller.ProxyDataDefinitions.MarketCapitalizationData EndRetrieveMarketCapitalizationData(System.IAsyncResult result) {
                object[] _args = new object[0];
                GreenField.ServiceCaller.ProxyDataDefinitions.MarketCapitalizationData _result = ((GreenField.ServiceCaller.ProxyDataDefinitions.MarketCapitalizationData)(base.EndInvoke("RetrieveMarketCapitalizationData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetrieveAssetAllocationData(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = fundSelectionData;
                _args[1] = benchmarkSelectionData;
                _args[2] = effectiveDate;
                System.IAsyncResult _result = base.BeginInvoke("RetrieveAssetAllocationData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.AssetAllocationData> EndRetrieveAssetAllocationData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.AssetAllocationData> _result = ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.AssetAllocationData>)(base.EndInvoke("RetrieveAssetAllocationData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetrieveSectorBreakdownData(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = fundSelectionData;
                _args[1] = benchmarkSelectionData;
                _args[2] = effectiveDate;
                System.IAsyncResult _result = base.BeginInvoke("RetrieveSectorBreakdownData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.SectorBreakdownData> EndRetrieveSectorBreakdownData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.SectorBreakdownData> _result = ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.SectorBreakdownData>)(base.EndInvoke("RetrieveSectorBreakdownData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetrieveRegionBreakdownData(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = fundSelectionData;
                _args[1] = benchmarkSelectionData;
                _args[2] = effectiveDate;
                System.IAsyncResult _result = base.BeginInvoke("RetrieveRegionBreakdownData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RegionBreakdownData> EndRetrieveRegionBreakdownData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RegionBreakdownData> _result = ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RegionBreakdownData>)(base.EndInvoke("RetrieveRegionBreakdownData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetrieveTopHoldingsData(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = fundSelectionData;
                _args[1] = benchmarkSelectionData;
                _args[2] = effectiveDate;
                System.IAsyncResult _result = base.BeginInvoke("RetrieveTopHoldingsData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.TopHoldingsData> EndRetrieveTopHoldingsData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.TopHoldingsData> _result = ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.TopHoldingsData>)(base.EndInvoke("RetrieveTopHoldingsData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetrieveIndexConstituentsData(GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = benchmarkSelectionData;
                _args[1] = effectiveDate;
                System.IAsyncResult _result = base.BeginInvoke("RetrieveIndexConstituentsData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.IndexConstituentsData> EndRetrieveIndexConstituentsData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.IndexConstituentsData> _result = ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.IndexConstituentsData>)(base.EndInvoke("RetrieveIndexConstituentsData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetrieveValuesForFilters(string filterType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = filterType;
                System.IAsyncResult _result = base.BeginInvoke("RetrieveValuesForFilters", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<string> EndRetrieveValuesForFilters(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<string> _result = ((System.Collections.Generic.List<string>)(base.EndInvoke("RetrieveValuesForFilters", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetrieveUserPreferenceBenchmarkData(string userName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userName;
                System.IAsyncResult _result = base.BeginInvoke("RetrieveUserPreferenceBenchmarkData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.UserBenchmarkPreference> EndRetrieveUserPreferenceBenchmarkData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.UserBenchmarkPreference> _result = ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.UserBenchmarkPreference>)(base.EndInvoke("RetrieveUserPreferenceBenchmarkData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetrieveMorningSnapshotData(System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.UserBenchmarkPreference> userBenchmarkPreference, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userBenchmarkPreference;
                System.IAsyncResult _result = base.BeginInvoke("RetrieveMorningSnapshotData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.MorningSnapshotData> EndRetrieveMorningSnapshotData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.MorningSnapshotData> _result = ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.MorningSnapshotData>)(base.EndInvoke("RetrieveMorningSnapshotData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddUserPreferenceBenchmarkGroup(string userName, string groupName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = userName;
                _args[1] = groupName;
                System.IAsyncResult _result = base.BeginInvoke("AddUserPreferenceBenchmarkGroup", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndAddUserPreferenceBenchmarkGroup(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("AddUserPreferenceBenchmarkGroup", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRemoveUserPreferenceBenchmarkGroup(string userName, string groupname, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = userName;
                _args[1] = groupname;
                System.IAsyncResult _result = base.BeginInvoke("RemoveUserPreferenceBenchmarkGroup", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndRemoveUserPreferenceBenchmarkGroup(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("RemoveUserPreferenceBenchmarkGroup", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddUserPreferenceBenchmark(string userName, GreenField.ServiceCaller.ProxyDataDefinitions.UserBenchmarkPreference userBenchmarkPreference, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = userName;
                _args[1] = userBenchmarkPreference;
                System.IAsyncResult _result = base.BeginInvoke("AddUserPreferenceBenchmark", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndAddUserPreferenceBenchmark(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("AddUserPreferenceBenchmark", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRemoveUserPreferenceBenchmark(string userName, GreenField.ServiceCaller.ProxyDataDefinitions.UserBenchmarkPreference userBenchmarkPreference, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = userName;
                _args[1] = userBenchmarkPreference;
                System.IAsyncResult _result = base.BeginInvoke("RemoveUserPreferenceBenchmark", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndRemoveUserPreferenceBenchmark(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("RemoveUserPreferenceBenchmark", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetrieveRelativePerformanceSectorData(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = fundSelectionData;
                _args[1] = benchmarkSelectionData;
                _args[2] = effectiveDate;
                System.IAsyncResult _result = base.BeginInvoke("RetrieveRelativePerformanceSectorData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceSectorData> EndRetrieveRelativePerformanceSectorData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceSectorData> _result = ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceSectorData>)(base.EndInvoke("RetrieveRelativePerformanceSectorData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetrieveRelativePerformanceCountryActivePositionData(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, string countryID, System.Nullable<int> sectorID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = fundSelectionData;
                _args[1] = benchmarkSelectionData;
                _args[2] = effectiveDate;
                _args[3] = countryID;
                _args[4] = sectorID;
                System.IAsyncResult _result = base.BeginInvoke("RetrieveRelativePerformanceCountryActivePositionData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceActivePositionData> EndRetrieveRelativePerformanceCountryActivePositionData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceActivePositionData> _result = ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceActivePositionData>)(base.EndInvoke("RetrieveRelativePerformanceCountryActivePositionData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetrieveRelativePerformanceSectorActivePositionData(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, string countryID, System.Nullable<int> sectorID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = fundSelectionData;
                _args[1] = benchmarkSelectionData;
                _args[2] = effectiveDate;
                _args[3] = countryID;
                _args[4] = sectorID;
                System.IAsyncResult _result = base.BeginInvoke("RetrieveRelativePerformanceSectorActivePositionData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceActivePositionData> EndRetrieveRelativePerformanceSectorActivePositionData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceActivePositionData> _result = ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceActivePositionData>)(base.EndInvoke("RetrieveRelativePerformanceSectorActivePositionData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetrieveRelativePerformanceSecurityActivePositionData(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, string countryID, System.Nullable<int> sectorID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = fundSelectionData;
                _args[1] = benchmarkSelectionData;
                _args[2] = effectiveDate;
                _args[3] = countryID;
                _args[4] = sectorID;
                System.IAsyncResult _result = base.BeginInvoke("RetrieveRelativePerformanceSecurityActivePositionData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceActivePositionData> EndRetrieveRelativePerformanceSecurityActivePositionData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceActivePositionData> _result = ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceActivePositionData>)(base.EndInvoke("RetrieveRelativePerformanceSecurityActivePositionData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetrieveRelativePerformanceSecurityData(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, string countryID, System.Nullable<int> sectorID, int order, System.Nullable<int> maxRecords, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[7];
                _args[0] = fundSelectionData;
                _args[1] = benchmarkSelectionData;
                _args[2] = effectiveDate;
                _args[3] = countryID;
                _args[4] = sectorID;
                _args[5] = order;
                _args[6] = maxRecords;
                System.IAsyncResult _result = base.BeginInvoke("RetrieveRelativePerformanceSecurityData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceSecurityData> EndRetrieveRelativePerformanceSecurityData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceSecurityData> _result = ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceSecurityData>)(base.EndInvoke("RetrieveRelativePerformanceSecurityData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetrieveRelativePerformanceData(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = fundSelectionData;
                _args[1] = benchmarkSelectionData;
                _args[2] = effectiveDate;
                System.IAsyncResult _result = base.BeginInvoke("RetrieveRelativePerformanceData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceData> EndRetrieveRelativePerformanceData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceData> _result = ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.RelativePerformanceData>)(base.EndInvoke("RetrieveRelativePerformanceData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetrievePerformanceGraphData(string nameOfFund, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = nameOfFund;
                System.IAsyncResult _result = base.BeginInvoke("RetrievePerformanceGraphData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.PerformanceGraphData> EndRetrievePerformanceGraphData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.PerformanceGraphData> _result = ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.PerformanceGraphData>)(base.EndInvoke("RetrievePerformanceGraphData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetrievePerformanceGridData(string nameOfFund, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = nameOfFund;
                System.IAsyncResult _result = base.BeginInvoke("RetrievePerformanceGridData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.PerformanceGridData> EndRetrievePerformanceGridData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.PerformanceGridData> _result = ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.PerformanceGridData>)(base.EndInvoke("RetrievePerformanceGridData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetrieveAttributionData(string nameOfFund, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = nameOfFund;
                System.IAsyncResult _result = base.BeginInvoke("RetrieveAttributionData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.AttributionData> EndRetrieveAttributionData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.AttributionData> _result = ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.AttributionData>)(base.EndInvoke("RetrieveAttributionData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetrieveUnrealizedGainLossData(string entityIdentifier, System.DateTime startDateTime, System.DateTime endDateTime, string frequencyInterval, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = entityIdentifier;
                _args[1] = startDateTime;
                _args[2] = endDateTime;
                _args[3] = frequencyInterval;
                System.IAsyncResult _result = base.BeginInvoke("RetrieveUnrealizedGainLossData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.UnrealizedGainLossData> EndRetrieveUnrealizedGainLossData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.UnrealizedGainLossData> _result = ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.UnrealizedGainLossData>)(base.EndInvoke("RetrieveUnrealizedGainLossData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetrieveHoldingsPercentageData(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, System.DateTime effectiveDate, string filterType, string filterValue, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = fundSelectionData;
                _args[1] = effectiveDate;
                _args[2] = filterType;
                _args[3] = filterValue;
                System.IAsyncResult _result = base.BeginInvoke("RetrieveHoldingsPercentageData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.HoldingsPercentageData> EndRetrieveHoldingsPercentageData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.HoldingsPercentageData> _result = ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.HoldingsPercentageData>)(base.EndInvoke("RetrieveHoldingsPercentageData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetrieveHoldingsPercentageDataForRegion(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, System.DateTime effectiveDate, string filterType, string filterValue, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = fundSelectionData;
                _args[1] = effectiveDate;
                _args[2] = filterType;
                _args[3] = filterValue;
                System.IAsyncResult _result = base.BeginInvoke("RetrieveHoldingsPercentageDataForRegion", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.HoldingsPercentageData> EndRetrieveHoldingsPercentageDataForRegion(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.HoldingsPercentageData> _result = ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.HoldingsPercentageData>)(base.EndInvoke("RetrieveHoldingsPercentageDataForRegion", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetrieveTopBenchmarkSecuritiesData(GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = benchmarkSelectionData;
                _args[1] = effectiveDate;
                System.IAsyncResult _result = base.BeginInvoke("RetrieveTopBenchmarkSecuritiesData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.TopBenchmarkSecuritiesData> EndRetrieveTopBenchmarkSecuritiesData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.TopBenchmarkSecuritiesData> _result = ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.TopBenchmarkSecuritiesData>)(base.EndInvoke("RetrieveTopBenchmarkSecuritiesData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetrievePortfolioRiskReturnData(GreenField.ServiceCaller.ProxyDataDefinitions.FundSelectionData fundSelectionData, GreenField.ServiceCaller.ProxyDataDefinitions.BenchmarkSelectionData benchmarkSelectionData, System.DateTime effectiveDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = fundSelectionData;
                _args[1] = benchmarkSelectionData;
                _args[2] = effectiveDate;
                System.IAsyncResult _result = base.BeginInvoke("RetrievePortfolioRiskReturnData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.PortfolioRiskReturnData> EndRetrievePortfolioRiskReturnData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.PortfolioRiskReturnData> _result = ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.PortfolioRiskReturnData>)(base.EndInvoke("RetrievePortfolioRiskReturnData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetrieveHeatMapData(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("RetrieveHeatMapData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.HeatMapData> EndRetrieveHeatMapData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.HeatMapData> _result = ((System.Collections.Generic.List<GreenField.ServiceCaller.ProxyDataDefinitions.HeatMapData>)(base.EndInvoke("RetrieveHeatMapData", _args, result)));
                return _result;
            }
        }
    }
}
