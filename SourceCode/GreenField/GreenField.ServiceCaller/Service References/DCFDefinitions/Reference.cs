//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace GreenField.ServiceCaller.DCFDefinitions {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
    public partial class ServiceFault : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DescriptionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DCFCashFlowData", Namespace="http://schemas.datacontract.org/2004/07/GreenField.DAL", IsReference=true)]
    public partial class DCFCashFlowData : GreenField.ServiceCaller.DCFDefinitions.ComplexObject {
        
        private decimal AMOUNTField;
        
        private decimal DISCOUNTING_FACTORField;
        
        private decimal FREE_CASH_FLOWField;
        
        private int PERIOD_YEARField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AMOUNT {
            get {
                return this.AMOUNTField;
            }
            set {
                if ((this.AMOUNTField.Equals(value) != true)) {
                    this.AMOUNTField = value;
                    this.RaisePropertyChanged("AMOUNT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DISCOUNTING_FACTOR {
            get {
                return this.DISCOUNTING_FACTORField;
            }
            set {
                if ((this.DISCOUNTING_FACTORField.Equals(value) != true)) {
                    this.DISCOUNTING_FACTORField = value;
                    this.RaisePropertyChanged("DISCOUNTING_FACTOR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FREE_CASH_FLOW {
            get {
                return this.FREE_CASH_FLOWField;
            }
            set {
                if ((this.FREE_CASH_FLOWField.Equals(value) != true)) {
                    this.FREE_CASH_FLOWField = value;
                    this.RaisePropertyChanged("FREE_CASH_FLOW");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PERIOD_YEAR {
            get {
                return this.PERIOD_YEARField;
            }
            set {
                if ((this.PERIOD_YEARField.Equals(value) != true)) {
                    this.PERIOD_YEARField = value;
                    this.RaisePropertyChanged("PERIOD_YEAR");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StructuralObject", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses", IsReference=true)]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.DCFDefinitions.EntityObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.DCFDefinitions.PERIOD_FINANCIALS))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.DCFDefinitions.ComplexObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.DCFDefinitions.DCFCashFlowData))]
    public partial class StructuralObject : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityObject", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses", IsReference=true)]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.DCFDefinitions.PERIOD_FINANCIALS))]
    public partial class EntityObject : GreenField.ServiceCaller.DCFDefinitions.StructuralObject {
        
        private GreenField.ServiceCaller.DCFDefinitions.EntityKey EntityKeyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GreenField.ServiceCaller.DCFDefinitions.EntityKey EntityKey {
            get {
                return this.EntityKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityKeyField, value) != true)) {
                    this.EntityKeyField = value;
                    this.RaisePropertyChanged("EntityKey");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PERIOD_FINANCIALS", Namespace="http://schemas.datacontract.org/2004/07/GreenField.DAL", IsReference=true)]
    public partial class PERIOD_FINANCIALS : GreenField.ServiceCaller.DCFDefinitions.EntityObject {
        
        private decimal AMOUNTField;
        
        private string AMOUNT_TYPEField;
        
        private string CALCULATION_DIAGRAMField;
        
        private string COA_TYPEField;
        
        private string CURRENCYField;
        
        private int DATA_IDField;
        
        private string DATA_SOURCEField;
        
        private string FISCAL_TYPEField;
        
        private string ISSUER_IDField;
        
        private System.DateTime PERIOD_END_DATEField;
        
        private string PERIOD_TYPEField;
        
        private int PERIOD_YEARField;
        
        private string ROOT_SOURCEField;
        
        private System.DateTime ROOT_SOURCE_DATEField;
        
        private string SECURITY_IDField;
        
        private string SOURCE_CURRENCYField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AMOUNT {
            get {
                return this.AMOUNTField;
            }
            set {
                if ((this.AMOUNTField.Equals(value) != true)) {
                    this.AMOUNTField = value;
                    this.RaisePropertyChanged("AMOUNT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AMOUNT_TYPE {
            get {
                return this.AMOUNT_TYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.AMOUNT_TYPEField, value) != true)) {
                    this.AMOUNT_TYPEField = value;
                    this.RaisePropertyChanged("AMOUNT_TYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CALCULATION_DIAGRAM {
            get {
                return this.CALCULATION_DIAGRAMField;
            }
            set {
                if ((object.ReferenceEquals(this.CALCULATION_DIAGRAMField, value) != true)) {
                    this.CALCULATION_DIAGRAMField = value;
                    this.RaisePropertyChanged("CALCULATION_DIAGRAM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COA_TYPE {
            get {
                return this.COA_TYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.COA_TYPEField, value) != true)) {
                    this.COA_TYPEField = value;
                    this.RaisePropertyChanged("COA_TYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CURRENCY {
            get {
                return this.CURRENCYField;
            }
            set {
                if ((object.ReferenceEquals(this.CURRENCYField, value) != true)) {
                    this.CURRENCYField = value;
                    this.RaisePropertyChanged("CURRENCY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DATA_ID {
            get {
                return this.DATA_IDField;
            }
            set {
                if ((this.DATA_IDField.Equals(value) != true)) {
                    this.DATA_IDField = value;
                    this.RaisePropertyChanged("DATA_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DATA_SOURCE {
            get {
                return this.DATA_SOURCEField;
            }
            set {
                if ((object.ReferenceEquals(this.DATA_SOURCEField, value) != true)) {
                    this.DATA_SOURCEField = value;
                    this.RaisePropertyChanged("DATA_SOURCE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FISCAL_TYPE {
            get {
                return this.FISCAL_TYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.FISCAL_TYPEField, value) != true)) {
                    this.FISCAL_TYPEField = value;
                    this.RaisePropertyChanged("FISCAL_TYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ISSUER_ID {
            get {
                return this.ISSUER_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.ISSUER_IDField, value) != true)) {
                    this.ISSUER_IDField = value;
                    this.RaisePropertyChanged("ISSUER_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PERIOD_END_DATE {
            get {
                return this.PERIOD_END_DATEField;
            }
            set {
                if ((this.PERIOD_END_DATEField.Equals(value) != true)) {
                    this.PERIOD_END_DATEField = value;
                    this.RaisePropertyChanged("PERIOD_END_DATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PERIOD_TYPE {
            get {
                return this.PERIOD_TYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.PERIOD_TYPEField, value) != true)) {
                    this.PERIOD_TYPEField = value;
                    this.RaisePropertyChanged("PERIOD_TYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PERIOD_YEAR {
            get {
                return this.PERIOD_YEARField;
            }
            set {
                if ((this.PERIOD_YEARField.Equals(value) != true)) {
                    this.PERIOD_YEARField = value;
                    this.RaisePropertyChanged("PERIOD_YEAR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ROOT_SOURCE {
            get {
                return this.ROOT_SOURCEField;
            }
            set {
                if ((object.ReferenceEquals(this.ROOT_SOURCEField, value) != true)) {
                    this.ROOT_SOURCEField = value;
                    this.RaisePropertyChanged("ROOT_SOURCE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ROOT_SOURCE_DATE {
            get {
                return this.ROOT_SOURCE_DATEField;
            }
            set {
                if ((this.ROOT_SOURCE_DATEField.Equals(value) != true)) {
                    this.ROOT_SOURCE_DATEField = value;
                    this.RaisePropertyChanged("ROOT_SOURCE_DATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SECURITY_ID {
            get {
                return this.SECURITY_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.SECURITY_IDField, value) != true)) {
                    this.SECURITY_IDField = value;
                    this.RaisePropertyChanged("SECURITY_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SOURCE_CURRENCY {
            get {
                return this.SOURCE_CURRENCYField;
            }
            set {
                if ((object.ReferenceEquals(this.SOURCE_CURRENCYField, value) != true)) {
                    this.SOURCE_CURRENCYField = value;
                    this.RaisePropertyChanged("SOURCE_CURRENCY");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ComplexObject", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses", IsReference=true)]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.DCFDefinitions.DCFCashFlowData))]
    public partial class ComplexObject : GreenField.ServiceCaller.DCFDefinitions.StructuralObject {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityKey", Namespace="http://schemas.datacontract.org/2004/07/System.Data", IsReference=true)]
    public partial class EntityKey : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string EntityContainerNameField;
        
        private System.Collections.Generic.List<GreenField.ServiceCaller.DCFDefinitions.EntityKeyMember> EntityKeyValuesField;
        
        private string EntitySetNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityContainerName {
            get {
                return this.EntityContainerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityContainerNameField, value) != true)) {
                    this.EntityContainerNameField = value;
                    this.RaisePropertyChanged("EntityContainerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<GreenField.ServiceCaller.DCFDefinitions.EntityKeyMember> EntityKeyValues {
            get {
                return this.EntityKeyValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityKeyValuesField, value) != true)) {
                    this.EntityKeyValuesField = value;
                    this.RaisePropertyChanged("EntityKeyValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntitySetName {
            get {
                return this.EntitySetNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntitySetNameField, value) != true)) {
                    this.EntitySetNameField = value;
                    this.RaisePropertyChanged("EntitySetName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityKeyMember", Namespace="http://schemas.datacontract.org/2004/07/System.Data")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.DCFDefinitions.EntityKey))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<GreenField.ServiceCaller.DCFDefinitions.EntityKeyMember>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.DCFDefinitions.ComplexObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.DCFDefinitions.StructuralObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.DCFDefinitions.EntityObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<GreenField.ServiceCaller.DCFDefinitions.DCFCashFlowData>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.DCFDefinitions.DCFCashFlowData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<GreenField.ServiceCaller.DCFDefinitions.PERIOD_FINANCIALS>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.DCFDefinitions.PERIOD_FINANCIALS))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.DCFDefinitions.ServiceFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.DataContracts.EntitySelectionData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<GreenField.DataContracts.DCFAnalysisSummaryData>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.DataContracts.DCFAnalysisSummaryData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<GreenField.DataContracts.DCFTerminalValueCalculationsData>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.DataContracts.DCFTerminalValueCalculationsData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<GreenField.DataContracts.FreeCashFlowsData>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.DataContracts.FreeCashFlowsData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<GreenField.DataContracts.DCFSummaryData>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.DataContracts.DCFSummaryData))]
    public partial class EntityKeyMember : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string KeyField;
        
        private object ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DCFDefinitions.DCFOperations")]
    public interface DCFOperations {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DCFOperations/RetrieveDCFAnalysisData", ReplyAction="http://tempuri.org/DCFOperations/RetrieveDCFAnalysisDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.DCFDefinitions.ServiceFault), Action="http://tempuri.org/DCFOperations/RetrieveDCFAnalysisDataServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginRetrieveDCFAnalysisData(GreenField.DataContracts.EntitySelectionData entitySelectionData, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<GreenField.DataContracts.DCFAnalysisSummaryData> EndRetrieveDCFAnalysisData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DCFOperations/RetrieveTerminalValueCalculationsData", ReplyAction="http://tempuri.org/DCFOperations/RetrieveTerminalValueCalculationsDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.DCFDefinitions.ServiceFault), Action="http://tempuri.org/DCFOperations/RetrieveTerminalValueCalculationsDataServiceFaul" +
            "tFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginRetrieveTerminalValueCalculationsData(GreenField.DataContracts.EntitySelectionData entitySelectionData, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<GreenField.DataContracts.DCFTerminalValueCalculationsData> EndRetrieveTerminalValueCalculationsData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DCFOperations/RetrieveFreeCashFlowsData", ReplyAction="http://tempuri.org/DCFOperations/RetrieveFreeCashFlowsDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.DCFDefinitions.ServiceFault), Action="http://tempuri.org/DCFOperations/RetrieveFreeCashFlowsDataServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginRetrieveFreeCashFlowsData(GreenField.DataContracts.EntitySelectionData entitySelectionData, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<GreenField.DataContracts.FreeCashFlowsData> EndRetrieveFreeCashFlowsData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DCFOperations/RetrieveCashFlows", ReplyAction="http://tempuri.org/DCFOperations/RetrieveCashFlowsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.DCFDefinitions.ServiceFault), Action="http://tempuri.org/DCFOperations/RetrieveCashFlowsServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginRetrieveCashFlows(GreenField.DataContracts.EntitySelectionData entitySelectionData, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<GreenField.ServiceCaller.DCFDefinitions.DCFCashFlowData> EndRetrieveCashFlows(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DCFOperations/RetrieveSummaryData", ReplyAction="http://tempuri.org/DCFOperations/RetrieveSummaryDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.DCFDefinitions.ServiceFault), Action="http://tempuri.org/DCFOperations/RetrieveSummaryDataServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginRetrieveSummaryData(GreenField.DataContracts.EntitySelectionData entitySelectionData, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<GreenField.DataContracts.DCFSummaryData> EndRetrieveSummaryData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DCFOperations/RetrieveCurrentPriceData", ReplyAction="http://tempuri.org/DCFOperations/RetrieveCurrentPriceDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.DCFDefinitions.ServiceFault), Action="http://tempuri.org/DCFOperations/RetrieveCurrentPriceDataServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginRetrieveCurrentPriceData(GreenField.DataContracts.EntitySelectionData entitySelectionData, System.AsyncCallback callback, object asyncState);
        
        System.Nullable<decimal> EndRetrieveCurrentPriceData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DCFOperations/RetrieveCountryName", ReplyAction="http://tempuri.org/DCFOperations/RetrieveCountryNameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.DCFDefinitions.ServiceFault), Action="http://tempuri.org/DCFOperations/RetrieveCountryNameServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginRetrieveCountryName(GreenField.DataContracts.EntitySelectionData entitySelectionData, System.AsyncCallback callback, object asyncState);
        
        string EndRetrieveCountryName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DCFOperations/RetrieveFairValue", ReplyAction="http://tempuri.org/DCFOperations/RetrieveFairValueResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.DCFDefinitions.ServiceFault), Action="http://tempuri.org/DCFOperations/RetrieveFairValueServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginRetrieveFairValue(GreenField.DataContracts.EntitySelectionData entitySelectionData, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<GreenField.ServiceCaller.DCFDefinitions.PERIOD_FINANCIALS> EndRetrieveFairValue(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DCFOperations/InsertFairValues", ReplyAction="http://tempuri.org/DCFOperations/InsertFairValuesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.DCFDefinitions.ServiceFault), Action="http://tempuri.org/DCFOperations/InsertFairValuesServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginInsertFairValues(GreenField.DataContracts.EntitySelectionData entitySelectionData, string valueType, System.Nullable<int> fvMeasure, System.Nullable<decimal> fvbuy, System.Nullable<decimal> fvSell, System.Nullable<decimal> currentMeasureValue, System.Nullable<decimal> upside, System.Nullable<System.DateTime> updated, System.AsyncCallback callback, object asyncState);
        
        bool EndInsertFairValues(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface DCFOperationsChannel : GreenField.ServiceCaller.DCFDefinitions.DCFOperations, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrieveDCFAnalysisDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrieveDCFAnalysisDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<GreenField.DataContracts.DCFAnalysisSummaryData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<GreenField.DataContracts.DCFAnalysisSummaryData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrieveTerminalValueCalculationsDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrieveTerminalValueCalculationsDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<GreenField.DataContracts.DCFTerminalValueCalculationsData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<GreenField.DataContracts.DCFTerminalValueCalculationsData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrieveFreeCashFlowsDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrieveFreeCashFlowsDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<GreenField.DataContracts.FreeCashFlowsData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<GreenField.DataContracts.FreeCashFlowsData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrieveCashFlowsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrieveCashFlowsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<GreenField.ServiceCaller.DCFDefinitions.DCFCashFlowData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<GreenField.ServiceCaller.DCFDefinitions.DCFCashFlowData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrieveSummaryDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrieveSummaryDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<GreenField.DataContracts.DCFSummaryData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<GreenField.DataContracts.DCFSummaryData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrieveCurrentPriceDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrieveCurrentPriceDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Nullable<decimal> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Nullable<decimal>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrieveCountryNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrieveCountryNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrieveFairValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrieveFairValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<GreenField.ServiceCaller.DCFDefinitions.PERIOD_FINANCIALS> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<GreenField.ServiceCaller.DCFDefinitions.PERIOD_FINANCIALS>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertFairValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertFairValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DCFOperationsClient : System.ServiceModel.ClientBase<GreenField.ServiceCaller.DCFDefinitions.DCFOperations>, GreenField.ServiceCaller.DCFDefinitions.DCFOperations {
        
        private BeginOperationDelegate onBeginRetrieveDCFAnalysisDataDelegate;
        
        private EndOperationDelegate onEndRetrieveDCFAnalysisDataDelegate;
        
        private System.Threading.SendOrPostCallback onRetrieveDCFAnalysisDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrieveTerminalValueCalculationsDataDelegate;
        
        private EndOperationDelegate onEndRetrieveTerminalValueCalculationsDataDelegate;
        
        private System.Threading.SendOrPostCallback onRetrieveTerminalValueCalculationsDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrieveFreeCashFlowsDataDelegate;
        
        private EndOperationDelegate onEndRetrieveFreeCashFlowsDataDelegate;
        
        private System.Threading.SendOrPostCallback onRetrieveFreeCashFlowsDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrieveCashFlowsDelegate;
        
        private EndOperationDelegate onEndRetrieveCashFlowsDelegate;
        
        private System.Threading.SendOrPostCallback onRetrieveCashFlowsCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrieveSummaryDataDelegate;
        
        private EndOperationDelegate onEndRetrieveSummaryDataDelegate;
        
        private System.Threading.SendOrPostCallback onRetrieveSummaryDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrieveCurrentPriceDataDelegate;
        
        private EndOperationDelegate onEndRetrieveCurrentPriceDataDelegate;
        
        private System.Threading.SendOrPostCallback onRetrieveCurrentPriceDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrieveCountryNameDelegate;
        
        private EndOperationDelegate onEndRetrieveCountryNameDelegate;
        
        private System.Threading.SendOrPostCallback onRetrieveCountryNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrieveFairValueDelegate;
        
        private EndOperationDelegate onEndRetrieveFairValueDelegate;
        
        private System.Threading.SendOrPostCallback onRetrieveFairValueCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertFairValuesDelegate;
        
        private EndOperationDelegate onEndInsertFairValuesDelegate;
        
        private System.Threading.SendOrPostCallback onInsertFairValuesCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public DCFOperationsClient() {
        }
        
        public DCFOperationsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DCFOperationsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DCFOperationsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DCFOperationsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<RetrieveDCFAnalysisDataCompletedEventArgs> RetrieveDCFAnalysisDataCompleted;
        
        public event System.EventHandler<RetrieveTerminalValueCalculationsDataCompletedEventArgs> RetrieveTerminalValueCalculationsDataCompleted;
        
        public event System.EventHandler<RetrieveFreeCashFlowsDataCompletedEventArgs> RetrieveFreeCashFlowsDataCompleted;
        
        public event System.EventHandler<RetrieveCashFlowsCompletedEventArgs> RetrieveCashFlowsCompleted;
        
        public event System.EventHandler<RetrieveSummaryDataCompletedEventArgs> RetrieveSummaryDataCompleted;
        
        public event System.EventHandler<RetrieveCurrentPriceDataCompletedEventArgs> RetrieveCurrentPriceDataCompleted;
        
        public event System.EventHandler<RetrieveCountryNameCompletedEventArgs> RetrieveCountryNameCompleted;
        
        public event System.EventHandler<RetrieveFairValueCompletedEventArgs> RetrieveFairValueCompleted;
        
        public event System.EventHandler<InsertFairValuesCompletedEventArgs> InsertFairValuesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.DCFDefinitions.DCFOperations.BeginRetrieveDCFAnalysisData(GreenField.DataContracts.EntitySelectionData entitySelectionData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrieveDCFAnalysisData(entitySelectionData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<GreenField.DataContracts.DCFAnalysisSummaryData> GreenField.ServiceCaller.DCFDefinitions.DCFOperations.EndRetrieveDCFAnalysisData(System.IAsyncResult result) {
            return base.Channel.EndRetrieveDCFAnalysisData(result);
        }
        
        private System.IAsyncResult OnBeginRetrieveDCFAnalysisData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            GreenField.DataContracts.EntitySelectionData entitySelectionData = ((GreenField.DataContracts.EntitySelectionData)(inValues[0]));
            return ((GreenField.ServiceCaller.DCFDefinitions.DCFOperations)(this)).BeginRetrieveDCFAnalysisData(entitySelectionData, callback, asyncState);
        }
        
        private object[] OnEndRetrieveDCFAnalysisData(System.IAsyncResult result) {
            System.Collections.Generic.List<GreenField.DataContracts.DCFAnalysisSummaryData> retVal = ((GreenField.ServiceCaller.DCFDefinitions.DCFOperations)(this)).EndRetrieveDCFAnalysisData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrieveDCFAnalysisDataCompleted(object state) {
            if ((this.RetrieveDCFAnalysisDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrieveDCFAnalysisDataCompleted(this, new RetrieveDCFAnalysisDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrieveDCFAnalysisDataAsync(GreenField.DataContracts.EntitySelectionData entitySelectionData) {
            this.RetrieveDCFAnalysisDataAsync(entitySelectionData, null);
        }
        
        public void RetrieveDCFAnalysisDataAsync(GreenField.DataContracts.EntitySelectionData entitySelectionData, object userState) {
            if ((this.onBeginRetrieveDCFAnalysisDataDelegate == null)) {
                this.onBeginRetrieveDCFAnalysisDataDelegate = new BeginOperationDelegate(this.OnBeginRetrieveDCFAnalysisData);
            }
            if ((this.onEndRetrieveDCFAnalysisDataDelegate == null)) {
                this.onEndRetrieveDCFAnalysisDataDelegate = new EndOperationDelegate(this.OnEndRetrieveDCFAnalysisData);
            }
            if ((this.onRetrieveDCFAnalysisDataCompletedDelegate == null)) {
                this.onRetrieveDCFAnalysisDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrieveDCFAnalysisDataCompleted);
            }
            base.InvokeAsync(this.onBeginRetrieveDCFAnalysisDataDelegate, new object[] {
                        entitySelectionData}, this.onEndRetrieveDCFAnalysisDataDelegate, this.onRetrieveDCFAnalysisDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.DCFDefinitions.DCFOperations.BeginRetrieveTerminalValueCalculationsData(GreenField.DataContracts.EntitySelectionData entitySelectionData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrieveTerminalValueCalculationsData(entitySelectionData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<GreenField.DataContracts.DCFTerminalValueCalculationsData> GreenField.ServiceCaller.DCFDefinitions.DCFOperations.EndRetrieveTerminalValueCalculationsData(System.IAsyncResult result) {
            return base.Channel.EndRetrieveTerminalValueCalculationsData(result);
        }
        
        private System.IAsyncResult OnBeginRetrieveTerminalValueCalculationsData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            GreenField.DataContracts.EntitySelectionData entitySelectionData = ((GreenField.DataContracts.EntitySelectionData)(inValues[0]));
            return ((GreenField.ServiceCaller.DCFDefinitions.DCFOperations)(this)).BeginRetrieveTerminalValueCalculationsData(entitySelectionData, callback, asyncState);
        }
        
        private object[] OnEndRetrieveTerminalValueCalculationsData(System.IAsyncResult result) {
            System.Collections.Generic.List<GreenField.DataContracts.DCFTerminalValueCalculationsData> retVal = ((GreenField.ServiceCaller.DCFDefinitions.DCFOperations)(this)).EndRetrieveTerminalValueCalculationsData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrieveTerminalValueCalculationsDataCompleted(object state) {
            if ((this.RetrieveTerminalValueCalculationsDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrieveTerminalValueCalculationsDataCompleted(this, new RetrieveTerminalValueCalculationsDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrieveTerminalValueCalculationsDataAsync(GreenField.DataContracts.EntitySelectionData entitySelectionData) {
            this.RetrieveTerminalValueCalculationsDataAsync(entitySelectionData, null);
        }
        
        public void RetrieveTerminalValueCalculationsDataAsync(GreenField.DataContracts.EntitySelectionData entitySelectionData, object userState) {
            if ((this.onBeginRetrieveTerminalValueCalculationsDataDelegate == null)) {
                this.onBeginRetrieveTerminalValueCalculationsDataDelegate = new BeginOperationDelegate(this.OnBeginRetrieveTerminalValueCalculationsData);
            }
            if ((this.onEndRetrieveTerminalValueCalculationsDataDelegate == null)) {
                this.onEndRetrieveTerminalValueCalculationsDataDelegate = new EndOperationDelegate(this.OnEndRetrieveTerminalValueCalculationsData);
            }
            if ((this.onRetrieveTerminalValueCalculationsDataCompletedDelegate == null)) {
                this.onRetrieveTerminalValueCalculationsDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrieveTerminalValueCalculationsDataCompleted);
            }
            base.InvokeAsync(this.onBeginRetrieveTerminalValueCalculationsDataDelegate, new object[] {
                        entitySelectionData}, this.onEndRetrieveTerminalValueCalculationsDataDelegate, this.onRetrieveTerminalValueCalculationsDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.DCFDefinitions.DCFOperations.BeginRetrieveFreeCashFlowsData(GreenField.DataContracts.EntitySelectionData entitySelectionData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrieveFreeCashFlowsData(entitySelectionData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<GreenField.DataContracts.FreeCashFlowsData> GreenField.ServiceCaller.DCFDefinitions.DCFOperations.EndRetrieveFreeCashFlowsData(System.IAsyncResult result) {
            return base.Channel.EndRetrieveFreeCashFlowsData(result);
        }
        
        private System.IAsyncResult OnBeginRetrieveFreeCashFlowsData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            GreenField.DataContracts.EntitySelectionData entitySelectionData = ((GreenField.DataContracts.EntitySelectionData)(inValues[0]));
            return ((GreenField.ServiceCaller.DCFDefinitions.DCFOperations)(this)).BeginRetrieveFreeCashFlowsData(entitySelectionData, callback, asyncState);
        }
        
        private object[] OnEndRetrieveFreeCashFlowsData(System.IAsyncResult result) {
            System.Collections.Generic.List<GreenField.DataContracts.FreeCashFlowsData> retVal = ((GreenField.ServiceCaller.DCFDefinitions.DCFOperations)(this)).EndRetrieveFreeCashFlowsData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrieveFreeCashFlowsDataCompleted(object state) {
            if ((this.RetrieveFreeCashFlowsDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrieveFreeCashFlowsDataCompleted(this, new RetrieveFreeCashFlowsDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrieveFreeCashFlowsDataAsync(GreenField.DataContracts.EntitySelectionData entitySelectionData) {
            this.RetrieveFreeCashFlowsDataAsync(entitySelectionData, null);
        }
        
        public void RetrieveFreeCashFlowsDataAsync(GreenField.DataContracts.EntitySelectionData entitySelectionData, object userState) {
            if ((this.onBeginRetrieveFreeCashFlowsDataDelegate == null)) {
                this.onBeginRetrieveFreeCashFlowsDataDelegate = new BeginOperationDelegate(this.OnBeginRetrieveFreeCashFlowsData);
            }
            if ((this.onEndRetrieveFreeCashFlowsDataDelegate == null)) {
                this.onEndRetrieveFreeCashFlowsDataDelegate = new EndOperationDelegate(this.OnEndRetrieveFreeCashFlowsData);
            }
            if ((this.onRetrieveFreeCashFlowsDataCompletedDelegate == null)) {
                this.onRetrieveFreeCashFlowsDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrieveFreeCashFlowsDataCompleted);
            }
            base.InvokeAsync(this.onBeginRetrieveFreeCashFlowsDataDelegate, new object[] {
                        entitySelectionData}, this.onEndRetrieveFreeCashFlowsDataDelegate, this.onRetrieveFreeCashFlowsDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.DCFDefinitions.DCFOperations.BeginRetrieveCashFlows(GreenField.DataContracts.EntitySelectionData entitySelectionData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrieveCashFlows(entitySelectionData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<GreenField.ServiceCaller.DCFDefinitions.DCFCashFlowData> GreenField.ServiceCaller.DCFDefinitions.DCFOperations.EndRetrieveCashFlows(System.IAsyncResult result) {
            return base.Channel.EndRetrieveCashFlows(result);
        }
        
        private System.IAsyncResult OnBeginRetrieveCashFlows(object[] inValues, System.AsyncCallback callback, object asyncState) {
            GreenField.DataContracts.EntitySelectionData entitySelectionData = ((GreenField.DataContracts.EntitySelectionData)(inValues[0]));
            return ((GreenField.ServiceCaller.DCFDefinitions.DCFOperations)(this)).BeginRetrieveCashFlows(entitySelectionData, callback, asyncState);
        }
        
        private object[] OnEndRetrieveCashFlows(System.IAsyncResult result) {
            System.Collections.Generic.List<GreenField.ServiceCaller.DCFDefinitions.DCFCashFlowData> retVal = ((GreenField.ServiceCaller.DCFDefinitions.DCFOperations)(this)).EndRetrieveCashFlows(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrieveCashFlowsCompleted(object state) {
            if ((this.RetrieveCashFlowsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrieveCashFlowsCompleted(this, new RetrieveCashFlowsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrieveCashFlowsAsync(GreenField.DataContracts.EntitySelectionData entitySelectionData) {
            this.RetrieveCashFlowsAsync(entitySelectionData, null);
        }
        
        public void RetrieveCashFlowsAsync(GreenField.DataContracts.EntitySelectionData entitySelectionData, object userState) {
            if ((this.onBeginRetrieveCashFlowsDelegate == null)) {
                this.onBeginRetrieveCashFlowsDelegate = new BeginOperationDelegate(this.OnBeginRetrieveCashFlows);
            }
            if ((this.onEndRetrieveCashFlowsDelegate == null)) {
                this.onEndRetrieveCashFlowsDelegate = new EndOperationDelegate(this.OnEndRetrieveCashFlows);
            }
            if ((this.onRetrieveCashFlowsCompletedDelegate == null)) {
                this.onRetrieveCashFlowsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrieveCashFlowsCompleted);
            }
            base.InvokeAsync(this.onBeginRetrieveCashFlowsDelegate, new object[] {
                        entitySelectionData}, this.onEndRetrieveCashFlowsDelegate, this.onRetrieveCashFlowsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.DCFDefinitions.DCFOperations.BeginRetrieveSummaryData(GreenField.DataContracts.EntitySelectionData entitySelectionData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrieveSummaryData(entitySelectionData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<GreenField.DataContracts.DCFSummaryData> GreenField.ServiceCaller.DCFDefinitions.DCFOperations.EndRetrieveSummaryData(System.IAsyncResult result) {
            return base.Channel.EndRetrieveSummaryData(result);
        }
        
        private System.IAsyncResult OnBeginRetrieveSummaryData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            GreenField.DataContracts.EntitySelectionData entitySelectionData = ((GreenField.DataContracts.EntitySelectionData)(inValues[0]));
            return ((GreenField.ServiceCaller.DCFDefinitions.DCFOperations)(this)).BeginRetrieveSummaryData(entitySelectionData, callback, asyncState);
        }
        
        private object[] OnEndRetrieveSummaryData(System.IAsyncResult result) {
            System.Collections.Generic.List<GreenField.DataContracts.DCFSummaryData> retVal = ((GreenField.ServiceCaller.DCFDefinitions.DCFOperations)(this)).EndRetrieveSummaryData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrieveSummaryDataCompleted(object state) {
            if ((this.RetrieveSummaryDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrieveSummaryDataCompleted(this, new RetrieveSummaryDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrieveSummaryDataAsync(GreenField.DataContracts.EntitySelectionData entitySelectionData) {
            this.RetrieveSummaryDataAsync(entitySelectionData, null);
        }
        
        public void RetrieveSummaryDataAsync(GreenField.DataContracts.EntitySelectionData entitySelectionData, object userState) {
            if ((this.onBeginRetrieveSummaryDataDelegate == null)) {
                this.onBeginRetrieveSummaryDataDelegate = new BeginOperationDelegate(this.OnBeginRetrieveSummaryData);
            }
            if ((this.onEndRetrieveSummaryDataDelegate == null)) {
                this.onEndRetrieveSummaryDataDelegate = new EndOperationDelegate(this.OnEndRetrieveSummaryData);
            }
            if ((this.onRetrieveSummaryDataCompletedDelegate == null)) {
                this.onRetrieveSummaryDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrieveSummaryDataCompleted);
            }
            base.InvokeAsync(this.onBeginRetrieveSummaryDataDelegate, new object[] {
                        entitySelectionData}, this.onEndRetrieveSummaryDataDelegate, this.onRetrieveSummaryDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.DCFDefinitions.DCFOperations.BeginRetrieveCurrentPriceData(GreenField.DataContracts.EntitySelectionData entitySelectionData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrieveCurrentPriceData(entitySelectionData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Nullable<decimal> GreenField.ServiceCaller.DCFDefinitions.DCFOperations.EndRetrieveCurrentPriceData(System.IAsyncResult result) {
            return base.Channel.EndRetrieveCurrentPriceData(result);
        }
        
        private System.IAsyncResult OnBeginRetrieveCurrentPriceData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            GreenField.DataContracts.EntitySelectionData entitySelectionData = ((GreenField.DataContracts.EntitySelectionData)(inValues[0]));
            return ((GreenField.ServiceCaller.DCFDefinitions.DCFOperations)(this)).BeginRetrieveCurrentPriceData(entitySelectionData, callback, asyncState);
        }
        
        private object[] OnEndRetrieveCurrentPriceData(System.IAsyncResult result) {
            System.Nullable<decimal> retVal = ((GreenField.ServiceCaller.DCFDefinitions.DCFOperations)(this)).EndRetrieveCurrentPriceData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrieveCurrentPriceDataCompleted(object state) {
            if ((this.RetrieveCurrentPriceDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrieveCurrentPriceDataCompleted(this, new RetrieveCurrentPriceDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrieveCurrentPriceDataAsync(GreenField.DataContracts.EntitySelectionData entitySelectionData) {
            this.RetrieveCurrentPriceDataAsync(entitySelectionData, null);
        }
        
        public void RetrieveCurrentPriceDataAsync(GreenField.DataContracts.EntitySelectionData entitySelectionData, object userState) {
            if ((this.onBeginRetrieveCurrentPriceDataDelegate == null)) {
                this.onBeginRetrieveCurrentPriceDataDelegate = new BeginOperationDelegate(this.OnBeginRetrieveCurrentPriceData);
            }
            if ((this.onEndRetrieveCurrentPriceDataDelegate == null)) {
                this.onEndRetrieveCurrentPriceDataDelegate = new EndOperationDelegate(this.OnEndRetrieveCurrentPriceData);
            }
            if ((this.onRetrieveCurrentPriceDataCompletedDelegate == null)) {
                this.onRetrieveCurrentPriceDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrieveCurrentPriceDataCompleted);
            }
            base.InvokeAsync(this.onBeginRetrieveCurrentPriceDataDelegate, new object[] {
                        entitySelectionData}, this.onEndRetrieveCurrentPriceDataDelegate, this.onRetrieveCurrentPriceDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.DCFDefinitions.DCFOperations.BeginRetrieveCountryName(GreenField.DataContracts.EntitySelectionData entitySelectionData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrieveCountryName(entitySelectionData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string GreenField.ServiceCaller.DCFDefinitions.DCFOperations.EndRetrieveCountryName(System.IAsyncResult result) {
            return base.Channel.EndRetrieveCountryName(result);
        }
        
        private System.IAsyncResult OnBeginRetrieveCountryName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            GreenField.DataContracts.EntitySelectionData entitySelectionData = ((GreenField.DataContracts.EntitySelectionData)(inValues[0]));
            return ((GreenField.ServiceCaller.DCFDefinitions.DCFOperations)(this)).BeginRetrieveCountryName(entitySelectionData, callback, asyncState);
        }
        
        private object[] OnEndRetrieveCountryName(System.IAsyncResult result) {
            string retVal = ((GreenField.ServiceCaller.DCFDefinitions.DCFOperations)(this)).EndRetrieveCountryName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrieveCountryNameCompleted(object state) {
            if ((this.RetrieveCountryNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrieveCountryNameCompleted(this, new RetrieveCountryNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrieveCountryNameAsync(GreenField.DataContracts.EntitySelectionData entitySelectionData) {
            this.RetrieveCountryNameAsync(entitySelectionData, null);
        }
        
        public void RetrieveCountryNameAsync(GreenField.DataContracts.EntitySelectionData entitySelectionData, object userState) {
            if ((this.onBeginRetrieveCountryNameDelegate == null)) {
                this.onBeginRetrieveCountryNameDelegate = new BeginOperationDelegate(this.OnBeginRetrieveCountryName);
            }
            if ((this.onEndRetrieveCountryNameDelegate == null)) {
                this.onEndRetrieveCountryNameDelegate = new EndOperationDelegate(this.OnEndRetrieveCountryName);
            }
            if ((this.onRetrieveCountryNameCompletedDelegate == null)) {
                this.onRetrieveCountryNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrieveCountryNameCompleted);
            }
            base.InvokeAsync(this.onBeginRetrieveCountryNameDelegate, new object[] {
                        entitySelectionData}, this.onEndRetrieveCountryNameDelegate, this.onRetrieveCountryNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.DCFDefinitions.DCFOperations.BeginRetrieveFairValue(GreenField.DataContracts.EntitySelectionData entitySelectionData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrieveFairValue(entitySelectionData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<GreenField.ServiceCaller.DCFDefinitions.PERIOD_FINANCIALS> GreenField.ServiceCaller.DCFDefinitions.DCFOperations.EndRetrieveFairValue(System.IAsyncResult result) {
            return base.Channel.EndRetrieveFairValue(result);
        }
        
        private System.IAsyncResult OnBeginRetrieveFairValue(object[] inValues, System.AsyncCallback callback, object asyncState) {
            GreenField.DataContracts.EntitySelectionData entitySelectionData = ((GreenField.DataContracts.EntitySelectionData)(inValues[0]));
            return ((GreenField.ServiceCaller.DCFDefinitions.DCFOperations)(this)).BeginRetrieveFairValue(entitySelectionData, callback, asyncState);
        }
        
        private object[] OnEndRetrieveFairValue(System.IAsyncResult result) {
            System.Collections.Generic.List<GreenField.ServiceCaller.DCFDefinitions.PERIOD_FINANCIALS> retVal = ((GreenField.ServiceCaller.DCFDefinitions.DCFOperations)(this)).EndRetrieveFairValue(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrieveFairValueCompleted(object state) {
            if ((this.RetrieveFairValueCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrieveFairValueCompleted(this, new RetrieveFairValueCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrieveFairValueAsync(GreenField.DataContracts.EntitySelectionData entitySelectionData) {
            this.RetrieveFairValueAsync(entitySelectionData, null);
        }
        
        public void RetrieveFairValueAsync(GreenField.DataContracts.EntitySelectionData entitySelectionData, object userState) {
            if ((this.onBeginRetrieveFairValueDelegate == null)) {
                this.onBeginRetrieveFairValueDelegate = new BeginOperationDelegate(this.OnBeginRetrieveFairValue);
            }
            if ((this.onEndRetrieveFairValueDelegate == null)) {
                this.onEndRetrieveFairValueDelegate = new EndOperationDelegate(this.OnEndRetrieveFairValue);
            }
            if ((this.onRetrieveFairValueCompletedDelegate == null)) {
                this.onRetrieveFairValueCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrieveFairValueCompleted);
            }
            base.InvokeAsync(this.onBeginRetrieveFairValueDelegate, new object[] {
                        entitySelectionData}, this.onEndRetrieveFairValueDelegate, this.onRetrieveFairValueCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.DCFDefinitions.DCFOperations.BeginInsertFairValues(GreenField.DataContracts.EntitySelectionData entitySelectionData, string valueType, System.Nullable<int> fvMeasure, System.Nullable<decimal> fvbuy, System.Nullable<decimal> fvSell, System.Nullable<decimal> currentMeasureValue, System.Nullable<decimal> upside, System.Nullable<System.DateTime> updated, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertFairValues(entitySelectionData, valueType, fvMeasure, fvbuy, fvSell, currentMeasureValue, upside, updated, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool GreenField.ServiceCaller.DCFDefinitions.DCFOperations.EndInsertFairValues(System.IAsyncResult result) {
            return base.Channel.EndInsertFairValues(result);
        }
        
        private System.IAsyncResult OnBeginInsertFairValues(object[] inValues, System.AsyncCallback callback, object asyncState) {
            GreenField.DataContracts.EntitySelectionData entitySelectionData = ((GreenField.DataContracts.EntitySelectionData)(inValues[0]));
            string valueType = ((string)(inValues[1]));
            System.Nullable<int> fvMeasure = ((System.Nullable<int>)(inValues[2]));
            System.Nullable<decimal> fvbuy = ((System.Nullable<decimal>)(inValues[3]));
            System.Nullable<decimal> fvSell = ((System.Nullable<decimal>)(inValues[4]));
            System.Nullable<decimal> currentMeasureValue = ((System.Nullable<decimal>)(inValues[5]));
            System.Nullable<decimal> upside = ((System.Nullable<decimal>)(inValues[6]));
            System.Nullable<System.DateTime> updated = ((System.Nullable<System.DateTime>)(inValues[7]));
            return ((GreenField.ServiceCaller.DCFDefinitions.DCFOperations)(this)).BeginInsertFairValues(entitySelectionData, valueType, fvMeasure, fvbuy, fvSell, currentMeasureValue, upside, updated, callback, asyncState);
        }
        
        private object[] OnEndInsertFairValues(System.IAsyncResult result) {
            bool retVal = ((GreenField.ServiceCaller.DCFDefinitions.DCFOperations)(this)).EndInsertFairValues(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertFairValuesCompleted(object state) {
            if ((this.InsertFairValuesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertFairValuesCompleted(this, new InsertFairValuesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertFairValuesAsync(GreenField.DataContracts.EntitySelectionData entitySelectionData, string valueType, System.Nullable<int> fvMeasure, System.Nullable<decimal> fvbuy, System.Nullable<decimal> fvSell, System.Nullable<decimal> currentMeasureValue, System.Nullable<decimal> upside, System.Nullable<System.DateTime> updated) {
            this.InsertFairValuesAsync(entitySelectionData, valueType, fvMeasure, fvbuy, fvSell, currentMeasureValue, upside, updated, null);
        }
        
        public void InsertFairValuesAsync(GreenField.DataContracts.EntitySelectionData entitySelectionData, string valueType, System.Nullable<int> fvMeasure, System.Nullable<decimal> fvbuy, System.Nullable<decimal> fvSell, System.Nullable<decimal> currentMeasureValue, System.Nullable<decimal> upside, System.Nullable<System.DateTime> updated, object userState) {
            if ((this.onBeginInsertFairValuesDelegate == null)) {
                this.onBeginInsertFairValuesDelegate = new BeginOperationDelegate(this.OnBeginInsertFairValues);
            }
            if ((this.onEndInsertFairValuesDelegate == null)) {
                this.onEndInsertFairValuesDelegate = new EndOperationDelegate(this.OnEndInsertFairValues);
            }
            if ((this.onInsertFairValuesCompletedDelegate == null)) {
                this.onInsertFairValuesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertFairValuesCompleted);
            }
            base.InvokeAsync(this.onBeginInsertFairValuesDelegate, new object[] {
                        entitySelectionData,
                        valueType,
                        fvMeasure,
                        fvbuy,
                        fvSell,
                        currentMeasureValue,
                        upside,
                        updated}, this.onEndInsertFairValuesDelegate, this.onInsertFairValuesCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override GreenField.ServiceCaller.DCFDefinitions.DCFOperations CreateChannel() {
            return new DCFOperationsClientChannel(this);
        }
        
        private class DCFOperationsClientChannel : ChannelBase<GreenField.ServiceCaller.DCFDefinitions.DCFOperations>, GreenField.ServiceCaller.DCFDefinitions.DCFOperations {
            
            public DCFOperationsClientChannel(System.ServiceModel.ClientBase<GreenField.ServiceCaller.DCFDefinitions.DCFOperations> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginRetrieveDCFAnalysisData(GreenField.DataContracts.EntitySelectionData entitySelectionData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = entitySelectionData;
                System.IAsyncResult _result = base.BeginInvoke("RetrieveDCFAnalysisData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<GreenField.DataContracts.DCFAnalysisSummaryData> EndRetrieveDCFAnalysisData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<GreenField.DataContracts.DCFAnalysisSummaryData> _result = ((System.Collections.Generic.List<GreenField.DataContracts.DCFAnalysisSummaryData>)(base.EndInvoke("RetrieveDCFAnalysisData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetrieveTerminalValueCalculationsData(GreenField.DataContracts.EntitySelectionData entitySelectionData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = entitySelectionData;
                System.IAsyncResult _result = base.BeginInvoke("RetrieveTerminalValueCalculationsData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<GreenField.DataContracts.DCFTerminalValueCalculationsData> EndRetrieveTerminalValueCalculationsData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<GreenField.DataContracts.DCFTerminalValueCalculationsData> _result = ((System.Collections.Generic.List<GreenField.DataContracts.DCFTerminalValueCalculationsData>)(base.EndInvoke("RetrieveTerminalValueCalculationsData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetrieveFreeCashFlowsData(GreenField.DataContracts.EntitySelectionData entitySelectionData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = entitySelectionData;
                System.IAsyncResult _result = base.BeginInvoke("RetrieveFreeCashFlowsData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<GreenField.DataContracts.FreeCashFlowsData> EndRetrieveFreeCashFlowsData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<GreenField.DataContracts.FreeCashFlowsData> _result = ((System.Collections.Generic.List<GreenField.DataContracts.FreeCashFlowsData>)(base.EndInvoke("RetrieveFreeCashFlowsData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetrieveCashFlows(GreenField.DataContracts.EntitySelectionData entitySelectionData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = entitySelectionData;
                System.IAsyncResult _result = base.BeginInvoke("RetrieveCashFlows", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<GreenField.ServiceCaller.DCFDefinitions.DCFCashFlowData> EndRetrieveCashFlows(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<GreenField.ServiceCaller.DCFDefinitions.DCFCashFlowData> _result = ((System.Collections.Generic.List<GreenField.ServiceCaller.DCFDefinitions.DCFCashFlowData>)(base.EndInvoke("RetrieveCashFlows", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetrieveSummaryData(GreenField.DataContracts.EntitySelectionData entitySelectionData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = entitySelectionData;
                System.IAsyncResult _result = base.BeginInvoke("RetrieveSummaryData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<GreenField.DataContracts.DCFSummaryData> EndRetrieveSummaryData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<GreenField.DataContracts.DCFSummaryData> _result = ((System.Collections.Generic.List<GreenField.DataContracts.DCFSummaryData>)(base.EndInvoke("RetrieveSummaryData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetrieveCurrentPriceData(GreenField.DataContracts.EntitySelectionData entitySelectionData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = entitySelectionData;
                System.IAsyncResult _result = base.BeginInvoke("RetrieveCurrentPriceData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Nullable<decimal> EndRetrieveCurrentPriceData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Nullable<decimal> _result = ((System.Nullable<decimal>)(base.EndInvoke("RetrieveCurrentPriceData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetrieveCountryName(GreenField.DataContracts.EntitySelectionData entitySelectionData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = entitySelectionData;
                System.IAsyncResult _result = base.BeginInvoke("RetrieveCountryName", _args, callback, asyncState);
                return _result;
            }
            
            public string EndRetrieveCountryName(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("RetrieveCountryName", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetrieveFairValue(GreenField.DataContracts.EntitySelectionData entitySelectionData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = entitySelectionData;
                System.IAsyncResult _result = base.BeginInvoke("RetrieveFairValue", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<GreenField.ServiceCaller.DCFDefinitions.PERIOD_FINANCIALS> EndRetrieveFairValue(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<GreenField.ServiceCaller.DCFDefinitions.PERIOD_FINANCIALS> _result = ((System.Collections.Generic.List<GreenField.ServiceCaller.DCFDefinitions.PERIOD_FINANCIALS>)(base.EndInvoke("RetrieveFairValue", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsertFairValues(GreenField.DataContracts.EntitySelectionData entitySelectionData, string valueType, System.Nullable<int> fvMeasure, System.Nullable<decimal> fvbuy, System.Nullable<decimal> fvSell, System.Nullable<decimal> currentMeasureValue, System.Nullable<decimal> upside, System.Nullable<System.DateTime> updated, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[8];
                _args[0] = entitySelectionData;
                _args[1] = valueType;
                _args[2] = fvMeasure;
                _args[3] = fvbuy;
                _args[4] = fvSell;
                _args[5] = currentMeasureValue;
                _args[6] = upside;
                _args[7] = updated;
                System.IAsyncResult _result = base.BeginInvoke("InsertFairValues", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndInsertFairValues(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("InsertFairValues", _args, result)));
                return _result;
            }
        }
    }
}
