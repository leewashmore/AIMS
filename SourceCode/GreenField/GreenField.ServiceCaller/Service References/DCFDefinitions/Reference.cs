//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace GreenField.ServiceCaller.DCFDefinitions {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
    public partial class ServiceFault : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DescriptionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DCFDefinitions.DCFOperations")]
    public interface DCFOperations {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DCFOperations/RetrieveDCFAnalysisData", ReplyAction="http://tempuri.org/DCFOperations/RetrieveDCFAnalysisDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.DCFDefinitions.ServiceFault), Action="http://tempuri.org/DCFOperations/RetrieveDCFAnalysisDataServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginRetrieveDCFAnalysisData(GreenField.DataContracts.EntitySelectionData entitySelectionData, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<GreenField.DataContracts.DCFAnalysisSummaryData> EndRetrieveDCFAnalysisData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DCFOperations/RetrieveFreCashFlowsData", ReplyAction="http://tempuri.org/DCFOperations/RetrieveFreCashFlowsDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.DCFDefinitions.ServiceFault), Action="http://tempuri.org/DCFOperations/RetrieveFreCashFlowsDataServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginRetrieveFreCashFlowsData(GreenField.DataContracts.EntitySelectionData entitySelectionData, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<GreenField.DataContracts.FreeCashFlowsData> EndRetrieveFreCashFlowsData(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface DCFOperationsChannel : GreenField.ServiceCaller.DCFDefinitions.DCFOperations, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrieveDCFAnalysisDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrieveDCFAnalysisDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<GreenField.DataContracts.DCFAnalysisSummaryData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<GreenField.DataContracts.DCFAnalysisSummaryData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrieveFreCashFlowsDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrieveFreCashFlowsDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<GreenField.DataContracts.FreeCashFlowsData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<GreenField.DataContracts.FreeCashFlowsData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DCFOperationsClient : System.ServiceModel.ClientBase<GreenField.ServiceCaller.DCFDefinitions.DCFOperations>, GreenField.ServiceCaller.DCFDefinitions.DCFOperations {
        
        private BeginOperationDelegate onBeginRetrieveDCFAnalysisDataDelegate;
        
        private EndOperationDelegate onEndRetrieveDCFAnalysisDataDelegate;
        
        private System.Threading.SendOrPostCallback onRetrieveDCFAnalysisDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrieveFreCashFlowsDataDelegate;
        
        private EndOperationDelegate onEndRetrieveFreCashFlowsDataDelegate;
        
        private System.Threading.SendOrPostCallback onRetrieveFreCashFlowsDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public DCFOperationsClient() {
        }
        
        public DCFOperationsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DCFOperationsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DCFOperationsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DCFOperationsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<RetrieveDCFAnalysisDataCompletedEventArgs> RetrieveDCFAnalysisDataCompleted;
        
        public event System.EventHandler<RetrieveFreCashFlowsDataCompletedEventArgs> RetrieveFreCashFlowsDataCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.DCFDefinitions.DCFOperations.BeginRetrieveDCFAnalysisData(GreenField.DataContracts.EntitySelectionData entitySelectionData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrieveDCFAnalysisData(entitySelectionData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<GreenField.DataContracts.DCFAnalysisSummaryData> GreenField.ServiceCaller.DCFDefinitions.DCFOperations.EndRetrieveDCFAnalysisData(System.IAsyncResult result) {
            return base.Channel.EndRetrieveDCFAnalysisData(result);
        }
        
        private System.IAsyncResult OnBeginRetrieveDCFAnalysisData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            GreenField.DataContracts.EntitySelectionData entitySelectionData = ((GreenField.DataContracts.EntitySelectionData)(inValues[0]));
            return ((GreenField.ServiceCaller.DCFDefinitions.DCFOperations)(this)).BeginRetrieveDCFAnalysisData(entitySelectionData, callback, asyncState);
        }
        
        private object[] OnEndRetrieveDCFAnalysisData(System.IAsyncResult result) {
            System.Collections.Generic.List<GreenField.DataContracts.DCFAnalysisSummaryData> retVal = ((GreenField.ServiceCaller.DCFDefinitions.DCFOperations)(this)).EndRetrieveDCFAnalysisData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrieveDCFAnalysisDataCompleted(object state) {
            if ((this.RetrieveDCFAnalysisDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrieveDCFAnalysisDataCompleted(this, new RetrieveDCFAnalysisDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrieveDCFAnalysisDataAsync(GreenField.DataContracts.EntitySelectionData entitySelectionData) {
            this.RetrieveDCFAnalysisDataAsync(entitySelectionData, null);
        }
        
        public void RetrieveDCFAnalysisDataAsync(GreenField.DataContracts.EntitySelectionData entitySelectionData, object userState) {
            if ((this.onBeginRetrieveDCFAnalysisDataDelegate == null)) {
                this.onBeginRetrieveDCFAnalysisDataDelegate = new BeginOperationDelegate(this.OnBeginRetrieveDCFAnalysisData);
            }
            if ((this.onEndRetrieveDCFAnalysisDataDelegate == null)) {
                this.onEndRetrieveDCFAnalysisDataDelegate = new EndOperationDelegate(this.OnEndRetrieveDCFAnalysisData);
            }
            if ((this.onRetrieveDCFAnalysisDataCompletedDelegate == null)) {
                this.onRetrieveDCFAnalysisDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrieveDCFAnalysisDataCompleted);
            }
            base.InvokeAsync(this.onBeginRetrieveDCFAnalysisDataDelegate, new object[] {
                        entitySelectionData}, this.onEndRetrieveDCFAnalysisDataDelegate, this.onRetrieveDCFAnalysisDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.DCFDefinitions.DCFOperations.BeginRetrieveFreCashFlowsData(GreenField.DataContracts.EntitySelectionData entitySelectionData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrieveFreCashFlowsData(entitySelectionData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<GreenField.DataContracts.FreeCashFlowsData> GreenField.ServiceCaller.DCFDefinitions.DCFOperations.EndRetrieveFreCashFlowsData(System.IAsyncResult result) {
            return base.Channel.EndRetrieveFreCashFlowsData(result);
        }
        
        private System.IAsyncResult OnBeginRetrieveFreCashFlowsData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            GreenField.DataContracts.EntitySelectionData entitySelectionData = ((GreenField.DataContracts.EntitySelectionData)(inValues[0]));
            return ((GreenField.ServiceCaller.DCFDefinitions.DCFOperations)(this)).BeginRetrieveFreCashFlowsData(entitySelectionData, callback, asyncState);
        }
        
        private object[] OnEndRetrieveFreCashFlowsData(System.IAsyncResult result) {
            System.Collections.Generic.List<GreenField.DataContracts.FreeCashFlowsData> retVal = ((GreenField.ServiceCaller.DCFDefinitions.DCFOperations)(this)).EndRetrieveFreCashFlowsData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrieveFreCashFlowsDataCompleted(object state) {
            if ((this.RetrieveFreCashFlowsDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrieveFreCashFlowsDataCompleted(this, new RetrieveFreCashFlowsDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrieveFreCashFlowsDataAsync(GreenField.DataContracts.EntitySelectionData entitySelectionData) {
            this.RetrieveFreCashFlowsDataAsync(entitySelectionData, null);
        }
        
        public void RetrieveFreCashFlowsDataAsync(GreenField.DataContracts.EntitySelectionData entitySelectionData, object userState) {
            if ((this.onBeginRetrieveFreCashFlowsDataDelegate == null)) {
                this.onBeginRetrieveFreCashFlowsDataDelegate = new BeginOperationDelegate(this.OnBeginRetrieveFreCashFlowsData);
            }
            if ((this.onEndRetrieveFreCashFlowsDataDelegate == null)) {
                this.onEndRetrieveFreCashFlowsDataDelegate = new EndOperationDelegate(this.OnEndRetrieveFreCashFlowsData);
            }
            if ((this.onRetrieveFreCashFlowsDataCompletedDelegate == null)) {
                this.onRetrieveFreCashFlowsDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrieveFreCashFlowsDataCompleted);
            }
            base.InvokeAsync(this.onBeginRetrieveFreCashFlowsDataDelegate, new object[] {
                        entitySelectionData}, this.onEndRetrieveFreCashFlowsDataDelegate, this.onRetrieveFreCashFlowsDataCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override GreenField.ServiceCaller.DCFDefinitions.DCFOperations CreateChannel() {
            return new DCFOperationsClientChannel(this);
        }
        
        private class DCFOperationsClientChannel : ChannelBase<GreenField.ServiceCaller.DCFDefinitions.DCFOperations>, GreenField.ServiceCaller.DCFDefinitions.DCFOperations {
            
            public DCFOperationsClientChannel(System.ServiceModel.ClientBase<GreenField.ServiceCaller.DCFDefinitions.DCFOperations> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginRetrieveDCFAnalysisData(GreenField.DataContracts.EntitySelectionData entitySelectionData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = entitySelectionData;
                System.IAsyncResult _result = base.BeginInvoke("RetrieveDCFAnalysisData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<GreenField.DataContracts.DCFAnalysisSummaryData> EndRetrieveDCFAnalysisData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<GreenField.DataContracts.DCFAnalysisSummaryData> _result = ((System.Collections.Generic.List<GreenField.DataContracts.DCFAnalysisSummaryData>)(base.EndInvoke("RetrieveDCFAnalysisData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetrieveFreCashFlowsData(GreenField.DataContracts.EntitySelectionData entitySelectionData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = entitySelectionData;
                System.IAsyncResult _result = base.BeginInvoke("RetrieveFreCashFlowsData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<GreenField.DataContracts.FreeCashFlowsData> EndRetrieveFreCashFlowsData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<GreenField.DataContracts.FreeCashFlowsData> _result = ((System.Collections.Generic.List<GreenField.DataContracts.FreeCashFlowsData>)(base.EndInvoke("RetrieveFreCashFlowsData", _args, result)));
                return _result;
            }
        }
    }
}
