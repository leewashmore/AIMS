//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace GreenField.ServiceCaller.DocumentWorkSpaceDefinitions {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
    public partial class ServiceFault : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DescriptionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DocumentWorkSpaceDefinitions.DocumentWorkspaceOperations")]
    public interface DocumentWorkspaceOperations {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DocumentWorkspaceOperations/UploadDocument", ReplyAction="http://tempuri.org/DocumentWorkspaceOperations/UploadDocumentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.DocumentWorkSpaceDefinitions.ServiceFault), Action="http://tempuri.org/DocumentWorkspaceOperations/UploadDocumentServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginUploadDocument(string fileName, byte[] fileByteStream, System.AsyncCallback callback, object asyncState);
        
        string EndUploadDocument(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DocumentWorkspaceOperations/RetrieveDocument", ReplyAction="http://tempuri.org/DocumentWorkspaceOperations/RetrieveDocumentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.DocumentWorkSpaceDefinitions.ServiceFault), Action="http://tempuri.org/DocumentWorkspaceOperations/RetrieveDocumentServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginRetrieveDocument(string fileName, System.AsyncCallback callback, object asyncState);
        
        byte[] EndRetrieveDocument(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DocumentWorkspaceOperations/RetrieveDocumentsData", ReplyAction="http://tempuri.org/DocumentWorkspaceOperations/RetrieveDocumentsDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.DocumentWorkSpaceDefinitions.ServiceFault), Action="http://tempuri.org/DocumentWorkspaceOperations/RetrieveDocumentsDataServiceFaultF" +
            "ault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginRetrieveDocumentsData(string searchString, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<GreenField.DataContracts.DocumentCategoricalData> EndRetrieveDocumentsData(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface DocumentWorkspaceOperationsChannel : GreenField.ServiceCaller.DocumentWorkSpaceDefinitions.DocumentWorkspaceOperations, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UploadDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UploadDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrieveDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrieveDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrieveDocumentsDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrieveDocumentsDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<GreenField.DataContracts.DocumentCategoricalData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<GreenField.DataContracts.DocumentCategoricalData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DocumentWorkspaceOperationsClient : System.ServiceModel.ClientBase<GreenField.ServiceCaller.DocumentWorkSpaceDefinitions.DocumentWorkspaceOperations>, GreenField.ServiceCaller.DocumentWorkSpaceDefinitions.DocumentWorkspaceOperations {
        
        private BeginOperationDelegate onBeginUploadDocumentDelegate;
        
        private EndOperationDelegate onEndUploadDocumentDelegate;
        
        private System.Threading.SendOrPostCallback onUploadDocumentCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrieveDocumentDelegate;
        
        private EndOperationDelegate onEndRetrieveDocumentDelegate;
        
        private System.Threading.SendOrPostCallback onRetrieveDocumentCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrieveDocumentsDataDelegate;
        
        private EndOperationDelegate onEndRetrieveDocumentsDataDelegate;
        
        private System.Threading.SendOrPostCallback onRetrieveDocumentsDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public DocumentWorkspaceOperationsClient() {
        }
        
        public DocumentWorkspaceOperationsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DocumentWorkspaceOperationsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DocumentWorkspaceOperationsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DocumentWorkspaceOperationsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<UploadDocumentCompletedEventArgs> UploadDocumentCompleted;
        
        public event System.EventHandler<RetrieveDocumentCompletedEventArgs> RetrieveDocumentCompleted;
        
        public event System.EventHandler<RetrieveDocumentsDataCompletedEventArgs> RetrieveDocumentsDataCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.DocumentWorkSpaceDefinitions.DocumentWorkspaceOperations.BeginUploadDocument(string fileName, byte[] fileByteStream, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUploadDocument(fileName, fileByteStream, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string GreenField.ServiceCaller.DocumentWorkSpaceDefinitions.DocumentWorkspaceOperations.EndUploadDocument(System.IAsyncResult result) {
            return base.Channel.EndUploadDocument(result);
        }
        
        private System.IAsyncResult OnBeginUploadDocument(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fileName = ((string)(inValues[0]));
            byte[] fileByteStream = ((byte[])(inValues[1]));
            return ((GreenField.ServiceCaller.DocumentWorkSpaceDefinitions.DocumentWorkspaceOperations)(this)).BeginUploadDocument(fileName, fileByteStream, callback, asyncState);
        }
        
        private object[] OnEndUploadDocument(System.IAsyncResult result) {
            string retVal = ((GreenField.ServiceCaller.DocumentWorkSpaceDefinitions.DocumentWorkspaceOperations)(this)).EndUploadDocument(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUploadDocumentCompleted(object state) {
            if ((this.UploadDocumentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UploadDocumentCompleted(this, new UploadDocumentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UploadDocumentAsync(string fileName, byte[] fileByteStream) {
            this.UploadDocumentAsync(fileName, fileByteStream, null);
        }
        
        public void UploadDocumentAsync(string fileName, byte[] fileByteStream, object userState) {
            if ((this.onBeginUploadDocumentDelegate == null)) {
                this.onBeginUploadDocumentDelegate = new BeginOperationDelegate(this.OnBeginUploadDocument);
            }
            if ((this.onEndUploadDocumentDelegate == null)) {
                this.onEndUploadDocumentDelegate = new EndOperationDelegate(this.OnEndUploadDocument);
            }
            if ((this.onUploadDocumentCompletedDelegate == null)) {
                this.onUploadDocumentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUploadDocumentCompleted);
            }
            base.InvokeAsync(this.onBeginUploadDocumentDelegate, new object[] {
                        fileName,
                        fileByteStream}, this.onEndUploadDocumentDelegate, this.onUploadDocumentCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.DocumentWorkSpaceDefinitions.DocumentWorkspaceOperations.BeginRetrieveDocument(string fileName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrieveDocument(fileName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] GreenField.ServiceCaller.DocumentWorkSpaceDefinitions.DocumentWorkspaceOperations.EndRetrieveDocument(System.IAsyncResult result) {
            return base.Channel.EndRetrieveDocument(result);
        }
        
        private System.IAsyncResult OnBeginRetrieveDocument(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fileName = ((string)(inValues[0]));
            return ((GreenField.ServiceCaller.DocumentWorkSpaceDefinitions.DocumentWorkspaceOperations)(this)).BeginRetrieveDocument(fileName, callback, asyncState);
        }
        
        private object[] OnEndRetrieveDocument(System.IAsyncResult result) {
            byte[] retVal = ((GreenField.ServiceCaller.DocumentWorkSpaceDefinitions.DocumentWorkspaceOperations)(this)).EndRetrieveDocument(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrieveDocumentCompleted(object state) {
            if ((this.RetrieveDocumentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrieveDocumentCompleted(this, new RetrieveDocumentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrieveDocumentAsync(string fileName) {
            this.RetrieveDocumentAsync(fileName, null);
        }
        
        public void RetrieveDocumentAsync(string fileName, object userState) {
            if ((this.onBeginRetrieveDocumentDelegate == null)) {
                this.onBeginRetrieveDocumentDelegate = new BeginOperationDelegate(this.OnBeginRetrieveDocument);
            }
            if ((this.onEndRetrieveDocumentDelegate == null)) {
                this.onEndRetrieveDocumentDelegate = new EndOperationDelegate(this.OnEndRetrieveDocument);
            }
            if ((this.onRetrieveDocumentCompletedDelegate == null)) {
                this.onRetrieveDocumentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrieveDocumentCompleted);
            }
            base.InvokeAsync(this.onBeginRetrieveDocumentDelegate, new object[] {
                        fileName}, this.onEndRetrieveDocumentDelegate, this.onRetrieveDocumentCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.DocumentWorkSpaceDefinitions.DocumentWorkspaceOperations.BeginRetrieveDocumentsData(string searchString, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrieveDocumentsData(searchString, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<GreenField.DataContracts.DocumentCategoricalData> GreenField.ServiceCaller.DocumentWorkSpaceDefinitions.DocumentWorkspaceOperations.EndRetrieveDocumentsData(System.IAsyncResult result) {
            return base.Channel.EndRetrieveDocumentsData(result);
        }
        
        private System.IAsyncResult OnBeginRetrieveDocumentsData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string searchString = ((string)(inValues[0]));
            return ((GreenField.ServiceCaller.DocumentWorkSpaceDefinitions.DocumentWorkspaceOperations)(this)).BeginRetrieveDocumentsData(searchString, callback, asyncState);
        }
        
        private object[] OnEndRetrieveDocumentsData(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<GreenField.DataContracts.DocumentCategoricalData> retVal = ((GreenField.ServiceCaller.DocumentWorkSpaceDefinitions.DocumentWorkspaceOperations)(this)).EndRetrieveDocumentsData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrieveDocumentsDataCompleted(object state) {
            if ((this.RetrieveDocumentsDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrieveDocumentsDataCompleted(this, new RetrieveDocumentsDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrieveDocumentsDataAsync(string searchString) {
            this.RetrieveDocumentsDataAsync(searchString, null);
        }
        
        public void RetrieveDocumentsDataAsync(string searchString, object userState) {
            if ((this.onBeginRetrieveDocumentsDataDelegate == null)) {
                this.onBeginRetrieveDocumentsDataDelegate = new BeginOperationDelegate(this.OnBeginRetrieveDocumentsData);
            }
            if ((this.onEndRetrieveDocumentsDataDelegate == null)) {
                this.onEndRetrieveDocumentsDataDelegate = new EndOperationDelegate(this.OnEndRetrieveDocumentsData);
            }
            if ((this.onRetrieveDocumentsDataCompletedDelegate == null)) {
                this.onRetrieveDocumentsDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrieveDocumentsDataCompleted);
            }
            base.InvokeAsync(this.onBeginRetrieveDocumentsDataDelegate, new object[] {
                        searchString}, this.onEndRetrieveDocumentsDataDelegate, this.onRetrieveDocumentsDataCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override GreenField.ServiceCaller.DocumentWorkSpaceDefinitions.DocumentWorkspaceOperations CreateChannel() {
            return new DocumentWorkspaceOperationsClientChannel(this);
        }
        
        private class DocumentWorkspaceOperationsClientChannel : ChannelBase<GreenField.ServiceCaller.DocumentWorkSpaceDefinitions.DocumentWorkspaceOperations>, GreenField.ServiceCaller.DocumentWorkSpaceDefinitions.DocumentWorkspaceOperations {
            
            public DocumentWorkspaceOperationsClientChannel(System.ServiceModel.ClientBase<GreenField.ServiceCaller.DocumentWorkSpaceDefinitions.DocumentWorkspaceOperations> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginUploadDocument(string fileName, byte[] fileByteStream, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = fileName;
                _args[1] = fileByteStream;
                System.IAsyncResult _result = base.BeginInvoke("UploadDocument", _args, callback, asyncState);
                return _result;
            }
            
            public string EndUploadDocument(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("UploadDocument", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetrieveDocument(string fileName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = fileName;
                System.IAsyncResult _result = base.BeginInvoke("RetrieveDocument", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndRetrieveDocument(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("RetrieveDocument", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetrieveDocumentsData(string searchString, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = searchString;
                System.IAsyncResult _result = base.BeginInvoke("RetrieveDocumentsData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<GreenField.DataContracts.DocumentCategoricalData> EndRetrieveDocumentsData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<GreenField.DataContracts.DocumentCategoricalData> _result = ((System.Collections.ObjectModel.ObservableCollection<GreenField.DataContracts.DocumentCategoricalData>)(base.EndInvoke("RetrieveDocumentsData", _args, result)));
                return _result;
            }
        }
    }
}
