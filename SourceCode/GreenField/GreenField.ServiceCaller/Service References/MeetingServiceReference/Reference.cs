//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace GreenField.ServiceCaller.MeetingServiceReference {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
    public partial class ServiceFault : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DescriptionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MeetingInfo", Namespace="http://schemas.datacontract.org/2004/07/GreenField.DAL", IsReference=true)]
    public partial class MeetingInfo : GreenField.ServiceCaller.MeetingServiceReference.EntityObject {
        
        private string CreatedByField;
        
        private System.DateTime CreatedOnField;
        
        private string DescriptionField;
        
        private System.DateTime MeetingClosedDateTimeField;
        
        private System.DateTime MeetingDateTimeField;
        
        private long MeetingIDField;
        
        private System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.MeetingPresentationMappingInfo> MeetingPresentationMappingInfoesField;
        
        private string ModifiedByField;
        
        private System.DateTime ModifiedOnField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime MeetingClosedDateTime {
            get {
                return this.MeetingClosedDateTimeField;
            }
            set {
                if ((this.MeetingClosedDateTimeField.Equals(value) != true)) {
                    this.MeetingClosedDateTimeField = value;
                    this.RaisePropertyChanged("MeetingClosedDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime MeetingDateTime {
            get {
                return this.MeetingDateTimeField;
            }
            set {
                if ((this.MeetingDateTimeField.Equals(value) != true)) {
                    this.MeetingDateTimeField = value;
                    this.RaisePropertyChanged("MeetingDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MeetingID {
            get {
                return this.MeetingIDField;
            }
            set {
                if ((this.MeetingIDField.Equals(value) != true)) {
                    this.MeetingIDField = value;
                    this.RaisePropertyChanged("MeetingID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.MeetingPresentationMappingInfo> MeetingPresentationMappingInfoes {
            get {
                return this.MeetingPresentationMappingInfoesField;
            }
            set {
                if ((object.ReferenceEquals(this.MeetingPresentationMappingInfoesField, value) != true)) {
                    this.MeetingPresentationMappingInfoesField = value;
                    this.RaisePropertyChanged("MeetingPresentationMappingInfoes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((this.ModifiedOnField.Equals(value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StructuralObject", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses", IsReference=true)]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.ComplexObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.PresentationInfoResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.EntityObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.MeetingPresentationMappingInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.PresentationInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.AttachedFileInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.StatusType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.VoterInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.AttendanceType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.VoteType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.MeetingInfo))]
    public partial class StructuralObject : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ComplexObject", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses", IsReference=true)]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.PresentationInfoResult))]
    public partial class ComplexObject : GreenField.ServiceCaller.MeetingServiceReference.StructuralObject {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PresentationInfoResult", Namespace="http://schemas.datacontract.org/2004/07/GreenField.DAL", IsReference=true)]
    public partial class PresentationInfoResult : GreenField.ServiceCaller.MeetingServiceReference.ComplexObject {
        
        private System.Nullable<bool> AcceptWithoutDiscussionFlagField;
        
        private string AdminNotesField;
        
        private string BackgroundField;
        
        private System.Nullable<float> CommitteeBuyRangeField;
        
        private string CommitteePFVMeasureField;
        
        private System.Nullable<System.DateTime> CommitteeRangeEffectiveThroughField;
        
        private string CommitteeRecommendationField;
        
        private System.Nullable<float> CommitteeSellRangeField;
        
        private string CompetitiveAdvantageField;
        
        private string CompetitiveDisadvantageField;
        
        private string CreatedByField;
        
        private System.DateTime CreatedOnField;
        
        private string EarningsOutlookField;
        
        private string InvestmentThesisField;
        
        private string ModifiedByField;
        
        private System.DateTime ModifiedOnField;
        
        private System.Nullable<System.DateTime> PresentationDateField;
        
        private long PresentationIDField;
        
        private string PresenterField;
        
        private float SecurityBuyRangeField;
        
        private float SecurityCashPositionField;
        
        private string SecurityCountryField;
        
        private string SecurityCountryCodeField;
        
        private float SecurityGlobalActiveWeightField;
        
        private string SecurityIndustryField;
        
        private float SecurityLastClosingPriceField;
        
        private float SecurityMSCIIMIWeightField;
        
        private float SecurityMSCIStdWeightField;
        
        private float SecurityMarketCapitalizationField;
        
        private string SecurityNameField;
        
        private string SecurityPFVMeasureField;
        
        private long SecurityPositionField;
        
        private string SecurityRecommendationField;
        
        private float SecuritySellRangeField;
        
        private string SecurityTickerField;
        
        private string StatusTypeField;
        
        private long StatusTypeIDField;
        
        private string ValuationsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> AcceptWithoutDiscussionFlag {
            get {
                return this.AcceptWithoutDiscussionFlagField;
            }
            set {
                if ((this.AcceptWithoutDiscussionFlagField.Equals(value) != true)) {
                    this.AcceptWithoutDiscussionFlagField = value;
                    this.RaisePropertyChanged("AcceptWithoutDiscussionFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdminNotes {
            get {
                return this.AdminNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.AdminNotesField, value) != true)) {
                    this.AdminNotesField = value;
                    this.RaisePropertyChanged("AdminNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Background {
            get {
                return this.BackgroundField;
            }
            set {
                if ((object.ReferenceEquals(this.BackgroundField, value) != true)) {
                    this.BackgroundField = value;
                    this.RaisePropertyChanged("Background");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<float> CommitteeBuyRange {
            get {
                return this.CommitteeBuyRangeField;
            }
            set {
                if ((this.CommitteeBuyRangeField.Equals(value) != true)) {
                    this.CommitteeBuyRangeField = value;
                    this.RaisePropertyChanged("CommitteeBuyRange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommitteePFVMeasure {
            get {
                return this.CommitteePFVMeasureField;
            }
            set {
                if ((object.ReferenceEquals(this.CommitteePFVMeasureField, value) != true)) {
                    this.CommitteePFVMeasureField = value;
                    this.RaisePropertyChanged("CommitteePFVMeasure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CommitteeRangeEffectiveThrough {
            get {
                return this.CommitteeRangeEffectiveThroughField;
            }
            set {
                if ((this.CommitteeRangeEffectiveThroughField.Equals(value) != true)) {
                    this.CommitteeRangeEffectiveThroughField = value;
                    this.RaisePropertyChanged("CommitteeRangeEffectiveThrough");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommitteeRecommendation {
            get {
                return this.CommitteeRecommendationField;
            }
            set {
                if ((object.ReferenceEquals(this.CommitteeRecommendationField, value) != true)) {
                    this.CommitteeRecommendationField = value;
                    this.RaisePropertyChanged("CommitteeRecommendation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<float> CommitteeSellRange {
            get {
                return this.CommitteeSellRangeField;
            }
            set {
                if ((this.CommitteeSellRangeField.Equals(value) != true)) {
                    this.CommitteeSellRangeField = value;
                    this.RaisePropertyChanged("CommitteeSellRange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompetitiveAdvantage {
            get {
                return this.CompetitiveAdvantageField;
            }
            set {
                if ((object.ReferenceEquals(this.CompetitiveAdvantageField, value) != true)) {
                    this.CompetitiveAdvantageField = value;
                    this.RaisePropertyChanged("CompetitiveAdvantage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompetitiveDisadvantage {
            get {
                return this.CompetitiveDisadvantageField;
            }
            set {
                if ((object.ReferenceEquals(this.CompetitiveDisadvantageField, value) != true)) {
                    this.CompetitiveDisadvantageField = value;
                    this.RaisePropertyChanged("CompetitiveDisadvantage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EarningsOutlook {
            get {
                return this.EarningsOutlookField;
            }
            set {
                if ((object.ReferenceEquals(this.EarningsOutlookField, value) != true)) {
                    this.EarningsOutlookField = value;
                    this.RaisePropertyChanged("EarningsOutlook");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvestmentThesis {
            get {
                return this.InvestmentThesisField;
            }
            set {
                if ((object.ReferenceEquals(this.InvestmentThesisField, value) != true)) {
                    this.InvestmentThesisField = value;
                    this.RaisePropertyChanged("InvestmentThesis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((this.ModifiedOnField.Equals(value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PresentationDate {
            get {
                return this.PresentationDateField;
            }
            set {
                if ((this.PresentationDateField.Equals(value) != true)) {
                    this.PresentationDateField = value;
                    this.RaisePropertyChanged("PresentationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PresentationID {
            get {
                return this.PresentationIDField;
            }
            set {
                if ((this.PresentationIDField.Equals(value) != true)) {
                    this.PresentationIDField = value;
                    this.RaisePropertyChanged("PresentationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Presenter {
            get {
                return this.PresenterField;
            }
            set {
                if ((object.ReferenceEquals(this.PresenterField, value) != true)) {
                    this.PresenterField = value;
                    this.RaisePropertyChanged("Presenter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float SecurityBuyRange {
            get {
                return this.SecurityBuyRangeField;
            }
            set {
                if ((this.SecurityBuyRangeField.Equals(value) != true)) {
                    this.SecurityBuyRangeField = value;
                    this.RaisePropertyChanged("SecurityBuyRange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float SecurityCashPosition {
            get {
                return this.SecurityCashPositionField;
            }
            set {
                if ((this.SecurityCashPositionField.Equals(value) != true)) {
                    this.SecurityCashPositionField = value;
                    this.RaisePropertyChanged("SecurityCashPosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityCountry {
            get {
                return this.SecurityCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityCountryField, value) != true)) {
                    this.SecurityCountryField = value;
                    this.RaisePropertyChanged("SecurityCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityCountryCode {
            get {
                return this.SecurityCountryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityCountryCodeField, value) != true)) {
                    this.SecurityCountryCodeField = value;
                    this.RaisePropertyChanged("SecurityCountryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float SecurityGlobalActiveWeight {
            get {
                return this.SecurityGlobalActiveWeightField;
            }
            set {
                if ((this.SecurityGlobalActiveWeightField.Equals(value) != true)) {
                    this.SecurityGlobalActiveWeightField = value;
                    this.RaisePropertyChanged("SecurityGlobalActiveWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityIndustry {
            get {
                return this.SecurityIndustryField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityIndustryField, value) != true)) {
                    this.SecurityIndustryField = value;
                    this.RaisePropertyChanged("SecurityIndustry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float SecurityLastClosingPrice {
            get {
                return this.SecurityLastClosingPriceField;
            }
            set {
                if ((this.SecurityLastClosingPriceField.Equals(value) != true)) {
                    this.SecurityLastClosingPriceField = value;
                    this.RaisePropertyChanged("SecurityLastClosingPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float SecurityMSCIIMIWeight {
            get {
                return this.SecurityMSCIIMIWeightField;
            }
            set {
                if ((this.SecurityMSCIIMIWeightField.Equals(value) != true)) {
                    this.SecurityMSCIIMIWeightField = value;
                    this.RaisePropertyChanged("SecurityMSCIIMIWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float SecurityMSCIStdWeight {
            get {
                return this.SecurityMSCIStdWeightField;
            }
            set {
                if ((this.SecurityMSCIStdWeightField.Equals(value) != true)) {
                    this.SecurityMSCIStdWeightField = value;
                    this.RaisePropertyChanged("SecurityMSCIStdWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float SecurityMarketCapitalization {
            get {
                return this.SecurityMarketCapitalizationField;
            }
            set {
                if ((this.SecurityMarketCapitalizationField.Equals(value) != true)) {
                    this.SecurityMarketCapitalizationField = value;
                    this.RaisePropertyChanged("SecurityMarketCapitalization");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityName {
            get {
                return this.SecurityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityNameField, value) != true)) {
                    this.SecurityNameField = value;
                    this.RaisePropertyChanged("SecurityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityPFVMeasure {
            get {
                return this.SecurityPFVMeasureField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityPFVMeasureField, value) != true)) {
                    this.SecurityPFVMeasureField = value;
                    this.RaisePropertyChanged("SecurityPFVMeasure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SecurityPosition {
            get {
                return this.SecurityPositionField;
            }
            set {
                if ((this.SecurityPositionField.Equals(value) != true)) {
                    this.SecurityPositionField = value;
                    this.RaisePropertyChanged("SecurityPosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityRecommendation {
            get {
                return this.SecurityRecommendationField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityRecommendationField, value) != true)) {
                    this.SecurityRecommendationField = value;
                    this.RaisePropertyChanged("SecurityRecommendation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float SecuritySellRange {
            get {
                return this.SecuritySellRangeField;
            }
            set {
                if ((this.SecuritySellRangeField.Equals(value) != true)) {
                    this.SecuritySellRangeField = value;
                    this.RaisePropertyChanged("SecuritySellRange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityTicker {
            get {
                return this.SecurityTickerField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityTickerField, value) != true)) {
                    this.SecurityTickerField = value;
                    this.RaisePropertyChanged("SecurityTicker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusType {
            get {
                return this.StatusTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusTypeField, value) != true)) {
                    this.StatusTypeField = value;
                    this.RaisePropertyChanged("StatusType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long StatusTypeID {
            get {
                return this.StatusTypeIDField;
            }
            set {
                if ((this.StatusTypeIDField.Equals(value) != true)) {
                    this.StatusTypeIDField = value;
                    this.RaisePropertyChanged("StatusTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Valuations {
            get {
                return this.ValuationsField;
            }
            set {
                if ((object.ReferenceEquals(this.ValuationsField, value) != true)) {
                    this.ValuationsField = value;
                    this.RaisePropertyChanged("Valuations");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityObject", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses", IsReference=true)]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.MeetingPresentationMappingInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.PresentationInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.AttachedFileInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.StatusType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.VoterInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.AttendanceType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.VoteType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.MeetingInfo))]
    public partial class EntityObject : GreenField.ServiceCaller.MeetingServiceReference.StructuralObject {
        
        private GreenField.ServiceCaller.MeetingServiceReference.EntityKey EntityKeyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GreenField.ServiceCaller.MeetingServiceReference.EntityKey EntityKey {
            get {
                return this.EntityKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityKeyField, value) != true)) {
                    this.EntityKeyField = value;
                    this.RaisePropertyChanged("EntityKey");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MeetingPresentationMappingInfo", Namespace="http://schemas.datacontract.org/2004/07/GreenField.DAL", IsReference=true)]
    public partial class MeetingPresentationMappingInfo : GreenField.ServiceCaller.MeetingServiceReference.EntityObject {
        
        private string CreatedByField;
        
        private System.DateTime CreatedOnField;
        
        private long MappingIDField;
        
        private long MeetingIDField;
        
        private GreenField.ServiceCaller.MeetingServiceReference.MeetingInfo MeetingInfoField;
        
        private GreenField.ServiceCaller.MeetingServiceReference.EntityReferenceOfMeetingInfojzQAem8p MeetingInfoReferenceField;
        
        private string ModifedByField;
        
        private System.DateTime ModifiedOnField;
        
        private long PresentationIDField;
        
        private GreenField.ServiceCaller.MeetingServiceReference.PresentationInfo PresentationInfoField;
        
        private GreenField.ServiceCaller.MeetingServiceReference.EntityReferenceOfPresentationInfojzQAem8p PresentationInfoReferenceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MappingID {
            get {
                return this.MappingIDField;
            }
            set {
                if ((this.MappingIDField.Equals(value) != true)) {
                    this.MappingIDField = value;
                    this.RaisePropertyChanged("MappingID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MeetingID {
            get {
                return this.MeetingIDField;
            }
            set {
                if ((this.MeetingIDField.Equals(value) != true)) {
                    this.MeetingIDField = value;
                    this.RaisePropertyChanged("MeetingID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GreenField.ServiceCaller.MeetingServiceReference.MeetingInfo MeetingInfo {
            get {
                return this.MeetingInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.MeetingInfoField, value) != true)) {
                    this.MeetingInfoField = value;
                    this.RaisePropertyChanged("MeetingInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GreenField.ServiceCaller.MeetingServiceReference.EntityReferenceOfMeetingInfojzQAem8p MeetingInfoReference {
            get {
                return this.MeetingInfoReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.MeetingInfoReferenceField, value) != true)) {
                    this.MeetingInfoReferenceField = value;
                    this.RaisePropertyChanged("MeetingInfoReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifedBy {
            get {
                return this.ModifedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifedByField, value) != true)) {
                    this.ModifedByField = value;
                    this.RaisePropertyChanged("ModifedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((this.ModifiedOnField.Equals(value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PresentationID {
            get {
                return this.PresentationIDField;
            }
            set {
                if ((this.PresentationIDField.Equals(value) != true)) {
                    this.PresentationIDField = value;
                    this.RaisePropertyChanged("PresentationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GreenField.ServiceCaller.MeetingServiceReference.PresentationInfo PresentationInfo {
            get {
                return this.PresentationInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.PresentationInfoField, value) != true)) {
                    this.PresentationInfoField = value;
                    this.RaisePropertyChanged("PresentationInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GreenField.ServiceCaller.MeetingServiceReference.EntityReferenceOfPresentationInfojzQAem8p PresentationInfoReference {
            get {
                return this.PresentationInfoReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.PresentationInfoReferenceField, value) != true)) {
                    this.PresentationInfoReferenceField = value;
                    this.RaisePropertyChanged("PresentationInfoReference");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PresentationInfo", Namespace="http://schemas.datacontract.org/2004/07/GreenField.DAL", IsReference=true)]
    public partial class PresentationInfo : GreenField.ServiceCaller.MeetingServiceReference.EntityObject {
        
        private System.Nullable<bool> AcceptWithoutDiscussionFlagField;
        
        private string AdminNotesField;
        
        private System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.AttachedFileInfo> AttachedFileInfoesField;
        
        private string BackgroundField;
        
        private System.Nullable<float> CommitteeBuyRangeField;
        
        private string CommitteePFVMeasureField;
        
        private System.Nullable<System.DateTime> CommitteeRangeEffectiveThroughField;
        
        private string CommitteeRecommendationField;
        
        private System.Nullable<float> CommitteeSellRangeField;
        
        private string CompetitiveAdvantageField;
        
        private string CompetitiveDisadvantageField;
        
        private string CreatedByField;
        
        private System.DateTime CreatedOnField;
        
        private string EarningsOutlookField;
        
        private string InvestmentThesisField;
        
        private System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.MeetingPresentationMappingInfo> MeetingPresentationMappingInfoesField;
        
        private string ModifiedByField;
        
        private System.DateTime ModifiedOnField;
        
        private long PresentationIDField;
        
        private string PresenterField;
        
        private float SecurityBuyRangeField;
        
        private float SecurityCashPositionField;
        
        private string SecurityCountryField;
        
        private string SecurityCountryCodeField;
        
        private float SecurityGlobalActiveWeightField;
        
        private string SecurityIndustryField;
        
        private float SecurityLastClosingPriceField;
        
        private float SecurityMSCIIMIWeightField;
        
        private float SecurityMSCIStdWeightField;
        
        private float SecurityMarketCapitalizationField;
        
        private string SecurityNameField;
        
        private string SecurityPFVMeasureField;
        
        private long SecurityPositionField;
        
        private string SecurityRecommendationField;
        
        private float SecuritySellRangeField;
        
        private string SecurityTickerField;
        
        private GreenField.ServiceCaller.MeetingServiceReference.StatusType StatusTypeField;
        
        private long StatusTypeIDField;
        
        private GreenField.ServiceCaller.MeetingServiceReference.EntityReferenceOfStatusTypejzQAem8p StatusTypeReferenceField;
        
        private string ValuationsField;
        
        private System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.VoterInfo> VoterInfoesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> AcceptWithoutDiscussionFlag {
            get {
                return this.AcceptWithoutDiscussionFlagField;
            }
            set {
                if ((this.AcceptWithoutDiscussionFlagField.Equals(value) != true)) {
                    this.AcceptWithoutDiscussionFlagField = value;
                    this.RaisePropertyChanged("AcceptWithoutDiscussionFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdminNotes {
            get {
                return this.AdminNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.AdminNotesField, value) != true)) {
                    this.AdminNotesField = value;
                    this.RaisePropertyChanged("AdminNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.AttachedFileInfo> AttachedFileInfoes {
            get {
                return this.AttachedFileInfoesField;
            }
            set {
                if ((object.ReferenceEquals(this.AttachedFileInfoesField, value) != true)) {
                    this.AttachedFileInfoesField = value;
                    this.RaisePropertyChanged("AttachedFileInfoes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Background {
            get {
                return this.BackgroundField;
            }
            set {
                if ((object.ReferenceEquals(this.BackgroundField, value) != true)) {
                    this.BackgroundField = value;
                    this.RaisePropertyChanged("Background");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<float> CommitteeBuyRange {
            get {
                return this.CommitteeBuyRangeField;
            }
            set {
                if ((this.CommitteeBuyRangeField.Equals(value) != true)) {
                    this.CommitteeBuyRangeField = value;
                    this.RaisePropertyChanged("CommitteeBuyRange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommitteePFVMeasure {
            get {
                return this.CommitteePFVMeasureField;
            }
            set {
                if ((object.ReferenceEquals(this.CommitteePFVMeasureField, value) != true)) {
                    this.CommitteePFVMeasureField = value;
                    this.RaisePropertyChanged("CommitteePFVMeasure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CommitteeRangeEffectiveThrough {
            get {
                return this.CommitteeRangeEffectiveThroughField;
            }
            set {
                if ((this.CommitteeRangeEffectiveThroughField.Equals(value) != true)) {
                    this.CommitteeRangeEffectiveThroughField = value;
                    this.RaisePropertyChanged("CommitteeRangeEffectiveThrough");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommitteeRecommendation {
            get {
                return this.CommitteeRecommendationField;
            }
            set {
                if ((object.ReferenceEquals(this.CommitteeRecommendationField, value) != true)) {
                    this.CommitteeRecommendationField = value;
                    this.RaisePropertyChanged("CommitteeRecommendation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<float> CommitteeSellRange {
            get {
                return this.CommitteeSellRangeField;
            }
            set {
                if ((this.CommitteeSellRangeField.Equals(value) != true)) {
                    this.CommitteeSellRangeField = value;
                    this.RaisePropertyChanged("CommitteeSellRange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompetitiveAdvantage {
            get {
                return this.CompetitiveAdvantageField;
            }
            set {
                if ((object.ReferenceEquals(this.CompetitiveAdvantageField, value) != true)) {
                    this.CompetitiveAdvantageField = value;
                    this.RaisePropertyChanged("CompetitiveAdvantage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompetitiveDisadvantage {
            get {
                return this.CompetitiveDisadvantageField;
            }
            set {
                if ((object.ReferenceEquals(this.CompetitiveDisadvantageField, value) != true)) {
                    this.CompetitiveDisadvantageField = value;
                    this.RaisePropertyChanged("CompetitiveDisadvantage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EarningsOutlook {
            get {
                return this.EarningsOutlookField;
            }
            set {
                if ((object.ReferenceEquals(this.EarningsOutlookField, value) != true)) {
                    this.EarningsOutlookField = value;
                    this.RaisePropertyChanged("EarningsOutlook");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvestmentThesis {
            get {
                return this.InvestmentThesisField;
            }
            set {
                if ((object.ReferenceEquals(this.InvestmentThesisField, value) != true)) {
                    this.InvestmentThesisField = value;
                    this.RaisePropertyChanged("InvestmentThesis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.MeetingPresentationMappingInfo> MeetingPresentationMappingInfoes {
            get {
                return this.MeetingPresentationMappingInfoesField;
            }
            set {
                if ((object.ReferenceEquals(this.MeetingPresentationMappingInfoesField, value) != true)) {
                    this.MeetingPresentationMappingInfoesField = value;
                    this.RaisePropertyChanged("MeetingPresentationMappingInfoes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((this.ModifiedOnField.Equals(value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PresentationID {
            get {
                return this.PresentationIDField;
            }
            set {
                if ((this.PresentationIDField.Equals(value) != true)) {
                    this.PresentationIDField = value;
                    this.RaisePropertyChanged("PresentationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Presenter {
            get {
                return this.PresenterField;
            }
            set {
                if ((object.ReferenceEquals(this.PresenterField, value) != true)) {
                    this.PresenterField = value;
                    this.RaisePropertyChanged("Presenter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float SecurityBuyRange {
            get {
                return this.SecurityBuyRangeField;
            }
            set {
                if ((this.SecurityBuyRangeField.Equals(value) != true)) {
                    this.SecurityBuyRangeField = value;
                    this.RaisePropertyChanged("SecurityBuyRange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float SecurityCashPosition {
            get {
                return this.SecurityCashPositionField;
            }
            set {
                if ((this.SecurityCashPositionField.Equals(value) != true)) {
                    this.SecurityCashPositionField = value;
                    this.RaisePropertyChanged("SecurityCashPosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityCountry {
            get {
                return this.SecurityCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityCountryField, value) != true)) {
                    this.SecurityCountryField = value;
                    this.RaisePropertyChanged("SecurityCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityCountryCode {
            get {
                return this.SecurityCountryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityCountryCodeField, value) != true)) {
                    this.SecurityCountryCodeField = value;
                    this.RaisePropertyChanged("SecurityCountryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float SecurityGlobalActiveWeight {
            get {
                return this.SecurityGlobalActiveWeightField;
            }
            set {
                if ((this.SecurityGlobalActiveWeightField.Equals(value) != true)) {
                    this.SecurityGlobalActiveWeightField = value;
                    this.RaisePropertyChanged("SecurityGlobalActiveWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityIndustry {
            get {
                return this.SecurityIndustryField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityIndustryField, value) != true)) {
                    this.SecurityIndustryField = value;
                    this.RaisePropertyChanged("SecurityIndustry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float SecurityLastClosingPrice {
            get {
                return this.SecurityLastClosingPriceField;
            }
            set {
                if ((this.SecurityLastClosingPriceField.Equals(value) != true)) {
                    this.SecurityLastClosingPriceField = value;
                    this.RaisePropertyChanged("SecurityLastClosingPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float SecurityMSCIIMIWeight {
            get {
                return this.SecurityMSCIIMIWeightField;
            }
            set {
                if ((this.SecurityMSCIIMIWeightField.Equals(value) != true)) {
                    this.SecurityMSCIIMIWeightField = value;
                    this.RaisePropertyChanged("SecurityMSCIIMIWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float SecurityMSCIStdWeight {
            get {
                return this.SecurityMSCIStdWeightField;
            }
            set {
                if ((this.SecurityMSCIStdWeightField.Equals(value) != true)) {
                    this.SecurityMSCIStdWeightField = value;
                    this.RaisePropertyChanged("SecurityMSCIStdWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float SecurityMarketCapitalization {
            get {
                return this.SecurityMarketCapitalizationField;
            }
            set {
                if ((this.SecurityMarketCapitalizationField.Equals(value) != true)) {
                    this.SecurityMarketCapitalizationField = value;
                    this.RaisePropertyChanged("SecurityMarketCapitalization");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityName {
            get {
                return this.SecurityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityNameField, value) != true)) {
                    this.SecurityNameField = value;
                    this.RaisePropertyChanged("SecurityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityPFVMeasure {
            get {
                return this.SecurityPFVMeasureField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityPFVMeasureField, value) != true)) {
                    this.SecurityPFVMeasureField = value;
                    this.RaisePropertyChanged("SecurityPFVMeasure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SecurityPosition {
            get {
                return this.SecurityPositionField;
            }
            set {
                if ((this.SecurityPositionField.Equals(value) != true)) {
                    this.SecurityPositionField = value;
                    this.RaisePropertyChanged("SecurityPosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityRecommendation {
            get {
                return this.SecurityRecommendationField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityRecommendationField, value) != true)) {
                    this.SecurityRecommendationField = value;
                    this.RaisePropertyChanged("SecurityRecommendation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float SecuritySellRange {
            get {
                return this.SecuritySellRangeField;
            }
            set {
                if ((this.SecuritySellRangeField.Equals(value) != true)) {
                    this.SecuritySellRangeField = value;
                    this.RaisePropertyChanged("SecuritySellRange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityTicker {
            get {
                return this.SecurityTickerField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityTickerField, value) != true)) {
                    this.SecurityTickerField = value;
                    this.RaisePropertyChanged("SecurityTicker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GreenField.ServiceCaller.MeetingServiceReference.StatusType StatusType {
            get {
                return this.StatusTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusTypeField, value) != true)) {
                    this.StatusTypeField = value;
                    this.RaisePropertyChanged("StatusType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long StatusTypeID {
            get {
                return this.StatusTypeIDField;
            }
            set {
                if ((this.StatusTypeIDField.Equals(value) != true)) {
                    this.StatusTypeIDField = value;
                    this.RaisePropertyChanged("StatusTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GreenField.ServiceCaller.MeetingServiceReference.EntityReferenceOfStatusTypejzQAem8p StatusTypeReference {
            get {
                return this.StatusTypeReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusTypeReferenceField, value) != true)) {
                    this.StatusTypeReferenceField = value;
                    this.RaisePropertyChanged("StatusTypeReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Valuations {
            get {
                return this.ValuationsField;
            }
            set {
                if ((object.ReferenceEquals(this.ValuationsField, value) != true)) {
                    this.ValuationsField = value;
                    this.RaisePropertyChanged("Valuations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.VoterInfo> VoterInfoes {
            get {
                return this.VoterInfoesField;
            }
            set {
                if ((object.ReferenceEquals(this.VoterInfoesField, value) != true)) {
                    this.VoterInfoesField = value;
                    this.RaisePropertyChanged("VoterInfoes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AttachedFileInfo", Namespace="http://schemas.datacontract.org/2004/07/GreenField.DAL", IsReference=true)]
    public partial class AttachedFileInfo : GreenField.ServiceCaller.MeetingServiceReference.EntityObject {
        
        private string CreatedByField;
        
        private System.DateTime CreatedOnField;
        
        private long FileIDField;
        
        private string FileNameField;
        
        private string FileSerializedDataField;
        
        private string ModifiedByField;
        
        private System.DateTime ModifiedOnField;
        
        private long PresentationIDField;
        
        private GreenField.ServiceCaller.MeetingServiceReference.PresentationInfo PresentationInfoField;
        
        private GreenField.ServiceCaller.MeetingServiceReference.EntityReferenceOfPresentationInfojzQAem8p PresentationInfoReferenceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FileID {
            get {
                return this.FileIDField;
            }
            set {
                if ((this.FileIDField.Equals(value) != true)) {
                    this.FileIDField = value;
                    this.RaisePropertyChanged("FileID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileSerializedData {
            get {
                return this.FileSerializedDataField;
            }
            set {
                if ((object.ReferenceEquals(this.FileSerializedDataField, value) != true)) {
                    this.FileSerializedDataField = value;
                    this.RaisePropertyChanged("FileSerializedData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((this.ModifiedOnField.Equals(value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PresentationID {
            get {
                return this.PresentationIDField;
            }
            set {
                if ((this.PresentationIDField.Equals(value) != true)) {
                    this.PresentationIDField = value;
                    this.RaisePropertyChanged("PresentationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GreenField.ServiceCaller.MeetingServiceReference.PresentationInfo PresentationInfo {
            get {
                return this.PresentationInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.PresentationInfoField, value) != true)) {
                    this.PresentationInfoField = value;
                    this.RaisePropertyChanged("PresentationInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GreenField.ServiceCaller.MeetingServiceReference.EntityReferenceOfPresentationInfojzQAem8p PresentationInfoReference {
            get {
                return this.PresentationInfoReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.PresentationInfoReferenceField, value) != true)) {
                    this.PresentationInfoReferenceField = value;
                    this.RaisePropertyChanged("PresentationInfoReference");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatusType", Namespace="http://schemas.datacontract.org/2004/07/GreenField.DAL", IsReference=true)]
    public partial class StatusType : GreenField.ServiceCaller.MeetingServiceReference.EntityObject {
        
        private string CreatedByField;
        
        private System.DateTime CreatedOnField;
        
        private string ModifiedByField;
        
        private System.DateTime ModifiedOnField;
        
        private System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.PresentationInfo> PresentationInfoesField;
        
        private string StatusType1Field;
        
        private long StatusTypeIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((this.ModifiedOnField.Equals(value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.PresentationInfo> PresentationInfoes {
            get {
                return this.PresentationInfoesField;
            }
            set {
                if ((object.ReferenceEquals(this.PresentationInfoesField, value) != true)) {
                    this.PresentationInfoesField = value;
                    this.RaisePropertyChanged("PresentationInfoes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusType1 {
            get {
                return this.StatusType1Field;
            }
            set {
                if ((object.ReferenceEquals(this.StatusType1Field, value) != true)) {
                    this.StatusType1Field = value;
                    this.RaisePropertyChanged("StatusType1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long StatusTypeID {
            get {
                return this.StatusTypeIDField;
            }
            set {
                if ((this.StatusTypeIDField.Equals(value) != true)) {
                    this.StatusTypeIDField = value;
                    this.RaisePropertyChanged("StatusTypeID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VoterInfo", Namespace="http://schemas.datacontract.org/2004/07/GreenField.DAL", IsReference=true)]
    public partial class VoterInfo : GreenField.ServiceCaller.MeetingServiceReference.EntityObject {
        
        private GreenField.ServiceCaller.MeetingServiceReference.AttendanceType AttendanceTypeField;
        
        private System.Nullable<long> AttendanceTypeIDField;
        
        private GreenField.ServiceCaller.MeetingServiceReference.EntityReferenceOfAttendanceTypejzQAem8p AttendanceTypeReferenceField;
        
        private string CreatedByField;
        
        private System.DateTime CreatedOnField;
        
        private System.Nullable<bool> DiscussionFlagField;
        
        private string ModifiedByField;
        
        private System.DateTime ModifiedOnField;
        
        private string NameField;
        
        private string NotesField;
        
        private System.Nullable<bool> PostMeetingFlagField;
        
        private long PresentationIDField;
        
        private GreenField.ServiceCaller.MeetingServiceReference.PresentationInfo PresentationInfoField;
        
        private GreenField.ServiceCaller.MeetingServiceReference.EntityReferenceOfPresentationInfojzQAem8p PresentationInfoReferenceField;
        
        private GreenField.ServiceCaller.MeetingServiceReference.VoteType VoteTypeField;
        
        private System.Nullable<long> VoteTypeIDField;
        
        private GreenField.ServiceCaller.MeetingServiceReference.EntityReferenceOfVoteTypejzQAem8p VoteTypeReferenceField;
        
        private System.Nullable<float> VoterBuyRangeField;
        
        private long VoterIDField;
        
        private string VoterPFVMeasureField;
        
        private string VoterRecommendationField;
        
        private System.Nullable<float> VoterSellRangeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GreenField.ServiceCaller.MeetingServiceReference.AttendanceType AttendanceType {
            get {
                return this.AttendanceTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AttendanceTypeField, value) != true)) {
                    this.AttendanceTypeField = value;
                    this.RaisePropertyChanged("AttendanceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> AttendanceTypeID {
            get {
                return this.AttendanceTypeIDField;
            }
            set {
                if ((this.AttendanceTypeIDField.Equals(value) != true)) {
                    this.AttendanceTypeIDField = value;
                    this.RaisePropertyChanged("AttendanceTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GreenField.ServiceCaller.MeetingServiceReference.EntityReferenceOfAttendanceTypejzQAem8p AttendanceTypeReference {
            get {
                return this.AttendanceTypeReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.AttendanceTypeReferenceField, value) != true)) {
                    this.AttendanceTypeReferenceField = value;
                    this.RaisePropertyChanged("AttendanceTypeReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> DiscussionFlag {
            get {
                return this.DiscussionFlagField;
            }
            set {
                if ((this.DiscussionFlagField.Equals(value) != true)) {
                    this.DiscussionFlagField = value;
                    this.RaisePropertyChanged("DiscussionFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((this.ModifiedOnField.Equals(value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> PostMeetingFlag {
            get {
                return this.PostMeetingFlagField;
            }
            set {
                if ((this.PostMeetingFlagField.Equals(value) != true)) {
                    this.PostMeetingFlagField = value;
                    this.RaisePropertyChanged("PostMeetingFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PresentationID {
            get {
                return this.PresentationIDField;
            }
            set {
                if ((this.PresentationIDField.Equals(value) != true)) {
                    this.PresentationIDField = value;
                    this.RaisePropertyChanged("PresentationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GreenField.ServiceCaller.MeetingServiceReference.PresentationInfo PresentationInfo {
            get {
                return this.PresentationInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.PresentationInfoField, value) != true)) {
                    this.PresentationInfoField = value;
                    this.RaisePropertyChanged("PresentationInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GreenField.ServiceCaller.MeetingServiceReference.EntityReferenceOfPresentationInfojzQAem8p PresentationInfoReference {
            get {
                return this.PresentationInfoReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.PresentationInfoReferenceField, value) != true)) {
                    this.PresentationInfoReferenceField = value;
                    this.RaisePropertyChanged("PresentationInfoReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GreenField.ServiceCaller.MeetingServiceReference.VoteType VoteType {
            get {
                return this.VoteTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.VoteTypeField, value) != true)) {
                    this.VoteTypeField = value;
                    this.RaisePropertyChanged("VoteType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VoteTypeID {
            get {
                return this.VoteTypeIDField;
            }
            set {
                if ((this.VoteTypeIDField.Equals(value) != true)) {
                    this.VoteTypeIDField = value;
                    this.RaisePropertyChanged("VoteTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GreenField.ServiceCaller.MeetingServiceReference.EntityReferenceOfVoteTypejzQAem8p VoteTypeReference {
            get {
                return this.VoteTypeReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.VoteTypeReferenceField, value) != true)) {
                    this.VoteTypeReferenceField = value;
                    this.RaisePropertyChanged("VoteTypeReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<float> VoterBuyRange {
            get {
                return this.VoterBuyRangeField;
            }
            set {
                if ((this.VoterBuyRangeField.Equals(value) != true)) {
                    this.VoterBuyRangeField = value;
                    this.RaisePropertyChanged("VoterBuyRange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long VoterID {
            get {
                return this.VoterIDField;
            }
            set {
                if ((this.VoterIDField.Equals(value) != true)) {
                    this.VoterIDField = value;
                    this.RaisePropertyChanged("VoterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VoterPFVMeasure {
            get {
                return this.VoterPFVMeasureField;
            }
            set {
                if ((object.ReferenceEquals(this.VoterPFVMeasureField, value) != true)) {
                    this.VoterPFVMeasureField = value;
                    this.RaisePropertyChanged("VoterPFVMeasure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VoterRecommendation {
            get {
                return this.VoterRecommendationField;
            }
            set {
                if ((object.ReferenceEquals(this.VoterRecommendationField, value) != true)) {
                    this.VoterRecommendationField = value;
                    this.RaisePropertyChanged("VoterRecommendation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<float> VoterSellRange {
            get {
                return this.VoterSellRangeField;
            }
            set {
                if ((this.VoterSellRangeField.Equals(value) != true)) {
                    this.VoterSellRangeField = value;
                    this.RaisePropertyChanged("VoterSellRange");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AttendanceType", Namespace="http://schemas.datacontract.org/2004/07/GreenField.DAL", IsReference=true)]
    public partial class AttendanceType : GreenField.ServiceCaller.MeetingServiceReference.EntityObject {
        
        private string AttendanceType1Field;
        
        private long AttendanceTypeIDField;
        
        private string CreatedByField;
        
        private System.DateTime CreatedOnField;
        
        private string ModifiedByField;
        
        private System.DateTime ModifiedOnField;
        
        private System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.VoterInfo> VoterInfoesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttendanceType1 {
            get {
                return this.AttendanceType1Field;
            }
            set {
                if ((object.ReferenceEquals(this.AttendanceType1Field, value) != true)) {
                    this.AttendanceType1Field = value;
                    this.RaisePropertyChanged("AttendanceType1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AttendanceTypeID {
            get {
                return this.AttendanceTypeIDField;
            }
            set {
                if ((this.AttendanceTypeIDField.Equals(value) != true)) {
                    this.AttendanceTypeIDField = value;
                    this.RaisePropertyChanged("AttendanceTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((this.ModifiedOnField.Equals(value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.VoterInfo> VoterInfoes {
            get {
                return this.VoterInfoesField;
            }
            set {
                if ((object.ReferenceEquals(this.VoterInfoesField, value) != true)) {
                    this.VoterInfoesField = value;
                    this.RaisePropertyChanged("VoterInfoes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VoteType", Namespace="http://schemas.datacontract.org/2004/07/GreenField.DAL", IsReference=true)]
    public partial class VoteType : GreenField.ServiceCaller.MeetingServiceReference.EntityObject {
        
        private string CreatedByField;
        
        private System.DateTime CreatedOnField;
        
        private string ModifiedByField;
        
        private System.DateTime ModifiedOnField;
        
        private string VoteType1Field;
        
        private long VoteTypeIDField;
        
        private System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.VoterInfo> VoterInfoesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((this.ModifiedOnField.Equals(value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VoteType1 {
            get {
                return this.VoteType1Field;
            }
            set {
                if ((object.ReferenceEquals(this.VoteType1Field, value) != true)) {
                    this.VoteType1Field = value;
                    this.RaisePropertyChanged("VoteType1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long VoteTypeID {
            get {
                return this.VoteTypeIDField;
            }
            set {
                if ((this.VoteTypeIDField.Equals(value) != true)) {
                    this.VoteTypeIDField = value;
                    this.RaisePropertyChanged("VoteTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.VoterInfo> VoterInfoes {
            get {
                return this.VoterInfoesField;
            }
            set {
                if ((object.ReferenceEquals(this.VoterInfoesField, value) != true)) {
                    this.VoterInfoesField = value;
                    this.RaisePropertyChanged("VoterInfoes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityKey", Namespace="http://schemas.datacontract.org/2004/07/System.Data", IsReference=true)]
    public partial class EntityKey : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string EntityContainerNameField;
        
        private System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.EntityKeyMember> EntityKeyValuesField;
        
        private string EntitySetNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityContainerName {
            get {
                return this.EntityContainerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityContainerNameField, value) != true)) {
                    this.EntityContainerNameField = value;
                    this.RaisePropertyChanged("EntityContainerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.EntityKeyMember> EntityKeyValues {
            get {
                return this.EntityKeyValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityKeyValuesField, value) != true)) {
                    this.EntityKeyValuesField = value;
                    this.RaisePropertyChanged("EntityKeyValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntitySetName {
            get {
                return this.EntitySetNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntitySetNameField, value) != true)) {
                    this.EntitySetNameField = value;
                    this.RaisePropertyChanged("EntitySetName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityKeyMember", Namespace="http://schemas.datacontract.org/2004/07/System.Data")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.MeetingInfo>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.MeetingInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.MeetingPresentationMappingInfo>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.MeetingPresentationMappingInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.PresentationInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.AttachedFileInfo>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.AttachedFileInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.StatusType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.PresentationInfo>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.VoterInfo>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.VoterInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.AttendanceType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.VoteType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.PresentationInfoResult>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.PresentationInfoResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.StatusType>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.ServiceFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.DataContracts.EntitySelectionData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.DataContracts.SecurityInformation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.EntityObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.StructuralObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.EntityReferenceOfMeetingInfojzQAem8p))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.EntityReference))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.RelatedEnd))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.EntityReferenceOfPresentationInfojzQAem8p))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.EntityReferenceOfStatusTypejzQAem8p))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.EntityReferenceOfAttendanceTypejzQAem8p))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.EntityReferenceOfVoteTypejzQAem8p))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.ComplexObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<System.Nullable<System.DateTime>>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.EntityKey))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.EntityKeyMember>))]
    public partial class EntityKeyMember : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string KeyField;
        
        private object ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReferenceOfMeetingInfojzQAem8p", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    public partial class EntityReferenceOfMeetingInfojzQAem8p : GreenField.ServiceCaller.MeetingServiceReference.EntityReference {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReference", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.EntityReferenceOfPresentationInfojzQAem8p))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.EntityReferenceOfStatusTypejzQAem8p))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.EntityReferenceOfAttendanceTypejzQAem8p))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.EntityReferenceOfVoteTypejzQAem8p))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.EntityReferenceOfMeetingInfojzQAem8p))]
    public partial class EntityReference : GreenField.ServiceCaller.MeetingServiceReference.RelatedEnd {
        
        private GreenField.ServiceCaller.MeetingServiceReference.EntityKey EntityKeyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GreenField.ServiceCaller.MeetingServiceReference.EntityKey EntityKey {
            get {
                return this.EntityKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityKeyField, value) != true)) {
                    this.EntityKeyField = value;
                    this.RaisePropertyChanged("EntityKey");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RelatedEnd", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.EntityReference))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.EntityReferenceOfPresentationInfojzQAem8p))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.EntityReferenceOfStatusTypejzQAem8p))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.EntityReferenceOfAttendanceTypejzQAem8p))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.EntityReferenceOfVoteTypejzQAem8p))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.EntityReferenceOfMeetingInfojzQAem8p))]
    public partial class RelatedEnd : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReferenceOfPresentationInfojzQAem8p", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    public partial class EntityReferenceOfPresentationInfojzQAem8p : GreenField.ServiceCaller.MeetingServiceReference.EntityReference {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReferenceOfStatusTypejzQAem8p", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    public partial class EntityReferenceOfStatusTypejzQAem8p : GreenField.ServiceCaller.MeetingServiceReference.EntityReference {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReferenceOfAttendanceTypejzQAem8p", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    public partial class EntityReferenceOfAttendanceTypejzQAem8p : GreenField.ServiceCaller.MeetingServiceReference.EntityReference {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReferenceOfVoteTypejzQAem8p", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    public partial class EntityReferenceOfVoteTypejzQAem8p : GreenField.ServiceCaller.MeetingServiceReference.EntityReference {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MeetingServiceReference.MeetingService")]
    public interface MeetingService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/MeetingService/RetrieveSecurityDetails", ReplyAction="http://tempuri.org/MeetingService/RetrieveSecurityDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.ServiceFault), Action="http://tempuri.org/MeetingService/RetrieveSecurityDetailsServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginRetrieveSecurityDetails(GreenField.DataContracts.EntitySelectionData entitySelectionData, System.AsyncCallback callback, object asyncState);
        
        GreenField.DataContracts.SecurityInformation EndRetrieveSecurityDetails(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/MeetingService/GetMeetings", ReplyAction="http://tempuri.org/MeetingService/GetMeetingsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.ServiceFault), Action="http://tempuri.org/MeetingService/GetMeetingsServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginGetMeetings(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.MeetingInfo> EndGetMeetings(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/MeetingService/GetMeetingsByDate", ReplyAction="http://tempuri.org/MeetingService/GetMeetingsByDateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.ServiceFault), Action="http://tempuri.org/MeetingService/GetMeetingsByDateServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginGetMeetingsByDate(System.DateTime meetingDate, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.MeetingInfo> EndGetMeetingsByDate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/MeetingService/GetMeetingDates", ReplyAction="http://tempuri.org/MeetingService/GetMeetingDatesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.ServiceFault), Action="http://tempuri.org/MeetingService/GetMeetingDatesServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginGetMeetingDates(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<System.Nullable<System.DateTime>> EndGetMeetingDates(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/MeetingService/CreateMeeting", ReplyAction="http://tempuri.org/MeetingService/CreateMeetingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.ServiceFault), Action="http://tempuri.org/MeetingService/CreateMeetingServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginCreateMeeting(GreenField.ServiceCaller.MeetingServiceReference.MeetingInfo meetingInfo, System.AsyncCallback callback, object asyncState);
        
        void EndCreateMeeting(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/MeetingService/UpdateMeeting", ReplyAction="http://tempuri.org/MeetingService/UpdateMeetingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.ServiceFault), Action="http://tempuri.org/MeetingService/UpdateMeetingServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginUpdateMeeting(GreenField.ServiceCaller.MeetingServiceReference.MeetingInfo meetingInfo, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateMeeting(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/MeetingService/GetPresentations", ReplyAction="http://tempuri.org/MeetingService/GetPresentationsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.ServiceFault), Action="http://tempuri.org/MeetingService/GetPresentationsServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginGetPresentations(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.PresentationInfoResult> EndGetPresentations(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/MeetingService/GetPresentationsByMeetingID", ReplyAction="http://tempuri.org/MeetingService/GetPresentationsByMeetingIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.ServiceFault), Action="http://tempuri.org/MeetingService/GetPresentationsByMeetingIDServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginGetPresentationsByMeetingID(long meetingID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.PresentationInfoResult> EndGetPresentationsByMeetingID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/MeetingService/GetPresentationsByMeetingDatePresenterStatus", ReplyAction="http://tempuri.org/MeetingService/GetPresentationsByMeetingDatePresenterStatusRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.ServiceFault), Action="http://tempuri.org/MeetingService/GetPresentationsByMeetingDatePresenterStatusSer" +
            "viceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginGetPresentationsByMeetingDatePresenterStatus(System.Nullable<System.DateTime> meetingDate, string presenter, string status, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.PresentationInfoResult> EndGetPresentationsByMeetingDatePresenterStatus(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/MeetingService/GetDistinctPresenters", ReplyAction="http://tempuri.org/MeetingService/GetDistinctPresentersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.ServiceFault), Action="http://tempuri.org/MeetingService/GetDistinctPresentersServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginGetDistinctPresenters(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<string> EndGetDistinctPresenters(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/MeetingService/GetStatusTypes", ReplyAction="http://tempuri.org/MeetingService/GetStatusTypesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.ServiceFault), Action="http://tempuri.org/MeetingService/GetStatusTypesServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginGetStatusTypes(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.StatusType> EndGetStatusTypes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/MeetingService/UpdateMeetingPresentationMapping", ReplyAction="http://tempuri.org/MeetingService/UpdateMeetingPresentationMappingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.ServiceFault), Action="http://tempuri.org/MeetingService/UpdateMeetingPresentationMappingServiceFaultFau" +
            "lt", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginUpdateMeetingPresentationMapping(GreenField.ServiceCaller.MeetingServiceReference.MeetingPresentationMappingInfo meetingPresentationMappingInfo, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateMeetingPresentationMapping(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/MeetingService/UpdatePresentation", ReplyAction="http://tempuri.org/MeetingService/UpdatePresentationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.ServiceFault), Action="http://tempuri.org/MeetingService/UpdatePresentationServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginUpdatePresentation(GreenField.ServiceCaller.MeetingServiceReference.PresentationInfo presentationInfo, System.AsyncCallback callback, object asyncState);
        
        void EndUpdatePresentation(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/MeetingService/CreateMeetingPresentationMapping", ReplyAction="http://tempuri.org/MeetingService/CreateMeetingPresentationMappingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.ServiceFault), Action="http://tempuri.org/MeetingService/CreateMeetingPresentationMappingServiceFaultFau" +
            "lt", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginCreateMeetingPresentationMapping(GreenField.ServiceCaller.MeetingServiceReference.MeetingPresentationMappingInfo meetingPresentationMappingInfo, System.AsyncCallback callback, object asyncState);
        
        void EndCreateMeetingPresentationMapping(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/MeetingService/CreatePresentation", ReplyAction="http://tempuri.org/MeetingService/CreatePresentationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.ServiceFault), Action="http://tempuri.org/MeetingService/CreatePresentationServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginCreatePresentation(GreenField.ServiceCaller.MeetingServiceReference.PresentationInfo presentationInfo, System.AsyncCallback callback, object asyncState);
        
        System.Nullable<long> EndCreatePresentation(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/MeetingService/CreateVoterInfo", ReplyAction="http://tempuri.org/MeetingService/CreateVoterInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.ServiceFault), Action="http://tempuri.org/MeetingService/CreateVoterInfoServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginCreateVoterInfo(GreenField.ServiceCaller.MeetingServiceReference.VoterInfo voterInfo, System.AsyncCallback callback, object asyncState);
        
        void EndCreateVoterInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/MeetingService/CreateFileInfo", ReplyAction="http://tempuri.org/MeetingService/CreateFileInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.ServiceFault), Action="http://tempuri.org/MeetingService/CreateFileInfoServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginCreateFileInfo(System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.AttachedFileInfo> fileInfoColl, System.AsyncCallback callback, object asyncState);
        
        void EndCreateFileInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/MeetingService/GetFileInfo", ReplyAction="http://tempuri.org/MeetingService/GetFileInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.MeetingServiceReference.ServiceFault), Action="http://tempuri.org/MeetingService/GetFileInfoServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginGetFileInfo(long presentationID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.AttachedFileInfo> EndGetFileInfo(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface MeetingServiceChannel : GreenField.ServiceCaller.MeetingServiceReference.MeetingService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrieveSecurityDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrieveSecurityDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public GreenField.DataContracts.SecurityInformation Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((GreenField.DataContracts.SecurityInformation)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMeetingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMeetingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.MeetingInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.MeetingInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMeetingsByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMeetingsByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.MeetingInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.MeetingInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMeetingDatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMeetingDatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<System.Nullable<System.DateTime>> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<System.Nullable<System.DateTime>>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPresentationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPresentationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.PresentationInfoResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.PresentationInfoResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPresentationsByMeetingIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPresentationsByMeetingIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.PresentationInfoResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.PresentationInfoResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPresentationsByMeetingDatePresenterStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPresentationsByMeetingDatePresenterStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.PresentationInfoResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.PresentationInfoResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDistinctPresentersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDistinctPresentersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetStatusTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStatusTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.StatusType> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.StatusType>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreatePresentationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreatePresentationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Nullable<long> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Nullable<long>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFileInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFileInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.AttachedFileInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.AttachedFileInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MeetingServiceClient : System.ServiceModel.ClientBase<GreenField.ServiceCaller.MeetingServiceReference.MeetingService>, GreenField.ServiceCaller.MeetingServiceReference.MeetingService {
        
        private BeginOperationDelegate onBeginRetrieveSecurityDetailsDelegate;
        
        private EndOperationDelegate onEndRetrieveSecurityDetailsDelegate;
        
        private System.Threading.SendOrPostCallback onRetrieveSecurityDetailsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMeetingsDelegate;
        
        private EndOperationDelegate onEndGetMeetingsDelegate;
        
        private System.Threading.SendOrPostCallback onGetMeetingsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMeetingsByDateDelegate;
        
        private EndOperationDelegate onEndGetMeetingsByDateDelegate;
        
        private System.Threading.SendOrPostCallback onGetMeetingsByDateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMeetingDatesDelegate;
        
        private EndOperationDelegate onEndGetMeetingDatesDelegate;
        
        private System.Threading.SendOrPostCallback onGetMeetingDatesCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateMeetingDelegate;
        
        private EndOperationDelegate onEndCreateMeetingDelegate;
        
        private System.Threading.SendOrPostCallback onCreateMeetingCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateMeetingDelegate;
        
        private EndOperationDelegate onEndUpdateMeetingDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateMeetingCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPresentationsDelegate;
        
        private EndOperationDelegate onEndGetPresentationsDelegate;
        
        private System.Threading.SendOrPostCallback onGetPresentationsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPresentationsByMeetingIDDelegate;
        
        private EndOperationDelegate onEndGetPresentationsByMeetingIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetPresentationsByMeetingIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPresentationsByMeetingDatePresenterStatusDelegate;
        
        private EndOperationDelegate onEndGetPresentationsByMeetingDatePresenterStatusDelegate;
        
        private System.Threading.SendOrPostCallback onGetPresentationsByMeetingDatePresenterStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDistinctPresentersDelegate;
        
        private EndOperationDelegate onEndGetDistinctPresentersDelegate;
        
        private System.Threading.SendOrPostCallback onGetDistinctPresentersCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetStatusTypesDelegate;
        
        private EndOperationDelegate onEndGetStatusTypesDelegate;
        
        private System.Threading.SendOrPostCallback onGetStatusTypesCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateMeetingPresentationMappingDelegate;
        
        private EndOperationDelegate onEndUpdateMeetingPresentationMappingDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateMeetingPresentationMappingCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdatePresentationDelegate;
        
        private EndOperationDelegate onEndUpdatePresentationDelegate;
        
        private System.Threading.SendOrPostCallback onUpdatePresentationCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateMeetingPresentationMappingDelegate;
        
        private EndOperationDelegate onEndCreateMeetingPresentationMappingDelegate;
        
        private System.Threading.SendOrPostCallback onCreateMeetingPresentationMappingCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreatePresentationDelegate;
        
        private EndOperationDelegate onEndCreatePresentationDelegate;
        
        private System.Threading.SendOrPostCallback onCreatePresentationCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateVoterInfoDelegate;
        
        private EndOperationDelegate onEndCreateVoterInfoDelegate;
        
        private System.Threading.SendOrPostCallback onCreateVoterInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateFileInfoDelegate;
        
        private EndOperationDelegate onEndCreateFileInfoDelegate;
        
        private System.Threading.SendOrPostCallback onCreateFileInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFileInfoDelegate;
        
        private EndOperationDelegate onEndGetFileInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetFileInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public MeetingServiceClient() {
        }
        
        public MeetingServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MeetingServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MeetingServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MeetingServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<RetrieveSecurityDetailsCompletedEventArgs> RetrieveSecurityDetailsCompleted;
        
        public event System.EventHandler<GetMeetingsCompletedEventArgs> GetMeetingsCompleted;
        
        public event System.EventHandler<GetMeetingsByDateCompletedEventArgs> GetMeetingsByDateCompleted;
        
        public event System.EventHandler<GetMeetingDatesCompletedEventArgs> GetMeetingDatesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CreateMeetingCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateMeetingCompleted;
        
        public event System.EventHandler<GetPresentationsCompletedEventArgs> GetPresentationsCompleted;
        
        public event System.EventHandler<GetPresentationsByMeetingIDCompletedEventArgs> GetPresentationsByMeetingIDCompleted;
        
        public event System.EventHandler<GetPresentationsByMeetingDatePresenterStatusCompletedEventArgs> GetPresentationsByMeetingDatePresenterStatusCompleted;
        
        public event System.EventHandler<GetDistinctPresentersCompletedEventArgs> GetDistinctPresentersCompleted;
        
        public event System.EventHandler<GetStatusTypesCompletedEventArgs> GetStatusTypesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateMeetingPresentationMappingCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdatePresentationCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CreateMeetingPresentationMappingCompleted;
        
        public event System.EventHandler<CreatePresentationCompletedEventArgs> CreatePresentationCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CreateVoterInfoCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CreateFileInfoCompleted;
        
        public event System.EventHandler<GetFileInfoCompletedEventArgs> GetFileInfoCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.MeetingServiceReference.MeetingService.BeginRetrieveSecurityDetails(GreenField.DataContracts.EntitySelectionData entitySelectionData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrieveSecurityDetails(entitySelectionData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GreenField.DataContracts.SecurityInformation GreenField.ServiceCaller.MeetingServiceReference.MeetingService.EndRetrieveSecurityDetails(System.IAsyncResult result) {
            return base.Channel.EndRetrieveSecurityDetails(result);
        }
        
        private System.IAsyncResult OnBeginRetrieveSecurityDetails(object[] inValues, System.AsyncCallback callback, object asyncState) {
            GreenField.DataContracts.EntitySelectionData entitySelectionData = ((GreenField.DataContracts.EntitySelectionData)(inValues[0]));
            return ((GreenField.ServiceCaller.MeetingServiceReference.MeetingService)(this)).BeginRetrieveSecurityDetails(entitySelectionData, callback, asyncState);
        }
        
        private object[] OnEndRetrieveSecurityDetails(System.IAsyncResult result) {
            GreenField.DataContracts.SecurityInformation retVal = ((GreenField.ServiceCaller.MeetingServiceReference.MeetingService)(this)).EndRetrieveSecurityDetails(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrieveSecurityDetailsCompleted(object state) {
            if ((this.RetrieveSecurityDetailsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrieveSecurityDetailsCompleted(this, new RetrieveSecurityDetailsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrieveSecurityDetailsAsync(GreenField.DataContracts.EntitySelectionData entitySelectionData) {
            this.RetrieveSecurityDetailsAsync(entitySelectionData, null);
        }
        
        public void RetrieveSecurityDetailsAsync(GreenField.DataContracts.EntitySelectionData entitySelectionData, object userState) {
            if ((this.onBeginRetrieveSecurityDetailsDelegate == null)) {
                this.onBeginRetrieveSecurityDetailsDelegate = new BeginOperationDelegate(this.OnBeginRetrieveSecurityDetails);
            }
            if ((this.onEndRetrieveSecurityDetailsDelegate == null)) {
                this.onEndRetrieveSecurityDetailsDelegate = new EndOperationDelegate(this.OnEndRetrieveSecurityDetails);
            }
            if ((this.onRetrieveSecurityDetailsCompletedDelegate == null)) {
                this.onRetrieveSecurityDetailsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrieveSecurityDetailsCompleted);
            }
            base.InvokeAsync(this.onBeginRetrieveSecurityDetailsDelegate, new object[] {
                        entitySelectionData}, this.onEndRetrieveSecurityDetailsDelegate, this.onRetrieveSecurityDetailsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.MeetingServiceReference.MeetingService.BeginGetMeetings(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMeetings(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.MeetingInfo> GreenField.ServiceCaller.MeetingServiceReference.MeetingService.EndGetMeetings(System.IAsyncResult result) {
            return base.Channel.EndGetMeetings(result);
        }
        
        private System.IAsyncResult OnBeginGetMeetings(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((GreenField.ServiceCaller.MeetingServiceReference.MeetingService)(this)).BeginGetMeetings(callback, asyncState);
        }
        
        private object[] OnEndGetMeetings(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.MeetingInfo> retVal = ((GreenField.ServiceCaller.MeetingServiceReference.MeetingService)(this)).EndGetMeetings(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMeetingsCompleted(object state) {
            if ((this.GetMeetingsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMeetingsCompleted(this, new GetMeetingsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMeetingsAsync() {
            this.GetMeetingsAsync(null);
        }
        
        public void GetMeetingsAsync(object userState) {
            if ((this.onBeginGetMeetingsDelegate == null)) {
                this.onBeginGetMeetingsDelegate = new BeginOperationDelegate(this.OnBeginGetMeetings);
            }
            if ((this.onEndGetMeetingsDelegate == null)) {
                this.onEndGetMeetingsDelegate = new EndOperationDelegate(this.OnEndGetMeetings);
            }
            if ((this.onGetMeetingsCompletedDelegate == null)) {
                this.onGetMeetingsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMeetingsCompleted);
            }
            base.InvokeAsync(this.onBeginGetMeetingsDelegate, null, this.onEndGetMeetingsDelegate, this.onGetMeetingsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.MeetingServiceReference.MeetingService.BeginGetMeetingsByDate(System.DateTime meetingDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMeetingsByDate(meetingDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.MeetingInfo> GreenField.ServiceCaller.MeetingServiceReference.MeetingService.EndGetMeetingsByDate(System.IAsyncResult result) {
            return base.Channel.EndGetMeetingsByDate(result);
        }
        
        private System.IAsyncResult OnBeginGetMeetingsByDate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime meetingDate = ((System.DateTime)(inValues[0]));
            return ((GreenField.ServiceCaller.MeetingServiceReference.MeetingService)(this)).BeginGetMeetingsByDate(meetingDate, callback, asyncState);
        }
        
        private object[] OnEndGetMeetingsByDate(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.MeetingInfo> retVal = ((GreenField.ServiceCaller.MeetingServiceReference.MeetingService)(this)).EndGetMeetingsByDate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMeetingsByDateCompleted(object state) {
            if ((this.GetMeetingsByDateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMeetingsByDateCompleted(this, new GetMeetingsByDateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMeetingsByDateAsync(System.DateTime meetingDate) {
            this.GetMeetingsByDateAsync(meetingDate, null);
        }
        
        public void GetMeetingsByDateAsync(System.DateTime meetingDate, object userState) {
            if ((this.onBeginGetMeetingsByDateDelegate == null)) {
                this.onBeginGetMeetingsByDateDelegate = new BeginOperationDelegate(this.OnBeginGetMeetingsByDate);
            }
            if ((this.onEndGetMeetingsByDateDelegate == null)) {
                this.onEndGetMeetingsByDateDelegate = new EndOperationDelegate(this.OnEndGetMeetingsByDate);
            }
            if ((this.onGetMeetingsByDateCompletedDelegate == null)) {
                this.onGetMeetingsByDateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMeetingsByDateCompleted);
            }
            base.InvokeAsync(this.onBeginGetMeetingsByDateDelegate, new object[] {
                        meetingDate}, this.onEndGetMeetingsByDateDelegate, this.onGetMeetingsByDateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.MeetingServiceReference.MeetingService.BeginGetMeetingDates(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMeetingDates(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<System.Nullable<System.DateTime>> GreenField.ServiceCaller.MeetingServiceReference.MeetingService.EndGetMeetingDates(System.IAsyncResult result) {
            return base.Channel.EndGetMeetingDates(result);
        }
        
        private System.IAsyncResult OnBeginGetMeetingDates(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((GreenField.ServiceCaller.MeetingServiceReference.MeetingService)(this)).BeginGetMeetingDates(callback, asyncState);
        }
        
        private object[] OnEndGetMeetingDates(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<System.Nullable<System.DateTime>> retVal = ((GreenField.ServiceCaller.MeetingServiceReference.MeetingService)(this)).EndGetMeetingDates(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMeetingDatesCompleted(object state) {
            if ((this.GetMeetingDatesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMeetingDatesCompleted(this, new GetMeetingDatesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMeetingDatesAsync() {
            this.GetMeetingDatesAsync(null);
        }
        
        public void GetMeetingDatesAsync(object userState) {
            if ((this.onBeginGetMeetingDatesDelegate == null)) {
                this.onBeginGetMeetingDatesDelegate = new BeginOperationDelegate(this.OnBeginGetMeetingDates);
            }
            if ((this.onEndGetMeetingDatesDelegate == null)) {
                this.onEndGetMeetingDatesDelegate = new EndOperationDelegate(this.OnEndGetMeetingDates);
            }
            if ((this.onGetMeetingDatesCompletedDelegate == null)) {
                this.onGetMeetingDatesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMeetingDatesCompleted);
            }
            base.InvokeAsync(this.onBeginGetMeetingDatesDelegate, null, this.onEndGetMeetingDatesDelegate, this.onGetMeetingDatesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.MeetingServiceReference.MeetingService.BeginCreateMeeting(GreenField.ServiceCaller.MeetingServiceReference.MeetingInfo meetingInfo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateMeeting(meetingInfo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GreenField.ServiceCaller.MeetingServiceReference.MeetingService.EndCreateMeeting(System.IAsyncResult result) {
            base.Channel.EndCreateMeeting(result);
        }
        
        private System.IAsyncResult OnBeginCreateMeeting(object[] inValues, System.AsyncCallback callback, object asyncState) {
            GreenField.ServiceCaller.MeetingServiceReference.MeetingInfo meetingInfo = ((GreenField.ServiceCaller.MeetingServiceReference.MeetingInfo)(inValues[0]));
            return ((GreenField.ServiceCaller.MeetingServiceReference.MeetingService)(this)).BeginCreateMeeting(meetingInfo, callback, asyncState);
        }
        
        private object[] OnEndCreateMeeting(System.IAsyncResult result) {
            ((GreenField.ServiceCaller.MeetingServiceReference.MeetingService)(this)).EndCreateMeeting(result);
            return null;
        }
        
        private void OnCreateMeetingCompleted(object state) {
            if ((this.CreateMeetingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateMeetingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateMeetingAsync(GreenField.ServiceCaller.MeetingServiceReference.MeetingInfo meetingInfo) {
            this.CreateMeetingAsync(meetingInfo, null);
        }
        
        public void CreateMeetingAsync(GreenField.ServiceCaller.MeetingServiceReference.MeetingInfo meetingInfo, object userState) {
            if ((this.onBeginCreateMeetingDelegate == null)) {
                this.onBeginCreateMeetingDelegate = new BeginOperationDelegate(this.OnBeginCreateMeeting);
            }
            if ((this.onEndCreateMeetingDelegate == null)) {
                this.onEndCreateMeetingDelegate = new EndOperationDelegate(this.OnEndCreateMeeting);
            }
            if ((this.onCreateMeetingCompletedDelegate == null)) {
                this.onCreateMeetingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateMeetingCompleted);
            }
            base.InvokeAsync(this.onBeginCreateMeetingDelegate, new object[] {
                        meetingInfo}, this.onEndCreateMeetingDelegate, this.onCreateMeetingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.MeetingServiceReference.MeetingService.BeginUpdateMeeting(GreenField.ServiceCaller.MeetingServiceReference.MeetingInfo meetingInfo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateMeeting(meetingInfo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GreenField.ServiceCaller.MeetingServiceReference.MeetingService.EndUpdateMeeting(System.IAsyncResult result) {
            base.Channel.EndUpdateMeeting(result);
        }
        
        private System.IAsyncResult OnBeginUpdateMeeting(object[] inValues, System.AsyncCallback callback, object asyncState) {
            GreenField.ServiceCaller.MeetingServiceReference.MeetingInfo meetingInfo = ((GreenField.ServiceCaller.MeetingServiceReference.MeetingInfo)(inValues[0]));
            return ((GreenField.ServiceCaller.MeetingServiceReference.MeetingService)(this)).BeginUpdateMeeting(meetingInfo, callback, asyncState);
        }
        
        private object[] OnEndUpdateMeeting(System.IAsyncResult result) {
            ((GreenField.ServiceCaller.MeetingServiceReference.MeetingService)(this)).EndUpdateMeeting(result);
            return null;
        }
        
        private void OnUpdateMeetingCompleted(object state) {
            if ((this.UpdateMeetingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateMeetingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateMeetingAsync(GreenField.ServiceCaller.MeetingServiceReference.MeetingInfo meetingInfo) {
            this.UpdateMeetingAsync(meetingInfo, null);
        }
        
        public void UpdateMeetingAsync(GreenField.ServiceCaller.MeetingServiceReference.MeetingInfo meetingInfo, object userState) {
            if ((this.onBeginUpdateMeetingDelegate == null)) {
                this.onBeginUpdateMeetingDelegate = new BeginOperationDelegate(this.OnBeginUpdateMeeting);
            }
            if ((this.onEndUpdateMeetingDelegate == null)) {
                this.onEndUpdateMeetingDelegate = new EndOperationDelegate(this.OnEndUpdateMeeting);
            }
            if ((this.onUpdateMeetingCompletedDelegate == null)) {
                this.onUpdateMeetingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateMeetingCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateMeetingDelegate, new object[] {
                        meetingInfo}, this.onEndUpdateMeetingDelegate, this.onUpdateMeetingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.MeetingServiceReference.MeetingService.BeginGetPresentations(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPresentations(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.PresentationInfoResult> GreenField.ServiceCaller.MeetingServiceReference.MeetingService.EndGetPresentations(System.IAsyncResult result) {
            return base.Channel.EndGetPresentations(result);
        }
        
        private System.IAsyncResult OnBeginGetPresentations(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((GreenField.ServiceCaller.MeetingServiceReference.MeetingService)(this)).BeginGetPresentations(callback, asyncState);
        }
        
        private object[] OnEndGetPresentations(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.PresentationInfoResult> retVal = ((GreenField.ServiceCaller.MeetingServiceReference.MeetingService)(this)).EndGetPresentations(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPresentationsCompleted(object state) {
            if ((this.GetPresentationsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPresentationsCompleted(this, new GetPresentationsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPresentationsAsync() {
            this.GetPresentationsAsync(null);
        }
        
        public void GetPresentationsAsync(object userState) {
            if ((this.onBeginGetPresentationsDelegate == null)) {
                this.onBeginGetPresentationsDelegate = new BeginOperationDelegate(this.OnBeginGetPresentations);
            }
            if ((this.onEndGetPresentationsDelegate == null)) {
                this.onEndGetPresentationsDelegate = new EndOperationDelegate(this.OnEndGetPresentations);
            }
            if ((this.onGetPresentationsCompletedDelegate == null)) {
                this.onGetPresentationsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPresentationsCompleted);
            }
            base.InvokeAsync(this.onBeginGetPresentationsDelegate, null, this.onEndGetPresentationsDelegate, this.onGetPresentationsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.MeetingServiceReference.MeetingService.BeginGetPresentationsByMeetingID(long meetingID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPresentationsByMeetingID(meetingID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.PresentationInfoResult> GreenField.ServiceCaller.MeetingServiceReference.MeetingService.EndGetPresentationsByMeetingID(System.IAsyncResult result) {
            return base.Channel.EndGetPresentationsByMeetingID(result);
        }
        
        private System.IAsyncResult OnBeginGetPresentationsByMeetingID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long meetingID = ((long)(inValues[0]));
            return ((GreenField.ServiceCaller.MeetingServiceReference.MeetingService)(this)).BeginGetPresentationsByMeetingID(meetingID, callback, asyncState);
        }
        
        private object[] OnEndGetPresentationsByMeetingID(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.PresentationInfoResult> retVal = ((GreenField.ServiceCaller.MeetingServiceReference.MeetingService)(this)).EndGetPresentationsByMeetingID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPresentationsByMeetingIDCompleted(object state) {
            if ((this.GetPresentationsByMeetingIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPresentationsByMeetingIDCompleted(this, new GetPresentationsByMeetingIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPresentationsByMeetingIDAsync(long meetingID) {
            this.GetPresentationsByMeetingIDAsync(meetingID, null);
        }
        
        public void GetPresentationsByMeetingIDAsync(long meetingID, object userState) {
            if ((this.onBeginGetPresentationsByMeetingIDDelegate == null)) {
                this.onBeginGetPresentationsByMeetingIDDelegate = new BeginOperationDelegate(this.OnBeginGetPresentationsByMeetingID);
            }
            if ((this.onEndGetPresentationsByMeetingIDDelegate == null)) {
                this.onEndGetPresentationsByMeetingIDDelegate = new EndOperationDelegate(this.OnEndGetPresentationsByMeetingID);
            }
            if ((this.onGetPresentationsByMeetingIDCompletedDelegate == null)) {
                this.onGetPresentationsByMeetingIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPresentationsByMeetingIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetPresentationsByMeetingIDDelegate, new object[] {
                        meetingID}, this.onEndGetPresentationsByMeetingIDDelegate, this.onGetPresentationsByMeetingIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.MeetingServiceReference.MeetingService.BeginGetPresentationsByMeetingDatePresenterStatus(System.Nullable<System.DateTime> meetingDate, string presenter, string status, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPresentationsByMeetingDatePresenterStatus(meetingDate, presenter, status, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.PresentationInfoResult> GreenField.ServiceCaller.MeetingServiceReference.MeetingService.EndGetPresentationsByMeetingDatePresenterStatus(System.IAsyncResult result) {
            return base.Channel.EndGetPresentationsByMeetingDatePresenterStatus(result);
        }
        
        private System.IAsyncResult OnBeginGetPresentationsByMeetingDatePresenterStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Nullable<System.DateTime> meetingDate = ((System.Nullable<System.DateTime>)(inValues[0]));
            string presenter = ((string)(inValues[1]));
            string status = ((string)(inValues[2]));
            return ((GreenField.ServiceCaller.MeetingServiceReference.MeetingService)(this)).BeginGetPresentationsByMeetingDatePresenterStatus(meetingDate, presenter, status, callback, asyncState);
        }
        
        private object[] OnEndGetPresentationsByMeetingDatePresenterStatus(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.PresentationInfoResult> retVal = ((GreenField.ServiceCaller.MeetingServiceReference.MeetingService)(this)).EndGetPresentationsByMeetingDatePresenterStatus(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPresentationsByMeetingDatePresenterStatusCompleted(object state) {
            if ((this.GetPresentationsByMeetingDatePresenterStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPresentationsByMeetingDatePresenterStatusCompleted(this, new GetPresentationsByMeetingDatePresenterStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPresentationsByMeetingDatePresenterStatusAsync(System.Nullable<System.DateTime> meetingDate, string presenter, string status) {
            this.GetPresentationsByMeetingDatePresenterStatusAsync(meetingDate, presenter, status, null);
        }
        
        public void GetPresentationsByMeetingDatePresenterStatusAsync(System.Nullable<System.DateTime> meetingDate, string presenter, string status, object userState) {
            if ((this.onBeginGetPresentationsByMeetingDatePresenterStatusDelegate == null)) {
                this.onBeginGetPresentationsByMeetingDatePresenterStatusDelegate = new BeginOperationDelegate(this.OnBeginGetPresentationsByMeetingDatePresenterStatus);
            }
            if ((this.onEndGetPresentationsByMeetingDatePresenterStatusDelegate == null)) {
                this.onEndGetPresentationsByMeetingDatePresenterStatusDelegate = new EndOperationDelegate(this.OnEndGetPresentationsByMeetingDatePresenterStatus);
            }
            if ((this.onGetPresentationsByMeetingDatePresenterStatusCompletedDelegate == null)) {
                this.onGetPresentationsByMeetingDatePresenterStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPresentationsByMeetingDatePresenterStatusCompleted);
            }
            base.InvokeAsync(this.onBeginGetPresentationsByMeetingDatePresenterStatusDelegate, new object[] {
                        meetingDate,
                        presenter,
                        status}, this.onEndGetPresentationsByMeetingDatePresenterStatusDelegate, this.onGetPresentationsByMeetingDatePresenterStatusCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.MeetingServiceReference.MeetingService.BeginGetDistinctPresenters(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDistinctPresenters(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<string> GreenField.ServiceCaller.MeetingServiceReference.MeetingService.EndGetDistinctPresenters(System.IAsyncResult result) {
            return base.Channel.EndGetDistinctPresenters(result);
        }
        
        private System.IAsyncResult OnBeginGetDistinctPresenters(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((GreenField.ServiceCaller.MeetingServiceReference.MeetingService)(this)).BeginGetDistinctPresenters(callback, asyncState);
        }
        
        private object[] OnEndGetDistinctPresenters(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<string> retVal = ((GreenField.ServiceCaller.MeetingServiceReference.MeetingService)(this)).EndGetDistinctPresenters(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDistinctPresentersCompleted(object state) {
            if ((this.GetDistinctPresentersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDistinctPresentersCompleted(this, new GetDistinctPresentersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDistinctPresentersAsync() {
            this.GetDistinctPresentersAsync(null);
        }
        
        public void GetDistinctPresentersAsync(object userState) {
            if ((this.onBeginGetDistinctPresentersDelegate == null)) {
                this.onBeginGetDistinctPresentersDelegate = new BeginOperationDelegate(this.OnBeginGetDistinctPresenters);
            }
            if ((this.onEndGetDistinctPresentersDelegate == null)) {
                this.onEndGetDistinctPresentersDelegate = new EndOperationDelegate(this.OnEndGetDistinctPresenters);
            }
            if ((this.onGetDistinctPresentersCompletedDelegate == null)) {
                this.onGetDistinctPresentersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDistinctPresentersCompleted);
            }
            base.InvokeAsync(this.onBeginGetDistinctPresentersDelegate, null, this.onEndGetDistinctPresentersDelegate, this.onGetDistinctPresentersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.MeetingServiceReference.MeetingService.BeginGetStatusTypes(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetStatusTypes(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.StatusType> GreenField.ServiceCaller.MeetingServiceReference.MeetingService.EndGetStatusTypes(System.IAsyncResult result) {
            return base.Channel.EndGetStatusTypes(result);
        }
        
        private System.IAsyncResult OnBeginGetStatusTypes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((GreenField.ServiceCaller.MeetingServiceReference.MeetingService)(this)).BeginGetStatusTypes(callback, asyncState);
        }
        
        private object[] OnEndGetStatusTypes(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.StatusType> retVal = ((GreenField.ServiceCaller.MeetingServiceReference.MeetingService)(this)).EndGetStatusTypes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetStatusTypesCompleted(object state) {
            if ((this.GetStatusTypesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStatusTypesCompleted(this, new GetStatusTypesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStatusTypesAsync() {
            this.GetStatusTypesAsync(null);
        }
        
        public void GetStatusTypesAsync(object userState) {
            if ((this.onBeginGetStatusTypesDelegate == null)) {
                this.onBeginGetStatusTypesDelegate = new BeginOperationDelegate(this.OnBeginGetStatusTypes);
            }
            if ((this.onEndGetStatusTypesDelegate == null)) {
                this.onEndGetStatusTypesDelegate = new EndOperationDelegate(this.OnEndGetStatusTypes);
            }
            if ((this.onGetStatusTypesCompletedDelegate == null)) {
                this.onGetStatusTypesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStatusTypesCompleted);
            }
            base.InvokeAsync(this.onBeginGetStatusTypesDelegate, null, this.onEndGetStatusTypesDelegate, this.onGetStatusTypesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.MeetingServiceReference.MeetingService.BeginUpdateMeetingPresentationMapping(GreenField.ServiceCaller.MeetingServiceReference.MeetingPresentationMappingInfo meetingPresentationMappingInfo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateMeetingPresentationMapping(meetingPresentationMappingInfo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GreenField.ServiceCaller.MeetingServiceReference.MeetingService.EndUpdateMeetingPresentationMapping(System.IAsyncResult result) {
            base.Channel.EndUpdateMeetingPresentationMapping(result);
        }
        
        private System.IAsyncResult OnBeginUpdateMeetingPresentationMapping(object[] inValues, System.AsyncCallback callback, object asyncState) {
            GreenField.ServiceCaller.MeetingServiceReference.MeetingPresentationMappingInfo meetingPresentationMappingInfo = ((GreenField.ServiceCaller.MeetingServiceReference.MeetingPresentationMappingInfo)(inValues[0]));
            return ((GreenField.ServiceCaller.MeetingServiceReference.MeetingService)(this)).BeginUpdateMeetingPresentationMapping(meetingPresentationMappingInfo, callback, asyncState);
        }
        
        private object[] OnEndUpdateMeetingPresentationMapping(System.IAsyncResult result) {
            ((GreenField.ServiceCaller.MeetingServiceReference.MeetingService)(this)).EndUpdateMeetingPresentationMapping(result);
            return null;
        }
        
        private void OnUpdateMeetingPresentationMappingCompleted(object state) {
            if ((this.UpdateMeetingPresentationMappingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateMeetingPresentationMappingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateMeetingPresentationMappingAsync(GreenField.ServiceCaller.MeetingServiceReference.MeetingPresentationMappingInfo meetingPresentationMappingInfo) {
            this.UpdateMeetingPresentationMappingAsync(meetingPresentationMappingInfo, null);
        }
        
        public void UpdateMeetingPresentationMappingAsync(GreenField.ServiceCaller.MeetingServiceReference.MeetingPresentationMappingInfo meetingPresentationMappingInfo, object userState) {
            if ((this.onBeginUpdateMeetingPresentationMappingDelegate == null)) {
                this.onBeginUpdateMeetingPresentationMappingDelegate = new BeginOperationDelegate(this.OnBeginUpdateMeetingPresentationMapping);
            }
            if ((this.onEndUpdateMeetingPresentationMappingDelegate == null)) {
                this.onEndUpdateMeetingPresentationMappingDelegate = new EndOperationDelegate(this.OnEndUpdateMeetingPresentationMapping);
            }
            if ((this.onUpdateMeetingPresentationMappingCompletedDelegate == null)) {
                this.onUpdateMeetingPresentationMappingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateMeetingPresentationMappingCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateMeetingPresentationMappingDelegate, new object[] {
                        meetingPresentationMappingInfo}, this.onEndUpdateMeetingPresentationMappingDelegate, this.onUpdateMeetingPresentationMappingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.MeetingServiceReference.MeetingService.BeginUpdatePresentation(GreenField.ServiceCaller.MeetingServiceReference.PresentationInfo presentationInfo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdatePresentation(presentationInfo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GreenField.ServiceCaller.MeetingServiceReference.MeetingService.EndUpdatePresentation(System.IAsyncResult result) {
            base.Channel.EndUpdatePresentation(result);
        }
        
        private System.IAsyncResult OnBeginUpdatePresentation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            GreenField.ServiceCaller.MeetingServiceReference.PresentationInfo presentationInfo = ((GreenField.ServiceCaller.MeetingServiceReference.PresentationInfo)(inValues[0]));
            return ((GreenField.ServiceCaller.MeetingServiceReference.MeetingService)(this)).BeginUpdatePresentation(presentationInfo, callback, asyncState);
        }
        
        private object[] OnEndUpdatePresentation(System.IAsyncResult result) {
            ((GreenField.ServiceCaller.MeetingServiceReference.MeetingService)(this)).EndUpdatePresentation(result);
            return null;
        }
        
        private void OnUpdatePresentationCompleted(object state) {
            if ((this.UpdatePresentationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdatePresentationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdatePresentationAsync(GreenField.ServiceCaller.MeetingServiceReference.PresentationInfo presentationInfo) {
            this.UpdatePresentationAsync(presentationInfo, null);
        }
        
        public void UpdatePresentationAsync(GreenField.ServiceCaller.MeetingServiceReference.PresentationInfo presentationInfo, object userState) {
            if ((this.onBeginUpdatePresentationDelegate == null)) {
                this.onBeginUpdatePresentationDelegate = new BeginOperationDelegate(this.OnBeginUpdatePresentation);
            }
            if ((this.onEndUpdatePresentationDelegate == null)) {
                this.onEndUpdatePresentationDelegate = new EndOperationDelegate(this.OnEndUpdatePresentation);
            }
            if ((this.onUpdatePresentationCompletedDelegate == null)) {
                this.onUpdatePresentationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdatePresentationCompleted);
            }
            base.InvokeAsync(this.onBeginUpdatePresentationDelegate, new object[] {
                        presentationInfo}, this.onEndUpdatePresentationDelegate, this.onUpdatePresentationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.MeetingServiceReference.MeetingService.BeginCreateMeetingPresentationMapping(GreenField.ServiceCaller.MeetingServiceReference.MeetingPresentationMappingInfo meetingPresentationMappingInfo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateMeetingPresentationMapping(meetingPresentationMappingInfo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GreenField.ServiceCaller.MeetingServiceReference.MeetingService.EndCreateMeetingPresentationMapping(System.IAsyncResult result) {
            base.Channel.EndCreateMeetingPresentationMapping(result);
        }
        
        private System.IAsyncResult OnBeginCreateMeetingPresentationMapping(object[] inValues, System.AsyncCallback callback, object asyncState) {
            GreenField.ServiceCaller.MeetingServiceReference.MeetingPresentationMappingInfo meetingPresentationMappingInfo = ((GreenField.ServiceCaller.MeetingServiceReference.MeetingPresentationMappingInfo)(inValues[0]));
            return ((GreenField.ServiceCaller.MeetingServiceReference.MeetingService)(this)).BeginCreateMeetingPresentationMapping(meetingPresentationMappingInfo, callback, asyncState);
        }
        
        private object[] OnEndCreateMeetingPresentationMapping(System.IAsyncResult result) {
            ((GreenField.ServiceCaller.MeetingServiceReference.MeetingService)(this)).EndCreateMeetingPresentationMapping(result);
            return null;
        }
        
        private void OnCreateMeetingPresentationMappingCompleted(object state) {
            if ((this.CreateMeetingPresentationMappingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateMeetingPresentationMappingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateMeetingPresentationMappingAsync(GreenField.ServiceCaller.MeetingServiceReference.MeetingPresentationMappingInfo meetingPresentationMappingInfo) {
            this.CreateMeetingPresentationMappingAsync(meetingPresentationMappingInfo, null);
        }
        
        public void CreateMeetingPresentationMappingAsync(GreenField.ServiceCaller.MeetingServiceReference.MeetingPresentationMappingInfo meetingPresentationMappingInfo, object userState) {
            if ((this.onBeginCreateMeetingPresentationMappingDelegate == null)) {
                this.onBeginCreateMeetingPresentationMappingDelegate = new BeginOperationDelegate(this.OnBeginCreateMeetingPresentationMapping);
            }
            if ((this.onEndCreateMeetingPresentationMappingDelegate == null)) {
                this.onEndCreateMeetingPresentationMappingDelegate = new EndOperationDelegate(this.OnEndCreateMeetingPresentationMapping);
            }
            if ((this.onCreateMeetingPresentationMappingCompletedDelegate == null)) {
                this.onCreateMeetingPresentationMappingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateMeetingPresentationMappingCompleted);
            }
            base.InvokeAsync(this.onBeginCreateMeetingPresentationMappingDelegate, new object[] {
                        meetingPresentationMappingInfo}, this.onEndCreateMeetingPresentationMappingDelegate, this.onCreateMeetingPresentationMappingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.MeetingServiceReference.MeetingService.BeginCreatePresentation(GreenField.ServiceCaller.MeetingServiceReference.PresentationInfo presentationInfo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreatePresentation(presentationInfo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Nullable<long> GreenField.ServiceCaller.MeetingServiceReference.MeetingService.EndCreatePresentation(System.IAsyncResult result) {
            return base.Channel.EndCreatePresentation(result);
        }
        
        private System.IAsyncResult OnBeginCreatePresentation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            GreenField.ServiceCaller.MeetingServiceReference.PresentationInfo presentationInfo = ((GreenField.ServiceCaller.MeetingServiceReference.PresentationInfo)(inValues[0]));
            return ((GreenField.ServiceCaller.MeetingServiceReference.MeetingService)(this)).BeginCreatePresentation(presentationInfo, callback, asyncState);
        }
        
        private object[] OnEndCreatePresentation(System.IAsyncResult result) {
            System.Nullable<long> retVal = ((GreenField.ServiceCaller.MeetingServiceReference.MeetingService)(this)).EndCreatePresentation(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreatePresentationCompleted(object state) {
            if ((this.CreatePresentationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreatePresentationCompleted(this, new CreatePresentationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreatePresentationAsync(GreenField.ServiceCaller.MeetingServiceReference.PresentationInfo presentationInfo) {
            this.CreatePresentationAsync(presentationInfo, null);
        }
        
        public void CreatePresentationAsync(GreenField.ServiceCaller.MeetingServiceReference.PresentationInfo presentationInfo, object userState) {
            if ((this.onBeginCreatePresentationDelegate == null)) {
                this.onBeginCreatePresentationDelegate = new BeginOperationDelegate(this.OnBeginCreatePresentation);
            }
            if ((this.onEndCreatePresentationDelegate == null)) {
                this.onEndCreatePresentationDelegate = new EndOperationDelegate(this.OnEndCreatePresentation);
            }
            if ((this.onCreatePresentationCompletedDelegate == null)) {
                this.onCreatePresentationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreatePresentationCompleted);
            }
            base.InvokeAsync(this.onBeginCreatePresentationDelegate, new object[] {
                        presentationInfo}, this.onEndCreatePresentationDelegate, this.onCreatePresentationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.MeetingServiceReference.MeetingService.BeginCreateVoterInfo(GreenField.ServiceCaller.MeetingServiceReference.VoterInfo voterInfo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateVoterInfo(voterInfo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GreenField.ServiceCaller.MeetingServiceReference.MeetingService.EndCreateVoterInfo(System.IAsyncResult result) {
            base.Channel.EndCreateVoterInfo(result);
        }
        
        private System.IAsyncResult OnBeginCreateVoterInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            GreenField.ServiceCaller.MeetingServiceReference.VoterInfo voterInfo = ((GreenField.ServiceCaller.MeetingServiceReference.VoterInfo)(inValues[0]));
            return ((GreenField.ServiceCaller.MeetingServiceReference.MeetingService)(this)).BeginCreateVoterInfo(voterInfo, callback, asyncState);
        }
        
        private object[] OnEndCreateVoterInfo(System.IAsyncResult result) {
            ((GreenField.ServiceCaller.MeetingServiceReference.MeetingService)(this)).EndCreateVoterInfo(result);
            return null;
        }
        
        private void OnCreateVoterInfoCompleted(object state) {
            if ((this.CreateVoterInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateVoterInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateVoterInfoAsync(GreenField.ServiceCaller.MeetingServiceReference.VoterInfo voterInfo) {
            this.CreateVoterInfoAsync(voterInfo, null);
        }
        
        public void CreateVoterInfoAsync(GreenField.ServiceCaller.MeetingServiceReference.VoterInfo voterInfo, object userState) {
            if ((this.onBeginCreateVoterInfoDelegate == null)) {
                this.onBeginCreateVoterInfoDelegate = new BeginOperationDelegate(this.OnBeginCreateVoterInfo);
            }
            if ((this.onEndCreateVoterInfoDelegate == null)) {
                this.onEndCreateVoterInfoDelegate = new EndOperationDelegate(this.OnEndCreateVoterInfo);
            }
            if ((this.onCreateVoterInfoCompletedDelegate == null)) {
                this.onCreateVoterInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateVoterInfoCompleted);
            }
            base.InvokeAsync(this.onBeginCreateVoterInfoDelegate, new object[] {
                        voterInfo}, this.onEndCreateVoterInfoDelegate, this.onCreateVoterInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.MeetingServiceReference.MeetingService.BeginCreateFileInfo(System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.AttachedFileInfo> fileInfoColl, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateFileInfo(fileInfoColl, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GreenField.ServiceCaller.MeetingServiceReference.MeetingService.EndCreateFileInfo(System.IAsyncResult result) {
            base.Channel.EndCreateFileInfo(result);
        }
        
        private System.IAsyncResult OnBeginCreateFileInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.AttachedFileInfo> fileInfoColl = ((System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.AttachedFileInfo>)(inValues[0]));
            return ((GreenField.ServiceCaller.MeetingServiceReference.MeetingService)(this)).BeginCreateFileInfo(fileInfoColl, callback, asyncState);
        }
        
        private object[] OnEndCreateFileInfo(System.IAsyncResult result) {
            ((GreenField.ServiceCaller.MeetingServiceReference.MeetingService)(this)).EndCreateFileInfo(result);
            return null;
        }
        
        private void OnCreateFileInfoCompleted(object state) {
            if ((this.CreateFileInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateFileInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateFileInfoAsync(System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.AttachedFileInfo> fileInfoColl) {
            this.CreateFileInfoAsync(fileInfoColl, null);
        }
        
        public void CreateFileInfoAsync(System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.AttachedFileInfo> fileInfoColl, object userState) {
            if ((this.onBeginCreateFileInfoDelegate == null)) {
                this.onBeginCreateFileInfoDelegate = new BeginOperationDelegate(this.OnBeginCreateFileInfo);
            }
            if ((this.onEndCreateFileInfoDelegate == null)) {
                this.onEndCreateFileInfoDelegate = new EndOperationDelegate(this.OnEndCreateFileInfo);
            }
            if ((this.onCreateFileInfoCompletedDelegate == null)) {
                this.onCreateFileInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateFileInfoCompleted);
            }
            base.InvokeAsync(this.onBeginCreateFileInfoDelegate, new object[] {
                        fileInfoColl}, this.onEndCreateFileInfoDelegate, this.onCreateFileInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.MeetingServiceReference.MeetingService.BeginGetFileInfo(long presentationID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFileInfo(presentationID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.AttachedFileInfo> GreenField.ServiceCaller.MeetingServiceReference.MeetingService.EndGetFileInfo(System.IAsyncResult result) {
            return base.Channel.EndGetFileInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetFileInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long presentationID = ((long)(inValues[0]));
            return ((GreenField.ServiceCaller.MeetingServiceReference.MeetingService)(this)).BeginGetFileInfo(presentationID, callback, asyncState);
        }
        
        private object[] OnEndGetFileInfo(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.AttachedFileInfo> retVal = ((GreenField.ServiceCaller.MeetingServiceReference.MeetingService)(this)).EndGetFileInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFileInfoCompleted(object state) {
            if ((this.GetFileInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFileInfoCompleted(this, new GetFileInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFileInfoAsync(long presentationID) {
            this.GetFileInfoAsync(presentationID, null);
        }
        
        public void GetFileInfoAsync(long presentationID, object userState) {
            if ((this.onBeginGetFileInfoDelegate == null)) {
                this.onBeginGetFileInfoDelegate = new BeginOperationDelegate(this.OnBeginGetFileInfo);
            }
            if ((this.onEndGetFileInfoDelegate == null)) {
                this.onEndGetFileInfoDelegate = new EndOperationDelegate(this.OnEndGetFileInfo);
            }
            if ((this.onGetFileInfoCompletedDelegate == null)) {
                this.onGetFileInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFileInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetFileInfoDelegate, new object[] {
                        presentationID}, this.onEndGetFileInfoDelegate, this.onGetFileInfoCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override GreenField.ServiceCaller.MeetingServiceReference.MeetingService CreateChannel() {
            return new MeetingServiceClientChannel(this);
        }
        
        private class MeetingServiceClientChannel : ChannelBase<GreenField.ServiceCaller.MeetingServiceReference.MeetingService>, GreenField.ServiceCaller.MeetingServiceReference.MeetingService {
            
            public MeetingServiceClientChannel(System.ServiceModel.ClientBase<GreenField.ServiceCaller.MeetingServiceReference.MeetingService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginRetrieveSecurityDetails(GreenField.DataContracts.EntitySelectionData entitySelectionData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = entitySelectionData;
                System.IAsyncResult _result = base.BeginInvoke("RetrieveSecurityDetails", _args, callback, asyncState);
                return _result;
            }
            
            public GreenField.DataContracts.SecurityInformation EndRetrieveSecurityDetails(System.IAsyncResult result) {
                object[] _args = new object[0];
                GreenField.DataContracts.SecurityInformation _result = ((GreenField.DataContracts.SecurityInformation)(base.EndInvoke("RetrieveSecurityDetails", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMeetings(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetMeetings", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.MeetingInfo> EndGetMeetings(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.MeetingInfo> _result = ((System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.MeetingInfo>)(base.EndInvoke("GetMeetings", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMeetingsByDate(System.DateTime meetingDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = meetingDate;
                System.IAsyncResult _result = base.BeginInvoke("GetMeetingsByDate", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.MeetingInfo> EndGetMeetingsByDate(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.MeetingInfo> _result = ((System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.MeetingInfo>)(base.EndInvoke("GetMeetingsByDate", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMeetingDates(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetMeetingDates", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<System.Nullable<System.DateTime>> EndGetMeetingDates(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<System.Nullable<System.DateTime>> _result = ((System.Collections.ObjectModel.ObservableCollection<System.Nullable<System.DateTime>>)(base.EndInvoke("GetMeetingDates", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCreateMeeting(GreenField.ServiceCaller.MeetingServiceReference.MeetingInfo meetingInfo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = meetingInfo;
                System.IAsyncResult _result = base.BeginInvoke("CreateMeeting", _args, callback, asyncState);
                return _result;
            }
            
            public void EndCreateMeeting(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("CreateMeeting", _args, result);
            }
            
            public System.IAsyncResult BeginUpdateMeeting(GreenField.ServiceCaller.MeetingServiceReference.MeetingInfo meetingInfo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = meetingInfo;
                System.IAsyncResult _result = base.BeginInvoke("UpdateMeeting", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUpdateMeeting(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UpdateMeeting", _args, result);
            }
            
            public System.IAsyncResult BeginGetPresentations(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetPresentations", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.PresentationInfoResult> EndGetPresentations(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.PresentationInfoResult> _result = ((System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.PresentationInfoResult>)(base.EndInvoke("GetPresentations", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPresentationsByMeetingID(long meetingID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = meetingID;
                System.IAsyncResult _result = base.BeginInvoke("GetPresentationsByMeetingID", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.PresentationInfoResult> EndGetPresentationsByMeetingID(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.PresentationInfoResult> _result = ((System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.PresentationInfoResult>)(base.EndInvoke("GetPresentationsByMeetingID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPresentationsByMeetingDatePresenterStatus(System.Nullable<System.DateTime> meetingDate, string presenter, string status, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = meetingDate;
                _args[1] = presenter;
                _args[2] = status;
                System.IAsyncResult _result = base.BeginInvoke("GetPresentationsByMeetingDatePresenterStatus", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.PresentationInfoResult> EndGetPresentationsByMeetingDatePresenterStatus(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.PresentationInfoResult> _result = ((System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.PresentationInfoResult>)(base.EndInvoke("GetPresentationsByMeetingDatePresenterStatus", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetDistinctPresenters(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetDistinctPresenters", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<string> EndGetDistinctPresenters(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<string> _result = ((System.Collections.ObjectModel.ObservableCollection<string>)(base.EndInvoke("GetDistinctPresenters", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetStatusTypes(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetStatusTypes", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.StatusType> EndGetStatusTypes(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.StatusType> _result = ((System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.StatusType>)(base.EndInvoke("GetStatusTypes", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateMeetingPresentationMapping(GreenField.ServiceCaller.MeetingServiceReference.MeetingPresentationMappingInfo meetingPresentationMappingInfo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = meetingPresentationMappingInfo;
                System.IAsyncResult _result = base.BeginInvoke("UpdateMeetingPresentationMapping", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUpdateMeetingPresentationMapping(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UpdateMeetingPresentationMapping", _args, result);
            }
            
            public System.IAsyncResult BeginUpdatePresentation(GreenField.ServiceCaller.MeetingServiceReference.PresentationInfo presentationInfo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = presentationInfo;
                System.IAsyncResult _result = base.BeginInvoke("UpdatePresentation", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUpdatePresentation(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UpdatePresentation", _args, result);
            }
            
            public System.IAsyncResult BeginCreateMeetingPresentationMapping(GreenField.ServiceCaller.MeetingServiceReference.MeetingPresentationMappingInfo meetingPresentationMappingInfo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = meetingPresentationMappingInfo;
                System.IAsyncResult _result = base.BeginInvoke("CreateMeetingPresentationMapping", _args, callback, asyncState);
                return _result;
            }
            
            public void EndCreateMeetingPresentationMapping(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("CreateMeetingPresentationMapping", _args, result);
            }
            
            public System.IAsyncResult BeginCreatePresentation(GreenField.ServiceCaller.MeetingServiceReference.PresentationInfo presentationInfo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = presentationInfo;
                System.IAsyncResult _result = base.BeginInvoke("CreatePresentation", _args, callback, asyncState);
                return _result;
            }
            
            public System.Nullable<long> EndCreatePresentation(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Nullable<long> _result = ((System.Nullable<long>)(base.EndInvoke("CreatePresentation", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCreateVoterInfo(GreenField.ServiceCaller.MeetingServiceReference.VoterInfo voterInfo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = voterInfo;
                System.IAsyncResult _result = base.BeginInvoke("CreateVoterInfo", _args, callback, asyncState);
                return _result;
            }
            
            public void EndCreateVoterInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("CreateVoterInfo", _args, result);
            }
            
            public System.IAsyncResult BeginCreateFileInfo(System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.AttachedFileInfo> fileInfoColl, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = fileInfoColl;
                System.IAsyncResult _result = base.BeginInvoke("CreateFileInfo", _args, callback, asyncState);
                return _result;
            }
            
            public void EndCreateFileInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("CreateFileInfo", _args, result);
            }
            
            public System.IAsyncResult BeginGetFileInfo(long presentationID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = presentationID;
                System.IAsyncResult _result = base.BeginInvoke("GetFileInfo", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.AttachedFileInfo> EndGetFileInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.AttachedFileInfo> _result = ((System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.MeetingServiceReference.AttachedFileInfo>)(base.EndInvoke("GetFileInfo", _args, result)));
                return _result;
            }
        }
    }
}
