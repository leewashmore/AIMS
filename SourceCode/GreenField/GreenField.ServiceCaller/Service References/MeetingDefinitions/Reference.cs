//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace GreenField.ServiceCaller.MeetingDefinitions {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ICPresentationOverviewData", Namespace="http://schemas.datacontract.org/2004/07/GreenField.DAL", IsReference=true)]
    public partial class ICPresentationOverviewData : GreenField.ServiceCaller.MeetingDefinitions.ComplexObject {
        
        private System.Nullable<bool> AcceptWithoutDiscussionFlagField;
        
        private string AdminNotesField;
        
        private string AnalystField;
        
        private System.Nullable<float> CommitteeBuyRangeField;
        
        private string CommitteePFVMeasureField;
        
        private System.Nullable<System.DateTime> CommitteeRangeEffectiveThroughField;
        
        private string CommitteeRecommendationField;
        
        private System.Nullable<float> CommitteeSellRangeField;
        
        private string CreatedByField;
        
        private System.DateTime CreatedOnField;
        
        private string CurrentHoldingsField;
        
        private string FVCalcField;
        
        private System.Nullable<System.DateTime> MeetingClosedDateTimeField;
        
        private System.Nullable<System.DateTime> MeetingDateTimeField;
        
        private System.Nullable<System.DateTime> MeetingVotingClosedDateTimeField;
        
        private string ModifiedByField;
        
        private System.DateTime ModifiedOnField;
        
        private string PercentEMIFField;
        
        private long PresentationIDField;
        
        private string PresenterField;
        
        private string PriceField;
        
        private string SecurityActiveWeightField;
        
        private string SecurityBMWeightField;
        
        private System.Nullable<float> SecurityBuyRangeField;
        
        private string SecurityBuySellvsCrntField;
        
        private System.Nullable<float> SecurityCashPositionField;
        
        private string SecurityCountryField;
        
        private string SecurityCountryCodeField;
        
        private System.Nullable<float> SecurityGlobalActiveWeightField;
        
        private string SecurityIndustryField;
        
        private System.Nullable<float> SecurityLastClosingPriceField;
        
        private System.Nullable<float> SecurityMSCIIMIWeightField;
        
        private System.Nullable<float> SecurityMSCIStdWeightField;
        
        private System.Nullable<float> SecurityMarketCapitalizationField;
        
        private string SecurityNameField;
        
        private string SecurityPFVMeasureField;
        
        private System.Nullable<long> SecurityPositionField;
        
        private string SecurityRecommendationField;
        
        private System.Nullable<float> SecuritySellRangeField;
        
        private string SecurityTickerField;
        
        private string StatusTypeField;
        
        private string YTDRet_AbsoluteField;
        
        private string YTDRet_RELtoEMField;
        
        private string YTDRet_RELtoLOCField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> AcceptWithoutDiscussionFlag {
            get {
                return this.AcceptWithoutDiscussionFlagField;
            }
            set {
                if ((this.AcceptWithoutDiscussionFlagField.Equals(value) != true)) {
                    this.AcceptWithoutDiscussionFlagField = value;
                    this.RaisePropertyChanged("AcceptWithoutDiscussionFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdminNotes {
            get {
                return this.AdminNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.AdminNotesField, value) != true)) {
                    this.AdminNotesField = value;
                    this.RaisePropertyChanged("AdminNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Analyst {
            get {
                return this.AnalystField;
            }
            set {
                if ((object.ReferenceEquals(this.AnalystField, value) != true)) {
                    this.AnalystField = value;
                    this.RaisePropertyChanged("Analyst");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<float> CommitteeBuyRange {
            get {
                return this.CommitteeBuyRangeField;
            }
            set {
                if ((this.CommitteeBuyRangeField.Equals(value) != true)) {
                    this.CommitteeBuyRangeField = value;
                    this.RaisePropertyChanged("CommitteeBuyRange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommitteePFVMeasure {
            get {
                return this.CommitteePFVMeasureField;
            }
            set {
                if ((object.ReferenceEquals(this.CommitteePFVMeasureField, value) != true)) {
                    this.CommitteePFVMeasureField = value;
                    this.RaisePropertyChanged("CommitteePFVMeasure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CommitteeRangeEffectiveThrough {
            get {
                return this.CommitteeRangeEffectiveThroughField;
            }
            set {
                if ((this.CommitteeRangeEffectiveThroughField.Equals(value) != true)) {
                    this.CommitteeRangeEffectiveThroughField = value;
                    this.RaisePropertyChanged("CommitteeRangeEffectiveThrough");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommitteeRecommendation {
            get {
                return this.CommitteeRecommendationField;
            }
            set {
                if ((object.ReferenceEquals(this.CommitteeRecommendationField, value) != true)) {
                    this.CommitteeRecommendationField = value;
                    this.RaisePropertyChanged("CommitteeRecommendation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<float> CommitteeSellRange {
            get {
                return this.CommitteeSellRangeField;
            }
            set {
                if ((this.CommitteeSellRangeField.Equals(value) != true)) {
                    this.CommitteeSellRangeField = value;
                    this.RaisePropertyChanged("CommitteeSellRange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentHoldings {
            get {
                return this.CurrentHoldingsField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentHoldingsField, value) != true)) {
                    this.CurrentHoldingsField = value;
                    this.RaisePropertyChanged("CurrentHoldings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FVCalc {
            get {
                return this.FVCalcField;
            }
            set {
                if ((object.ReferenceEquals(this.FVCalcField, value) != true)) {
                    this.FVCalcField = value;
                    this.RaisePropertyChanged("FVCalc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> MeetingClosedDateTime {
            get {
                return this.MeetingClosedDateTimeField;
            }
            set {
                if ((this.MeetingClosedDateTimeField.Equals(value) != true)) {
                    this.MeetingClosedDateTimeField = value;
                    this.RaisePropertyChanged("MeetingClosedDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> MeetingDateTime {
            get {
                return this.MeetingDateTimeField;
            }
            set {
                if ((this.MeetingDateTimeField.Equals(value) != true)) {
                    this.MeetingDateTimeField = value;
                    this.RaisePropertyChanged("MeetingDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> MeetingVotingClosedDateTime {
            get {
                return this.MeetingVotingClosedDateTimeField;
            }
            set {
                if ((this.MeetingVotingClosedDateTimeField.Equals(value) != true)) {
                    this.MeetingVotingClosedDateTimeField = value;
                    this.RaisePropertyChanged("MeetingVotingClosedDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((this.ModifiedOnField.Equals(value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PercentEMIF {
            get {
                return this.PercentEMIFField;
            }
            set {
                if ((object.ReferenceEquals(this.PercentEMIFField, value) != true)) {
                    this.PercentEMIFField = value;
                    this.RaisePropertyChanged("PercentEMIF");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PresentationID {
            get {
                return this.PresentationIDField;
            }
            set {
                if ((this.PresentationIDField.Equals(value) != true)) {
                    this.PresentationIDField = value;
                    this.RaisePropertyChanged("PresentationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Presenter {
            get {
                return this.PresenterField;
            }
            set {
                if ((object.ReferenceEquals(this.PresenterField, value) != true)) {
                    this.PresenterField = value;
                    this.RaisePropertyChanged("Presenter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Price {
            get {
                return this.PriceField;
            }
            set {
                if ((object.ReferenceEquals(this.PriceField, value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityActiveWeight {
            get {
                return this.SecurityActiveWeightField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityActiveWeightField, value) != true)) {
                    this.SecurityActiveWeightField = value;
                    this.RaisePropertyChanged("SecurityActiveWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityBMWeight {
            get {
                return this.SecurityBMWeightField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityBMWeightField, value) != true)) {
                    this.SecurityBMWeightField = value;
                    this.RaisePropertyChanged("SecurityBMWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<float> SecurityBuyRange {
            get {
                return this.SecurityBuyRangeField;
            }
            set {
                if ((this.SecurityBuyRangeField.Equals(value) != true)) {
                    this.SecurityBuyRangeField = value;
                    this.RaisePropertyChanged("SecurityBuyRange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityBuySellvsCrnt {
            get {
                return this.SecurityBuySellvsCrntField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityBuySellvsCrntField, value) != true)) {
                    this.SecurityBuySellvsCrntField = value;
                    this.RaisePropertyChanged("SecurityBuySellvsCrnt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<float> SecurityCashPosition {
            get {
                return this.SecurityCashPositionField;
            }
            set {
                if ((this.SecurityCashPositionField.Equals(value) != true)) {
                    this.SecurityCashPositionField = value;
                    this.RaisePropertyChanged("SecurityCashPosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityCountry {
            get {
                return this.SecurityCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityCountryField, value) != true)) {
                    this.SecurityCountryField = value;
                    this.RaisePropertyChanged("SecurityCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityCountryCode {
            get {
                return this.SecurityCountryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityCountryCodeField, value) != true)) {
                    this.SecurityCountryCodeField = value;
                    this.RaisePropertyChanged("SecurityCountryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<float> SecurityGlobalActiveWeight {
            get {
                return this.SecurityGlobalActiveWeightField;
            }
            set {
                if ((this.SecurityGlobalActiveWeightField.Equals(value) != true)) {
                    this.SecurityGlobalActiveWeightField = value;
                    this.RaisePropertyChanged("SecurityGlobalActiveWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityIndustry {
            get {
                return this.SecurityIndustryField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityIndustryField, value) != true)) {
                    this.SecurityIndustryField = value;
                    this.RaisePropertyChanged("SecurityIndustry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<float> SecurityLastClosingPrice {
            get {
                return this.SecurityLastClosingPriceField;
            }
            set {
                if ((this.SecurityLastClosingPriceField.Equals(value) != true)) {
                    this.SecurityLastClosingPriceField = value;
                    this.RaisePropertyChanged("SecurityLastClosingPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<float> SecurityMSCIIMIWeight {
            get {
                return this.SecurityMSCIIMIWeightField;
            }
            set {
                if ((this.SecurityMSCIIMIWeightField.Equals(value) != true)) {
                    this.SecurityMSCIIMIWeightField = value;
                    this.RaisePropertyChanged("SecurityMSCIIMIWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<float> SecurityMSCIStdWeight {
            get {
                return this.SecurityMSCIStdWeightField;
            }
            set {
                if ((this.SecurityMSCIStdWeightField.Equals(value) != true)) {
                    this.SecurityMSCIStdWeightField = value;
                    this.RaisePropertyChanged("SecurityMSCIStdWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<float> SecurityMarketCapitalization {
            get {
                return this.SecurityMarketCapitalizationField;
            }
            set {
                if ((this.SecurityMarketCapitalizationField.Equals(value) != true)) {
                    this.SecurityMarketCapitalizationField = value;
                    this.RaisePropertyChanged("SecurityMarketCapitalization");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityName {
            get {
                return this.SecurityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityNameField, value) != true)) {
                    this.SecurityNameField = value;
                    this.RaisePropertyChanged("SecurityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityPFVMeasure {
            get {
                return this.SecurityPFVMeasureField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityPFVMeasureField, value) != true)) {
                    this.SecurityPFVMeasureField = value;
                    this.RaisePropertyChanged("SecurityPFVMeasure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> SecurityPosition {
            get {
                return this.SecurityPositionField;
            }
            set {
                if ((this.SecurityPositionField.Equals(value) != true)) {
                    this.SecurityPositionField = value;
                    this.RaisePropertyChanged("SecurityPosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityRecommendation {
            get {
                return this.SecurityRecommendationField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityRecommendationField, value) != true)) {
                    this.SecurityRecommendationField = value;
                    this.RaisePropertyChanged("SecurityRecommendation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<float> SecuritySellRange {
            get {
                return this.SecuritySellRangeField;
            }
            set {
                if ((this.SecuritySellRangeField.Equals(value) != true)) {
                    this.SecuritySellRangeField = value;
                    this.RaisePropertyChanged("SecuritySellRange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityTicker {
            get {
                return this.SecurityTickerField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityTickerField, value) != true)) {
                    this.SecurityTickerField = value;
                    this.RaisePropertyChanged("SecurityTicker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusType {
            get {
                return this.StatusTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusTypeField, value) != true)) {
                    this.StatusTypeField = value;
                    this.RaisePropertyChanged("StatusType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string YTDRet_Absolute {
            get {
                return this.YTDRet_AbsoluteField;
            }
            set {
                if ((object.ReferenceEquals(this.YTDRet_AbsoluteField, value) != true)) {
                    this.YTDRet_AbsoluteField = value;
                    this.RaisePropertyChanged("YTDRet_Absolute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string YTDRet_RELtoEM {
            get {
                return this.YTDRet_RELtoEMField;
            }
            set {
                if ((object.ReferenceEquals(this.YTDRet_RELtoEMField, value) != true)) {
                    this.YTDRet_RELtoEMField = value;
                    this.RaisePropertyChanged("YTDRet_RELtoEM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string YTDRet_RELtoLOC {
            get {
                return this.YTDRet_RELtoLOCField;
            }
            set {
                if ((object.ReferenceEquals(this.YTDRet_RELtoLOCField, value) != true)) {
                    this.YTDRet_RELtoLOCField = value;
                    this.RaisePropertyChanged("YTDRet_RELtoLOC");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StructuralObject", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses", IsReference=true)]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.EntityObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.FileMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.CommentInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.PresentationInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.MeetingPresentationMappingInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.MeetingInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.MeetingAttachedFileInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.PresentationAttachedFileInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.VoterInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.MeetingConfigurationSchedule))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.ComplexObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.MeetingMinuteData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.ICPresentationOverviewData))]
    public partial class StructuralObject : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityObject", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses", IsReference=true)]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.FileMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.CommentInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.PresentationInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.MeetingPresentationMappingInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.MeetingInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.MeetingAttachedFileInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.PresentationAttachedFileInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.VoterInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.MeetingConfigurationSchedule))]
    public partial class EntityObject : GreenField.ServiceCaller.MeetingDefinitions.StructuralObject {
        
        private GreenField.ServiceCaller.MeetingDefinitions.EntityKey EntityKeyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GreenField.ServiceCaller.MeetingDefinitions.EntityKey EntityKey {
            get {
                return this.EntityKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityKeyField, value) != true)) {
                    this.EntityKeyField = value;
                    this.RaisePropertyChanged("EntityKey");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileMaster", Namespace="http://schemas.datacontract.org/2004/07/GreenField.DAL", IsReference=true)]
    public partial class FileMaster : GreenField.ServiceCaller.MeetingDefinitions.EntityObject {
        
        private string CategoryField;
        
        private System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.CommentInfo> CommentInfoesField;
        
        private string CreatedByField;
        
        private System.Nullable<System.DateTime> CreatedOnField;
        
        private long FileIDField;
        
        private string LocationField;
        
        private System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.MeetingAttachedFileInfo> MeetingAttachedFileInfoesField;
        
        private string MetaTagsField;
        
        private string ModifiedByField;
        
        private System.Nullable<System.DateTime> ModifiedOnField;
        
        private string NameField;
        
        private System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.PresentationAttachedFileInfo> PresentationAttachedFileInfoesField;
        
        private string SecurityNameField;
        
        private string SecurityTickerField;
        
        private string TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.CommentInfo> CommentInfoes {
            get {
                return this.CommentInfoesField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentInfoesField, value) != true)) {
                    this.CommentInfoesField = value;
                    this.RaisePropertyChanged("CommentInfoes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FileID {
            get {
                return this.FileIDField;
            }
            set {
                if ((this.FileIDField.Equals(value) != true)) {
                    this.FileIDField = value;
                    this.RaisePropertyChanged("FileID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.MeetingAttachedFileInfo> MeetingAttachedFileInfoes {
            get {
                return this.MeetingAttachedFileInfoesField;
            }
            set {
                if ((object.ReferenceEquals(this.MeetingAttachedFileInfoesField, value) != true)) {
                    this.MeetingAttachedFileInfoesField = value;
                    this.RaisePropertyChanged("MeetingAttachedFileInfoes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MetaTags {
            get {
                return this.MetaTagsField;
            }
            set {
                if ((object.ReferenceEquals(this.MetaTagsField, value) != true)) {
                    this.MetaTagsField = value;
                    this.RaisePropertyChanged("MetaTags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((this.ModifiedOnField.Equals(value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.PresentationAttachedFileInfo> PresentationAttachedFileInfoes {
            get {
                return this.PresentationAttachedFileInfoesField;
            }
            set {
                if ((object.ReferenceEquals(this.PresentationAttachedFileInfoesField, value) != true)) {
                    this.PresentationAttachedFileInfoesField = value;
                    this.RaisePropertyChanged("PresentationAttachedFileInfoes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityName {
            get {
                return this.SecurityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityNameField, value) != true)) {
                    this.SecurityNameField = value;
                    this.RaisePropertyChanged("SecurityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityTicker {
            get {
                return this.SecurityTickerField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityTickerField, value) != true)) {
                    this.SecurityTickerField = value;
                    this.RaisePropertyChanged("SecurityTicker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommentInfo", Namespace="http://schemas.datacontract.org/2004/07/GreenField.DAL", IsReference=true)]
    public partial class CommentInfo : GreenField.ServiceCaller.MeetingDefinitions.EntityObject {
        
        private string CommentField;
        
        private string CommentByField;
        
        private long CommentIDField;
        
        private System.Nullable<System.DateTime> CommentOnField;
        
        private System.Nullable<long> FileIDField;
        
        private GreenField.ServiceCaller.MeetingDefinitions.FileMaster FileMasterField;
        
        private GreenField.ServiceCaller.MeetingDefinitions.EntityReferenceOfFileMasterjzQAem8p FileMasterReferenceField;
        
        private System.Nullable<long> PresentationIDField;
        
        private GreenField.ServiceCaller.MeetingDefinitions.PresentationInfo PresentationInfoField;
        
        private GreenField.ServiceCaller.MeetingDefinitions.EntityReferenceOfPresentationInfojzQAem8p PresentationInfoReferenceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommentBy {
            get {
                return this.CommentByField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentByField, value) != true)) {
                    this.CommentByField = value;
                    this.RaisePropertyChanged("CommentBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CommentID {
            get {
                return this.CommentIDField;
            }
            set {
                if ((this.CommentIDField.Equals(value) != true)) {
                    this.CommentIDField = value;
                    this.RaisePropertyChanged("CommentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CommentOn {
            get {
                return this.CommentOnField;
            }
            set {
                if ((this.CommentOnField.Equals(value) != true)) {
                    this.CommentOnField = value;
                    this.RaisePropertyChanged("CommentOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FileID {
            get {
                return this.FileIDField;
            }
            set {
                if ((this.FileIDField.Equals(value) != true)) {
                    this.FileIDField = value;
                    this.RaisePropertyChanged("FileID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GreenField.ServiceCaller.MeetingDefinitions.FileMaster FileMaster {
            get {
                return this.FileMasterField;
            }
            set {
                if ((object.ReferenceEquals(this.FileMasterField, value) != true)) {
                    this.FileMasterField = value;
                    this.RaisePropertyChanged("FileMaster");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GreenField.ServiceCaller.MeetingDefinitions.EntityReferenceOfFileMasterjzQAem8p FileMasterReference {
            get {
                return this.FileMasterReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.FileMasterReferenceField, value) != true)) {
                    this.FileMasterReferenceField = value;
                    this.RaisePropertyChanged("FileMasterReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> PresentationID {
            get {
                return this.PresentationIDField;
            }
            set {
                if ((this.PresentationIDField.Equals(value) != true)) {
                    this.PresentationIDField = value;
                    this.RaisePropertyChanged("PresentationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GreenField.ServiceCaller.MeetingDefinitions.PresentationInfo PresentationInfo {
            get {
                return this.PresentationInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.PresentationInfoField, value) != true)) {
                    this.PresentationInfoField = value;
                    this.RaisePropertyChanged("PresentationInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GreenField.ServiceCaller.MeetingDefinitions.EntityReferenceOfPresentationInfojzQAem8p PresentationInfoReference {
            get {
                return this.PresentationInfoReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.PresentationInfoReferenceField, value) != true)) {
                    this.PresentationInfoReferenceField = value;
                    this.RaisePropertyChanged("PresentationInfoReference");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PresentationInfo", Namespace="http://schemas.datacontract.org/2004/07/GreenField.DAL", IsReference=true)]
    public partial class PresentationInfo : GreenField.ServiceCaller.MeetingDefinitions.EntityObject {
        
        private System.Nullable<bool> AcceptWithoutDiscussionFlagField;
        
        private string AdminNotesField;
        
        private string AnalystField;
        
        private System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.CommentInfo> CommentInfoesField;
        
        private System.Nullable<float> CommitteeBuyRangeField;
        
        private string CommitteePFVMeasureField;
        
        private System.Nullable<System.DateTime> CommitteeRangeEffectiveThroughField;
        
        private string CommitteeRecommendationField;
        
        private System.Nullable<float> CommitteeSellRangeField;
        
        private string CreatedByField;
        
        private System.DateTime CreatedOnField;
        
        private string CurrentHoldingsField;
        
        private string FVCalcField;
        
        private System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.MeetingPresentationMappingInfo> MeetingPresentationMappingInfoesField;
        
        private string ModifiedByField;
        
        private System.DateTime ModifiedOnField;
        
        private string PercentEMIFField;
        
        private System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.PresentationAttachedFileInfo> PresentationAttachedFileInfoesField;
        
        private long PresentationIDField;
        
        private string PresenterField;
        
        private string PriceField;
        
        private string SecurityActiveWeightField;
        
        private string SecurityBMWeightField;
        
        private System.Nullable<float> SecurityBuyRangeField;
        
        private string SecurityBuySellvsCrntField;
        
        private System.Nullable<float> SecurityCashPositionField;
        
        private string SecurityCountryField;
        
        private string SecurityCountryCodeField;
        
        private System.Nullable<float> SecurityGlobalActiveWeightField;
        
        private string SecurityIndustryField;
        
        private System.Nullable<float> SecurityLastClosingPriceField;
        
        private System.Nullable<float> SecurityMSCIIMIWeightField;
        
        private System.Nullable<float> SecurityMSCIStdWeightField;
        
        private System.Nullable<float> SecurityMarketCapitalizationField;
        
        private string SecurityNameField;
        
        private string SecurityPFVMeasureField;
        
        private System.Nullable<long> SecurityPositionField;
        
        private string SecurityRecommendationField;
        
        private System.Nullable<float> SecuritySellRangeField;
        
        private string SecurityTickerField;
        
        private string StatusTypeField;
        
        private System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.VoterInfo> VoterInfoesField;
        
        private string YTDRet_AbsoluteField;
        
        private string YTDRet_RELtoEMField;
        
        private string YTDRet_RELtoLOCField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> AcceptWithoutDiscussionFlag {
            get {
                return this.AcceptWithoutDiscussionFlagField;
            }
            set {
                if ((this.AcceptWithoutDiscussionFlagField.Equals(value) != true)) {
                    this.AcceptWithoutDiscussionFlagField = value;
                    this.RaisePropertyChanged("AcceptWithoutDiscussionFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdminNotes {
            get {
                return this.AdminNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.AdminNotesField, value) != true)) {
                    this.AdminNotesField = value;
                    this.RaisePropertyChanged("AdminNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Analyst {
            get {
                return this.AnalystField;
            }
            set {
                if ((object.ReferenceEquals(this.AnalystField, value) != true)) {
                    this.AnalystField = value;
                    this.RaisePropertyChanged("Analyst");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.CommentInfo> CommentInfoes {
            get {
                return this.CommentInfoesField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentInfoesField, value) != true)) {
                    this.CommentInfoesField = value;
                    this.RaisePropertyChanged("CommentInfoes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<float> CommitteeBuyRange {
            get {
                return this.CommitteeBuyRangeField;
            }
            set {
                if ((this.CommitteeBuyRangeField.Equals(value) != true)) {
                    this.CommitteeBuyRangeField = value;
                    this.RaisePropertyChanged("CommitteeBuyRange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommitteePFVMeasure {
            get {
                return this.CommitteePFVMeasureField;
            }
            set {
                if ((object.ReferenceEquals(this.CommitteePFVMeasureField, value) != true)) {
                    this.CommitteePFVMeasureField = value;
                    this.RaisePropertyChanged("CommitteePFVMeasure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CommitteeRangeEffectiveThrough {
            get {
                return this.CommitteeRangeEffectiveThroughField;
            }
            set {
                if ((this.CommitteeRangeEffectiveThroughField.Equals(value) != true)) {
                    this.CommitteeRangeEffectiveThroughField = value;
                    this.RaisePropertyChanged("CommitteeRangeEffectiveThrough");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommitteeRecommendation {
            get {
                return this.CommitteeRecommendationField;
            }
            set {
                if ((object.ReferenceEquals(this.CommitteeRecommendationField, value) != true)) {
                    this.CommitteeRecommendationField = value;
                    this.RaisePropertyChanged("CommitteeRecommendation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<float> CommitteeSellRange {
            get {
                return this.CommitteeSellRangeField;
            }
            set {
                if ((this.CommitteeSellRangeField.Equals(value) != true)) {
                    this.CommitteeSellRangeField = value;
                    this.RaisePropertyChanged("CommitteeSellRange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentHoldings {
            get {
                return this.CurrentHoldingsField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentHoldingsField, value) != true)) {
                    this.CurrentHoldingsField = value;
                    this.RaisePropertyChanged("CurrentHoldings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FVCalc {
            get {
                return this.FVCalcField;
            }
            set {
                if ((object.ReferenceEquals(this.FVCalcField, value) != true)) {
                    this.FVCalcField = value;
                    this.RaisePropertyChanged("FVCalc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.MeetingPresentationMappingInfo> MeetingPresentationMappingInfoes {
            get {
                return this.MeetingPresentationMappingInfoesField;
            }
            set {
                if ((object.ReferenceEquals(this.MeetingPresentationMappingInfoesField, value) != true)) {
                    this.MeetingPresentationMappingInfoesField = value;
                    this.RaisePropertyChanged("MeetingPresentationMappingInfoes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((this.ModifiedOnField.Equals(value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PercentEMIF {
            get {
                return this.PercentEMIFField;
            }
            set {
                if ((object.ReferenceEquals(this.PercentEMIFField, value) != true)) {
                    this.PercentEMIFField = value;
                    this.RaisePropertyChanged("PercentEMIF");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.PresentationAttachedFileInfo> PresentationAttachedFileInfoes {
            get {
                return this.PresentationAttachedFileInfoesField;
            }
            set {
                if ((object.ReferenceEquals(this.PresentationAttachedFileInfoesField, value) != true)) {
                    this.PresentationAttachedFileInfoesField = value;
                    this.RaisePropertyChanged("PresentationAttachedFileInfoes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PresentationID {
            get {
                return this.PresentationIDField;
            }
            set {
                if ((this.PresentationIDField.Equals(value) != true)) {
                    this.PresentationIDField = value;
                    this.RaisePropertyChanged("PresentationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Presenter {
            get {
                return this.PresenterField;
            }
            set {
                if ((object.ReferenceEquals(this.PresenterField, value) != true)) {
                    this.PresenterField = value;
                    this.RaisePropertyChanged("Presenter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Price {
            get {
                return this.PriceField;
            }
            set {
                if ((object.ReferenceEquals(this.PriceField, value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityActiveWeight {
            get {
                return this.SecurityActiveWeightField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityActiveWeightField, value) != true)) {
                    this.SecurityActiveWeightField = value;
                    this.RaisePropertyChanged("SecurityActiveWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityBMWeight {
            get {
                return this.SecurityBMWeightField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityBMWeightField, value) != true)) {
                    this.SecurityBMWeightField = value;
                    this.RaisePropertyChanged("SecurityBMWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<float> SecurityBuyRange {
            get {
                return this.SecurityBuyRangeField;
            }
            set {
                if ((this.SecurityBuyRangeField.Equals(value) != true)) {
                    this.SecurityBuyRangeField = value;
                    this.RaisePropertyChanged("SecurityBuyRange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityBuySellvsCrnt {
            get {
                return this.SecurityBuySellvsCrntField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityBuySellvsCrntField, value) != true)) {
                    this.SecurityBuySellvsCrntField = value;
                    this.RaisePropertyChanged("SecurityBuySellvsCrnt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<float> SecurityCashPosition {
            get {
                return this.SecurityCashPositionField;
            }
            set {
                if ((this.SecurityCashPositionField.Equals(value) != true)) {
                    this.SecurityCashPositionField = value;
                    this.RaisePropertyChanged("SecurityCashPosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityCountry {
            get {
                return this.SecurityCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityCountryField, value) != true)) {
                    this.SecurityCountryField = value;
                    this.RaisePropertyChanged("SecurityCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityCountryCode {
            get {
                return this.SecurityCountryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityCountryCodeField, value) != true)) {
                    this.SecurityCountryCodeField = value;
                    this.RaisePropertyChanged("SecurityCountryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<float> SecurityGlobalActiveWeight {
            get {
                return this.SecurityGlobalActiveWeightField;
            }
            set {
                if ((this.SecurityGlobalActiveWeightField.Equals(value) != true)) {
                    this.SecurityGlobalActiveWeightField = value;
                    this.RaisePropertyChanged("SecurityGlobalActiveWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityIndustry {
            get {
                return this.SecurityIndustryField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityIndustryField, value) != true)) {
                    this.SecurityIndustryField = value;
                    this.RaisePropertyChanged("SecurityIndustry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<float> SecurityLastClosingPrice {
            get {
                return this.SecurityLastClosingPriceField;
            }
            set {
                if ((this.SecurityLastClosingPriceField.Equals(value) != true)) {
                    this.SecurityLastClosingPriceField = value;
                    this.RaisePropertyChanged("SecurityLastClosingPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<float> SecurityMSCIIMIWeight {
            get {
                return this.SecurityMSCIIMIWeightField;
            }
            set {
                if ((this.SecurityMSCIIMIWeightField.Equals(value) != true)) {
                    this.SecurityMSCIIMIWeightField = value;
                    this.RaisePropertyChanged("SecurityMSCIIMIWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<float> SecurityMSCIStdWeight {
            get {
                return this.SecurityMSCIStdWeightField;
            }
            set {
                if ((this.SecurityMSCIStdWeightField.Equals(value) != true)) {
                    this.SecurityMSCIStdWeightField = value;
                    this.RaisePropertyChanged("SecurityMSCIStdWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<float> SecurityMarketCapitalization {
            get {
                return this.SecurityMarketCapitalizationField;
            }
            set {
                if ((this.SecurityMarketCapitalizationField.Equals(value) != true)) {
                    this.SecurityMarketCapitalizationField = value;
                    this.RaisePropertyChanged("SecurityMarketCapitalization");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityName {
            get {
                return this.SecurityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityNameField, value) != true)) {
                    this.SecurityNameField = value;
                    this.RaisePropertyChanged("SecurityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityPFVMeasure {
            get {
                return this.SecurityPFVMeasureField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityPFVMeasureField, value) != true)) {
                    this.SecurityPFVMeasureField = value;
                    this.RaisePropertyChanged("SecurityPFVMeasure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> SecurityPosition {
            get {
                return this.SecurityPositionField;
            }
            set {
                if ((this.SecurityPositionField.Equals(value) != true)) {
                    this.SecurityPositionField = value;
                    this.RaisePropertyChanged("SecurityPosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityRecommendation {
            get {
                return this.SecurityRecommendationField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityRecommendationField, value) != true)) {
                    this.SecurityRecommendationField = value;
                    this.RaisePropertyChanged("SecurityRecommendation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<float> SecuritySellRange {
            get {
                return this.SecuritySellRangeField;
            }
            set {
                if ((this.SecuritySellRangeField.Equals(value) != true)) {
                    this.SecuritySellRangeField = value;
                    this.RaisePropertyChanged("SecuritySellRange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityTicker {
            get {
                return this.SecurityTickerField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityTickerField, value) != true)) {
                    this.SecurityTickerField = value;
                    this.RaisePropertyChanged("SecurityTicker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusType {
            get {
                return this.StatusTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusTypeField, value) != true)) {
                    this.StatusTypeField = value;
                    this.RaisePropertyChanged("StatusType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.VoterInfo> VoterInfoes {
            get {
                return this.VoterInfoesField;
            }
            set {
                if ((object.ReferenceEquals(this.VoterInfoesField, value) != true)) {
                    this.VoterInfoesField = value;
                    this.RaisePropertyChanged("VoterInfoes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string YTDRet_Absolute {
            get {
                return this.YTDRet_AbsoluteField;
            }
            set {
                if ((object.ReferenceEquals(this.YTDRet_AbsoluteField, value) != true)) {
                    this.YTDRet_AbsoluteField = value;
                    this.RaisePropertyChanged("YTDRet_Absolute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string YTDRet_RELtoEM {
            get {
                return this.YTDRet_RELtoEMField;
            }
            set {
                if ((object.ReferenceEquals(this.YTDRet_RELtoEMField, value) != true)) {
                    this.YTDRet_RELtoEMField = value;
                    this.RaisePropertyChanged("YTDRet_RELtoEM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string YTDRet_RELtoLOC {
            get {
                return this.YTDRet_RELtoLOCField;
            }
            set {
                if ((object.ReferenceEquals(this.YTDRet_RELtoLOCField, value) != true)) {
                    this.YTDRet_RELtoLOCField = value;
                    this.RaisePropertyChanged("YTDRet_RELtoLOC");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MeetingPresentationMappingInfo", Namespace="http://schemas.datacontract.org/2004/07/GreenField.DAL", IsReference=true)]
    public partial class MeetingPresentationMappingInfo : GreenField.ServiceCaller.MeetingDefinitions.EntityObject {
        
        private string CreatedByField;
        
        private System.DateTime CreatedOnField;
        
        private long MappingIDField;
        
        private long MeetingIDField;
        
        private GreenField.ServiceCaller.MeetingDefinitions.MeetingInfo MeetingInfoField;
        
        private GreenField.ServiceCaller.MeetingDefinitions.EntityReferenceOfMeetingInfojzQAem8p MeetingInfoReferenceField;
        
        private string ModifedByField;
        
        private System.DateTime ModifiedOnField;
        
        private long PresentationIDField;
        
        private GreenField.ServiceCaller.MeetingDefinitions.PresentationInfo PresentationInfoField;
        
        private GreenField.ServiceCaller.MeetingDefinitions.EntityReferenceOfPresentationInfojzQAem8p PresentationInfoReferenceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MappingID {
            get {
                return this.MappingIDField;
            }
            set {
                if ((this.MappingIDField.Equals(value) != true)) {
                    this.MappingIDField = value;
                    this.RaisePropertyChanged("MappingID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MeetingID {
            get {
                return this.MeetingIDField;
            }
            set {
                if ((this.MeetingIDField.Equals(value) != true)) {
                    this.MeetingIDField = value;
                    this.RaisePropertyChanged("MeetingID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GreenField.ServiceCaller.MeetingDefinitions.MeetingInfo MeetingInfo {
            get {
                return this.MeetingInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.MeetingInfoField, value) != true)) {
                    this.MeetingInfoField = value;
                    this.RaisePropertyChanged("MeetingInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GreenField.ServiceCaller.MeetingDefinitions.EntityReferenceOfMeetingInfojzQAem8p MeetingInfoReference {
            get {
                return this.MeetingInfoReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.MeetingInfoReferenceField, value) != true)) {
                    this.MeetingInfoReferenceField = value;
                    this.RaisePropertyChanged("MeetingInfoReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifedBy {
            get {
                return this.ModifedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifedByField, value) != true)) {
                    this.ModifedByField = value;
                    this.RaisePropertyChanged("ModifedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((this.ModifiedOnField.Equals(value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PresentationID {
            get {
                return this.PresentationIDField;
            }
            set {
                if ((this.PresentationIDField.Equals(value) != true)) {
                    this.PresentationIDField = value;
                    this.RaisePropertyChanged("PresentationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GreenField.ServiceCaller.MeetingDefinitions.PresentationInfo PresentationInfo {
            get {
                return this.PresentationInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.PresentationInfoField, value) != true)) {
                    this.PresentationInfoField = value;
                    this.RaisePropertyChanged("PresentationInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GreenField.ServiceCaller.MeetingDefinitions.EntityReferenceOfPresentationInfojzQAem8p PresentationInfoReference {
            get {
                return this.PresentationInfoReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.PresentationInfoReferenceField, value) != true)) {
                    this.PresentationInfoReferenceField = value;
                    this.RaisePropertyChanged("PresentationInfoReference");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MeetingInfo", Namespace="http://schemas.datacontract.org/2004/07/GreenField.DAL", IsReference=true)]
    public partial class MeetingInfo : GreenField.ServiceCaller.MeetingDefinitions.EntityObject {
        
        private string CreatedByField;
        
        private System.DateTime CreatedOnField;
        
        private System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.MeetingAttachedFileInfo> MeetingAttachedFileInfoesField;
        
        private System.DateTime MeetingClosedDateTimeField;
        
        private System.DateTime MeetingDateTimeField;
        
        private string MeetingDescriptionField;
        
        private long MeetingIDField;
        
        private System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.MeetingPresentationMappingInfo> MeetingPresentationMappingInfoesField;
        
        private System.DateTime MeetingVotingClosedDateTimeField;
        
        private string ModifiedByField;
        
        private System.DateTime ModifiedOnField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.MeetingAttachedFileInfo> MeetingAttachedFileInfoes {
            get {
                return this.MeetingAttachedFileInfoesField;
            }
            set {
                if ((object.ReferenceEquals(this.MeetingAttachedFileInfoesField, value) != true)) {
                    this.MeetingAttachedFileInfoesField = value;
                    this.RaisePropertyChanged("MeetingAttachedFileInfoes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime MeetingClosedDateTime {
            get {
                return this.MeetingClosedDateTimeField;
            }
            set {
                if ((this.MeetingClosedDateTimeField.Equals(value) != true)) {
                    this.MeetingClosedDateTimeField = value;
                    this.RaisePropertyChanged("MeetingClosedDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime MeetingDateTime {
            get {
                return this.MeetingDateTimeField;
            }
            set {
                if ((this.MeetingDateTimeField.Equals(value) != true)) {
                    this.MeetingDateTimeField = value;
                    this.RaisePropertyChanged("MeetingDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MeetingDescription {
            get {
                return this.MeetingDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.MeetingDescriptionField, value) != true)) {
                    this.MeetingDescriptionField = value;
                    this.RaisePropertyChanged("MeetingDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MeetingID {
            get {
                return this.MeetingIDField;
            }
            set {
                if ((this.MeetingIDField.Equals(value) != true)) {
                    this.MeetingIDField = value;
                    this.RaisePropertyChanged("MeetingID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.MeetingPresentationMappingInfo> MeetingPresentationMappingInfoes {
            get {
                return this.MeetingPresentationMappingInfoesField;
            }
            set {
                if ((object.ReferenceEquals(this.MeetingPresentationMappingInfoesField, value) != true)) {
                    this.MeetingPresentationMappingInfoesField = value;
                    this.RaisePropertyChanged("MeetingPresentationMappingInfoes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime MeetingVotingClosedDateTime {
            get {
                return this.MeetingVotingClosedDateTimeField;
            }
            set {
                if ((this.MeetingVotingClosedDateTimeField.Equals(value) != true)) {
                    this.MeetingVotingClosedDateTimeField = value;
                    this.RaisePropertyChanged("MeetingVotingClosedDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((this.ModifiedOnField.Equals(value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MeetingAttachedFileInfo", Namespace="http://schemas.datacontract.org/2004/07/GreenField.DAL", IsReference=true)]
    public partial class MeetingAttachedFileInfo : GreenField.ServiceCaller.MeetingDefinitions.EntityObject {
        
        private string CreatedByField;
        
        private System.DateTime CreatedOnField;
        
        private long FileIDField;
        
        private GreenField.ServiceCaller.MeetingDefinitions.FileMaster FileMasterField;
        
        private GreenField.ServiceCaller.MeetingDefinitions.EntityReferenceOfFileMasterjzQAem8p FileMasterReferenceField;
        
        private long IDField;
        
        private long MeetingIDField;
        
        private GreenField.ServiceCaller.MeetingDefinitions.MeetingInfo MeetingInfoField;
        
        private GreenField.ServiceCaller.MeetingDefinitions.EntityReferenceOfMeetingInfojzQAem8p MeetingInfoReferenceField;
        
        private string ModifiedByField;
        
        private System.DateTime ModifiedOnField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FileID {
            get {
                return this.FileIDField;
            }
            set {
                if ((this.FileIDField.Equals(value) != true)) {
                    this.FileIDField = value;
                    this.RaisePropertyChanged("FileID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GreenField.ServiceCaller.MeetingDefinitions.FileMaster FileMaster {
            get {
                return this.FileMasterField;
            }
            set {
                if ((object.ReferenceEquals(this.FileMasterField, value) != true)) {
                    this.FileMasterField = value;
                    this.RaisePropertyChanged("FileMaster");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GreenField.ServiceCaller.MeetingDefinitions.EntityReferenceOfFileMasterjzQAem8p FileMasterReference {
            get {
                return this.FileMasterReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.FileMasterReferenceField, value) != true)) {
                    this.FileMasterReferenceField = value;
                    this.RaisePropertyChanged("FileMasterReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MeetingID {
            get {
                return this.MeetingIDField;
            }
            set {
                if ((this.MeetingIDField.Equals(value) != true)) {
                    this.MeetingIDField = value;
                    this.RaisePropertyChanged("MeetingID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GreenField.ServiceCaller.MeetingDefinitions.MeetingInfo MeetingInfo {
            get {
                return this.MeetingInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.MeetingInfoField, value) != true)) {
                    this.MeetingInfoField = value;
                    this.RaisePropertyChanged("MeetingInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GreenField.ServiceCaller.MeetingDefinitions.EntityReferenceOfMeetingInfojzQAem8p MeetingInfoReference {
            get {
                return this.MeetingInfoReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.MeetingInfoReferenceField, value) != true)) {
                    this.MeetingInfoReferenceField = value;
                    this.RaisePropertyChanged("MeetingInfoReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((this.ModifiedOnField.Equals(value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PresentationAttachedFileInfo", Namespace="http://schemas.datacontract.org/2004/07/GreenField.DAL", IsReference=true)]
    public partial class PresentationAttachedFileInfo : GreenField.ServiceCaller.MeetingDefinitions.EntityObject {
        
        private string CreatedByField;
        
        private System.DateTime CreatedOnField;
        
        private long FileIDField;
        
        private GreenField.ServiceCaller.MeetingDefinitions.FileMaster FileMasterField;
        
        private GreenField.ServiceCaller.MeetingDefinitions.EntityReferenceOfFileMasterjzQAem8p FileMasterReferenceField;
        
        private long IDField;
        
        private string ModifiedByField;
        
        private System.DateTime ModifiedOnField;
        
        private long PresentationIDField;
        
        private GreenField.ServiceCaller.MeetingDefinitions.PresentationInfo PresentationInfoField;
        
        private GreenField.ServiceCaller.MeetingDefinitions.EntityReferenceOfPresentationInfojzQAem8p PresentationInfoReferenceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FileID {
            get {
                return this.FileIDField;
            }
            set {
                if ((this.FileIDField.Equals(value) != true)) {
                    this.FileIDField = value;
                    this.RaisePropertyChanged("FileID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GreenField.ServiceCaller.MeetingDefinitions.FileMaster FileMaster {
            get {
                return this.FileMasterField;
            }
            set {
                if ((object.ReferenceEquals(this.FileMasterField, value) != true)) {
                    this.FileMasterField = value;
                    this.RaisePropertyChanged("FileMaster");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GreenField.ServiceCaller.MeetingDefinitions.EntityReferenceOfFileMasterjzQAem8p FileMasterReference {
            get {
                return this.FileMasterReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.FileMasterReferenceField, value) != true)) {
                    this.FileMasterReferenceField = value;
                    this.RaisePropertyChanged("FileMasterReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((this.ModifiedOnField.Equals(value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PresentationID {
            get {
                return this.PresentationIDField;
            }
            set {
                if ((this.PresentationIDField.Equals(value) != true)) {
                    this.PresentationIDField = value;
                    this.RaisePropertyChanged("PresentationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GreenField.ServiceCaller.MeetingDefinitions.PresentationInfo PresentationInfo {
            get {
                return this.PresentationInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.PresentationInfoField, value) != true)) {
                    this.PresentationInfoField = value;
                    this.RaisePropertyChanged("PresentationInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GreenField.ServiceCaller.MeetingDefinitions.EntityReferenceOfPresentationInfojzQAem8p PresentationInfoReference {
            get {
                return this.PresentationInfoReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.PresentationInfoReferenceField, value) != true)) {
                    this.PresentationInfoReferenceField = value;
                    this.RaisePropertyChanged("PresentationInfoReference");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VoterInfo", Namespace="http://schemas.datacontract.org/2004/07/GreenField.DAL", IsReference=true)]
    public partial class VoterInfo : GreenField.ServiceCaller.MeetingDefinitions.EntityObject {
        
        private string AttendanceTypeField;
        
        private string CreatedByField;
        
        private System.DateTime CreatedOnField;
        
        private System.Nullable<bool> DiscussionFlagField;
        
        private string ModifiedByField;
        
        private System.DateTime ModifiedOnField;
        
        private string NameField;
        
        private string NotesField;
        
        private System.Nullable<bool> PostMeetingFlagField;
        
        private long PresentationIDField;
        
        private GreenField.ServiceCaller.MeetingDefinitions.PresentationInfo PresentationInfoField;
        
        private GreenField.ServiceCaller.MeetingDefinitions.EntityReferenceOfPresentationInfojzQAem8p PresentationInfoReferenceField;
        
        private string VoteTypeField;
        
        private System.Nullable<float> VoterBuyRangeField;
        
        private long VoterIDField;
        
        private string VoterPFVMeasureField;
        
        private string VoterRecommendationField;
        
        private System.Nullable<float> VoterSellRangeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttendanceType {
            get {
                return this.AttendanceTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AttendanceTypeField, value) != true)) {
                    this.AttendanceTypeField = value;
                    this.RaisePropertyChanged("AttendanceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> DiscussionFlag {
            get {
                return this.DiscussionFlagField;
            }
            set {
                if ((this.DiscussionFlagField.Equals(value) != true)) {
                    this.DiscussionFlagField = value;
                    this.RaisePropertyChanged("DiscussionFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((this.ModifiedOnField.Equals(value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> PostMeetingFlag {
            get {
                return this.PostMeetingFlagField;
            }
            set {
                if ((this.PostMeetingFlagField.Equals(value) != true)) {
                    this.PostMeetingFlagField = value;
                    this.RaisePropertyChanged("PostMeetingFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PresentationID {
            get {
                return this.PresentationIDField;
            }
            set {
                if ((this.PresentationIDField.Equals(value) != true)) {
                    this.PresentationIDField = value;
                    this.RaisePropertyChanged("PresentationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GreenField.ServiceCaller.MeetingDefinitions.PresentationInfo PresentationInfo {
            get {
                return this.PresentationInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.PresentationInfoField, value) != true)) {
                    this.PresentationInfoField = value;
                    this.RaisePropertyChanged("PresentationInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GreenField.ServiceCaller.MeetingDefinitions.EntityReferenceOfPresentationInfojzQAem8p PresentationInfoReference {
            get {
                return this.PresentationInfoReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.PresentationInfoReferenceField, value) != true)) {
                    this.PresentationInfoReferenceField = value;
                    this.RaisePropertyChanged("PresentationInfoReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VoteType {
            get {
                return this.VoteTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.VoteTypeField, value) != true)) {
                    this.VoteTypeField = value;
                    this.RaisePropertyChanged("VoteType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<float> VoterBuyRange {
            get {
                return this.VoterBuyRangeField;
            }
            set {
                if ((this.VoterBuyRangeField.Equals(value) != true)) {
                    this.VoterBuyRangeField = value;
                    this.RaisePropertyChanged("VoterBuyRange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long VoterID {
            get {
                return this.VoterIDField;
            }
            set {
                if ((this.VoterIDField.Equals(value) != true)) {
                    this.VoterIDField = value;
                    this.RaisePropertyChanged("VoterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VoterPFVMeasure {
            get {
                return this.VoterPFVMeasureField;
            }
            set {
                if ((object.ReferenceEquals(this.VoterPFVMeasureField, value) != true)) {
                    this.VoterPFVMeasureField = value;
                    this.RaisePropertyChanged("VoterPFVMeasure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VoterRecommendation {
            get {
                return this.VoterRecommendationField;
            }
            set {
                if ((object.ReferenceEquals(this.VoterRecommendationField, value) != true)) {
                    this.VoterRecommendationField = value;
                    this.RaisePropertyChanged("VoterRecommendation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<float> VoterSellRange {
            get {
                return this.VoterSellRangeField;
            }
            set {
                if ((this.VoterSellRangeField.Equals(value) != true)) {
                    this.VoterSellRangeField = value;
                    this.RaisePropertyChanged("VoterSellRange");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MeetingConfigurationSchedule", Namespace="http://schemas.datacontract.org/2004/07/GreenField.DAL", IsReference=true)]
    public partial class MeetingConfigurationSchedule : GreenField.ServiceCaller.MeetingDefinitions.EntityObject {
        
        private System.Nullable<decimal> ConfigurablePreMeetingVotingDeadlineField;
        
        private System.Nullable<decimal> ConfigurablePresentationDeadlineField;
        
        private string CreatedByField;
        
        private System.DateTime CreatedOnField;
        
        private string ModifiedByField;
        
        private System.DateTime ModifiedOnField;
        
        private string PreMeetingVotingDeadlineDayField;
        
        private System.DateTime PreMeetingVotingDeadlineTimeField;
        
        private string PresentationDayField;
        
        private string PresentationDeadlineDayField;
        
        private System.DateTime PresentationDeadlineTimeField;
        
        private System.DateTime PresentationTimeField;
        
        private string PresentationTimeZoneField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ConfigurablePreMeetingVotingDeadline {
            get {
                return this.ConfigurablePreMeetingVotingDeadlineField;
            }
            set {
                if ((this.ConfigurablePreMeetingVotingDeadlineField.Equals(value) != true)) {
                    this.ConfigurablePreMeetingVotingDeadlineField = value;
                    this.RaisePropertyChanged("ConfigurablePreMeetingVotingDeadline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ConfigurablePresentationDeadline {
            get {
                return this.ConfigurablePresentationDeadlineField;
            }
            set {
                if ((this.ConfigurablePresentationDeadlineField.Equals(value) != true)) {
                    this.ConfigurablePresentationDeadlineField = value;
                    this.RaisePropertyChanged("ConfigurablePresentationDeadline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((this.ModifiedOnField.Equals(value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PreMeetingVotingDeadlineDay {
            get {
                return this.PreMeetingVotingDeadlineDayField;
            }
            set {
                if ((object.ReferenceEquals(this.PreMeetingVotingDeadlineDayField, value) != true)) {
                    this.PreMeetingVotingDeadlineDayField = value;
                    this.RaisePropertyChanged("PreMeetingVotingDeadlineDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PreMeetingVotingDeadlineTime {
            get {
                return this.PreMeetingVotingDeadlineTimeField;
            }
            set {
                if ((this.PreMeetingVotingDeadlineTimeField.Equals(value) != true)) {
                    this.PreMeetingVotingDeadlineTimeField = value;
                    this.RaisePropertyChanged("PreMeetingVotingDeadlineTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PresentationDay {
            get {
                return this.PresentationDayField;
            }
            set {
                if ((object.ReferenceEquals(this.PresentationDayField, value) != true)) {
                    this.PresentationDayField = value;
                    this.RaisePropertyChanged("PresentationDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PresentationDeadlineDay {
            get {
                return this.PresentationDeadlineDayField;
            }
            set {
                if ((object.ReferenceEquals(this.PresentationDeadlineDayField, value) != true)) {
                    this.PresentationDeadlineDayField = value;
                    this.RaisePropertyChanged("PresentationDeadlineDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PresentationDeadlineTime {
            get {
                return this.PresentationDeadlineTimeField;
            }
            set {
                if ((this.PresentationDeadlineTimeField.Equals(value) != true)) {
                    this.PresentationDeadlineTimeField = value;
                    this.RaisePropertyChanged("PresentationDeadlineTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PresentationTime {
            get {
                return this.PresentationTimeField;
            }
            set {
                if ((this.PresentationTimeField.Equals(value) != true)) {
                    this.PresentationTimeField = value;
                    this.RaisePropertyChanged("PresentationTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PresentationTimeZone {
            get {
                return this.PresentationTimeZoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PresentationTimeZoneField, value) != true)) {
                    this.PresentationTimeZoneField = value;
                    this.RaisePropertyChanged("PresentationTimeZone");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ComplexObject", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses", IsReference=true)]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.MeetingMinuteData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.ICPresentationOverviewData))]
    public partial class ComplexObject : GreenField.ServiceCaller.MeetingDefinitions.StructuralObject {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MeetingMinuteData", Namespace="http://schemas.datacontract.org/2004/07/GreenField.DAL", IsReference=true)]
    public partial class MeetingMinuteData : GreenField.ServiceCaller.MeetingDefinitions.ComplexObject {
        
        private string AttendanceTypeField;
        
        private string NameField;
        
        private long PresentationIDField;
        
        private string PresenterField;
        
        private string SecurityCountryField;
        
        private string SecurityIndustryField;
        
        private string SecurityNameField;
        
        private string SecurityTickerField;
        
        private System.Nullable<long> VoterIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttendanceType {
            get {
                return this.AttendanceTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AttendanceTypeField, value) != true)) {
                    this.AttendanceTypeField = value;
                    this.RaisePropertyChanged("AttendanceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PresentationID {
            get {
                return this.PresentationIDField;
            }
            set {
                if ((this.PresentationIDField.Equals(value) != true)) {
                    this.PresentationIDField = value;
                    this.RaisePropertyChanged("PresentationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Presenter {
            get {
                return this.PresenterField;
            }
            set {
                if ((object.ReferenceEquals(this.PresenterField, value) != true)) {
                    this.PresenterField = value;
                    this.RaisePropertyChanged("Presenter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityCountry {
            get {
                return this.SecurityCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityCountryField, value) != true)) {
                    this.SecurityCountryField = value;
                    this.RaisePropertyChanged("SecurityCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityIndustry {
            get {
                return this.SecurityIndustryField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityIndustryField, value) != true)) {
                    this.SecurityIndustryField = value;
                    this.RaisePropertyChanged("SecurityIndustry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityName {
            get {
                return this.SecurityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityNameField, value) != true)) {
                    this.SecurityNameField = value;
                    this.RaisePropertyChanged("SecurityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityTicker {
            get {
                return this.SecurityTickerField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityTickerField, value) != true)) {
                    this.SecurityTickerField = value;
                    this.RaisePropertyChanged("SecurityTicker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VoterID {
            get {
                return this.VoterIDField;
            }
            set {
                if ((this.VoterIDField.Equals(value) != true)) {
                    this.VoterIDField = value;
                    this.RaisePropertyChanged("VoterID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityKey", Namespace="http://schemas.datacontract.org/2004/07/System.Data", IsReference=true)]
    public partial class EntityKey : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string EntityContainerNameField;
        
        private System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.EntityKeyMember> EntityKeyValuesField;
        
        private string EntitySetNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityContainerName {
            get {
                return this.EntityContainerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityContainerNameField, value) != true)) {
                    this.EntityContainerNameField = value;
                    this.RaisePropertyChanged("EntityContainerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.EntityKeyMember> EntityKeyValues {
            get {
                return this.EntityKeyValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityKeyValuesField, value) != true)) {
                    this.EntityKeyValuesField = value;
                    this.RaisePropertyChanged("EntityKeyValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntitySetName {
            get {
                return this.EntitySetNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntitySetNameField, value) != true)) {
                    this.EntitySetNameField = value;
                    this.RaisePropertyChanged("EntitySetName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityKeyMember", Namespace="http://schemas.datacontract.org/2004/07/System.Data")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.ComplexObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.StructuralObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.EntityObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.EntityReferenceOfFileMasterjzQAem8p))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.EntityReference))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.RelatedEnd))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.EntityReferenceOfMeetingInfojzQAem8p))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.EntityReferenceOfPresentationInfojzQAem8p))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, System.Nullable<decimal>>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.ServiceFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.EntityKey))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.EntityKeyMember>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<GreenField.DataContracts.MembershipUserInfo>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.DataContracts.MembershipUserInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.DataContracts.EntitySelectionData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.DataContracts.PortfolioSelectionData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.ICPresentationOverviewData>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.ICPresentationOverviewData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.FileMaster>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.FileMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.CommentInfo>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.CommentInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.PresentationInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.MeetingPresentationMappingInfo>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.MeetingPresentationMappingInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.MeetingInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.MeetingAttachedFileInfo>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.MeetingAttachedFileInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.PresentationAttachedFileInfo>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.PresentationAttachedFileInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.VoterInfo>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.VoterInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.MeetingConfigurationSchedule))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.MeetingInfo>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.MeetingMinuteData>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.MeetingMinuteData))]
    public partial class EntityKeyMember : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string KeyField;
        
        private object ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReferenceOfFileMasterjzQAem8p", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    public partial class EntityReferenceOfFileMasterjzQAem8p : GreenField.ServiceCaller.MeetingDefinitions.EntityReference {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReference", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.EntityReferenceOfMeetingInfojzQAem8p))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.EntityReferenceOfPresentationInfojzQAem8p))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.EntityReferenceOfFileMasterjzQAem8p))]
    public partial class EntityReference : GreenField.ServiceCaller.MeetingDefinitions.RelatedEnd {
        
        private GreenField.ServiceCaller.MeetingDefinitions.EntityKey EntityKeyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GreenField.ServiceCaller.MeetingDefinitions.EntityKey EntityKey {
            get {
                return this.EntityKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityKeyField, value) != true)) {
                    this.EntityKeyField = value;
                    this.RaisePropertyChanged("EntityKey");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RelatedEnd", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.EntityReference))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.EntityReferenceOfMeetingInfojzQAem8p))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.EntityReferenceOfPresentationInfojzQAem8p))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.EntityReferenceOfFileMasterjzQAem8p))]
    public partial class RelatedEnd : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReferenceOfMeetingInfojzQAem8p", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    public partial class EntityReferenceOfMeetingInfojzQAem8p : GreenField.ServiceCaller.MeetingDefinitions.EntityReference {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReferenceOfPresentationInfojzQAem8p", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    public partial class EntityReferenceOfPresentationInfojzQAem8p : GreenField.ServiceCaller.MeetingDefinitions.EntityReference {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
    public partial class ServiceFault : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DescriptionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MeetingDefinitions.MeetingOperations")]
    public interface MeetingOperations {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/MeetingOperations/RetrievePresentationOverviewData", ReplyAction="http://tempuri.org/MeetingOperations/RetrievePresentationOverviewDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.ServiceFault), Action="http://tempuri.org/MeetingOperations/RetrievePresentationOverviewDataServiceFault" +
            "Fault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginRetrievePresentationOverviewData(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.ICPresentationOverviewData> EndRetrievePresentationOverviewData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/MeetingOperations/GetUsersByNames", ReplyAction="http://tempuri.org/MeetingOperations/GetUsersByNamesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.ServiceFault), Action="http://tempuri.org/MeetingOperations/GetUsersByNamesServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginGetUsersByNames(System.Collections.Generic.List<string> userNames, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<GreenField.DataContracts.MembershipUserInfo> EndGetUsersByNames(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/MeetingOperations/CreatePresentation", ReplyAction="http://tempuri.org/MeetingOperations/CreatePresentationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.ServiceFault), Action="http://tempuri.org/MeetingOperations/CreatePresentationServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginCreatePresentation(string userName, GreenField.ServiceCaller.MeetingDefinitions.ICPresentationOverviewData presentationOverviewData, System.AsyncCallback callback, object asyncState);
        
        bool EndCreatePresentation(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/MeetingOperations/SetICPPresentationStatus", ReplyAction="http://tempuri.org/MeetingOperations/SetICPPresentationStatusResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.ServiceFault), Action="http://tempuri.org/MeetingOperations/SetICPPresentationStatusServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginSetICPPresentationStatus(string userName, long presentationId, string status, System.AsyncCallback callback, object asyncState);
        
        bool EndSetICPPresentationStatus(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/MeetingOperations/RetrieveSecurityDetails", ReplyAction="http://tempuri.org/MeetingOperations/RetrieveSecurityDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.ServiceFault), Action="http://tempuri.org/MeetingOperations/RetrieveSecurityDetailsServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginRetrieveSecurityDetails(GreenField.DataContracts.EntitySelectionData entitySelectionData, GreenField.ServiceCaller.MeetingDefinitions.ICPresentationOverviewData presentationOverviewData, GreenField.DataContracts.PortfolioSelectionData portfolio, System.AsyncCallback callback, object asyncState);
        
        GreenField.ServiceCaller.MeetingDefinitions.ICPresentationOverviewData EndRetrieveSecurityDetails(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/MeetingOperations/RetrieveCurrentPFVMeasures", ReplyAction="http://tempuri.org/MeetingOperations/RetrieveCurrentPFVMeasuresResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.ServiceFault), Action="http://tempuri.org/MeetingOperations/RetrieveCurrentPFVMeasuresServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginRetrieveCurrentPFVMeasures(System.Collections.Generic.List<string> PFVTypeInfo, string securityTicker, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.Dictionary<string, System.Nullable<decimal>> EndRetrieveCurrentPFVMeasures(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/MeetingOperations/RetrievePresentationAttachedFileDetails", ReplyAction="http://tempuri.org/MeetingOperations/RetrievePresentationAttachedFileDetailsRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.ServiceFault), Action="http://tempuri.org/MeetingOperations/RetrievePresentationAttachedFileDetailsServi" +
            "ceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginRetrievePresentationAttachedFileDetails(System.Nullable<long> presentationID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.FileMaster> EndRetrievePresentationAttachedFileDetails(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/MeetingOperations/UpdatePresentationAttachedFileStreamData", ReplyAction="http://tempuri.org/MeetingOperations/UpdatePresentationAttachedFileStreamDataResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.ServiceFault), Action="http://tempuri.org/MeetingOperations/UpdatePresentationAttachedFileStreamDataServ" +
            "iceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginUpdatePresentationAttachedFileStreamData(string userName, long presentationId, GreenField.ServiceCaller.MeetingDefinitions.FileMaster fileMasterInfo, bool deletionFlag, System.AsyncCallback callback, object asyncState);
        
        bool EndUpdatePresentationAttachedFileStreamData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/MeetingOperations/GetMeetingConfigSchedule", ReplyAction="http://tempuri.org/MeetingOperations/GetMeetingConfigScheduleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.ServiceFault), Action="http://tempuri.org/MeetingOperations/GetMeetingConfigScheduleServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginGetMeetingConfigSchedule(System.AsyncCallback callback, object asyncState);
        
        GreenField.ServiceCaller.MeetingDefinitions.MeetingConfigurationSchedule EndGetMeetingConfigSchedule(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/MeetingOperations/GetAvailablePresentationDates", ReplyAction="http://tempuri.org/MeetingOperations/GetAvailablePresentationDatesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.ServiceFault), Action="http://tempuri.org/MeetingOperations/GetAvailablePresentationDatesServiceFaultFau" +
            "lt", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginGetAvailablePresentationDates(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.MeetingInfo> EndGetAvailablePresentationDates(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/MeetingOperations/UpdateMeetingConfigSchedule", ReplyAction="http://tempuri.org/MeetingOperations/UpdateMeetingConfigScheduleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.ServiceFault), Action="http://tempuri.org/MeetingOperations/UpdateMeetingConfigScheduleServiceFaultFault" +
            "", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginUpdateMeetingConfigSchedule(string userName, GreenField.ServiceCaller.MeetingDefinitions.MeetingConfigurationSchedule meetingConfigurationSchedule, System.AsyncCallback callback, object asyncState);
        
        bool EndUpdateMeetingConfigSchedule(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/MeetingOperations/RetrievePresentationVoterData", ReplyAction="http://tempuri.org/MeetingOperations/RetrievePresentationVoterDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.ServiceFault), Action="http://tempuri.org/MeetingOperations/RetrievePresentationVoterDataServiceFaultFau" +
            "lt", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginRetrievePresentationVoterData(long presentationId, bool includeICAdminInfo, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.VoterInfo> EndRetrievePresentationVoterData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/MeetingOperations/RetrieveSecurityPFVMeasureCurrentPrices", ReplyAction="http://tempuri.org/MeetingOperations/RetrieveSecurityPFVMeasureCurrentPricesRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.ServiceFault), Action="http://tempuri.org/MeetingOperations/RetrieveSecurityPFVMeasureCurrentPricesServi" +
            "ceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginRetrieveSecurityPFVMeasureCurrentPrices(string securityId, System.Collections.Generic.List<string> pfvTypeInfo, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.Dictionary<string, System.Nullable<decimal>> EndRetrieveSecurityPFVMeasureCurrentPrices(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/MeetingOperations/UpdateDecisionEntryDetails", ReplyAction="http://tempuri.org/MeetingOperations/UpdateDecisionEntryDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.ServiceFault), Action="http://tempuri.org/MeetingOperations/UpdateDecisionEntryDetailsServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginUpdateDecisionEntryDetails(string userName, GreenField.ServiceCaller.MeetingDefinitions.ICPresentationOverviewData presentationOverViewData, System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.VoterInfo> voterInfo, System.AsyncCallback callback, object asyncState);
        
        bool EndUpdateDecisionEntryDetails(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/MeetingOperations/RetrieveMeetingInfoByPresentationStatus", ReplyAction="http://tempuri.org/MeetingOperations/RetrieveMeetingInfoByPresentationStatusRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.ServiceFault), Action="http://tempuri.org/MeetingOperations/RetrieveMeetingInfoByPresentationStatusServi" +
            "ceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginRetrieveMeetingInfoByPresentationStatus(string presentationStatus, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.MeetingInfo> EndRetrieveMeetingInfoByPresentationStatus(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/MeetingOperations/RetrieveMeetingMinuteDetails", ReplyAction="http://tempuri.org/MeetingOperations/RetrieveMeetingMinuteDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.ServiceFault), Action="http://tempuri.org/MeetingOperations/RetrieveMeetingMinuteDetailsServiceFaultFaul" +
            "t", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginRetrieveMeetingMinuteDetails(System.Nullable<long> meetingID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.MeetingMinuteData> EndRetrieveMeetingMinuteDetails(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/MeetingOperations/RetrieveMeetingAttachedFileDetails", ReplyAction="http://tempuri.org/MeetingOperations/RetrieveMeetingAttachedFileDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.ServiceFault), Action="http://tempuri.org/MeetingOperations/RetrieveMeetingAttachedFileDetailsServiceFau" +
            "ltFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginRetrieveMeetingAttachedFileDetails(System.Nullable<long> meetingID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.FileMaster> EndRetrieveMeetingAttachedFileDetails(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/MeetingOperations/UpdateMeetingMinuteDetails", ReplyAction="http://tempuri.org/MeetingOperations/UpdateMeetingMinuteDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.ServiceFault), Action="http://tempuri.org/MeetingOperations/UpdateMeetingMinuteDetailsServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginUpdateMeetingMinuteDetails(string userName, GreenField.ServiceCaller.MeetingDefinitions.MeetingInfo meetingInfo, System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.MeetingMinuteData> meetingMinuteData, System.AsyncCallback callback, object asyncState);
        
        bool EndUpdateMeetingMinuteDetails(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/MeetingOperations/UpdateMeetingAttachedFileStreamData", ReplyAction="http://tempuri.org/MeetingOperations/UpdateMeetingAttachedFileStreamDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.ServiceFault), Action="http://tempuri.org/MeetingOperations/UpdateMeetingAttachedFileStreamDataServiceFa" +
            "ultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginUpdateMeetingAttachedFileStreamData(string userName, long meetingId, GreenField.ServiceCaller.MeetingDefinitions.FileMaster fileMasterInfo, bool deletionFlag, System.AsyncCallback callback, object asyncState);
        
        bool EndUpdateMeetingAttachedFileStreamData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/MeetingOperations/SetMeetingPresentationStatus", ReplyAction="http://tempuri.org/MeetingOperations/SetMeetingPresentationStatusResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.ServiceFault), Action="http://tempuri.org/MeetingOperations/SetMeetingPresentationStatusServiceFaultFaul" +
            "t", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginSetMeetingPresentationStatus(string userName, long meetingId, string status, System.AsyncCallback callback, object asyncState);
        
        bool EndSetMeetingPresentationStatus(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/MeetingOperations/GetAllUsers", ReplyAction="http://tempuri.org/MeetingOperations/GetAllUsersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.ServiceFault), Action="http://tempuri.org/MeetingOperations/GetAllUsersServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginGetAllUsers(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<GreenField.DataContracts.MembershipUserInfo> EndGetAllUsers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/MeetingOperations/RetrievePresentationComments", ReplyAction="http://tempuri.org/MeetingOperations/RetrievePresentationCommentsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.ServiceFault), Action="http://tempuri.org/MeetingOperations/RetrievePresentationCommentsServiceFaultFaul" +
            "t", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginRetrievePresentationComments(long presentationId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.CommentInfo> EndRetrievePresentationComments(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/MeetingOperations/SetPresentationComments", ReplyAction="http://tempuri.org/MeetingOperations/SetPresentationCommentsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.ServiceFault), Action="http://tempuri.org/MeetingOperations/SetPresentationCommentsServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginSetPresentationComments(string userName, long presentationId, string comment, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.CommentInfo> EndSetPresentationComments(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/MeetingOperations/UpdatePreMeetingVoteDetails", ReplyAction="http://tempuri.org/MeetingOperations/UpdatePreMeetingVoteDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.ServiceFault), Action="http://tempuri.org/MeetingOperations/UpdatePreMeetingVoteDetailsServiceFaultFault" +
            "", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginUpdatePreMeetingVoteDetails(string userName, System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.VoterInfo> voterInfo, System.AsyncCallback callback, object asyncState);
        
        bool EndUpdatePreMeetingVoteDetails(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/MeetingOperations/UpdateMeetingPresentationDate", ReplyAction="http://tempuri.org/MeetingOperations/UpdateMeetingPresentationDateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.ServiceFault), Action="http://tempuri.org/MeetingOperations/UpdateMeetingPresentationDateServiceFaultFau" +
            "lt", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginUpdateMeetingPresentationDate(string userName, long presentationId, GreenField.ServiceCaller.MeetingDefinitions.MeetingInfo meetingInfo, System.AsyncCallback callback, object asyncState);
        
        bool EndUpdateMeetingPresentationDate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/MeetingOperations/SetMessageInfo", ReplyAction="http://tempuri.org/MeetingOperations/SetMessageInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GreenField.ServiceCaller.MeetingDefinitions.ServiceFault), Action="http://tempuri.org/MeetingOperations/SetMessageInfoServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.Helpers.Service_Faults")]
        System.IAsyncResult BeginSetMessageInfo(string emailTo, string emailCc, string emailSubject, string emailMessageBody, string emailAttachment, string userName, System.AsyncCallback callback, object asyncState);
        
        bool EndSetMessageInfo(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface MeetingOperationsChannel : GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrievePresentationOverviewDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrievePresentationOverviewDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.ICPresentationOverviewData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.ICPresentationOverviewData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUsersByNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUsersByNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<GreenField.DataContracts.MembershipUserInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<GreenField.DataContracts.MembershipUserInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreatePresentationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreatePresentationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetICPPresentationStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetICPPresentationStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrieveSecurityDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrieveSecurityDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public GreenField.ServiceCaller.MeetingDefinitions.ICPresentationOverviewData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((GreenField.ServiceCaller.MeetingDefinitions.ICPresentationOverviewData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrieveCurrentPFVMeasuresCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrieveCurrentPFVMeasuresCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.Dictionary<string, System.Nullable<decimal>> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<string, System.Nullable<decimal>>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrievePresentationAttachedFileDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrievePresentationAttachedFileDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.FileMaster> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.FileMaster>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdatePresentationAttachedFileStreamDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdatePresentationAttachedFileStreamDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMeetingConfigScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMeetingConfigScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public GreenField.ServiceCaller.MeetingDefinitions.MeetingConfigurationSchedule Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((GreenField.ServiceCaller.MeetingDefinitions.MeetingConfigurationSchedule)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAvailablePresentationDatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAvailablePresentationDatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.MeetingInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.MeetingInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateMeetingConfigScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateMeetingConfigScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrievePresentationVoterDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrievePresentationVoterDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.VoterInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.VoterInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrieveSecurityPFVMeasureCurrentPricesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrieveSecurityPFVMeasureCurrentPricesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.Dictionary<string, System.Nullable<decimal>> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<string, System.Nullable<decimal>>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateDecisionEntryDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateDecisionEntryDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrieveMeetingInfoByPresentationStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrieveMeetingInfoByPresentationStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.MeetingInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.MeetingInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrieveMeetingMinuteDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrieveMeetingMinuteDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.MeetingMinuteData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.MeetingMinuteData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrieveMeetingAttachedFileDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrieveMeetingAttachedFileDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.FileMaster> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.FileMaster>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateMeetingMinuteDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateMeetingMinuteDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateMeetingAttachedFileStreamDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateMeetingAttachedFileStreamDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetMeetingPresentationStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetMeetingPresentationStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<GreenField.DataContracts.MembershipUserInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<GreenField.DataContracts.MembershipUserInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrievePresentationCommentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrievePresentationCommentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.CommentInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.CommentInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetPresentationCommentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetPresentationCommentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.CommentInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.CommentInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdatePreMeetingVoteDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdatePreMeetingVoteDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateMeetingPresentationDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateMeetingPresentationDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetMessageInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetMessageInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MeetingOperationsClient : System.ServiceModel.ClientBase<GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations>, GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations {
        
        private BeginOperationDelegate onBeginRetrievePresentationOverviewDataDelegate;
        
        private EndOperationDelegate onEndRetrievePresentationOverviewDataDelegate;
        
        private System.Threading.SendOrPostCallback onRetrievePresentationOverviewDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUsersByNamesDelegate;
        
        private EndOperationDelegate onEndGetUsersByNamesDelegate;
        
        private System.Threading.SendOrPostCallback onGetUsersByNamesCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreatePresentationDelegate;
        
        private EndOperationDelegate onEndCreatePresentationDelegate;
        
        private System.Threading.SendOrPostCallback onCreatePresentationCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetICPPresentationStatusDelegate;
        
        private EndOperationDelegate onEndSetICPPresentationStatusDelegate;
        
        private System.Threading.SendOrPostCallback onSetICPPresentationStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrieveSecurityDetailsDelegate;
        
        private EndOperationDelegate onEndRetrieveSecurityDetailsDelegate;
        
        private System.Threading.SendOrPostCallback onRetrieveSecurityDetailsCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrieveCurrentPFVMeasuresDelegate;
        
        private EndOperationDelegate onEndRetrieveCurrentPFVMeasuresDelegate;
        
        private System.Threading.SendOrPostCallback onRetrieveCurrentPFVMeasuresCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrievePresentationAttachedFileDetailsDelegate;
        
        private EndOperationDelegate onEndRetrievePresentationAttachedFileDetailsDelegate;
        
        private System.Threading.SendOrPostCallback onRetrievePresentationAttachedFileDetailsCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdatePresentationAttachedFileStreamDataDelegate;
        
        private EndOperationDelegate onEndUpdatePresentationAttachedFileStreamDataDelegate;
        
        private System.Threading.SendOrPostCallback onUpdatePresentationAttachedFileStreamDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMeetingConfigScheduleDelegate;
        
        private EndOperationDelegate onEndGetMeetingConfigScheduleDelegate;
        
        private System.Threading.SendOrPostCallback onGetMeetingConfigScheduleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAvailablePresentationDatesDelegate;
        
        private EndOperationDelegate onEndGetAvailablePresentationDatesDelegate;
        
        private System.Threading.SendOrPostCallback onGetAvailablePresentationDatesCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateMeetingConfigScheduleDelegate;
        
        private EndOperationDelegate onEndUpdateMeetingConfigScheduleDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateMeetingConfigScheduleCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrievePresentationVoterDataDelegate;
        
        private EndOperationDelegate onEndRetrievePresentationVoterDataDelegate;
        
        private System.Threading.SendOrPostCallback onRetrievePresentationVoterDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrieveSecurityPFVMeasureCurrentPricesDelegate;
        
        private EndOperationDelegate onEndRetrieveSecurityPFVMeasureCurrentPricesDelegate;
        
        private System.Threading.SendOrPostCallback onRetrieveSecurityPFVMeasureCurrentPricesCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateDecisionEntryDetailsDelegate;
        
        private EndOperationDelegate onEndUpdateDecisionEntryDetailsDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateDecisionEntryDetailsCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrieveMeetingInfoByPresentationStatusDelegate;
        
        private EndOperationDelegate onEndRetrieveMeetingInfoByPresentationStatusDelegate;
        
        private System.Threading.SendOrPostCallback onRetrieveMeetingInfoByPresentationStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrieveMeetingMinuteDetailsDelegate;
        
        private EndOperationDelegate onEndRetrieveMeetingMinuteDetailsDelegate;
        
        private System.Threading.SendOrPostCallback onRetrieveMeetingMinuteDetailsCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrieveMeetingAttachedFileDetailsDelegate;
        
        private EndOperationDelegate onEndRetrieveMeetingAttachedFileDetailsDelegate;
        
        private System.Threading.SendOrPostCallback onRetrieveMeetingAttachedFileDetailsCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateMeetingMinuteDetailsDelegate;
        
        private EndOperationDelegate onEndUpdateMeetingMinuteDetailsDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateMeetingMinuteDetailsCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateMeetingAttachedFileStreamDataDelegate;
        
        private EndOperationDelegate onEndUpdateMeetingAttachedFileStreamDataDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateMeetingAttachedFileStreamDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetMeetingPresentationStatusDelegate;
        
        private EndOperationDelegate onEndSetMeetingPresentationStatusDelegate;
        
        private System.Threading.SendOrPostCallback onSetMeetingPresentationStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllUsersDelegate;
        
        private EndOperationDelegate onEndGetAllUsersDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllUsersCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrievePresentationCommentsDelegate;
        
        private EndOperationDelegate onEndRetrievePresentationCommentsDelegate;
        
        private System.Threading.SendOrPostCallback onRetrievePresentationCommentsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetPresentationCommentsDelegate;
        
        private EndOperationDelegate onEndSetPresentationCommentsDelegate;
        
        private System.Threading.SendOrPostCallback onSetPresentationCommentsCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdatePreMeetingVoteDetailsDelegate;
        
        private EndOperationDelegate onEndUpdatePreMeetingVoteDetailsDelegate;
        
        private System.Threading.SendOrPostCallback onUpdatePreMeetingVoteDetailsCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateMeetingPresentationDateDelegate;
        
        private EndOperationDelegate onEndUpdateMeetingPresentationDateDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateMeetingPresentationDateCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetMessageInfoDelegate;
        
        private EndOperationDelegate onEndSetMessageInfoDelegate;
        
        private System.Threading.SendOrPostCallback onSetMessageInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public MeetingOperationsClient() {
        }
        
        public MeetingOperationsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MeetingOperationsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MeetingOperationsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MeetingOperationsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<RetrievePresentationOverviewDataCompletedEventArgs> RetrievePresentationOverviewDataCompleted;
        
        public event System.EventHandler<GetUsersByNamesCompletedEventArgs> GetUsersByNamesCompleted;
        
        public event System.EventHandler<CreatePresentationCompletedEventArgs> CreatePresentationCompleted;
        
        public event System.EventHandler<SetICPPresentationStatusCompletedEventArgs> SetICPPresentationStatusCompleted;
        
        public event System.EventHandler<RetrieveSecurityDetailsCompletedEventArgs> RetrieveSecurityDetailsCompleted;
        
        public event System.EventHandler<RetrieveCurrentPFVMeasuresCompletedEventArgs> RetrieveCurrentPFVMeasuresCompleted;
        
        public event System.EventHandler<RetrievePresentationAttachedFileDetailsCompletedEventArgs> RetrievePresentationAttachedFileDetailsCompleted;
        
        public event System.EventHandler<UpdatePresentationAttachedFileStreamDataCompletedEventArgs> UpdatePresentationAttachedFileStreamDataCompleted;
        
        public event System.EventHandler<GetMeetingConfigScheduleCompletedEventArgs> GetMeetingConfigScheduleCompleted;
        
        public event System.EventHandler<GetAvailablePresentationDatesCompletedEventArgs> GetAvailablePresentationDatesCompleted;
        
        public event System.EventHandler<UpdateMeetingConfigScheduleCompletedEventArgs> UpdateMeetingConfigScheduleCompleted;
        
        public event System.EventHandler<RetrievePresentationVoterDataCompletedEventArgs> RetrievePresentationVoterDataCompleted;
        
        public event System.EventHandler<RetrieveSecurityPFVMeasureCurrentPricesCompletedEventArgs> RetrieveSecurityPFVMeasureCurrentPricesCompleted;
        
        public event System.EventHandler<UpdateDecisionEntryDetailsCompletedEventArgs> UpdateDecisionEntryDetailsCompleted;
        
        public event System.EventHandler<RetrieveMeetingInfoByPresentationStatusCompletedEventArgs> RetrieveMeetingInfoByPresentationStatusCompleted;
        
        public event System.EventHandler<RetrieveMeetingMinuteDetailsCompletedEventArgs> RetrieveMeetingMinuteDetailsCompleted;
        
        public event System.EventHandler<RetrieveMeetingAttachedFileDetailsCompletedEventArgs> RetrieveMeetingAttachedFileDetailsCompleted;
        
        public event System.EventHandler<UpdateMeetingMinuteDetailsCompletedEventArgs> UpdateMeetingMinuteDetailsCompleted;
        
        public event System.EventHandler<UpdateMeetingAttachedFileStreamDataCompletedEventArgs> UpdateMeetingAttachedFileStreamDataCompleted;
        
        public event System.EventHandler<SetMeetingPresentationStatusCompletedEventArgs> SetMeetingPresentationStatusCompleted;
        
        public event System.EventHandler<GetAllUsersCompletedEventArgs> GetAllUsersCompleted;
        
        public event System.EventHandler<RetrievePresentationCommentsCompletedEventArgs> RetrievePresentationCommentsCompleted;
        
        public event System.EventHandler<SetPresentationCommentsCompletedEventArgs> SetPresentationCommentsCompleted;
        
        public event System.EventHandler<UpdatePreMeetingVoteDetailsCompletedEventArgs> UpdatePreMeetingVoteDetailsCompleted;
        
        public event System.EventHandler<UpdateMeetingPresentationDateCompletedEventArgs> UpdateMeetingPresentationDateCompleted;
        
        public event System.EventHandler<SetMessageInfoCompletedEventArgs> SetMessageInfoCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations.BeginRetrievePresentationOverviewData(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrievePresentationOverviewData(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.ICPresentationOverviewData> GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations.EndRetrievePresentationOverviewData(System.IAsyncResult result) {
            return base.Channel.EndRetrievePresentationOverviewData(result);
        }
        
        private System.IAsyncResult OnBeginRetrievePresentationOverviewData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations)(this)).BeginRetrievePresentationOverviewData(callback, asyncState);
        }
        
        private object[] OnEndRetrievePresentationOverviewData(System.IAsyncResult result) {
            System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.ICPresentationOverviewData> retVal = ((GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations)(this)).EndRetrievePresentationOverviewData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrievePresentationOverviewDataCompleted(object state) {
            if ((this.RetrievePresentationOverviewDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrievePresentationOverviewDataCompleted(this, new RetrievePresentationOverviewDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrievePresentationOverviewDataAsync() {
            this.RetrievePresentationOverviewDataAsync(null);
        }
        
        public void RetrievePresentationOverviewDataAsync(object userState) {
            if ((this.onBeginRetrievePresentationOverviewDataDelegate == null)) {
                this.onBeginRetrievePresentationOverviewDataDelegate = new BeginOperationDelegate(this.OnBeginRetrievePresentationOverviewData);
            }
            if ((this.onEndRetrievePresentationOverviewDataDelegate == null)) {
                this.onEndRetrievePresentationOverviewDataDelegate = new EndOperationDelegate(this.OnEndRetrievePresentationOverviewData);
            }
            if ((this.onRetrievePresentationOverviewDataCompletedDelegate == null)) {
                this.onRetrievePresentationOverviewDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrievePresentationOverviewDataCompleted);
            }
            base.InvokeAsync(this.onBeginRetrievePresentationOverviewDataDelegate, null, this.onEndRetrievePresentationOverviewDataDelegate, this.onRetrievePresentationOverviewDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations.BeginGetUsersByNames(System.Collections.Generic.List<string> userNames, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUsersByNames(userNames, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<GreenField.DataContracts.MembershipUserInfo> GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations.EndGetUsersByNames(System.IAsyncResult result) {
            return base.Channel.EndGetUsersByNames(result);
        }
        
        private System.IAsyncResult OnBeginGetUsersByNames(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<string> userNames = ((System.Collections.Generic.List<string>)(inValues[0]));
            return ((GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations)(this)).BeginGetUsersByNames(userNames, callback, asyncState);
        }
        
        private object[] OnEndGetUsersByNames(System.IAsyncResult result) {
            System.Collections.Generic.List<GreenField.DataContracts.MembershipUserInfo> retVal = ((GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations)(this)).EndGetUsersByNames(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUsersByNamesCompleted(object state) {
            if ((this.GetUsersByNamesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUsersByNamesCompleted(this, new GetUsersByNamesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUsersByNamesAsync(System.Collections.Generic.List<string> userNames) {
            this.GetUsersByNamesAsync(userNames, null);
        }
        
        public void GetUsersByNamesAsync(System.Collections.Generic.List<string> userNames, object userState) {
            if ((this.onBeginGetUsersByNamesDelegate == null)) {
                this.onBeginGetUsersByNamesDelegate = new BeginOperationDelegate(this.OnBeginGetUsersByNames);
            }
            if ((this.onEndGetUsersByNamesDelegate == null)) {
                this.onEndGetUsersByNamesDelegate = new EndOperationDelegate(this.OnEndGetUsersByNames);
            }
            if ((this.onGetUsersByNamesCompletedDelegate == null)) {
                this.onGetUsersByNamesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUsersByNamesCompleted);
            }
            base.InvokeAsync(this.onBeginGetUsersByNamesDelegate, new object[] {
                        userNames}, this.onEndGetUsersByNamesDelegate, this.onGetUsersByNamesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations.BeginCreatePresentation(string userName, GreenField.ServiceCaller.MeetingDefinitions.ICPresentationOverviewData presentationOverviewData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreatePresentation(userName, presentationOverviewData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations.EndCreatePresentation(System.IAsyncResult result) {
            return base.Channel.EndCreatePresentation(result);
        }
        
        private System.IAsyncResult OnBeginCreatePresentation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            GreenField.ServiceCaller.MeetingDefinitions.ICPresentationOverviewData presentationOverviewData = ((GreenField.ServiceCaller.MeetingDefinitions.ICPresentationOverviewData)(inValues[1]));
            return ((GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations)(this)).BeginCreatePresentation(userName, presentationOverviewData, callback, asyncState);
        }
        
        private object[] OnEndCreatePresentation(System.IAsyncResult result) {
            bool retVal = ((GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations)(this)).EndCreatePresentation(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreatePresentationCompleted(object state) {
            if ((this.CreatePresentationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreatePresentationCompleted(this, new CreatePresentationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreatePresentationAsync(string userName, GreenField.ServiceCaller.MeetingDefinitions.ICPresentationOverviewData presentationOverviewData) {
            this.CreatePresentationAsync(userName, presentationOverviewData, null);
        }
        
        public void CreatePresentationAsync(string userName, GreenField.ServiceCaller.MeetingDefinitions.ICPresentationOverviewData presentationOverviewData, object userState) {
            if ((this.onBeginCreatePresentationDelegate == null)) {
                this.onBeginCreatePresentationDelegate = new BeginOperationDelegate(this.OnBeginCreatePresentation);
            }
            if ((this.onEndCreatePresentationDelegate == null)) {
                this.onEndCreatePresentationDelegate = new EndOperationDelegate(this.OnEndCreatePresentation);
            }
            if ((this.onCreatePresentationCompletedDelegate == null)) {
                this.onCreatePresentationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreatePresentationCompleted);
            }
            base.InvokeAsync(this.onBeginCreatePresentationDelegate, new object[] {
                        userName,
                        presentationOverviewData}, this.onEndCreatePresentationDelegate, this.onCreatePresentationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations.BeginSetICPPresentationStatus(string userName, long presentationId, string status, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetICPPresentationStatus(userName, presentationId, status, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations.EndSetICPPresentationStatus(System.IAsyncResult result) {
            return base.Channel.EndSetICPPresentationStatus(result);
        }
        
        private System.IAsyncResult OnBeginSetICPPresentationStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            long presentationId = ((long)(inValues[1]));
            string status = ((string)(inValues[2]));
            return ((GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations)(this)).BeginSetICPPresentationStatus(userName, presentationId, status, callback, asyncState);
        }
        
        private object[] OnEndSetICPPresentationStatus(System.IAsyncResult result) {
            bool retVal = ((GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations)(this)).EndSetICPPresentationStatus(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetICPPresentationStatusCompleted(object state) {
            if ((this.SetICPPresentationStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetICPPresentationStatusCompleted(this, new SetICPPresentationStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetICPPresentationStatusAsync(string userName, long presentationId, string status) {
            this.SetICPPresentationStatusAsync(userName, presentationId, status, null);
        }
        
        public void SetICPPresentationStatusAsync(string userName, long presentationId, string status, object userState) {
            if ((this.onBeginSetICPPresentationStatusDelegate == null)) {
                this.onBeginSetICPPresentationStatusDelegate = new BeginOperationDelegate(this.OnBeginSetICPPresentationStatus);
            }
            if ((this.onEndSetICPPresentationStatusDelegate == null)) {
                this.onEndSetICPPresentationStatusDelegate = new EndOperationDelegate(this.OnEndSetICPPresentationStatus);
            }
            if ((this.onSetICPPresentationStatusCompletedDelegate == null)) {
                this.onSetICPPresentationStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetICPPresentationStatusCompleted);
            }
            base.InvokeAsync(this.onBeginSetICPPresentationStatusDelegate, new object[] {
                        userName,
                        presentationId,
                        status}, this.onEndSetICPPresentationStatusDelegate, this.onSetICPPresentationStatusCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations.BeginRetrieveSecurityDetails(GreenField.DataContracts.EntitySelectionData entitySelectionData, GreenField.ServiceCaller.MeetingDefinitions.ICPresentationOverviewData presentationOverviewData, GreenField.DataContracts.PortfolioSelectionData portfolio, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrieveSecurityDetails(entitySelectionData, presentationOverviewData, portfolio, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GreenField.ServiceCaller.MeetingDefinitions.ICPresentationOverviewData GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations.EndRetrieveSecurityDetails(System.IAsyncResult result) {
            return base.Channel.EndRetrieveSecurityDetails(result);
        }
        
        private System.IAsyncResult OnBeginRetrieveSecurityDetails(object[] inValues, System.AsyncCallback callback, object asyncState) {
            GreenField.DataContracts.EntitySelectionData entitySelectionData = ((GreenField.DataContracts.EntitySelectionData)(inValues[0]));
            GreenField.ServiceCaller.MeetingDefinitions.ICPresentationOverviewData presentationOverviewData = ((GreenField.ServiceCaller.MeetingDefinitions.ICPresentationOverviewData)(inValues[1]));
            GreenField.DataContracts.PortfolioSelectionData portfolio = ((GreenField.DataContracts.PortfolioSelectionData)(inValues[2]));
            return ((GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations)(this)).BeginRetrieveSecurityDetails(entitySelectionData, presentationOverviewData, portfolio, callback, asyncState);
        }
        
        private object[] OnEndRetrieveSecurityDetails(System.IAsyncResult result) {
            GreenField.ServiceCaller.MeetingDefinitions.ICPresentationOverviewData retVal = ((GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations)(this)).EndRetrieveSecurityDetails(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrieveSecurityDetailsCompleted(object state) {
            if ((this.RetrieveSecurityDetailsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrieveSecurityDetailsCompleted(this, new RetrieveSecurityDetailsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrieveSecurityDetailsAsync(GreenField.DataContracts.EntitySelectionData entitySelectionData, GreenField.ServiceCaller.MeetingDefinitions.ICPresentationOverviewData presentationOverviewData, GreenField.DataContracts.PortfolioSelectionData portfolio) {
            this.RetrieveSecurityDetailsAsync(entitySelectionData, presentationOverviewData, portfolio, null);
        }
        
        public void RetrieveSecurityDetailsAsync(GreenField.DataContracts.EntitySelectionData entitySelectionData, GreenField.ServiceCaller.MeetingDefinitions.ICPresentationOverviewData presentationOverviewData, GreenField.DataContracts.PortfolioSelectionData portfolio, object userState) {
            if ((this.onBeginRetrieveSecurityDetailsDelegate == null)) {
                this.onBeginRetrieveSecurityDetailsDelegate = new BeginOperationDelegate(this.OnBeginRetrieveSecurityDetails);
            }
            if ((this.onEndRetrieveSecurityDetailsDelegate == null)) {
                this.onEndRetrieveSecurityDetailsDelegate = new EndOperationDelegate(this.OnEndRetrieveSecurityDetails);
            }
            if ((this.onRetrieveSecurityDetailsCompletedDelegate == null)) {
                this.onRetrieveSecurityDetailsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrieveSecurityDetailsCompleted);
            }
            base.InvokeAsync(this.onBeginRetrieveSecurityDetailsDelegate, new object[] {
                        entitySelectionData,
                        presentationOverviewData,
                        portfolio}, this.onEndRetrieveSecurityDetailsDelegate, this.onRetrieveSecurityDetailsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations.BeginRetrieveCurrentPFVMeasures(System.Collections.Generic.List<string> PFVTypeInfo, string securityTicker, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrieveCurrentPFVMeasures(PFVTypeInfo, securityTicker, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.Dictionary<string, System.Nullable<decimal>> GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations.EndRetrieveCurrentPFVMeasures(System.IAsyncResult result) {
            return base.Channel.EndRetrieveCurrentPFVMeasures(result);
        }
        
        private System.IAsyncResult OnBeginRetrieveCurrentPFVMeasures(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<string> PFVTypeInfo = ((System.Collections.Generic.List<string>)(inValues[0]));
            string securityTicker = ((string)(inValues[1]));
            return ((GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations)(this)).BeginRetrieveCurrentPFVMeasures(PFVTypeInfo, securityTicker, callback, asyncState);
        }
        
        private object[] OnEndRetrieveCurrentPFVMeasures(System.IAsyncResult result) {
            System.Collections.Generic.Dictionary<string, System.Nullable<decimal>> retVal = ((GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations)(this)).EndRetrieveCurrentPFVMeasures(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrieveCurrentPFVMeasuresCompleted(object state) {
            if ((this.RetrieveCurrentPFVMeasuresCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrieveCurrentPFVMeasuresCompleted(this, new RetrieveCurrentPFVMeasuresCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrieveCurrentPFVMeasuresAsync(System.Collections.Generic.List<string> PFVTypeInfo, string securityTicker) {
            this.RetrieveCurrentPFVMeasuresAsync(PFVTypeInfo, securityTicker, null);
        }
        
        public void RetrieveCurrentPFVMeasuresAsync(System.Collections.Generic.List<string> PFVTypeInfo, string securityTicker, object userState) {
            if ((this.onBeginRetrieveCurrentPFVMeasuresDelegate == null)) {
                this.onBeginRetrieveCurrentPFVMeasuresDelegate = new BeginOperationDelegate(this.OnBeginRetrieveCurrentPFVMeasures);
            }
            if ((this.onEndRetrieveCurrentPFVMeasuresDelegate == null)) {
                this.onEndRetrieveCurrentPFVMeasuresDelegate = new EndOperationDelegate(this.OnEndRetrieveCurrentPFVMeasures);
            }
            if ((this.onRetrieveCurrentPFVMeasuresCompletedDelegate == null)) {
                this.onRetrieveCurrentPFVMeasuresCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrieveCurrentPFVMeasuresCompleted);
            }
            base.InvokeAsync(this.onBeginRetrieveCurrentPFVMeasuresDelegate, new object[] {
                        PFVTypeInfo,
                        securityTicker}, this.onEndRetrieveCurrentPFVMeasuresDelegate, this.onRetrieveCurrentPFVMeasuresCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations.BeginRetrievePresentationAttachedFileDetails(System.Nullable<long> presentationID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrievePresentationAttachedFileDetails(presentationID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.FileMaster> GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations.EndRetrievePresentationAttachedFileDetails(System.IAsyncResult result) {
            return base.Channel.EndRetrievePresentationAttachedFileDetails(result);
        }
        
        private System.IAsyncResult OnBeginRetrievePresentationAttachedFileDetails(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Nullable<long> presentationID = ((System.Nullable<long>)(inValues[0]));
            return ((GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations)(this)).BeginRetrievePresentationAttachedFileDetails(presentationID, callback, asyncState);
        }
        
        private object[] OnEndRetrievePresentationAttachedFileDetails(System.IAsyncResult result) {
            System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.FileMaster> retVal = ((GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations)(this)).EndRetrievePresentationAttachedFileDetails(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrievePresentationAttachedFileDetailsCompleted(object state) {
            if ((this.RetrievePresentationAttachedFileDetailsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrievePresentationAttachedFileDetailsCompleted(this, new RetrievePresentationAttachedFileDetailsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrievePresentationAttachedFileDetailsAsync(System.Nullable<long> presentationID) {
            this.RetrievePresentationAttachedFileDetailsAsync(presentationID, null);
        }
        
        public void RetrievePresentationAttachedFileDetailsAsync(System.Nullable<long> presentationID, object userState) {
            if ((this.onBeginRetrievePresentationAttachedFileDetailsDelegate == null)) {
                this.onBeginRetrievePresentationAttachedFileDetailsDelegate = new BeginOperationDelegate(this.OnBeginRetrievePresentationAttachedFileDetails);
            }
            if ((this.onEndRetrievePresentationAttachedFileDetailsDelegate == null)) {
                this.onEndRetrievePresentationAttachedFileDetailsDelegate = new EndOperationDelegate(this.OnEndRetrievePresentationAttachedFileDetails);
            }
            if ((this.onRetrievePresentationAttachedFileDetailsCompletedDelegate == null)) {
                this.onRetrievePresentationAttachedFileDetailsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrievePresentationAttachedFileDetailsCompleted);
            }
            base.InvokeAsync(this.onBeginRetrievePresentationAttachedFileDetailsDelegate, new object[] {
                        presentationID}, this.onEndRetrievePresentationAttachedFileDetailsDelegate, this.onRetrievePresentationAttachedFileDetailsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations.BeginUpdatePresentationAttachedFileStreamData(string userName, long presentationId, GreenField.ServiceCaller.MeetingDefinitions.FileMaster fileMasterInfo, bool deletionFlag, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdatePresentationAttachedFileStreamData(userName, presentationId, fileMasterInfo, deletionFlag, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations.EndUpdatePresentationAttachedFileStreamData(System.IAsyncResult result) {
            return base.Channel.EndUpdatePresentationAttachedFileStreamData(result);
        }
        
        private System.IAsyncResult OnBeginUpdatePresentationAttachedFileStreamData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            long presentationId = ((long)(inValues[1]));
            GreenField.ServiceCaller.MeetingDefinitions.FileMaster fileMasterInfo = ((GreenField.ServiceCaller.MeetingDefinitions.FileMaster)(inValues[2]));
            bool deletionFlag = ((bool)(inValues[3]));
            return ((GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations)(this)).BeginUpdatePresentationAttachedFileStreamData(userName, presentationId, fileMasterInfo, deletionFlag, callback, asyncState);
        }
        
        private object[] OnEndUpdatePresentationAttachedFileStreamData(System.IAsyncResult result) {
            bool retVal = ((GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations)(this)).EndUpdatePresentationAttachedFileStreamData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdatePresentationAttachedFileStreamDataCompleted(object state) {
            if ((this.UpdatePresentationAttachedFileStreamDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdatePresentationAttachedFileStreamDataCompleted(this, new UpdatePresentationAttachedFileStreamDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdatePresentationAttachedFileStreamDataAsync(string userName, long presentationId, GreenField.ServiceCaller.MeetingDefinitions.FileMaster fileMasterInfo, bool deletionFlag) {
            this.UpdatePresentationAttachedFileStreamDataAsync(userName, presentationId, fileMasterInfo, deletionFlag, null);
        }
        
        public void UpdatePresentationAttachedFileStreamDataAsync(string userName, long presentationId, GreenField.ServiceCaller.MeetingDefinitions.FileMaster fileMasterInfo, bool deletionFlag, object userState) {
            if ((this.onBeginUpdatePresentationAttachedFileStreamDataDelegate == null)) {
                this.onBeginUpdatePresentationAttachedFileStreamDataDelegate = new BeginOperationDelegate(this.OnBeginUpdatePresentationAttachedFileStreamData);
            }
            if ((this.onEndUpdatePresentationAttachedFileStreamDataDelegate == null)) {
                this.onEndUpdatePresentationAttachedFileStreamDataDelegate = new EndOperationDelegate(this.OnEndUpdatePresentationAttachedFileStreamData);
            }
            if ((this.onUpdatePresentationAttachedFileStreamDataCompletedDelegate == null)) {
                this.onUpdatePresentationAttachedFileStreamDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdatePresentationAttachedFileStreamDataCompleted);
            }
            base.InvokeAsync(this.onBeginUpdatePresentationAttachedFileStreamDataDelegate, new object[] {
                        userName,
                        presentationId,
                        fileMasterInfo,
                        deletionFlag}, this.onEndUpdatePresentationAttachedFileStreamDataDelegate, this.onUpdatePresentationAttachedFileStreamDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations.BeginGetMeetingConfigSchedule(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMeetingConfigSchedule(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GreenField.ServiceCaller.MeetingDefinitions.MeetingConfigurationSchedule GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations.EndGetMeetingConfigSchedule(System.IAsyncResult result) {
            return base.Channel.EndGetMeetingConfigSchedule(result);
        }
        
        private System.IAsyncResult OnBeginGetMeetingConfigSchedule(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations)(this)).BeginGetMeetingConfigSchedule(callback, asyncState);
        }
        
        private object[] OnEndGetMeetingConfigSchedule(System.IAsyncResult result) {
            GreenField.ServiceCaller.MeetingDefinitions.MeetingConfigurationSchedule retVal = ((GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations)(this)).EndGetMeetingConfigSchedule(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMeetingConfigScheduleCompleted(object state) {
            if ((this.GetMeetingConfigScheduleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMeetingConfigScheduleCompleted(this, new GetMeetingConfigScheduleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMeetingConfigScheduleAsync() {
            this.GetMeetingConfigScheduleAsync(null);
        }
        
        public void GetMeetingConfigScheduleAsync(object userState) {
            if ((this.onBeginGetMeetingConfigScheduleDelegate == null)) {
                this.onBeginGetMeetingConfigScheduleDelegate = new BeginOperationDelegate(this.OnBeginGetMeetingConfigSchedule);
            }
            if ((this.onEndGetMeetingConfigScheduleDelegate == null)) {
                this.onEndGetMeetingConfigScheduleDelegate = new EndOperationDelegate(this.OnEndGetMeetingConfigSchedule);
            }
            if ((this.onGetMeetingConfigScheduleCompletedDelegate == null)) {
                this.onGetMeetingConfigScheduleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMeetingConfigScheduleCompleted);
            }
            base.InvokeAsync(this.onBeginGetMeetingConfigScheduleDelegate, null, this.onEndGetMeetingConfigScheduleDelegate, this.onGetMeetingConfigScheduleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations.BeginGetAvailablePresentationDates(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAvailablePresentationDates(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.MeetingInfo> GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations.EndGetAvailablePresentationDates(System.IAsyncResult result) {
            return base.Channel.EndGetAvailablePresentationDates(result);
        }
        
        private System.IAsyncResult OnBeginGetAvailablePresentationDates(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations)(this)).BeginGetAvailablePresentationDates(callback, asyncState);
        }
        
        private object[] OnEndGetAvailablePresentationDates(System.IAsyncResult result) {
            System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.MeetingInfo> retVal = ((GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations)(this)).EndGetAvailablePresentationDates(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAvailablePresentationDatesCompleted(object state) {
            if ((this.GetAvailablePresentationDatesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAvailablePresentationDatesCompleted(this, new GetAvailablePresentationDatesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAvailablePresentationDatesAsync() {
            this.GetAvailablePresentationDatesAsync(null);
        }
        
        public void GetAvailablePresentationDatesAsync(object userState) {
            if ((this.onBeginGetAvailablePresentationDatesDelegate == null)) {
                this.onBeginGetAvailablePresentationDatesDelegate = new BeginOperationDelegate(this.OnBeginGetAvailablePresentationDates);
            }
            if ((this.onEndGetAvailablePresentationDatesDelegate == null)) {
                this.onEndGetAvailablePresentationDatesDelegate = new EndOperationDelegate(this.OnEndGetAvailablePresentationDates);
            }
            if ((this.onGetAvailablePresentationDatesCompletedDelegate == null)) {
                this.onGetAvailablePresentationDatesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAvailablePresentationDatesCompleted);
            }
            base.InvokeAsync(this.onBeginGetAvailablePresentationDatesDelegate, null, this.onEndGetAvailablePresentationDatesDelegate, this.onGetAvailablePresentationDatesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations.BeginUpdateMeetingConfigSchedule(string userName, GreenField.ServiceCaller.MeetingDefinitions.MeetingConfigurationSchedule meetingConfigurationSchedule, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateMeetingConfigSchedule(userName, meetingConfigurationSchedule, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations.EndUpdateMeetingConfigSchedule(System.IAsyncResult result) {
            return base.Channel.EndUpdateMeetingConfigSchedule(result);
        }
        
        private System.IAsyncResult OnBeginUpdateMeetingConfigSchedule(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            GreenField.ServiceCaller.MeetingDefinitions.MeetingConfigurationSchedule meetingConfigurationSchedule = ((GreenField.ServiceCaller.MeetingDefinitions.MeetingConfigurationSchedule)(inValues[1]));
            return ((GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations)(this)).BeginUpdateMeetingConfigSchedule(userName, meetingConfigurationSchedule, callback, asyncState);
        }
        
        private object[] OnEndUpdateMeetingConfigSchedule(System.IAsyncResult result) {
            bool retVal = ((GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations)(this)).EndUpdateMeetingConfigSchedule(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateMeetingConfigScheduleCompleted(object state) {
            if ((this.UpdateMeetingConfigScheduleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateMeetingConfigScheduleCompleted(this, new UpdateMeetingConfigScheduleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateMeetingConfigScheduleAsync(string userName, GreenField.ServiceCaller.MeetingDefinitions.MeetingConfigurationSchedule meetingConfigurationSchedule) {
            this.UpdateMeetingConfigScheduleAsync(userName, meetingConfigurationSchedule, null);
        }
        
        public void UpdateMeetingConfigScheduleAsync(string userName, GreenField.ServiceCaller.MeetingDefinitions.MeetingConfigurationSchedule meetingConfigurationSchedule, object userState) {
            if ((this.onBeginUpdateMeetingConfigScheduleDelegate == null)) {
                this.onBeginUpdateMeetingConfigScheduleDelegate = new BeginOperationDelegate(this.OnBeginUpdateMeetingConfigSchedule);
            }
            if ((this.onEndUpdateMeetingConfigScheduleDelegate == null)) {
                this.onEndUpdateMeetingConfigScheduleDelegate = new EndOperationDelegate(this.OnEndUpdateMeetingConfigSchedule);
            }
            if ((this.onUpdateMeetingConfigScheduleCompletedDelegate == null)) {
                this.onUpdateMeetingConfigScheduleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateMeetingConfigScheduleCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateMeetingConfigScheduleDelegate, new object[] {
                        userName,
                        meetingConfigurationSchedule}, this.onEndUpdateMeetingConfigScheduleDelegate, this.onUpdateMeetingConfigScheduleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations.BeginRetrievePresentationVoterData(long presentationId, bool includeICAdminInfo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrievePresentationVoterData(presentationId, includeICAdminInfo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.VoterInfo> GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations.EndRetrievePresentationVoterData(System.IAsyncResult result) {
            return base.Channel.EndRetrievePresentationVoterData(result);
        }
        
        private System.IAsyncResult OnBeginRetrievePresentationVoterData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long presentationId = ((long)(inValues[0]));
            bool includeICAdminInfo = ((bool)(inValues[1]));
            return ((GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations)(this)).BeginRetrievePresentationVoterData(presentationId, includeICAdminInfo, callback, asyncState);
        }
        
        private object[] OnEndRetrievePresentationVoterData(System.IAsyncResult result) {
            System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.VoterInfo> retVal = ((GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations)(this)).EndRetrievePresentationVoterData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrievePresentationVoterDataCompleted(object state) {
            if ((this.RetrievePresentationVoterDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrievePresentationVoterDataCompleted(this, new RetrievePresentationVoterDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrievePresentationVoterDataAsync(long presentationId, bool includeICAdminInfo) {
            this.RetrievePresentationVoterDataAsync(presentationId, includeICAdminInfo, null);
        }
        
        public void RetrievePresentationVoterDataAsync(long presentationId, bool includeICAdminInfo, object userState) {
            if ((this.onBeginRetrievePresentationVoterDataDelegate == null)) {
                this.onBeginRetrievePresentationVoterDataDelegate = new BeginOperationDelegate(this.OnBeginRetrievePresentationVoterData);
            }
            if ((this.onEndRetrievePresentationVoterDataDelegate == null)) {
                this.onEndRetrievePresentationVoterDataDelegate = new EndOperationDelegate(this.OnEndRetrievePresentationVoterData);
            }
            if ((this.onRetrievePresentationVoterDataCompletedDelegate == null)) {
                this.onRetrievePresentationVoterDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrievePresentationVoterDataCompleted);
            }
            base.InvokeAsync(this.onBeginRetrievePresentationVoterDataDelegate, new object[] {
                        presentationId,
                        includeICAdminInfo}, this.onEndRetrievePresentationVoterDataDelegate, this.onRetrievePresentationVoterDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations.BeginRetrieveSecurityPFVMeasureCurrentPrices(string securityId, System.Collections.Generic.List<string> pfvTypeInfo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrieveSecurityPFVMeasureCurrentPrices(securityId, pfvTypeInfo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.Dictionary<string, System.Nullable<decimal>> GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations.EndRetrieveSecurityPFVMeasureCurrentPrices(System.IAsyncResult result) {
            return base.Channel.EndRetrieveSecurityPFVMeasureCurrentPrices(result);
        }
        
        private System.IAsyncResult OnBeginRetrieveSecurityPFVMeasureCurrentPrices(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string securityId = ((string)(inValues[0]));
            System.Collections.Generic.List<string> pfvTypeInfo = ((System.Collections.Generic.List<string>)(inValues[1]));
            return ((GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations)(this)).BeginRetrieveSecurityPFVMeasureCurrentPrices(securityId, pfvTypeInfo, callback, asyncState);
        }
        
        private object[] OnEndRetrieveSecurityPFVMeasureCurrentPrices(System.IAsyncResult result) {
            System.Collections.Generic.Dictionary<string, System.Nullable<decimal>> retVal = ((GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations)(this)).EndRetrieveSecurityPFVMeasureCurrentPrices(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrieveSecurityPFVMeasureCurrentPricesCompleted(object state) {
            if ((this.RetrieveSecurityPFVMeasureCurrentPricesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrieveSecurityPFVMeasureCurrentPricesCompleted(this, new RetrieveSecurityPFVMeasureCurrentPricesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrieveSecurityPFVMeasureCurrentPricesAsync(string securityId, System.Collections.Generic.List<string> pfvTypeInfo) {
            this.RetrieveSecurityPFVMeasureCurrentPricesAsync(securityId, pfvTypeInfo, null);
        }
        
        public void RetrieveSecurityPFVMeasureCurrentPricesAsync(string securityId, System.Collections.Generic.List<string> pfvTypeInfo, object userState) {
            if ((this.onBeginRetrieveSecurityPFVMeasureCurrentPricesDelegate == null)) {
                this.onBeginRetrieveSecurityPFVMeasureCurrentPricesDelegate = new BeginOperationDelegate(this.OnBeginRetrieveSecurityPFVMeasureCurrentPrices);
            }
            if ((this.onEndRetrieveSecurityPFVMeasureCurrentPricesDelegate == null)) {
                this.onEndRetrieveSecurityPFVMeasureCurrentPricesDelegate = new EndOperationDelegate(this.OnEndRetrieveSecurityPFVMeasureCurrentPrices);
            }
            if ((this.onRetrieveSecurityPFVMeasureCurrentPricesCompletedDelegate == null)) {
                this.onRetrieveSecurityPFVMeasureCurrentPricesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrieveSecurityPFVMeasureCurrentPricesCompleted);
            }
            base.InvokeAsync(this.onBeginRetrieveSecurityPFVMeasureCurrentPricesDelegate, new object[] {
                        securityId,
                        pfvTypeInfo}, this.onEndRetrieveSecurityPFVMeasureCurrentPricesDelegate, this.onRetrieveSecurityPFVMeasureCurrentPricesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations.BeginUpdateDecisionEntryDetails(string userName, GreenField.ServiceCaller.MeetingDefinitions.ICPresentationOverviewData presentationOverViewData, System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.VoterInfo> voterInfo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateDecisionEntryDetails(userName, presentationOverViewData, voterInfo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations.EndUpdateDecisionEntryDetails(System.IAsyncResult result) {
            return base.Channel.EndUpdateDecisionEntryDetails(result);
        }
        
        private System.IAsyncResult OnBeginUpdateDecisionEntryDetails(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            GreenField.ServiceCaller.MeetingDefinitions.ICPresentationOverviewData presentationOverViewData = ((GreenField.ServiceCaller.MeetingDefinitions.ICPresentationOverviewData)(inValues[1]));
            System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.VoterInfo> voterInfo = ((System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.VoterInfo>)(inValues[2]));
            return ((GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations)(this)).BeginUpdateDecisionEntryDetails(userName, presentationOverViewData, voterInfo, callback, asyncState);
        }
        
        private object[] OnEndUpdateDecisionEntryDetails(System.IAsyncResult result) {
            bool retVal = ((GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations)(this)).EndUpdateDecisionEntryDetails(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateDecisionEntryDetailsCompleted(object state) {
            if ((this.UpdateDecisionEntryDetailsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateDecisionEntryDetailsCompleted(this, new UpdateDecisionEntryDetailsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateDecisionEntryDetailsAsync(string userName, GreenField.ServiceCaller.MeetingDefinitions.ICPresentationOverviewData presentationOverViewData, System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.VoterInfo> voterInfo) {
            this.UpdateDecisionEntryDetailsAsync(userName, presentationOverViewData, voterInfo, null);
        }
        
        public void UpdateDecisionEntryDetailsAsync(string userName, GreenField.ServiceCaller.MeetingDefinitions.ICPresentationOverviewData presentationOverViewData, System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.VoterInfo> voterInfo, object userState) {
            if ((this.onBeginUpdateDecisionEntryDetailsDelegate == null)) {
                this.onBeginUpdateDecisionEntryDetailsDelegate = new BeginOperationDelegate(this.OnBeginUpdateDecisionEntryDetails);
            }
            if ((this.onEndUpdateDecisionEntryDetailsDelegate == null)) {
                this.onEndUpdateDecisionEntryDetailsDelegate = new EndOperationDelegate(this.OnEndUpdateDecisionEntryDetails);
            }
            if ((this.onUpdateDecisionEntryDetailsCompletedDelegate == null)) {
                this.onUpdateDecisionEntryDetailsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateDecisionEntryDetailsCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateDecisionEntryDetailsDelegate, new object[] {
                        userName,
                        presentationOverViewData,
                        voterInfo}, this.onEndUpdateDecisionEntryDetailsDelegate, this.onUpdateDecisionEntryDetailsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations.BeginRetrieveMeetingInfoByPresentationStatus(string presentationStatus, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrieveMeetingInfoByPresentationStatus(presentationStatus, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.MeetingInfo> GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations.EndRetrieveMeetingInfoByPresentationStatus(System.IAsyncResult result) {
            return base.Channel.EndRetrieveMeetingInfoByPresentationStatus(result);
        }
        
        private System.IAsyncResult OnBeginRetrieveMeetingInfoByPresentationStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string presentationStatus = ((string)(inValues[0]));
            return ((GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations)(this)).BeginRetrieveMeetingInfoByPresentationStatus(presentationStatus, callback, asyncState);
        }
        
        private object[] OnEndRetrieveMeetingInfoByPresentationStatus(System.IAsyncResult result) {
            System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.MeetingInfo> retVal = ((GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations)(this)).EndRetrieveMeetingInfoByPresentationStatus(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrieveMeetingInfoByPresentationStatusCompleted(object state) {
            if ((this.RetrieveMeetingInfoByPresentationStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrieveMeetingInfoByPresentationStatusCompleted(this, new RetrieveMeetingInfoByPresentationStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrieveMeetingInfoByPresentationStatusAsync(string presentationStatus) {
            this.RetrieveMeetingInfoByPresentationStatusAsync(presentationStatus, null);
        }
        
        public void RetrieveMeetingInfoByPresentationStatusAsync(string presentationStatus, object userState) {
            if ((this.onBeginRetrieveMeetingInfoByPresentationStatusDelegate == null)) {
                this.onBeginRetrieveMeetingInfoByPresentationStatusDelegate = new BeginOperationDelegate(this.OnBeginRetrieveMeetingInfoByPresentationStatus);
            }
            if ((this.onEndRetrieveMeetingInfoByPresentationStatusDelegate == null)) {
                this.onEndRetrieveMeetingInfoByPresentationStatusDelegate = new EndOperationDelegate(this.OnEndRetrieveMeetingInfoByPresentationStatus);
            }
            if ((this.onRetrieveMeetingInfoByPresentationStatusCompletedDelegate == null)) {
                this.onRetrieveMeetingInfoByPresentationStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrieveMeetingInfoByPresentationStatusCompleted);
            }
            base.InvokeAsync(this.onBeginRetrieveMeetingInfoByPresentationStatusDelegate, new object[] {
                        presentationStatus}, this.onEndRetrieveMeetingInfoByPresentationStatusDelegate, this.onRetrieveMeetingInfoByPresentationStatusCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations.BeginRetrieveMeetingMinuteDetails(System.Nullable<long> meetingID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrieveMeetingMinuteDetails(meetingID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.MeetingMinuteData> GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations.EndRetrieveMeetingMinuteDetails(System.IAsyncResult result) {
            return base.Channel.EndRetrieveMeetingMinuteDetails(result);
        }
        
        private System.IAsyncResult OnBeginRetrieveMeetingMinuteDetails(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Nullable<long> meetingID = ((System.Nullable<long>)(inValues[0]));
            return ((GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations)(this)).BeginRetrieveMeetingMinuteDetails(meetingID, callback, asyncState);
        }
        
        private object[] OnEndRetrieveMeetingMinuteDetails(System.IAsyncResult result) {
            System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.MeetingMinuteData> retVal = ((GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations)(this)).EndRetrieveMeetingMinuteDetails(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrieveMeetingMinuteDetailsCompleted(object state) {
            if ((this.RetrieveMeetingMinuteDetailsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrieveMeetingMinuteDetailsCompleted(this, new RetrieveMeetingMinuteDetailsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrieveMeetingMinuteDetailsAsync(System.Nullable<long> meetingID) {
            this.RetrieveMeetingMinuteDetailsAsync(meetingID, null);
        }
        
        public void RetrieveMeetingMinuteDetailsAsync(System.Nullable<long> meetingID, object userState) {
            if ((this.onBeginRetrieveMeetingMinuteDetailsDelegate == null)) {
                this.onBeginRetrieveMeetingMinuteDetailsDelegate = new BeginOperationDelegate(this.OnBeginRetrieveMeetingMinuteDetails);
            }
            if ((this.onEndRetrieveMeetingMinuteDetailsDelegate == null)) {
                this.onEndRetrieveMeetingMinuteDetailsDelegate = new EndOperationDelegate(this.OnEndRetrieveMeetingMinuteDetails);
            }
            if ((this.onRetrieveMeetingMinuteDetailsCompletedDelegate == null)) {
                this.onRetrieveMeetingMinuteDetailsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrieveMeetingMinuteDetailsCompleted);
            }
            base.InvokeAsync(this.onBeginRetrieveMeetingMinuteDetailsDelegate, new object[] {
                        meetingID}, this.onEndRetrieveMeetingMinuteDetailsDelegate, this.onRetrieveMeetingMinuteDetailsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations.BeginRetrieveMeetingAttachedFileDetails(System.Nullable<long> meetingID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrieveMeetingAttachedFileDetails(meetingID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.FileMaster> GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations.EndRetrieveMeetingAttachedFileDetails(System.IAsyncResult result) {
            return base.Channel.EndRetrieveMeetingAttachedFileDetails(result);
        }
        
        private System.IAsyncResult OnBeginRetrieveMeetingAttachedFileDetails(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Nullable<long> meetingID = ((System.Nullable<long>)(inValues[0]));
            return ((GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations)(this)).BeginRetrieveMeetingAttachedFileDetails(meetingID, callback, asyncState);
        }
        
        private object[] OnEndRetrieveMeetingAttachedFileDetails(System.IAsyncResult result) {
            System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.FileMaster> retVal = ((GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations)(this)).EndRetrieveMeetingAttachedFileDetails(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrieveMeetingAttachedFileDetailsCompleted(object state) {
            if ((this.RetrieveMeetingAttachedFileDetailsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrieveMeetingAttachedFileDetailsCompleted(this, new RetrieveMeetingAttachedFileDetailsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrieveMeetingAttachedFileDetailsAsync(System.Nullable<long> meetingID) {
            this.RetrieveMeetingAttachedFileDetailsAsync(meetingID, null);
        }
        
        public void RetrieveMeetingAttachedFileDetailsAsync(System.Nullable<long> meetingID, object userState) {
            if ((this.onBeginRetrieveMeetingAttachedFileDetailsDelegate == null)) {
                this.onBeginRetrieveMeetingAttachedFileDetailsDelegate = new BeginOperationDelegate(this.OnBeginRetrieveMeetingAttachedFileDetails);
            }
            if ((this.onEndRetrieveMeetingAttachedFileDetailsDelegate == null)) {
                this.onEndRetrieveMeetingAttachedFileDetailsDelegate = new EndOperationDelegate(this.OnEndRetrieveMeetingAttachedFileDetails);
            }
            if ((this.onRetrieveMeetingAttachedFileDetailsCompletedDelegate == null)) {
                this.onRetrieveMeetingAttachedFileDetailsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrieveMeetingAttachedFileDetailsCompleted);
            }
            base.InvokeAsync(this.onBeginRetrieveMeetingAttachedFileDetailsDelegate, new object[] {
                        meetingID}, this.onEndRetrieveMeetingAttachedFileDetailsDelegate, this.onRetrieveMeetingAttachedFileDetailsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations.BeginUpdateMeetingMinuteDetails(string userName, GreenField.ServiceCaller.MeetingDefinitions.MeetingInfo meetingInfo, System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.MeetingMinuteData> meetingMinuteData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateMeetingMinuteDetails(userName, meetingInfo, meetingMinuteData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations.EndUpdateMeetingMinuteDetails(System.IAsyncResult result) {
            return base.Channel.EndUpdateMeetingMinuteDetails(result);
        }
        
        private System.IAsyncResult OnBeginUpdateMeetingMinuteDetails(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            GreenField.ServiceCaller.MeetingDefinitions.MeetingInfo meetingInfo = ((GreenField.ServiceCaller.MeetingDefinitions.MeetingInfo)(inValues[1]));
            System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.MeetingMinuteData> meetingMinuteData = ((System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.MeetingMinuteData>)(inValues[2]));
            return ((GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations)(this)).BeginUpdateMeetingMinuteDetails(userName, meetingInfo, meetingMinuteData, callback, asyncState);
        }
        
        private object[] OnEndUpdateMeetingMinuteDetails(System.IAsyncResult result) {
            bool retVal = ((GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations)(this)).EndUpdateMeetingMinuteDetails(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateMeetingMinuteDetailsCompleted(object state) {
            if ((this.UpdateMeetingMinuteDetailsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateMeetingMinuteDetailsCompleted(this, new UpdateMeetingMinuteDetailsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateMeetingMinuteDetailsAsync(string userName, GreenField.ServiceCaller.MeetingDefinitions.MeetingInfo meetingInfo, System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.MeetingMinuteData> meetingMinuteData) {
            this.UpdateMeetingMinuteDetailsAsync(userName, meetingInfo, meetingMinuteData, null);
        }
        
        public void UpdateMeetingMinuteDetailsAsync(string userName, GreenField.ServiceCaller.MeetingDefinitions.MeetingInfo meetingInfo, System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.MeetingMinuteData> meetingMinuteData, object userState) {
            if ((this.onBeginUpdateMeetingMinuteDetailsDelegate == null)) {
                this.onBeginUpdateMeetingMinuteDetailsDelegate = new BeginOperationDelegate(this.OnBeginUpdateMeetingMinuteDetails);
            }
            if ((this.onEndUpdateMeetingMinuteDetailsDelegate == null)) {
                this.onEndUpdateMeetingMinuteDetailsDelegate = new EndOperationDelegate(this.OnEndUpdateMeetingMinuteDetails);
            }
            if ((this.onUpdateMeetingMinuteDetailsCompletedDelegate == null)) {
                this.onUpdateMeetingMinuteDetailsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateMeetingMinuteDetailsCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateMeetingMinuteDetailsDelegate, new object[] {
                        userName,
                        meetingInfo,
                        meetingMinuteData}, this.onEndUpdateMeetingMinuteDetailsDelegate, this.onUpdateMeetingMinuteDetailsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations.BeginUpdateMeetingAttachedFileStreamData(string userName, long meetingId, GreenField.ServiceCaller.MeetingDefinitions.FileMaster fileMasterInfo, bool deletionFlag, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateMeetingAttachedFileStreamData(userName, meetingId, fileMasterInfo, deletionFlag, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations.EndUpdateMeetingAttachedFileStreamData(System.IAsyncResult result) {
            return base.Channel.EndUpdateMeetingAttachedFileStreamData(result);
        }
        
        private System.IAsyncResult OnBeginUpdateMeetingAttachedFileStreamData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            long meetingId = ((long)(inValues[1]));
            GreenField.ServiceCaller.MeetingDefinitions.FileMaster fileMasterInfo = ((GreenField.ServiceCaller.MeetingDefinitions.FileMaster)(inValues[2]));
            bool deletionFlag = ((bool)(inValues[3]));
            return ((GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations)(this)).BeginUpdateMeetingAttachedFileStreamData(userName, meetingId, fileMasterInfo, deletionFlag, callback, asyncState);
        }
        
        private object[] OnEndUpdateMeetingAttachedFileStreamData(System.IAsyncResult result) {
            bool retVal = ((GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations)(this)).EndUpdateMeetingAttachedFileStreamData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateMeetingAttachedFileStreamDataCompleted(object state) {
            if ((this.UpdateMeetingAttachedFileStreamDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateMeetingAttachedFileStreamDataCompleted(this, new UpdateMeetingAttachedFileStreamDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateMeetingAttachedFileStreamDataAsync(string userName, long meetingId, GreenField.ServiceCaller.MeetingDefinitions.FileMaster fileMasterInfo, bool deletionFlag) {
            this.UpdateMeetingAttachedFileStreamDataAsync(userName, meetingId, fileMasterInfo, deletionFlag, null);
        }
        
        public void UpdateMeetingAttachedFileStreamDataAsync(string userName, long meetingId, GreenField.ServiceCaller.MeetingDefinitions.FileMaster fileMasterInfo, bool deletionFlag, object userState) {
            if ((this.onBeginUpdateMeetingAttachedFileStreamDataDelegate == null)) {
                this.onBeginUpdateMeetingAttachedFileStreamDataDelegate = new BeginOperationDelegate(this.OnBeginUpdateMeetingAttachedFileStreamData);
            }
            if ((this.onEndUpdateMeetingAttachedFileStreamDataDelegate == null)) {
                this.onEndUpdateMeetingAttachedFileStreamDataDelegate = new EndOperationDelegate(this.OnEndUpdateMeetingAttachedFileStreamData);
            }
            if ((this.onUpdateMeetingAttachedFileStreamDataCompletedDelegate == null)) {
                this.onUpdateMeetingAttachedFileStreamDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateMeetingAttachedFileStreamDataCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateMeetingAttachedFileStreamDataDelegate, new object[] {
                        userName,
                        meetingId,
                        fileMasterInfo,
                        deletionFlag}, this.onEndUpdateMeetingAttachedFileStreamDataDelegate, this.onUpdateMeetingAttachedFileStreamDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations.BeginSetMeetingPresentationStatus(string userName, long meetingId, string status, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetMeetingPresentationStatus(userName, meetingId, status, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations.EndSetMeetingPresentationStatus(System.IAsyncResult result) {
            return base.Channel.EndSetMeetingPresentationStatus(result);
        }
        
        private System.IAsyncResult OnBeginSetMeetingPresentationStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            long meetingId = ((long)(inValues[1]));
            string status = ((string)(inValues[2]));
            return ((GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations)(this)).BeginSetMeetingPresentationStatus(userName, meetingId, status, callback, asyncState);
        }
        
        private object[] OnEndSetMeetingPresentationStatus(System.IAsyncResult result) {
            bool retVal = ((GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations)(this)).EndSetMeetingPresentationStatus(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetMeetingPresentationStatusCompleted(object state) {
            if ((this.SetMeetingPresentationStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetMeetingPresentationStatusCompleted(this, new SetMeetingPresentationStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetMeetingPresentationStatusAsync(string userName, long meetingId, string status) {
            this.SetMeetingPresentationStatusAsync(userName, meetingId, status, null);
        }
        
        public void SetMeetingPresentationStatusAsync(string userName, long meetingId, string status, object userState) {
            if ((this.onBeginSetMeetingPresentationStatusDelegate == null)) {
                this.onBeginSetMeetingPresentationStatusDelegate = new BeginOperationDelegate(this.OnBeginSetMeetingPresentationStatus);
            }
            if ((this.onEndSetMeetingPresentationStatusDelegate == null)) {
                this.onEndSetMeetingPresentationStatusDelegate = new EndOperationDelegate(this.OnEndSetMeetingPresentationStatus);
            }
            if ((this.onSetMeetingPresentationStatusCompletedDelegate == null)) {
                this.onSetMeetingPresentationStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetMeetingPresentationStatusCompleted);
            }
            base.InvokeAsync(this.onBeginSetMeetingPresentationStatusDelegate, new object[] {
                        userName,
                        meetingId,
                        status}, this.onEndSetMeetingPresentationStatusDelegate, this.onSetMeetingPresentationStatusCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations.BeginGetAllUsers(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllUsers(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<GreenField.DataContracts.MembershipUserInfo> GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations.EndGetAllUsers(System.IAsyncResult result) {
            return base.Channel.EndGetAllUsers(result);
        }
        
        private System.IAsyncResult OnBeginGetAllUsers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations)(this)).BeginGetAllUsers(callback, asyncState);
        }
        
        private object[] OnEndGetAllUsers(System.IAsyncResult result) {
            System.Collections.Generic.List<GreenField.DataContracts.MembershipUserInfo> retVal = ((GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations)(this)).EndGetAllUsers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllUsersCompleted(object state) {
            if ((this.GetAllUsersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllUsersCompleted(this, new GetAllUsersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllUsersAsync() {
            this.GetAllUsersAsync(null);
        }
        
        public void GetAllUsersAsync(object userState) {
            if ((this.onBeginGetAllUsersDelegate == null)) {
                this.onBeginGetAllUsersDelegate = new BeginOperationDelegate(this.OnBeginGetAllUsers);
            }
            if ((this.onEndGetAllUsersDelegate == null)) {
                this.onEndGetAllUsersDelegate = new EndOperationDelegate(this.OnEndGetAllUsers);
            }
            if ((this.onGetAllUsersCompletedDelegate == null)) {
                this.onGetAllUsersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllUsersCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllUsersDelegate, null, this.onEndGetAllUsersDelegate, this.onGetAllUsersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations.BeginRetrievePresentationComments(long presentationId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrievePresentationComments(presentationId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.CommentInfo> GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations.EndRetrievePresentationComments(System.IAsyncResult result) {
            return base.Channel.EndRetrievePresentationComments(result);
        }
        
        private System.IAsyncResult OnBeginRetrievePresentationComments(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long presentationId = ((long)(inValues[0]));
            return ((GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations)(this)).BeginRetrievePresentationComments(presentationId, callback, asyncState);
        }
        
        private object[] OnEndRetrievePresentationComments(System.IAsyncResult result) {
            System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.CommentInfo> retVal = ((GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations)(this)).EndRetrievePresentationComments(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrievePresentationCommentsCompleted(object state) {
            if ((this.RetrievePresentationCommentsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrievePresentationCommentsCompleted(this, new RetrievePresentationCommentsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrievePresentationCommentsAsync(long presentationId) {
            this.RetrievePresentationCommentsAsync(presentationId, null);
        }
        
        public void RetrievePresentationCommentsAsync(long presentationId, object userState) {
            if ((this.onBeginRetrievePresentationCommentsDelegate == null)) {
                this.onBeginRetrievePresentationCommentsDelegate = new BeginOperationDelegate(this.OnBeginRetrievePresentationComments);
            }
            if ((this.onEndRetrievePresentationCommentsDelegate == null)) {
                this.onEndRetrievePresentationCommentsDelegate = new EndOperationDelegate(this.OnEndRetrievePresentationComments);
            }
            if ((this.onRetrievePresentationCommentsCompletedDelegate == null)) {
                this.onRetrievePresentationCommentsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrievePresentationCommentsCompleted);
            }
            base.InvokeAsync(this.onBeginRetrievePresentationCommentsDelegate, new object[] {
                        presentationId}, this.onEndRetrievePresentationCommentsDelegate, this.onRetrievePresentationCommentsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations.BeginSetPresentationComments(string userName, long presentationId, string comment, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetPresentationComments(userName, presentationId, comment, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.CommentInfo> GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations.EndSetPresentationComments(System.IAsyncResult result) {
            return base.Channel.EndSetPresentationComments(result);
        }
        
        private System.IAsyncResult OnBeginSetPresentationComments(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            long presentationId = ((long)(inValues[1]));
            string comment = ((string)(inValues[2]));
            return ((GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations)(this)).BeginSetPresentationComments(userName, presentationId, comment, callback, asyncState);
        }
        
        private object[] OnEndSetPresentationComments(System.IAsyncResult result) {
            System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.CommentInfo> retVal = ((GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations)(this)).EndSetPresentationComments(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetPresentationCommentsCompleted(object state) {
            if ((this.SetPresentationCommentsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetPresentationCommentsCompleted(this, new SetPresentationCommentsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetPresentationCommentsAsync(string userName, long presentationId, string comment) {
            this.SetPresentationCommentsAsync(userName, presentationId, comment, null);
        }
        
        public void SetPresentationCommentsAsync(string userName, long presentationId, string comment, object userState) {
            if ((this.onBeginSetPresentationCommentsDelegate == null)) {
                this.onBeginSetPresentationCommentsDelegate = new BeginOperationDelegate(this.OnBeginSetPresentationComments);
            }
            if ((this.onEndSetPresentationCommentsDelegate == null)) {
                this.onEndSetPresentationCommentsDelegate = new EndOperationDelegate(this.OnEndSetPresentationComments);
            }
            if ((this.onSetPresentationCommentsCompletedDelegate == null)) {
                this.onSetPresentationCommentsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetPresentationCommentsCompleted);
            }
            base.InvokeAsync(this.onBeginSetPresentationCommentsDelegate, new object[] {
                        userName,
                        presentationId,
                        comment}, this.onEndSetPresentationCommentsDelegate, this.onSetPresentationCommentsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations.BeginUpdatePreMeetingVoteDetails(string userName, System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.VoterInfo> voterInfo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdatePreMeetingVoteDetails(userName, voterInfo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations.EndUpdatePreMeetingVoteDetails(System.IAsyncResult result) {
            return base.Channel.EndUpdatePreMeetingVoteDetails(result);
        }
        
        private System.IAsyncResult OnBeginUpdatePreMeetingVoteDetails(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.VoterInfo> voterInfo = ((System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.VoterInfo>)(inValues[1]));
            return ((GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations)(this)).BeginUpdatePreMeetingVoteDetails(userName, voterInfo, callback, asyncState);
        }
        
        private object[] OnEndUpdatePreMeetingVoteDetails(System.IAsyncResult result) {
            bool retVal = ((GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations)(this)).EndUpdatePreMeetingVoteDetails(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdatePreMeetingVoteDetailsCompleted(object state) {
            if ((this.UpdatePreMeetingVoteDetailsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdatePreMeetingVoteDetailsCompleted(this, new UpdatePreMeetingVoteDetailsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdatePreMeetingVoteDetailsAsync(string userName, System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.VoterInfo> voterInfo) {
            this.UpdatePreMeetingVoteDetailsAsync(userName, voterInfo, null);
        }
        
        public void UpdatePreMeetingVoteDetailsAsync(string userName, System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.VoterInfo> voterInfo, object userState) {
            if ((this.onBeginUpdatePreMeetingVoteDetailsDelegate == null)) {
                this.onBeginUpdatePreMeetingVoteDetailsDelegate = new BeginOperationDelegate(this.OnBeginUpdatePreMeetingVoteDetails);
            }
            if ((this.onEndUpdatePreMeetingVoteDetailsDelegate == null)) {
                this.onEndUpdatePreMeetingVoteDetailsDelegate = new EndOperationDelegate(this.OnEndUpdatePreMeetingVoteDetails);
            }
            if ((this.onUpdatePreMeetingVoteDetailsCompletedDelegate == null)) {
                this.onUpdatePreMeetingVoteDetailsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdatePreMeetingVoteDetailsCompleted);
            }
            base.InvokeAsync(this.onBeginUpdatePreMeetingVoteDetailsDelegate, new object[] {
                        userName,
                        voterInfo}, this.onEndUpdatePreMeetingVoteDetailsDelegate, this.onUpdatePreMeetingVoteDetailsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations.BeginUpdateMeetingPresentationDate(string userName, long presentationId, GreenField.ServiceCaller.MeetingDefinitions.MeetingInfo meetingInfo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateMeetingPresentationDate(userName, presentationId, meetingInfo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations.EndUpdateMeetingPresentationDate(System.IAsyncResult result) {
            return base.Channel.EndUpdateMeetingPresentationDate(result);
        }
        
        private System.IAsyncResult OnBeginUpdateMeetingPresentationDate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            long presentationId = ((long)(inValues[1]));
            GreenField.ServiceCaller.MeetingDefinitions.MeetingInfo meetingInfo = ((GreenField.ServiceCaller.MeetingDefinitions.MeetingInfo)(inValues[2]));
            return ((GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations)(this)).BeginUpdateMeetingPresentationDate(userName, presentationId, meetingInfo, callback, asyncState);
        }
        
        private object[] OnEndUpdateMeetingPresentationDate(System.IAsyncResult result) {
            bool retVal = ((GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations)(this)).EndUpdateMeetingPresentationDate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateMeetingPresentationDateCompleted(object state) {
            if ((this.UpdateMeetingPresentationDateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateMeetingPresentationDateCompleted(this, new UpdateMeetingPresentationDateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateMeetingPresentationDateAsync(string userName, long presentationId, GreenField.ServiceCaller.MeetingDefinitions.MeetingInfo meetingInfo) {
            this.UpdateMeetingPresentationDateAsync(userName, presentationId, meetingInfo, null);
        }
        
        public void UpdateMeetingPresentationDateAsync(string userName, long presentationId, GreenField.ServiceCaller.MeetingDefinitions.MeetingInfo meetingInfo, object userState) {
            if ((this.onBeginUpdateMeetingPresentationDateDelegate == null)) {
                this.onBeginUpdateMeetingPresentationDateDelegate = new BeginOperationDelegate(this.OnBeginUpdateMeetingPresentationDate);
            }
            if ((this.onEndUpdateMeetingPresentationDateDelegate == null)) {
                this.onEndUpdateMeetingPresentationDateDelegate = new EndOperationDelegate(this.OnEndUpdateMeetingPresentationDate);
            }
            if ((this.onUpdateMeetingPresentationDateCompletedDelegate == null)) {
                this.onUpdateMeetingPresentationDateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateMeetingPresentationDateCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateMeetingPresentationDateDelegate, new object[] {
                        userName,
                        presentationId,
                        meetingInfo}, this.onEndUpdateMeetingPresentationDateDelegate, this.onUpdateMeetingPresentationDateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations.BeginSetMessageInfo(string emailTo, string emailCc, string emailSubject, string emailMessageBody, string emailAttachment, string userName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetMessageInfo(emailTo, emailCc, emailSubject, emailMessageBody, emailAttachment, userName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations.EndSetMessageInfo(System.IAsyncResult result) {
            return base.Channel.EndSetMessageInfo(result);
        }
        
        private System.IAsyncResult OnBeginSetMessageInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string emailTo = ((string)(inValues[0]));
            string emailCc = ((string)(inValues[1]));
            string emailSubject = ((string)(inValues[2]));
            string emailMessageBody = ((string)(inValues[3]));
            string emailAttachment = ((string)(inValues[4]));
            string userName = ((string)(inValues[5]));
            return ((GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations)(this)).BeginSetMessageInfo(emailTo, emailCc, emailSubject, emailMessageBody, emailAttachment, userName, callback, asyncState);
        }
        
        private object[] OnEndSetMessageInfo(System.IAsyncResult result) {
            bool retVal = ((GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations)(this)).EndSetMessageInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetMessageInfoCompleted(object state) {
            if ((this.SetMessageInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetMessageInfoCompleted(this, new SetMessageInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetMessageInfoAsync(string emailTo, string emailCc, string emailSubject, string emailMessageBody, string emailAttachment, string userName) {
            this.SetMessageInfoAsync(emailTo, emailCc, emailSubject, emailMessageBody, emailAttachment, userName, null);
        }
        
        public void SetMessageInfoAsync(string emailTo, string emailCc, string emailSubject, string emailMessageBody, string emailAttachment, string userName, object userState) {
            if ((this.onBeginSetMessageInfoDelegate == null)) {
                this.onBeginSetMessageInfoDelegate = new BeginOperationDelegate(this.OnBeginSetMessageInfo);
            }
            if ((this.onEndSetMessageInfoDelegate == null)) {
                this.onEndSetMessageInfoDelegate = new EndOperationDelegate(this.OnEndSetMessageInfo);
            }
            if ((this.onSetMessageInfoCompletedDelegate == null)) {
                this.onSetMessageInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetMessageInfoCompleted);
            }
            base.InvokeAsync(this.onBeginSetMessageInfoDelegate, new object[] {
                        emailTo,
                        emailCc,
                        emailSubject,
                        emailMessageBody,
                        emailAttachment,
                        userName}, this.onEndSetMessageInfoDelegate, this.onSetMessageInfoCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations CreateChannel() {
            return new MeetingOperationsClientChannel(this);
        }
        
        private class MeetingOperationsClientChannel : ChannelBase<GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations>, GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations {
            
            public MeetingOperationsClientChannel(System.ServiceModel.ClientBase<GreenField.ServiceCaller.MeetingDefinitions.MeetingOperations> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginRetrievePresentationOverviewData(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("RetrievePresentationOverviewData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.ICPresentationOverviewData> EndRetrievePresentationOverviewData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.ICPresentationOverviewData> _result = ((System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.ICPresentationOverviewData>)(base.EndInvoke("RetrievePresentationOverviewData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetUsersByNames(System.Collections.Generic.List<string> userNames, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userNames;
                System.IAsyncResult _result = base.BeginInvoke("GetUsersByNames", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<GreenField.DataContracts.MembershipUserInfo> EndGetUsersByNames(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<GreenField.DataContracts.MembershipUserInfo> _result = ((System.Collections.Generic.List<GreenField.DataContracts.MembershipUserInfo>)(base.EndInvoke("GetUsersByNames", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCreatePresentation(string userName, GreenField.ServiceCaller.MeetingDefinitions.ICPresentationOverviewData presentationOverviewData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = userName;
                _args[1] = presentationOverviewData;
                System.IAsyncResult _result = base.BeginInvoke("CreatePresentation", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndCreatePresentation(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("CreatePresentation", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSetICPPresentationStatus(string userName, long presentationId, string status, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = userName;
                _args[1] = presentationId;
                _args[2] = status;
                System.IAsyncResult _result = base.BeginInvoke("SetICPPresentationStatus", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndSetICPPresentationStatus(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("SetICPPresentationStatus", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetrieveSecurityDetails(GreenField.DataContracts.EntitySelectionData entitySelectionData, GreenField.ServiceCaller.MeetingDefinitions.ICPresentationOverviewData presentationOverviewData, GreenField.DataContracts.PortfolioSelectionData portfolio, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = entitySelectionData;
                _args[1] = presentationOverviewData;
                _args[2] = portfolio;
                System.IAsyncResult _result = base.BeginInvoke("RetrieveSecurityDetails", _args, callback, asyncState);
                return _result;
            }
            
            public GreenField.ServiceCaller.MeetingDefinitions.ICPresentationOverviewData EndRetrieveSecurityDetails(System.IAsyncResult result) {
                object[] _args = new object[0];
                GreenField.ServiceCaller.MeetingDefinitions.ICPresentationOverviewData _result = ((GreenField.ServiceCaller.MeetingDefinitions.ICPresentationOverviewData)(base.EndInvoke("RetrieveSecurityDetails", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetrieveCurrentPFVMeasures(System.Collections.Generic.List<string> PFVTypeInfo, string securityTicker, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = PFVTypeInfo;
                _args[1] = securityTicker;
                System.IAsyncResult _result = base.BeginInvoke("RetrieveCurrentPFVMeasures", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.Dictionary<string, System.Nullable<decimal>> EndRetrieveCurrentPFVMeasures(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.Dictionary<string, System.Nullable<decimal>> _result = ((System.Collections.Generic.Dictionary<string, System.Nullable<decimal>>)(base.EndInvoke("RetrieveCurrentPFVMeasures", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetrievePresentationAttachedFileDetails(System.Nullable<long> presentationID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = presentationID;
                System.IAsyncResult _result = base.BeginInvoke("RetrievePresentationAttachedFileDetails", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.FileMaster> EndRetrievePresentationAttachedFileDetails(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.FileMaster> _result = ((System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.FileMaster>)(base.EndInvoke("RetrievePresentationAttachedFileDetails", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdatePresentationAttachedFileStreamData(string userName, long presentationId, GreenField.ServiceCaller.MeetingDefinitions.FileMaster fileMasterInfo, bool deletionFlag, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = userName;
                _args[1] = presentationId;
                _args[2] = fileMasterInfo;
                _args[3] = deletionFlag;
                System.IAsyncResult _result = base.BeginInvoke("UpdatePresentationAttachedFileStreamData", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndUpdatePresentationAttachedFileStreamData(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("UpdatePresentationAttachedFileStreamData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMeetingConfigSchedule(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetMeetingConfigSchedule", _args, callback, asyncState);
                return _result;
            }
            
            public GreenField.ServiceCaller.MeetingDefinitions.MeetingConfigurationSchedule EndGetMeetingConfigSchedule(System.IAsyncResult result) {
                object[] _args = new object[0];
                GreenField.ServiceCaller.MeetingDefinitions.MeetingConfigurationSchedule _result = ((GreenField.ServiceCaller.MeetingDefinitions.MeetingConfigurationSchedule)(base.EndInvoke("GetMeetingConfigSchedule", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAvailablePresentationDates(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAvailablePresentationDates", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.MeetingInfo> EndGetAvailablePresentationDates(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.MeetingInfo> _result = ((System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.MeetingInfo>)(base.EndInvoke("GetAvailablePresentationDates", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateMeetingConfigSchedule(string userName, GreenField.ServiceCaller.MeetingDefinitions.MeetingConfigurationSchedule meetingConfigurationSchedule, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = userName;
                _args[1] = meetingConfigurationSchedule;
                System.IAsyncResult _result = base.BeginInvoke("UpdateMeetingConfigSchedule", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndUpdateMeetingConfigSchedule(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("UpdateMeetingConfigSchedule", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetrievePresentationVoterData(long presentationId, bool includeICAdminInfo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = presentationId;
                _args[1] = includeICAdminInfo;
                System.IAsyncResult _result = base.BeginInvoke("RetrievePresentationVoterData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.VoterInfo> EndRetrievePresentationVoterData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.VoterInfo> _result = ((System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.VoterInfo>)(base.EndInvoke("RetrievePresentationVoterData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetrieveSecurityPFVMeasureCurrentPrices(string securityId, System.Collections.Generic.List<string> pfvTypeInfo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = securityId;
                _args[1] = pfvTypeInfo;
                System.IAsyncResult _result = base.BeginInvoke("RetrieveSecurityPFVMeasureCurrentPrices", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.Dictionary<string, System.Nullable<decimal>> EndRetrieveSecurityPFVMeasureCurrentPrices(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.Dictionary<string, System.Nullable<decimal>> _result = ((System.Collections.Generic.Dictionary<string, System.Nullable<decimal>>)(base.EndInvoke("RetrieveSecurityPFVMeasureCurrentPrices", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateDecisionEntryDetails(string userName, GreenField.ServiceCaller.MeetingDefinitions.ICPresentationOverviewData presentationOverViewData, System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.VoterInfo> voterInfo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = userName;
                _args[1] = presentationOverViewData;
                _args[2] = voterInfo;
                System.IAsyncResult _result = base.BeginInvoke("UpdateDecisionEntryDetails", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndUpdateDecisionEntryDetails(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("UpdateDecisionEntryDetails", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetrieveMeetingInfoByPresentationStatus(string presentationStatus, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = presentationStatus;
                System.IAsyncResult _result = base.BeginInvoke("RetrieveMeetingInfoByPresentationStatus", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.MeetingInfo> EndRetrieveMeetingInfoByPresentationStatus(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.MeetingInfo> _result = ((System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.MeetingInfo>)(base.EndInvoke("RetrieveMeetingInfoByPresentationStatus", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetrieveMeetingMinuteDetails(System.Nullable<long> meetingID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = meetingID;
                System.IAsyncResult _result = base.BeginInvoke("RetrieveMeetingMinuteDetails", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.MeetingMinuteData> EndRetrieveMeetingMinuteDetails(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.MeetingMinuteData> _result = ((System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.MeetingMinuteData>)(base.EndInvoke("RetrieveMeetingMinuteDetails", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetrieveMeetingAttachedFileDetails(System.Nullable<long> meetingID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = meetingID;
                System.IAsyncResult _result = base.BeginInvoke("RetrieveMeetingAttachedFileDetails", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.FileMaster> EndRetrieveMeetingAttachedFileDetails(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.FileMaster> _result = ((System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.FileMaster>)(base.EndInvoke("RetrieveMeetingAttachedFileDetails", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateMeetingMinuteDetails(string userName, GreenField.ServiceCaller.MeetingDefinitions.MeetingInfo meetingInfo, System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.MeetingMinuteData> meetingMinuteData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = userName;
                _args[1] = meetingInfo;
                _args[2] = meetingMinuteData;
                System.IAsyncResult _result = base.BeginInvoke("UpdateMeetingMinuteDetails", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndUpdateMeetingMinuteDetails(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("UpdateMeetingMinuteDetails", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateMeetingAttachedFileStreamData(string userName, long meetingId, GreenField.ServiceCaller.MeetingDefinitions.FileMaster fileMasterInfo, bool deletionFlag, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = userName;
                _args[1] = meetingId;
                _args[2] = fileMasterInfo;
                _args[3] = deletionFlag;
                System.IAsyncResult _result = base.BeginInvoke("UpdateMeetingAttachedFileStreamData", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndUpdateMeetingAttachedFileStreamData(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("UpdateMeetingAttachedFileStreamData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSetMeetingPresentationStatus(string userName, long meetingId, string status, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = userName;
                _args[1] = meetingId;
                _args[2] = status;
                System.IAsyncResult _result = base.BeginInvoke("SetMeetingPresentationStatus", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndSetMeetingPresentationStatus(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("SetMeetingPresentationStatus", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllUsers(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAllUsers", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<GreenField.DataContracts.MembershipUserInfo> EndGetAllUsers(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<GreenField.DataContracts.MembershipUserInfo> _result = ((System.Collections.Generic.List<GreenField.DataContracts.MembershipUserInfo>)(base.EndInvoke("GetAllUsers", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRetrievePresentationComments(long presentationId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = presentationId;
                System.IAsyncResult _result = base.BeginInvoke("RetrievePresentationComments", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.CommentInfo> EndRetrievePresentationComments(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.CommentInfo> _result = ((System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.CommentInfo>)(base.EndInvoke("RetrievePresentationComments", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSetPresentationComments(string userName, long presentationId, string comment, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = userName;
                _args[1] = presentationId;
                _args[2] = comment;
                System.IAsyncResult _result = base.BeginInvoke("SetPresentationComments", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.CommentInfo> EndSetPresentationComments(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.CommentInfo> _result = ((System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.CommentInfo>)(base.EndInvoke("SetPresentationComments", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdatePreMeetingVoteDetails(string userName, System.Collections.Generic.List<GreenField.ServiceCaller.MeetingDefinitions.VoterInfo> voterInfo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = userName;
                _args[1] = voterInfo;
                System.IAsyncResult _result = base.BeginInvoke("UpdatePreMeetingVoteDetails", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndUpdatePreMeetingVoteDetails(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("UpdatePreMeetingVoteDetails", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateMeetingPresentationDate(string userName, long presentationId, GreenField.ServiceCaller.MeetingDefinitions.MeetingInfo meetingInfo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = userName;
                _args[1] = presentationId;
                _args[2] = meetingInfo;
                System.IAsyncResult _result = base.BeginInvoke("UpdateMeetingPresentationDate", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndUpdateMeetingPresentationDate(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("UpdateMeetingPresentationDate", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSetMessageInfo(string emailTo, string emailCc, string emailSubject, string emailMessageBody, string emailAttachment, string userName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = emailTo;
                _args[1] = emailCc;
                _args[2] = emailSubject;
                _args[3] = emailMessageBody;
                _args[4] = emailAttachment;
                _args[5] = userName;
                System.IAsyncResult _result = base.BeginInvoke("SetMessageInfo", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndSetMessageInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("SetMessageInfo", _args, result)));
                return _result;
            }
        }
    }
}
