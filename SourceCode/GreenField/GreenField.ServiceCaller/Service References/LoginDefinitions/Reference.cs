//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace GreenField.ServiceCaller.LoginDefinitions {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MembershipUserInfo", Namespace="http://schemas.datacontract.org/2004/07/GreenField.Web.DataContracts")]
    public partial class MembershipUserInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CommentField;
        
        private System.DateTime CreateDateField;
        
        private string EmailField;
        
        private bool IsApprovedField;
        
        private bool IsLockedOutField;
        
        private bool IsOnlineField;
        
        private System.DateTime LastActivityDateField;
        
        private System.DateTime LastLockOutDateField;
        
        private System.DateTime LastLogInDateField;
        
        private System.DateTime LastPassWordChangedDateField;
        
        private string PasswordQuestionField;
        
        private string ProviderNameField;
        
        private string ProviderUserKeyField;
        
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateDate {
            get {
                return this.CreateDateField;
            }
            set {
                if ((this.CreateDateField.Equals(value) != true)) {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsApproved {
            get {
                return this.IsApprovedField;
            }
            set {
                if ((this.IsApprovedField.Equals(value) != true)) {
                    this.IsApprovedField = value;
                    this.RaisePropertyChanged("IsApproved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLockedOut {
            get {
                return this.IsLockedOutField;
            }
            set {
                if ((this.IsLockedOutField.Equals(value) != true)) {
                    this.IsLockedOutField = value;
                    this.RaisePropertyChanged("IsLockedOut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsOnline {
            get {
                return this.IsOnlineField;
            }
            set {
                if ((this.IsOnlineField.Equals(value) != true)) {
                    this.IsOnlineField = value;
                    this.RaisePropertyChanged("IsOnline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastActivityDate {
            get {
                return this.LastActivityDateField;
            }
            set {
                if ((this.LastActivityDateField.Equals(value) != true)) {
                    this.LastActivityDateField = value;
                    this.RaisePropertyChanged("LastActivityDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastLockOutDate {
            get {
                return this.LastLockOutDateField;
            }
            set {
                if ((this.LastLockOutDateField.Equals(value) != true)) {
                    this.LastLockOutDateField = value;
                    this.RaisePropertyChanged("LastLockOutDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastLogInDate {
            get {
                return this.LastLogInDateField;
            }
            set {
                if ((this.LastLogInDateField.Equals(value) != true)) {
                    this.LastLogInDateField = value;
                    this.RaisePropertyChanged("LastLogInDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastPassWordChangedDate {
            get {
                return this.LastPassWordChangedDateField;
            }
            set {
                if ((this.LastPassWordChangedDateField.Equals(value) != true)) {
                    this.LastPassWordChangedDateField = value;
                    this.RaisePropertyChanged("LastPassWordChangedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string PasswordQuestion {
            get {
                return this.PasswordQuestionField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordQuestionField, value) != true)) {
                    this.PasswordQuestionField = value;
                    this.RaisePropertyChanged("PasswordQuestion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProviderName {
            get {
                return this.ProviderNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProviderNameField, value) != true)) {
                    this.ProviderNameField = value;
                    this.RaisePropertyChanged("ProviderName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string ProviderUserKey {
            get {
                return this.ProviderUserKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.ProviderUserKeyField, value) != true)) {
                    this.ProviderUserKeyField = value;
                    this.RaisePropertyChanged("ProviderUserKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LoginDefinitions.LoginOperations")]
    public interface LoginOperations {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/LoginOperations/ValidateUser", ReplyAction="http://tempuri.org/LoginOperations/ValidateUserResponse")]
        System.IAsyncResult BeginValidateUser(string username, string password, System.AsyncCallback callback, object asyncState);
        
        bool EndValidateUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/LoginOperations/CreateUser", ReplyAction="http://tempuri.org/LoginOperations/CreateUserResponse")]
        System.IAsyncResult BeginCreateUser(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, System.AsyncCallback callback, object asyncState);
        
        string EndCreateUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/LoginOperations/ChangePassword", ReplyAction="http://tempuri.org/LoginOperations/ChangePasswordResponse")]
        System.IAsyncResult BeginChangePassword(string username, string oldPassword, string newPassword, System.AsyncCallback callback, object asyncState);
        
        bool EndChangePassword(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/LoginOperations/ResetPassword", ReplyAction="http://tempuri.org/LoginOperations/ResetPasswordResponse")]
        System.IAsyncResult BeginResetPassword(string username, string answer, System.AsyncCallback callback, object asyncState);
        
        string EndResetPassword(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/LoginOperations/UpdateApprovalForUser", ReplyAction="http://tempuri.org/LoginOperations/UpdateApprovalForUserResponse")]
        System.IAsyncResult BeginUpdateApprovalForUser(GreenField.ServiceCaller.LoginDefinitions.MembershipUserInfo membershipUserInfo, System.AsyncCallback callback, object asyncState);
        
        bool EndUpdateApprovalForUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/LoginOperations/UpdateApprovalForUsers", ReplyAction="http://tempuri.org/LoginOperations/UpdateApprovalForUsersResponse")]
        System.IAsyncResult BeginUpdateApprovalForUsers(System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.LoginDefinitions.MembershipUserInfo> users, System.AsyncCallback callback, object asyncState);
        
        bool EndUpdateApprovalForUsers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/LoginOperations/DeleteUser", ReplyAction="http://tempuri.org/LoginOperations/DeleteUserResponse")]
        System.IAsyncResult BeginDeleteUser(string username, System.AsyncCallback callback, object asyncState);
        
        bool EndDeleteUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/LoginOperations/DeleteUsers", ReplyAction="http://tempuri.org/LoginOperations/DeleteUsersResponse")]
        System.IAsyncResult BeginDeleteUsers(System.Collections.ObjectModel.ObservableCollection<string> usernames, System.AsyncCallback callback, object asyncState);
        
        bool EndDeleteUsers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/LoginOperations/GetUser", ReplyAction="http://tempuri.org/LoginOperations/GetUserResponse")]
        System.IAsyncResult BeginGetUser(string username, bool userIsOnline, System.AsyncCallback callback, object asyncState);
        
        GreenField.ServiceCaller.LoginDefinitions.MembershipUserInfo EndGetUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/LoginOperations/GetAllUsers", ReplyAction="http://tempuri.org/LoginOperations/GetAllUsersResponse")]
        System.IAsyncResult BeginGetAllUsers(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.LoginDefinitions.MembershipUserInfo> EndGetAllUsers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/LoginOperations/UnlockUser", ReplyAction="http://tempuri.org/LoginOperations/UnlockUserResponse")]
        System.IAsyncResult BeginUnlockUser(string userName, System.AsyncCallback callback, object asyncState);
        
        bool EndUnlockUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/LoginOperations/UnlockUsers", ReplyAction="http://tempuri.org/LoginOperations/UnlockUsersResponse")]
        System.IAsyncResult BeginUnlockUsers(System.Collections.ObjectModel.ObservableCollection<string> userNames, System.AsyncCallback callback, object asyncState);
        
        bool EndUnlockUsers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/LoginOperations/GetAllRoles", ReplyAction="http://tempuri.org/LoginOperations/GetAllRolesResponse")]
        System.IAsyncResult BeginGetAllRoles(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<string> EndGetAllRoles(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/LoginOperations/CreateRole", ReplyAction="http://tempuri.org/LoginOperations/CreateRoleResponse")]
        System.IAsyncResult BeginCreateRole(string roleName, System.AsyncCallback callback, object asyncState);
        
        bool EndCreateRole(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/LoginOperations/GetRolesForUser", ReplyAction="http://tempuri.org/LoginOperations/GetRolesForUserResponse")]
        System.IAsyncResult BeginGetRolesForUser(string username, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<string> EndGetRolesForUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/LoginOperations/RemoveUsersFromRoles", ReplyAction="http://tempuri.org/LoginOperations/RemoveUsersFromRolesResponse")]
        System.IAsyncResult BeginRemoveUsersFromRoles(System.Collections.ObjectModel.ObservableCollection<string> usernames, System.Collections.ObjectModel.ObservableCollection<string> roleNames, System.AsyncCallback callback, object asyncState);
        
        bool EndRemoveUsersFromRoles(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/LoginOperations/AddUsersToRoles", ReplyAction="http://tempuri.org/LoginOperations/AddUsersToRolesResponse")]
        System.IAsyncResult BeginAddUsersToRoles(System.Collections.ObjectModel.ObservableCollection<string> usernames, System.Collections.ObjectModel.ObservableCollection<string> roleNames, System.AsyncCallback callback, object asyncState);
        
        bool EndAddUsersToRoles(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/LoginOperations/UpdateUserRoles", ReplyAction="http://tempuri.org/LoginOperations/UpdateUserRolesResponse")]
        System.IAsyncResult BeginUpdateUserRoles(string userName, System.Collections.ObjectModel.ObservableCollection<string> addRoleNames, System.Collections.ObjectModel.ObservableCollection<string> deleteRoleNames, System.AsyncCallback callback, object asyncState);
        
        bool EndUpdateUserRoles(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/LoginOperations/DeleteRole", ReplyAction="http://tempuri.org/LoginOperations/DeleteRoleResponse")]
        System.IAsyncResult BeginDeleteRole(string username, bool throwOnPopulatedRole, System.AsyncCallback callback, object asyncState);
        
        bool EndDeleteRole(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface LoginOperationsChannel : GreenField.ServiceCaller.LoginDefinitions.LoginOperations, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ValidateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ValidateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChangePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ChangePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ResetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ResetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateApprovalForUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateApprovalForUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateApprovalForUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateApprovalForUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public GreenField.ServiceCaller.LoginDefinitions.MembershipUserInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((GreenField.ServiceCaller.LoginDefinitions.MembershipUserInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.LoginDefinitions.MembershipUserInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.LoginDefinitions.MembershipUserInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UnlockUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UnlockUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UnlockUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UnlockUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRolesForUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRolesForUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RemoveUsersFromRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RemoveUsersFromRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddUsersToRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddUsersToRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateUserRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateUserRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginOperationsClient : System.ServiceModel.ClientBase<GreenField.ServiceCaller.LoginDefinitions.LoginOperations>, GreenField.ServiceCaller.LoginDefinitions.LoginOperations {
        
        private BeginOperationDelegate onBeginValidateUserDelegate;
        
        private EndOperationDelegate onEndValidateUserDelegate;
        
        private System.Threading.SendOrPostCallback onValidateUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateUserDelegate;
        
        private EndOperationDelegate onEndCreateUserDelegate;
        
        private System.Threading.SendOrPostCallback onCreateUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginChangePasswordDelegate;
        
        private EndOperationDelegate onEndChangePasswordDelegate;
        
        private System.Threading.SendOrPostCallback onChangePasswordCompletedDelegate;
        
        private BeginOperationDelegate onBeginResetPasswordDelegate;
        
        private EndOperationDelegate onEndResetPasswordDelegate;
        
        private System.Threading.SendOrPostCallback onResetPasswordCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateApprovalForUserDelegate;
        
        private EndOperationDelegate onEndUpdateApprovalForUserDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateApprovalForUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateApprovalForUsersDelegate;
        
        private EndOperationDelegate onEndUpdateApprovalForUsersDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateApprovalForUsersCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteUserDelegate;
        
        private EndOperationDelegate onEndDeleteUserDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteUsersDelegate;
        
        private EndOperationDelegate onEndDeleteUsersDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteUsersCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserDelegate;
        
        private EndOperationDelegate onEndGetUserDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllUsersDelegate;
        
        private EndOperationDelegate onEndGetAllUsersDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllUsersCompletedDelegate;
        
        private BeginOperationDelegate onBeginUnlockUserDelegate;
        
        private EndOperationDelegate onEndUnlockUserDelegate;
        
        private System.Threading.SendOrPostCallback onUnlockUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginUnlockUsersDelegate;
        
        private EndOperationDelegate onEndUnlockUsersDelegate;
        
        private System.Threading.SendOrPostCallback onUnlockUsersCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllRolesDelegate;
        
        private EndOperationDelegate onEndGetAllRolesDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllRolesCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateRoleDelegate;
        
        private EndOperationDelegate onEndCreateRoleDelegate;
        
        private System.Threading.SendOrPostCallback onCreateRoleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRolesForUserDelegate;
        
        private EndOperationDelegate onEndGetRolesForUserDelegate;
        
        private System.Threading.SendOrPostCallback onGetRolesForUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveUsersFromRolesDelegate;
        
        private EndOperationDelegate onEndRemoveUsersFromRolesDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveUsersFromRolesCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddUsersToRolesDelegate;
        
        private EndOperationDelegate onEndAddUsersToRolesDelegate;
        
        private System.Threading.SendOrPostCallback onAddUsersToRolesCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateUserRolesDelegate;
        
        private EndOperationDelegate onEndUpdateUserRolesDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateUserRolesCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteRoleDelegate;
        
        private EndOperationDelegate onEndDeleteRoleDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteRoleCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public LoginOperationsClient() {
        }
        
        public LoginOperationsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LoginOperationsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoginOperationsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoginOperationsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<ValidateUserCompletedEventArgs> ValidateUserCompleted;
        
        public event System.EventHandler<CreateUserCompletedEventArgs> CreateUserCompleted;
        
        public event System.EventHandler<ChangePasswordCompletedEventArgs> ChangePasswordCompleted;
        
        public event System.EventHandler<ResetPasswordCompletedEventArgs> ResetPasswordCompleted;
        
        public event System.EventHandler<UpdateApprovalForUserCompletedEventArgs> UpdateApprovalForUserCompleted;
        
        public event System.EventHandler<UpdateApprovalForUsersCompletedEventArgs> UpdateApprovalForUsersCompleted;
        
        public event System.EventHandler<DeleteUserCompletedEventArgs> DeleteUserCompleted;
        
        public event System.EventHandler<DeleteUsersCompletedEventArgs> DeleteUsersCompleted;
        
        public event System.EventHandler<GetUserCompletedEventArgs> GetUserCompleted;
        
        public event System.EventHandler<GetAllUsersCompletedEventArgs> GetAllUsersCompleted;
        
        public event System.EventHandler<UnlockUserCompletedEventArgs> UnlockUserCompleted;
        
        public event System.EventHandler<UnlockUsersCompletedEventArgs> UnlockUsersCompleted;
        
        public event System.EventHandler<GetAllRolesCompletedEventArgs> GetAllRolesCompleted;
        
        public event System.EventHandler<CreateRoleCompletedEventArgs> CreateRoleCompleted;
        
        public event System.EventHandler<GetRolesForUserCompletedEventArgs> GetRolesForUserCompleted;
        
        public event System.EventHandler<RemoveUsersFromRolesCompletedEventArgs> RemoveUsersFromRolesCompleted;
        
        public event System.EventHandler<AddUsersToRolesCompletedEventArgs> AddUsersToRolesCompleted;
        
        public event System.EventHandler<UpdateUserRolesCompletedEventArgs> UpdateUserRolesCompleted;
        
        public event System.EventHandler<DeleteRoleCompletedEventArgs> DeleteRoleCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.LoginDefinitions.LoginOperations.BeginValidateUser(string username, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginValidateUser(username, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool GreenField.ServiceCaller.LoginDefinitions.LoginOperations.EndValidateUser(System.IAsyncResult result) {
            return base.Channel.EndValidateUser(result);
        }
        
        private System.IAsyncResult OnBeginValidateUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            return ((GreenField.ServiceCaller.LoginDefinitions.LoginOperations)(this)).BeginValidateUser(username, password, callback, asyncState);
        }
        
        private object[] OnEndValidateUser(System.IAsyncResult result) {
            bool retVal = ((GreenField.ServiceCaller.LoginDefinitions.LoginOperations)(this)).EndValidateUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnValidateUserCompleted(object state) {
            if ((this.ValidateUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ValidateUserCompleted(this, new ValidateUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ValidateUserAsync(string username, string password) {
            this.ValidateUserAsync(username, password, null);
        }
        
        public void ValidateUserAsync(string username, string password, object userState) {
            if ((this.onBeginValidateUserDelegate == null)) {
                this.onBeginValidateUserDelegate = new BeginOperationDelegate(this.OnBeginValidateUser);
            }
            if ((this.onEndValidateUserDelegate == null)) {
                this.onEndValidateUserDelegate = new EndOperationDelegate(this.OnEndValidateUser);
            }
            if ((this.onValidateUserCompletedDelegate == null)) {
                this.onValidateUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnValidateUserCompleted);
            }
            base.InvokeAsync(this.onBeginValidateUserDelegate, new object[] {
                        username,
                        password}, this.onEndValidateUserDelegate, this.onValidateUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.LoginDefinitions.LoginOperations.BeginCreateUser(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateUser(username, password, email, passwordQuestion, passwordAnswer, isApproved, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string GreenField.ServiceCaller.LoginDefinitions.LoginOperations.EndCreateUser(System.IAsyncResult result) {
            return base.Channel.EndCreateUser(result);
        }
        
        private System.IAsyncResult OnBeginCreateUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            string email = ((string)(inValues[2]));
            string passwordQuestion = ((string)(inValues[3]));
            string passwordAnswer = ((string)(inValues[4]));
            bool isApproved = ((bool)(inValues[5]));
            return ((GreenField.ServiceCaller.LoginDefinitions.LoginOperations)(this)).BeginCreateUser(username, password, email, passwordQuestion, passwordAnswer, isApproved, callback, asyncState);
        }
        
        private object[] OnEndCreateUser(System.IAsyncResult result) {
            string retVal = ((GreenField.ServiceCaller.LoginDefinitions.LoginOperations)(this)).EndCreateUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateUserCompleted(object state) {
            if ((this.CreateUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateUserCompleted(this, new CreateUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateUserAsync(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved) {
            this.CreateUserAsync(username, password, email, passwordQuestion, passwordAnswer, isApproved, null);
        }
        
        public void CreateUserAsync(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object userState) {
            if ((this.onBeginCreateUserDelegate == null)) {
                this.onBeginCreateUserDelegate = new BeginOperationDelegate(this.OnBeginCreateUser);
            }
            if ((this.onEndCreateUserDelegate == null)) {
                this.onEndCreateUserDelegate = new EndOperationDelegate(this.OnEndCreateUser);
            }
            if ((this.onCreateUserCompletedDelegate == null)) {
                this.onCreateUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateUserCompleted);
            }
            base.InvokeAsync(this.onBeginCreateUserDelegate, new object[] {
                        username,
                        password,
                        email,
                        passwordQuestion,
                        passwordAnswer,
                        isApproved}, this.onEndCreateUserDelegate, this.onCreateUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.LoginDefinitions.LoginOperations.BeginChangePassword(string username, string oldPassword, string newPassword, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginChangePassword(username, oldPassword, newPassword, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool GreenField.ServiceCaller.LoginDefinitions.LoginOperations.EndChangePassword(System.IAsyncResult result) {
            return base.Channel.EndChangePassword(result);
        }
        
        private System.IAsyncResult OnBeginChangePassword(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            string oldPassword = ((string)(inValues[1]));
            string newPassword = ((string)(inValues[2]));
            return ((GreenField.ServiceCaller.LoginDefinitions.LoginOperations)(this)).BeginChangePassword(username, oldPassword, newPassword, callback, asyncState);
        }
        
        private object[] OnEndChangePassword(System.IAsyncResult result) {
            bool retVal = ((GreenField.ServiceCaller.LoginDefinitions.LoginOperations)(this)).EndChangePassword(result);
            return new object[] {
                    retVal};
        }
        
        private void OnChangePasswordCompleted(object state) {
            if ((this.ChangePasswordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ChangePasswordCompleted(this, new ChangePasswordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ChangePasswordAsync(string username, string oldPassword, string newPassword) {
            this.ChangePasswordAsync(username, oldPassword, newPassword, null);
        }
        
        public void ChangePasswordAsync(string username, string oldPassword, string newPassword, object userState) {
            if ((this.onBeginChangePasswordDelegate == null)) {
                this.onBeginChangePasswordDelegate = new BeginOperationDelegate(this.OnBeginChangePassword);
            }
            if ((this.onEndChangePasswordDelegate == null)) {
                this.onEndChangePasswordDelegate = new EndOperationDelegate(this.OnEndChangePassword);
            }
            if ((this.onChangePasswordCompletedDelegate == null)) {
                this.onChangePasswordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnChangePasswordCompleted);
            }
            base.InvokeAsync(this.onBeginChangePasswordDelegate, new object[] {
                        username,
                        oldPassword,
                        newPassword}, this.onEndChangePasswordDelegate, this.onChangePasswordCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.LoginDefinitions.LoginOperations.BeginResetPassword(string username, string answer, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginResetPassword(username, answer, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string GreenField.ServiceCaller.LoginDefinitions.LoginOperations.EndResetPassword(System.IAsyncResult result) {
            return base.Channel.EndResetPassword(result);
        }
        
        private System.IAsyncResult OnBeginResetPassword(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            string answer = ((string)(inValues[1]));
            return ((GreenField.ServiceCaller.LoginDefinitions.LoginOperations)(this)).BeginResetPassword(username, answer, callback, asyncState);
        }
        
        private object[] OnEndResetPassword(System.IAsyncResult result) {
            string retVal = ((GreenField.ServiceCaller.LoginDefinitions.LoginOperations)(this)).EndResetPassword(result);
            return new object[] {
                    retVal};
        }
        
        private void OnResetPasswordCompleted(object state) {
            if ((this.ResetPasswordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ResetPasswordCompleted(this, new ResetPasswordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ResetPasswordAsync(string username, string answer) {
            this.ResetPasswordAsync(username, answer, null);
        }
        
        public void ResetPasswordAsync(string username, string answer, object userState) {
            if ((this.onBeginResetPasswordDelegate == null)) {
                this.onBeginResetPasswordDelegate = new BeginOperationDelegate(this.OnBeginResetPassword);
            }
            if ((this.onEndResetPasswordDelegate == null)) {
                this.onEndResetPasswordDelegate = new EndOperationDelegate(this.OnEndResetPassword);
            }
            if ((this.onResetPasswordCompletedDelegate == null)) {
                this.onResetPasswordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnResetPasswordCompleted);
            }
            base.InvokeAsync(this.onBeginResetPasswordDelegate, new object[] {
                        username,
                        answer}, this.onEndResetPasswordDelegate, this.onResetPasswordCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.LoginDefinitions.LoginOperations.BeginUpdateApprovalForUser(GreenField.ServiceCaller.LoginDefinitions.MembershipUserInfo membershipUserInfo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateApprovalForUser(membershipUserInfo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool GreenField.ServiceCaller.LoginDefinitions.LoginOperations.EndUpdateApprovalForUser(System.IAsyncResult result) {
            return base.Channel.EndUpdateApprovalForUser(result);
        }
        
        private System.IAsyncResult OnBeginUpdateApprovalForUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            GreenField.ServiceCaller.LoginDefinitions.MembershipUserInfo membershipUserInfo = ((GreenField.ServiceCaller.LoginDefinitions.MembershipUserInfo)(inValues[0]));
            return ((GreenField.ServiceCaller.LoginDefinitions.LoginOperations)(this)).BeginUpdateApprovalForUser(membershipUserInfo, callback, asyncState);
        }
        
        private object[] OnEndUpdateApprovalForUser(System.IAsyncResult result) {
            bool retVal = ((GreenField.ServiceCaller.LoginDefinitions.LoginOperations)(this)).EndUpdateApprovalForUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateApprovalForUserCompleted(object state) {
            if ((this.UpdateApprovalForUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateApprovalForUserCompleted(this, new UpdateApprovalForUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateApprovalForUserAsync(GreenField.ServiceCaller.LoginDefinitions.MembershipUserInfo membershipUserInfo) {
            this.UpdateApprovalForUserAsync(membershipUserInfo, null);
        }
        
        public void UpdateApprovalForUserAsync(GreenField.ServiceCaller.LoginDefinitions.MembershipUserInfo membershipUserInfo, object userState) {
            if ((this.onBeginUpdateApprovalForUserDelegate == null)) {
                this.onBeginUpdateApprovalForUserDelegate = new BeginOperationDelegate(this.OnBeginUpdateApprovalForUser);
            }
            if ((this.onEndUpdateApprovalForUserDelegate == null)) {
                this.onEndUpdateApprovalForUserDelegate = new EndOperationDelegate(this.OnEndUpdateApprovalForUser);
            }
            if ((this.onUpdateApprovalForUserCompletedDelegate == null)) {
                this.onUpdateApprovalForUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateApprovalForUserCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateApprovalForUserDelegate, new object[] {
                        membershipUserInfo}, this.onEndUpdateApprovalForUserDelegate, this.onUpdateApprovalForUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.LoginDefinitions.LoginOperations.BeginUpdateApprovalForUsers(System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.LoginDefinitions.MembershipUserInfo> users, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateApprovalForUsers(users, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool GreenField.ServiceCaller.LoginDefinitions.LoginOperations.EndUpdateApprovalForUsers(System.IAsyncResult result) {
            return base.Channel.EndUpdateApprovalForUsers(result);
        }
        
        private System.IAsyncResult OnBeginUpdateApprovalForUsers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.LoginDefinitions.MembershipUserInfo> users = ((System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.LoginDefinitions.MembershipUserInfo>)(inValues[0]));
            return ((GreenField.ServiceCaller.LoginDefinitions.LoginOperations)(this)).BeginUpdateApprovalForUsers(users, callback, asyncState);
        }
        
        private object[] OnEndUpdateApprovalForUsers(System.IAsyncResult result) {
            bool retVal = ((GreenField.ServiceCaller.LoginDefinitions.LoginOperations)(this)).EndUpdateApprovalForUsers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateApprovalForUsersCompleted(object state) {
            if ((this.UpdateApprovalForUsersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateApprovalForUsersCompleted(this, new UpdateApprovalForUsersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateApprovalForUsersAsync(System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.LoginDefinitions.MembershipUserInfo> users) {
            this.UpdateApprovalForUsersAsync(users, null);
        }
        
        public void UpdateApprovalForUsersAsync(System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.LoginDefinitions.MembershipUserInfo> users, object userState) {
            if ((this.onBeginUpdateApprovalForUsersDelegate == null)) {
                this.onBeginUpdateApprovalForUsersDelegate = new BeginOperationDelegate(this.OnBeginUpdateApprovalForUsers);
            }
            if ((this.onEndUpdateApprovalForUsersDelegate == null)) {
                this.onEndUpdateApprovalForUsersDelegate = new EndOperationDelegate(this.OnEndUpdateApprovalForUsers);
            }
            if ((this.onUpdateApprovalForUsersCompletedDelegate == null)) {
                this.onUpdateApprovalForUsersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateApprovalForUsersCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateApprovalForUsersDelegate, new object[] {
                        users}, this.onEndUpdateApprovalForUsersDelegate, this.onUpdateApprovalForUsersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.LoginDefinitions.LoginOperations.BeginDeleteUser(string username, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteUser(username, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool GreenField.ServiceCaller.LoginDefinitions.LoginOperations.EndDeleteUser(System.IAsyncResult result) {
            return base.Channel.EndDeleteUser(result);
        }
        
        private System.IAsyncResult OnBeginDeleteUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            return ((GreenField.ServiceCaller.LoginDefinitions.LoginOperations)(this)).BeginDeleteUser(username, callback, asyncState);
        }
        
        private object[] OnEndDeleteUser(System.IAsyncResult result) {
            bool retVal = ((GreenField.ServiceCaller.LoginDefinitions.LoginOperations)(this)).EndDeleteUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteUserCompleted(object state) {
            if ((this.DeleteUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteUserCompleted(this, new DeleteUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteUserAsync(string username) {
            this.DeleteUserAsync(username, null);
        }
        
        public void DeleteUserAsync(string username, object userState) {
            if ((this.onBeginDeleteUserDelegate == null)) {
                this.onBeginDeleteUserDelegate = new BeginOperationDelegate(this.OnBeginDeleteUser);
            }
            if ((this.onEndDeleteUserDelegate == null)) {
                this.onEndDeleteUserDelegate = new EndOperationDelegate(this.OnEndDeleteUser);
            }
            if ((this.onDeleteUserCompletedDelegate == null)) {
                this.onDeleteUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteUserCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteUserDelegate, new object[] {
                        username}, this.onEndDeleteUserDelegate, this.onDeleteUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.LoginDefinitions.LoginOperations.BeginDeleteUsers(System.Collections.ObjectModel.ObservableCollection<string> usernames, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteUsers(usernames, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool GreenField.ServiceCaller.LoginDefinitions.LoginOperations.EndDeleteUsers(System.IAsyncResult result) {
            return base.Channel.EndDeleteUsers(result);
        }
        
        private System.IAsyncResult OnBeginDeleteUsers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<string> usernames = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[0]));
            return ((GreenField.ServiceCaller.LoginDefinitions.LoginOperations)(this)).BeginDeleteUsers(usernames, callback, asyncState);
        }
        
        private object[] OnEndDeleteUsers(System.IAsyncResult result) {
            bool retVal = ((GreenField.ServiceCaller.LoginDefinitions.LoginOperations)(this)).EndDeleteUsers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteUsersCompleted(object state) {
            if ((this.DeleteUsersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteUsersCompleted(this, new DeleteUsersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteUsersAsync(System.Collections.ObjectModel.ObservableCollection<string> usernames) {
            this.DeleteUsersAsync(usernames, null);
        }
        
        public void DeleteUsersAsync(System.Collections.ObjectModel.ObservableCollection<string> usernames, object userState) {
            if ((this.onBeginDeleteUsersDelegate == null)) {
                this.onBeginDeleteUsersDelegate = new BeginOperationDelegate(this.OnBeginDeleteUsers);
            }
            if ((this.onEndDeleteUsersDelegate == null)) {
                this.onEndDeleteUsersDelegate = new EndOperationDelegate(this.OnEndDeleteUsers);
            }
            if ((this.onDeleteUsersCompletedDelegate == null)) {
                this.onDeleteUsersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteUsersCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteUsersDelegate, new object[] {
                        usernames}, this.onEndDeleteUsersDelegate, this.onDeleteUsersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.LoginDefinitions.LoginOperations.BeginGetUser(string username, bool userIsOnline, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUser(username, userIsOnline, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GreenField.ServiceCaller.LoginDefinitions.MembershipUserInfo GreenField.ServiceCaller.LoginDefinitions.LoginOperations.EndGetUser(System.IAsyncResult result) {
            return base.Channel.EndGetUser(result);
        }
        
        private System.IAsyncResult OnBeginGetUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            bool userIsOnline = ((bool)(inValues[1]));
            return ((GreenField.ServiceCaller.LoginDefinitions.LoginOperations)(this)).BeginGetUser(username, userIsOnline, callback, asyncState);
        }
        
        private object[] OnEndGetUser(System.IAsyncResult result) {
            GreenField.ServiceCaller.LoginDefinitions.MembershipUserInfo retVal = ((GreenField.ServiceCaller.LoginDefinitions.LoginOperations)(this)).EndGetUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserCompleted(object state) {
            if ((this.GetUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserCompleted(this, new GetUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserAsync(string username, bool userIsOnline) {
            this.GetUserAsync(username, userIsOnline, null);
        }
        
        public void GetUserAsync(string username, bool userIsOnline, object userState) {
            if ((this.onBeginGetUserDelegate == null)) {
                this.onBeginGetUserDelegate = new BeginOperationDelegate(this.OnBeginGetUser);
            }
            if ((this.onEndGetUserDelegate == null)) {
                this.onEndGetUserDelegate = new EndOperationDelegate(this.OnEndGetUser);
            }
            if ((this.onGetUserCompletedDelegate == null)) {
                this.onGetUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserDelegate, new object[] {
                        username,
                        userIsOnline}, this.onEndGetUserDelegate, this.onGetUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.LoginDefinitions.LoginOperations.BeginGetAllUsers(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllUsers(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.LoginDefinitions.MembershipUserInfo> GreenField.ServiceCaller.LoginDefinitions.LoginOperations.EndGetAllUsers(System.IAsyncResult result) {
            return base.Channel.EndGetAllUsers(result);
        }
        
        private System.IAsyncResult OnBeginGetAllUsers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((GreenField.ServiceCaller.LoginDefinitions.LoginOperations)(this)).BeginGetAllUsers(callback, asyncState);
        }
        
        private object[] OnEndGetAllUsers(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.LoginDefinitions.MembershipUserInfo> retVal = ((GreenField.ServiceCaller.LoginDefinitions.LoginOperations)(this)).EndGetAllUsers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllUsersCompleted(object state) {
            if ((this.GetAllUsersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllUsersCompleted(this, new GetAllUsersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllUsersAsync() {
            this.GetAllUsersAsync(null);
        }
        
        public void GetAllUsersAsync(object userState) {
            if ((this.onBeginGetAllUsersDelegate == null)) {
                this.onBeginGetAllUsersDelegate = new BeginOperationDelegate(this.OnBeginGetAllUsers);
            }
            if ((this.onEndGetAllUsersDelegate == null)) {
                this.onEndGetAllUsersDelegate = new EndOperationDelegate(this.OnEndGetAllUsers);
            }
            if ((this.onGetAllUsersCompletedDelegate == null)) {
                this.onGetAllUsersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllUsersCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllUsersDelegate, null, this.onEndGetAllUsersDelegate, this.onGetAllUsersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.LoginDefinitions.LoginOperations.BeginUnlockUser(string userName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUnlockUser(userName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool GreenField.ServiceCaller.LoginDefinitions.LoginOperations.EndUnlockUser(System.IAsyncResult result) {
            return base.Channel.EndUnlockUser(result);
        }
        
        private System.IAsyncResult OnBeginUnlockUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            return ((GreenField.ServiceCaller.LoginDefinitions.LoginOperations)(this)).BeginUnlockUser(userName, callback, asyncState);
        }
        
        private object[] OnEndUnlockUser(System.IAsyncResult result) {
            bool retVal = ((GreenField.ServiceCaller.LoginDefinitions.LoginOperations)(this)).EndUnlockUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUnlockUserCompleted(object state) {
            if ((this.UnlockUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UnlockUserCompleted(this, new UnlockUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UnlockUserAsync(string userName) {
            this.UnlockUserAsync(userName, null);
        }
        
        public void UnlockUserAsync(string userName, object userState) {
            if ((this.onBeginUnlockUserDelegate == null)) {
                this.onBeginUnlockUserDelegate = new BeginOperationDelegate(this.OnBeginUnlockUser);
            }
            if ((this.onEndUnlockUserDelegate == null)) {
                this.onEndUnlockUserDelegate = new EndOperationDelegate(this.OnEndUnlockUser);
            }
            if ((this.onUnlockUserCompletedDelegate == null)) {
                this.onUnlockUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUnlockUserCompleted);
            }
            base.InvokeAsync(this.onBeginUnlockUserDelegate, new object[] {
                        userName}, this.onEndUnlockUserDelegate, this.onUnlockUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.LoginDefinitions.LoginOperations.BeginUnlockUsers(System.Collections.ObjectModel.ObservableCollection<string> userNames, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUnlockUsers(userNames, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool GreenField.ServiceCaller.LoginDefinitions.LoginOperations.EndUnlockUsers(System.IAsyncResult result) {
            return base.Channel.EndUnlockUsers(result);
        }
        
        private System.IAsyncResult OnBeginUnlockUsers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<string> userNames = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[0]));
            return ((GreenField.ServiceCaller.LoginDefinitions.LoginOperations)(this)).BeginUnlockUsers(userNames, callback, asyncState);
        }
        
        private object[] OnEndUnlockUsers(System.IAsyncResult result) {
            bool retVal = ((GreenField.ServiceCaller.LoginDefinitions.LoginOperations)(this)).EndUnlockUsers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUnlockUsersCompleted(object state) {
            if ((this.UnlockUsersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UnlockUsersCompleted(this, new UnlockUsersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UnlockUsersAsync(System.Collections.ObjectModel.ObservableCollection<string> userNames) {
            this.UnlockUsersAsync(userNames, null);
        }
        
        public void UnlockUsersAsync(System.Collections.ObjectModel.ObservableCollection<string> userNames, object userState) {
            if ((this.onBeginUnlockUsersDelegate == null)) {
                this.onBeginUnlockUsersDelegate = new BeginOperationDelegate(this.OnBeginUnlockUsers);
            }
            if ((this.onEndUnlockUsersDelegate == null)) {
                this.onEndUnlockUsersDelegate = new EndOperationDelegate(this.OnEndUnlockUsers);
            }
            if ((this.onUnlockUsersCompletedDelegate == null)) {
                this.onUnlockUsersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUnlockUsersCompleted);
            }
            base.InvokeAsync(this.onBeginUnlockUsersDelegate, new object[] {
                        userNames}, this.onEndUnlockUsersDelegate, this.onUnlockUsersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.LoginDefinitions.LoginOperations.BeginGetAllRoles(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllRoles(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<string> GreenField.ServiceCaller.LoginDefinitions.LoginOperations.EndGetAllRoles(System.IAsyncResult result) {
            return base.Channel.EndGetAllRoles(result);
        }
        
        private System.IAsyncResult OnBeginGetAllRoles(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((GreenField.ServiceCaller.LoginDefinitions.LoginOperations)(this)).BeginGetAllRoles(callback, asyncState);
        }
        
        private object[] OnEndGetAllRoles(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<string> retVal = ((GreenField.ServiceCaller.LoginDefinitions.LoginOperations)(this)).EndGetAllRoles(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllRolesCompleted(object state) {
            if ((this.GetAllRolesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllRolesCompleted(this, new GetAllRolesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllRolesAsync() {
            this.GetAllRolesAsync(null);
        }
        
        public void GetAllRolesAsync(object userState) {
            if ((this.onBeginGetAllRolesDelegate == null)) {
                this.onBeginGetAllRolesDelegate = new BeginOperationDelegate(this.OnBeginGetAllRoles);
            }
            if ((this.onEndGetAllRolesDelegate == null)) {
                this.onEndGetAllRolesDelegate = new EndOperationDelegate(this.OnEndGetAllRoles);
            }
            if ((this.onGetAllRolesCompletedDelegate == null)) {
                this.onGetAllRolesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllRolesCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllRolesDelegate, null, this.onEndGetAllRolesDelegate, this.onGetAllRolesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.LoginDefinitions.LoginOperations.BeginCreateRole(string roleName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateRole(roleName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool GreenField.ServiceCaller.LoginDefinitions.LoginOperations.EndCreateRole(System.IAsyncResult result) {
            return base.Channel.EndCreateRole(result);
        }
        
        private System.IAsyncResult OnBeginCreateRole(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string roleName = ((string)(inValues[0]));
            return ((GreenField.ServiceCaller.LoginDefinitions.LoginOperations)(this)).BeginCreateRole(roleName, callback, asyncState);
        }
        
        private object[] OnEndCreateRole(System.IAsyncResult result) {
            bool retVal = ((GreenField.ServiceCaller.LoginDefinitions.LoginOperations)(this)).EndCreateRole(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateRoleCompleted(object state) {
            if ((this.CreateRoleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateRoleCompleted(this, new CreateRoleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateRoleAsync(string roleName) {
            this.CreateRoleAsync(roleName, null);
        }
        
        public void CreateRoleAsync(string roleName, object userState) {
            if ((this.onBeginCreateRoleDelegate == null)) {
                this.onBeginCreateRoleDelegate = new BeginOperationDelegate(this.OnBeginCreateRole);
            }
            if ((this.onEndCreateRoleDelegate == null)) {
                this.onEndCreateRoleDelegate = new EndOperationDelegate(this.OnEndCreateRole);
            }
            if ((this.onCreateRoleCompletedDelegate == null)) {
                this.onCreateRoleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateRoleCompleted);
            }
            base.InvokeAsync(this.onBeginCreateRoleDelegate, new object[] {
                        roleName}, this.onEndCreateRoleDelegate, this.onCreateRoleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.LoginDefinitions.LoginOperations.BeginGetRolesForUser(string username, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRolesForUser(username, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<string> GreenField.ServiceCaller.LoginDefinitions.LoginOperations.EndGetRolesForUser(System.IAsyncResult result) {
            return base.Channel.EndGetRolesForUser(result);
        }
        
        private System.IAsyncResult OnBeginGetRolesForUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            return ((GreenField.ServiceCaller.LoginDefinitions.LoginOperations)(this)).BeginGetRolesForUser(username, callback, asyncState);
        }
        
        private object[] OnEndGetRolesForUser(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<string> retVal = ((GreenField.ServiceCaller.LoginDefinitions.LoginOperations)(this)).EndGetRolesForUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRolesForUserCompleted(object state) {
            if ((this.GetRolesForUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRolesForUserCompleted(this, new GetRolesForUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRolesForUserAsync(string username) {
            this.GetRolesForUserAsync(username, null);
        }
        
        public void GetRolesForUserAsync(string username, object userState) {
            if ((this.onBeginGetRolesForUserDelegate == null)) {
                this.onBeginGetRolesForUserDelegate = new BeginOperationDelegate(this.OnBeginGetRolesForUser);
            }
            if ((this.onEndGetRolesForUserDelegate == null)) {
                this.onEndGetRolesForUserDelegate = new EndOperationDelegate(this.OnEndGetRolesForUser);
            }
            if ((this.onGetRolesForUserCompletedDelegate == null)) {
                this.onGetRolesForUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRolesForUserCompleted);
            }
            base.InvokeAsync(this.onBeginGetRolesForUserDelegate, new object[] {
                        username}, this.onEndGetRolesForUserDelegate, this.onGetRolesForUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.LoginDefinitions.LoginOperations.BeginRemoveUsersFromRoles(System.Collections.ObjectModel.ObservableCollection<string> usernames, System.Collections.ObjectModel.ObservableCollection<string> roleNames, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveUsersFromRoles(usernames, roleNames, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool GreenField.ServiceCaller.LoginDefinitions.LoginOperations.EndRemoveUsersFromRoles(System.IAsyncResult result) {
            return base.Channel.EndRemoveUsersFromRoles(result);
        }
        
        private System.IAsyncResult OnBeginRemoveUsersFromRoles(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<string> usernames = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[0]));
            System.Collections.ObjectModel.ObservableCollection<string> roleNames = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[1]));
            return ((GreenField.ServiceCaller.LoginDefinitions.LoginOperations)(this)).BeginRemoveUsersFromRoles(usernames, roleNames, callback, asyncState);
        }
        
        private object[] OnEndRemoveUsersFromRoles(System.IAsyncResult result) {
            bool retVal = ((GreenField.ServiceCaller.LoginDefinitions.LoginOperations)(this)).EndRemoveUsersFromRoles(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRemoveUsersFromRolesCompleted(object state) {
            if ((this.RemoveUsersFromRolesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveUsersFromRolesCompleted(this, new RemoveUsersFromRolesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveUsersFromRolesAsync(System.Collections.ObjectModel.ObservableCollection<string> usernames, System.Collections.ObjectModel.ObservableCollection<string> roleNames) {
            this.RemoveUsersFromRolesAsync(usernames, roleNames, null);
        }
        
        public void RemoveUsersFromRolesAsync(System.Collections.ObjectModel.ObservableCollection<string> usernames, System.Collections.ObjectModel.ObservableCollection<string> roleNames, object userState) {
            if ((this.onBeginRemoveUsersFromRolesDelegate == null)) {
                this.onBeginRemoveUsersFromRolesDelegate = new BeginOperationDelegate(this.OnBeginRemoveUsersFromRoles);
            }
            if ((this.onEndRemoveUsersFromRolesDelegate == null)) {
                this.onEndRemoveUsersFromRolesDelegate = new EndOperationDelegate(this.OnEndRemoveUsersFromRoles);
            }
            if ((this.onRemoveUsersFromRolesCompletedDelegate == null)) {
                this.onRemoveUsersFromRolesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveUsersFromRolesCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveUsersFromRolesDelegate, new object[] {
                        usernames,
                        roleNames}, this.onEndRemoveUsersFromRolesDelegate, this.onRemoveUsersFromRolesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.LoginDefinitions.LoginOperations.BeginAddUsersToRoles(System.Collections.ObjectModel.ObservableCollection<string> usernames, System.Collections.ObjectModel.ObservableCollection<string> roleNames, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUsersToRoles(usernames, roleNames, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool GreenField.ServiceCaller.LoginDefinitions.LoginOperations.EndAddUsersToRoles(System.IAsyncResult result) {
            return base.Channel.EndAddUsersToRoles(result);
        }
        
        private System.IAsyncResult OnBeginAddUsersToRoles(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<string> usernames = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[0]));
            System.Collections.ObjectModel.ObservableCollection<string> roleNames = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[1]));
            return ((GreenField.ServiceCaller.LoginDefinitions.LoginOperations)(this)).BeginAddUsersToRoles(usernames, roleNames, callback, asyncState);
        }
        
        private object[] OnEndAddUsersToRoles(System.IAsyncResult result) {
            bool retVal = ((GreenField.ServiceCaller.LoginDefinitions.LoginOperations)(this)).EndAddUsersToRoles(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddUsersToRolesCompleted(object state) {
            if ((this.AddUsersToRolesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUsersToRolesCompleted(this, new AddUsersToRolesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUsersToRolesAsync(System.Collections.ObjectModel.ObservableCollection<string> usernames, System.Collections.ObjectModel.ObservableCollection<string> roleNames) {
            this.AddUsersToRolesAsync(usernames, roleNames, null);
        }
        
        public void AddUsersToRolesAsync(System.Collections.ObjectModel.ObservableCollection<string> usernames, System.Collections.ObjectModel.ObservableCollection<string> roleNames, object userState) {
            if ((this.onBeginAddUsersToRolesDelegate == null)) {
                this.onBeginAddUsersToRolesDelegate = new BeginOperationDelegate(this.OnBeginAddUsersToRoles);
            }
            if ((this.onEndAddUsersToRolesDelegate == null)) {
                this.onEndAddUsersToRolesDelegate = new EndOperationDelegate(this.OnEndAddUsersToRoles);
            }
            if ((this.onAddUsersToRolesCompletedDelegate == null)) {
                this.onAddUsersToRolesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUsersToRolesCompleted);
            }
            base.InvokeAsync(this.onBeginAddUsersToRolesDelegate, new object[] {
                        usernames,
                        roleNames}, this.onEndAddUsersToRolesDelegate, this.onAddUsersToRolesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.LoginDefinitions.LoginOperations.BeginUpdateUserRoles(string userName, System.Collections.ObjectModel.ObservableCollection<string> addRoleNames, System.Collections.ObjectModel.ObservableCollection<string> deleteRoleNames, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateUserRoles(userName, addRoleNames, deleteRoleNames, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool GreenField.ServiceCaller.LoginDefinitions.LoginOperations.EndUpdateUserRoles(System.IAsyncResult result) {
            return base.Channel.EndUpdateUserRoles(result);
        }
        
        private System.IAsyncResult OnBeginUpdateUserRoles(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            System.Collections.ObjectModel.ObservableCollection<string> addRoleNames = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[1]));
            System.Collections.ObjectModel.ObservableCollection<string> deleteRoleNames = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[2]));
            return ((GreenField.ServiceCaller.LoginDefinitions.LoginOperations)(this)).BeginUpdateUserRoles(userName, addRoleNames, deleteRoleNames, callback, asyncState);
        }
        
        private object[] OnEndUpdateUserRoles(System.IAsyncResult result) {
            bool retVal = ((GreenField.ServiceCaller.LoginDefinitions.LoginOperations)(this)).EndUpdateUserRoles(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateUserRolesCompleted(object state) {
            if ((this.UpdateUserRolesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateUserRolesCompleted(this, new UpdateUserRolesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateUserRolesAsync(string userName, System.Collections.ObjectModel.ObservableCollection<string> addRoleNames, System.Collections.ObjectModel.ObservableCollection<string> deleteRoleNames) {
            this.UpdateUserRolesAsync(userName, addRoleNames, deleteRoleNames, null);
        }
        
        public void UpdateUserRolesAsync(string userName, System.Collections.ObjectModel.ObservableCollection<string> addRoleNames, System.Collections.ObjectModel.ObservableCollection<string> deleteRoleNames, object userState) {
            if ((this.onBeginUpdateUserRolesDelegate == null)) {
                this.onBeginUpdateUserRolesDelegate = new BeginOperationDelegate(this.OnBeginUpdateUserRoles);
            }
            if ((this.onEndUpdateUserRolesDelegate == null)) {
                this.onEndUpdateUserRolesDelegate = new EndOperationDelegate(this.OnEndUpdateUserRoles);
            }
            if ((this.onUpdateUserRolesCompletedDelegate == null)) {
                this.onUpdateUserRolesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateUserRolesCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateUserRolesDelegate, new object[] {
                        userName,
                        addRoleNames,
                        deleteRoleNames}, this.onEndUpdateUserRolesDelegate, this.onUpdateUserRolesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GreenField.ServiceCaller.LoginDefinitions.LoginOperations.BeginDeleteRole(string username, bool throwOnPopulatedRole, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteRole(username, throwOnPopulatedRole, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool GreenField.ServiceCaller.LoginDefinitions.LoginOperations.EndDeleteRole(System.IAsyncResult result) {
            return base.Channel.EndDeleteRole(result);
        }
        
        private System.IAsyncResult OnBeginDeleteRole(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            bool throwOnPopulatedRole = ((bool)(inValues[1]));
            return ((GreenField.ServiceCaller.LoginDefinitions.LoginOperations)(this)).BeginDeleteRole(username, throwOnPopulatedRole, callback, asyncState);
        }
        
        private object[] OnEndDeleteRole(System.IAsyncResult result) {
            bool retVal = ((GreenField.ServiceCaller.LoginDefinitions.LoginOperations)(this)).EndDeleteRole(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteRoleCompleted(object state) {
            if ((this.DeleteRoleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteRoleCompleted(this, new DeleteRoleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteRoleAsync(string username, bool throwOnPopulatedRole) {
            this.DeleteRoleAsync(username, throwOnPopulatedRole, null);
        }
        
        public void DeleteRoleAsync(string username, bool throwOnPopulatedRole, object userState) {
            if ((this.onBeginDeleteRoleDelegate == null)) {
                this.onBeginDeleteRoleDelegate = new BeginOperationDelegate(this.OnBeginDeleteRole);
            }
            if ((this.onEndDeleteRoleDelegate == null)) {
                this.onEndDeleteRoleDelegate = new EndOperationDelegate(this.OnEndDeleteRole);
            }
            if ((this.onDeleteRoleCompletedDelegate == null)) {
                this.onDeleteRoleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteRoleCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteRoleDelegate, new object[] {
                        username,
                        throwOnPopulatedRole}, this.onEndDeleteRoleDelegate, this.onDeleteRoleCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override GreenField.ServiceCaller.LoginDefinitions.LoginOperations CreateChannel() {
            return new LoginOperationsClientChannel(this);
        }
        
        private class LoginOperationsClientChannel : ChannelBase<GreenField.ServiceCaller.LoginDefinitions.LoginOperations>, GreenField.ServiceCaller.LoginDefinitions.LoginOperations {
            
            public LoginOperationsClientChannel(System.ServiceModel.ClientBase<GreenField.ServiceCaller.LoginDefinitions.LoginOperations> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginValidateUser(string username, string password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = username;
                _args[1] = password;
                System.IAsyncResult _result = base.BeginInvoke("ValidateUser", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndValidateUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("ValidateUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCreateUser(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = username;
                _args[1] = password;
                _args[2] = email;
                _args[3] = passwordQuestion;
                _args[4] = passwordAnswer;
                _args[5] = isApproved;
                System.IAsyncResult _result = base.BeginInvoke("CreateUser", _args, callback, asyncState);
                return _result;
            }
            
            public string EndCreateUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("CreateUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginChangePassword(string username, string oldPassword, string newPassword, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = username;
                _args[1] = oldPassword;
                _args[2] = newPassword;
                System.IAsyncResult _result = base.BeginInvoke("ChangePassword", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndChangePassword(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("ChangePassword", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginResetPassword(string username, string answer, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = username;
                _args[1] = answer;
                System.IAsyncResult _result = base.BeginInvoke("ResetPassword", _args, callback, asyncState);
                return _result;
            }
            
            public string EndResetPassword(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("ResetPassword", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateApprovalForUser(GreenField.ServiceCaller.LoginDefinitions.MembershipUserInfo membershipUserInfo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = membershipUserInfo;
                System.IAsyncResult _result = base.BeginInvoke("UpdateApprovalForUser", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndUpdateApprovalForUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("UpdateApprovalForUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateApprovalForUsers(System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.LoginDefinitions.MembershipUserInfo> users, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = users;
                System.IAsyncResult _result = base.BeginInvoke("UpdateApprovalForUsers", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndUpdateApprovalForUsers(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("UpdateApprovalForUsers", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteUser(string username, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = username;
                System.IAsyncResult _result = base.BeginInvoke("DeleteUser", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndDeleteUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("DeleteUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteUsers(System.Collections.ObjectModel.ObservableCollection<string> usernames, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = usernames;
                System.IAsyncResult _result = base.BeginInvoke("DeleteUsers", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndDeleteUsers(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("DeleteUsers", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetUser(string username, bool userIsOnline, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = username;
                _args[1] = userIsOnline;
                System.IAsyncResult _result = base.BeginInvoke("GetUser", _args, callback, asyncState);
                return _result;
            }
            
            public GreenField.ServiceCaller.LoginDefinitions.MembershipUserInfo EndGetUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                GreenField.ServiceCaller.LoginDefinitions.MembershipUserInfo _result = ((GreenField.ServiceCaller.LoginDefinitions.MembershipUserInfo)(base.EndInvoke("GetUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllUsers(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAllUsers", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.LoginDefinitions.MembershipUserInfo> EndGetAllUsers(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.LoginDefinitions.MembershipUserInfo> _result = ((System.Collections.ObjectModel.ObservableCollection<GreenField.ServiceCaller.LoginDefinitions.MembershipUserInfo>)(base.EndInvoke("GetAllUsers", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUnlockUser(string userName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userName;
                System.IAsyncResult _result = base.BeginInvoke("UnlockUser", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndUnlockUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("UnlockUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUnlockUsers(System.Collections.ObjectModel.ObservableCollection<string> userNames, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userNames;
                System.IAsyncResult _result = base.BeginInvoke("UnlockUsers", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndUnlockUsers(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("UnlockUsers", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllRoles(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAllRoles", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<string> EndGetAllRoles(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<string> _result = ((System.Collections.ObjectModel.ObservableCollection<string>)(base.EndInvoke("GetAllRoles", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCreateRole(string roleName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = roleName;
                System.IAsyncResult _result = base.BeginInvoke("CreateRole", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndCreateRole(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("CreateRole", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetRolesForUser(string username, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = username;
                System.IAsyncResult _result = base.BeginInvoke("GetRolesForUser", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<string> EndGetRolesForUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<string> _result = ((System.Collections.ObjectModel.ObservableCollection<string>)(base.EndInvoke("GetRolesForUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRemoveUsersFromRoles(System.Collections.ObjectModel.ObservableCollection<string> usernames, System.Collections.ObjectModel.ObservableCollection<string> roleNames, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = usernames;
                _args[1] = roleNames;
                System.IAsyncResult _result = base.BeginInvoke("RemoveUsersFromRoles", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndRemoveUsersFromRoles(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("RemoveUsersFromRoles", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddUsersToRoles(System.Collections.ObjectModel.ObservableCollection<string> usernames, System.Collections.ObjectModel.ObservableCollection<string> roleNames, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = usernames;
                _args[1] = roleNames;
                System.IAsyncResult _result = base.BeginInvoke("AddUsersToRoles", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndAddUsersToRoles(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("AddUsersToRoles", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateUserRoles(string userName, System.Collections.ObjectModel.ObservableCollection<string> addRoleNames, System.Collections.ObjectModel.ObservableCollection<string> deleteRoleNames, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = userName;
                _args[1] = addRoleNames;
                _args[2] = deleteRoleNames;
                System.IAsyncResult _result = base.BeginInvoke("UpdateUserRoles", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndUpdateUserRoles(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("UpdateUserRoles", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteRole(string username, bool throwOnPopulatedRole, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = username;
                _args[1] = throwOnPopulatedRole;
                System.IAsyncResult _result = base.BeginInvoke("DeleteRole", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndDeleteRole(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("DeleteRole", _args, result)));
                return _result;
            }
        }
    }
}
