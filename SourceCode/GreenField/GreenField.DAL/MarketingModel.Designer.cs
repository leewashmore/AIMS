//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace GreenField.DAL
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class MarketingEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new MarketingEntities object using the connection string found in the 'MarketingEntities' section of the application configuration file.
        /// </summary>
        public MarketingEntities() : base("name=MarketingEntities", "MarketingEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MarketingEntities object.
        /// </summary>
        public MarketingEntities(string connectionString) : base(connectionString, "MarketingEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MarketingEntities object.
        /// </summary>
        public MarketingEntities(EntityConnection connection) : base(connection, "MarketingEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="effective_date">No Metadata Documentation available.</param>
        /// <param name="portfolio_id">No Metadata Documentation available.</param>
        public ObjectResult<GetPCDataForMarketing_Result> GetPCDataForMarketing(Nullable<global::System.DateTime> effective_date, global::System.String portfolio_id)
        {
            ObjectParameter effective_dateParameter;
            if (effective_date.HasValue)
            {
                effective_dateParameter = new ObjectParameter("effective_date", effective_date);
            }
            else
            {
                effective_dateParameter = new ObjectParameter("effective_date", typeof(global::System.DateTime));
            }
    
            ObjectParameter portfolio_idParameter;
            if (portfolio_id != null)
            {
                portfolio_idParameter = new ObjectParameter("portfolio_id", portfolio_id);
            }
            else
            {
                portfolio_idParameter = new ObjectParameter("portfolio_id", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<GetPCDataForMarketing_Result>("GetPCDataForMarketing", effective_dateParameter, portfolio_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="effective_date">No Metadata Documentation available.</param>
        /// <param name="portfolio_id">No Metadata Documentation available.</param>
        /// <param name="method">No Metadata Documentation available.</param>
        /// <param name="relativePeriod">No Metadata Documentation available.</param>
        /// <param name="dataId">No Metadata Documentation available.</param>
        /// <param name="value">No Metadata Documentation available.</param>
        public int SaveUpdatedPortfolioValuation(Nullable<global::System.DateTime> effective_date, global::System.String portfolio_id, global::System.String method, Nullable<global::System.Int32> relativePeriod, Nullable<global::System.Int32> dataId, Nullable<global::System.Decimal> value)
        {
            ObjectParameter effective_dateParameter;
            if (effective_date.HasValue)
            {
                effective_dateParameter = new ObjectParameter("effective_date", effective_date);
            }
            else
            {
                effective_dateParameter = new ObjectParameter("effective_date", typeof(global::System.DateTime));
            }
    
            ObjectParameter portfolio_idParameter;
            if (portfolio_id != null)
            {
                portfolio_idParameter = new ObjectParameter("portfolio_id", portfolio_id);
            }
            else
            {
                portfolio_idParameter = new ObjectParameter("portfolio_id", typeof(global::System.String));
            }
    
            ObjectParameter methodParameter;
            if (method != null)
            {
                methodParameter = new ObjectParameter("method", method);
            }
            else
            {
                methodParameter = new ObjectParameter("method", typeof(global::System.String));
            }
    
            ObjectParameter relativePeriodParameter;
            if (relativePeriod.HasValue)
            {
                relativePeriodParameter = new ObjectParameter("relativePeriod", relativePeriod);
            }
            else
            {
                relativePeriodParameter = new ObjectParameter("relativePeriod", typeof(global::System.Int32));
            }
    
            ObjectParameter dataIdParameter;
            if (dataId.HasValue)
            {
                dataIdParameter = new ObjectParameter("dataId", dataId);
            }
            else
            {
                dataIdParameter = new ObjectParameter("dataId", typeof(global::System.Int32));
            }
    
            ObjectParameter valueParameter;
            if (value.HasValue)
            {
                valueParameter = new ObjectParameter("value", value);
            }
            else
            {
                valueParameter = new ObjectParameter("value", typeof(global::System.Decimal));
            }
    
            return base.ExecuteFunction("SaveUpdatedPortfolioValuation", effective_dateParameter, portfolio_idParameter, methodParameter, relativePeriodParameter, dataIdParameter, valueParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="portfolio_id">No Metadata Documentation available.</param>
        /// <param name="effective_date">No Metadata Documentation available.</param>
        /// <param name="dataId">No Metadata Documentation available.</param>
        /// <param name="dataSource">No Metadata Documentation available.</param>
        /// <param name="currency">No Metadata Documentation available.</param>
        /// <param name="period_type">No Metadata Documentation available.</param>
        /// <param name="year">No Metadata Documentation available.</param>
        /// <param name="fiscal_type">No Metadata Documentation available.</param>
        public ObjectResult<GetSecurityLevelPFDataForMarketing_Result> GetSecurityLevelPFDataForMarketing(global::System.String portfolio_id, Nullable<global::System.DateTime> effective_date, Nullable<global::System.Int32> dataId, global::System.String dataSource, global::System.String currency, global::System.String period_type, Nullable<global::System.Int32> year, global::System.String fiscal_type)
        {
            ObjectParameter portfolio_idParameter;
            if (portfolio_id != null)
            {
                portfolio_idParameter = new ObjectParameter("portfolio_id", portfolio_id);
            }
            else
            {
                portfolio_idParameter = new ObjectParameter("portfolio_id", typeof(global::System.String));
            }
    
            ObjectParameter effective_dateParameter;
            if (effective_date.HasValue)
            {
                effective_dateParameter = new ObjectParameter("effective_date", effective_date);
            }
            else
            {
                effective_dateParameter = new ObjectParameter("effective_date", typeof(global::System.DateTime));
            }
    
            ObjectParameter dataIdParameter;
            if (dataId.HasValue)
            {
                dataIdParameter = new ObjectParameter("DataId", dataId);
            }
            else
            {
                dataIdParameter = new ObjectParameter("DataId", typeof(global::System.Int32));
            }
    
            ObjectParameter dataSourceParameter;
            if (dataSource != null)
            {
                dataSourceParameter = new ObjectParameter("DataSource", dataSource);
            }
            else
            {
                dataSourceParameter = new ObjectParameter("DataSource", typeof(global::System.String));
            }
    
            ObjectParameter currencyParameter;
            if (currency != null)
            {
                currencyParameter = new ObjectParameter("Currency", currency);
            }
            else
            {
                currencyParameter = new ObjectParameter("Currency", typeof(global::System.String));
            }
    
            ObjectParameter period_typeParameter;
            if (period_type != null)
            {
                period_typeParameter = new ObjectParameter("period_type", period_type);
            }
            else
            {
                period_typeParameter = new ObjectParameter("period_type", typeof(global::System.String));
            }
    
            ObjectParameter yearParameter;
            if (year.HasValue)
            {
                yearParameter = new ObjectParameter("year", year);
            }
            else
            {
                yearParameter = new ObjectParameter("year", typeof(global::System.Int32));
            }
    
            ObjectParameter fiscal_typeParameter;
            if (fiscal_type != null)
            {
                fiscal_typeParameter = new ObjectParameter("fiscal_type", fiscal_type);
            }
            else
            {
                fiscal_typeParameter = new ObjectParameter("fiscal_type", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<GetSecurityLevelPFDataForMarketing_Result>("GetSecurityLevelPFDataForMarketing", portfolio_idParameter, effective_dateParameter, dataIdParameter, dataSourceParameter, currencyParameter, period_typeParameter, yearParameter, fiscal_typeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="portfolio_id">No Metadata Documentation available.</param>
        /// <param name="effective_date">No Metadata Documentation available.</param>
        /// <param name="dataId">No Metadata Documentation available.</param>
        /// <param name="dataSource">No Metadata Documentation available.</param>
        /// <param name="currency">No Metadata Documentation available.</param>
        /// <param name="period_type">No Metadata Documentation available.</param>
        /// <param name="year">No Metadata Documentation available.</param>
        /// <param name="fiscal_type">No Metadata Documentation available.</param>
        public ObjectResult<GetIssuerLevelPFDataForMarketing_Result> GetIssuerLevelPFDataForMarketing(global::System.String portfolio_id, Nullable<global::System.DateTime> effective_date, Nullable<global::System.Int32> dataId, global::System.String dataSource, global::System.String currency, global::System.String period_type, Nullable<global::System.Int32> year, global::System.String fiscal_type)
        {
            ObjectParameter portfolio_idParameter;
            if (portfolio_id != null)
            {
                portfolio_idParameter = new ObjectParameter("portfolio_id", portfolio_id);
            }
            else
            {
                portfolio_idParameter = new ObjectParameter("portfolio_id", typeof(global::System.String));
            }
    
            ObjectParameter effective_dateParameter;
            if (effective_date.HasValue)
            {
                effective_dateParameter = new ObjectParameter("effective_date", effective_date);
            }
            else
            {
                effective_dateParameter = new ObjectParameter("effective_date", typeof(global::System.DateTime));
            }
    
            ObjectParameter dataIdParameter;
            if (dataId.HasValue)
            {
                dataIdParameter = new ObjectParameter("DataId", dataId);
            }
            else
            {
                dataIdParameter = new ObjectParameter("DataId", typeof(global::System.Int32));
            }
    
            ObjectParameter dataSourceParameter;
            if (dataSource != null)
            {
                dataSourceParameter = new ObjectParameter("DataSource", dataSource);
            }
            else
            {
                dataSourceParameter = new ObjectParameter("DataSource", typeof(global::System.String));
            }
    
            ObjectParameter currencyParameter;
            if (currency != null)
            {
                currencyParameter = new ObjectParameter("Currency", currency);
            }
            else
            {
                currencyParameter = new ObjectParameter("Currency", typeof(global::System.String));
            }
    
            ObjectParameter period_typeParameter;
            if (period_type != null)
            {
                period_typeParameter = new ObjectParameter("period_type", period_type);
            }
            else
            {
                period_typeParameter = new ObjectParameter("period_type", typeof(global::System.String));
            }
    
            ObjectParameter yearParameter;
            if (year.HasValue)
            {
                yearParameter = new ObjectParameter("year", year);
            }
            else
            {
                yearParameter = new ObjectParameter("year", typeof(global::System.Int32));
            }
    
            ObjectParameter fiscal_typeParameter;
            if (fiscal_type != null)
            {
                fiscal_typeParameter = new ObjectParameter("fiscal_type", fiscal_type);
            }
            else
            {
                fiscal_typeParameter = new ObjectParameter("fiscal_type", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<GetIssuerLevelPFDataForMarketing_Result>("GetIssuerLevelPFDataForMarketing", portfolio_idParameter, effective_dateParameter, dataIdParameter, dataSourceParameter, currencyParameter, period_typeParameter, yearParameter, fiscal_typeParameter);
        }

        #endregion

    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="MarketingModel", Name="GetIssuerLevelPFDataForMarketing_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetIssuerLevelPFDataForMarketing_Result : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.String _issuer_id;
        partial void Onissuer_idChanging(global::System.String value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String asec_Sec_Short_name
        {
            get
            {
                return _asec_Sec_Short_name;
            }
            set
            {
                Onasec_Sec_Short_nameChanging(value);
                ReportPropertyChanging("asec_Sec_Short_name");
                _asec_Sec_Short_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("asec_Sec_Short_name");
                Onasec_Sec_Short_nameChanged();
            }
        }
        private global::System.String _asec_Sec_Short_name;
        partial void Onasec_Sec_Short_nameChanging(global::System.String value);
        partial void Onasec_Sec_Short_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String security_id
        {
            get
            {
                return _security_id;
            }
            set
            {
                Onsecurity_idChanging(value);
                ReportPropertyChanging("security_id");
                _security_id = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("security_id");
                Onsecurity_idChanged();
            }
        }
        private global::System.String _security_id;
        partial void Onsecurity_idChanging(global::System.String value);
        partial void Onsecurity_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> period_year
        {
            get
            {
                return _period_year;
            }
            set
            {
                Onperiod_yearChanging(value);
                ReportPropertyChanging("period_year");
                _period_year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("period_year");
                Onperiod_yearChanged();
            }
        }
        private Nullable<global::System.Int32> _period_year;
        partial void Onperiod_yearChanging(Nullable<global::System.Int32> value);
        partial void Onperiod_yearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Data_Source
        {
            get
            {
                return _Data_Source;
            }
            set
            {
                OnData_SourceChanging(value);
                ReportPropertyChanging("Data_Source");
                _Data_Source = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Data_Source");
                OnData_SourceChanged();
            }
        }
        private global::System.String _Data_Source;
        partial void OnData_SourceChanging(global::System.String value);
        partial void OnData_SourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Currency
        {
            get
            {
                return _Currency;
            }
            set
            {
                OnCurrencyChanging(value);
                ReportPropertyChanging("Currency");
                _Currency = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Currency");
                OnCurrencyChanged();
            }
        }
        private global::System.String _Currency;
        partial void OnCurrencyChanging(global::System.String value);
        partial void OnCurrencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String period_type
        {
            get
            {
                return _period_type;
            }
            set
            {
                Onperiod_typeChanging(value);
                ReportPropertyChanging("period_type");
                _period_type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("period_type");
                Onperiod_typeChanged();
            }
        }
        private global::System.String _period_type;
        partial void Onperiod_typeChanging(global::System.String value);
        partial void Onperiod_typeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DataId
        {
            get
            {
                return _DataId;
            }
            set
            {
                OnDataIdChanging(value);
                ReportPropertyChanging("DataId");
                _DataId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DataId");
                OnDataIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DataId;
        partial void OnDataIdChanging(Nullable<global::System.Int32> value);
        partial void OnDataIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> value
        {
            get
            {
                return _value;
            }
            set
            {
                OnvalueChanging(value);
                ReportPropertyChanging("value");
                _value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("value");
                OnvalueChanged();
            }
        }
        private Nullable<global::System.Decimal> _value;
        partial void OnvalueChanging(Nullable<global::System.Decimal> value);
        partial void OnvalueChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="MarketingModel", Name="GetPCDataForMarketing_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetPCDataForMarketing_Result : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String portfolio_id
        {
            get
            {
                return _portfolio_id;
            }
            set
            {
                Onportfolio_idChanging(value);
                ReportPropertyChanging("portfolio_id");
                _portfolio_id = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("portfolio_id");
                Onportfolio_idChanged();
            }
        }
        private global::System.String _portfolio_id;
        partial void Onportfolio_idChanging(global::System.String value);
        partial void Onportfolio_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.String _issuer_id;
        partial void Onissuer_idChanging(global::System.String value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String asec_sec_short_name
        {
            get
            {
                return _asec_sec_short_name;
            }
            set
            {
                Onasec_sec_short_nameChanging(value);
                ReportPropertyChanging("asec_sec_short_name");
                _asec_sec_short_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("asec_sec_short_name");
                Onasec_sec_short_nameChanged();
            }
        }
        private global::System.String _asec_sec_short_name;
        partial void Onasec_sec_short_nameChanging(global::System.String value);
        partial void Onasec_sec_short_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> dirty_price
        {
            get
            {
                return _dirty_price;
            }
            set
            {
                Ondirty_priceChanging(value);
                ReportPropertyChanging("dirty_price");
                _dirty_price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dirty_price");
                Ondirty_priceChanged();
            }
        }
        private Nullable<global::System.Decimal> _dirty_price;
        partial void Ondirty_priceChanging(Nullable<global::System.Decimal> value);
        partial void Ondirty_priceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> dirty_value_pc
        {
            get
            {
                return _dirty_value_pc;
            }
            set
            {
                Ondirty_value_pcChanging(value);
                ReportPropertyChanging("dirty_value_pc");
                _dirty_value_pc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dirty_value_pc");
                Ondirty_value_pcChanged();
            }
        }
        private Nullable<global::System.Decimal> _dirty_value_pc;
        partial void Ondirty_value_pcChanging(Nullable<global::System.Decimal> value);
        partial void Ondirty_value_pcChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="MarketingModel", Name="GetSecurityLevelPFDataForMarketing_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetSecurityLevelPFDataForMarketing_Result : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.String _issuer_id;
        partial void Onissuer_idChanging(global::System.String value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String asec_Sec_Short_name
        {
            get
            {
                return _asec_Sec_Short_name;
            }
            set
            {
                Onasec_Sec_Short_nameChanging(value);
                ReportPropertyChanging("asec_Sec_Short_name");
                _asec_Sec_Short_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("asec_Sec_Short_name");
                Onasec_Sec_Short_nameChanged();
            }
        }
        private global::System.String _asec_Sec_Short_name;
        partial void Onasec_Sec_Short_nameChanging(global::System.String value);
        partial void Onasec_Sec_Short_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String security_id
        {
            get
            {
                return _security_id;
            }
            set
            {
                Onsecurity_idChanging(value);
                ReportPropertyChanging("security_id");
                _security_id = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("security_id");
                Onsecurity_idChanged();
            }
        }
        private global::System.String _security_id;
        partial void Onsecurity_idChanging(global::System.String value);
        partial void Onsecurity_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> period_year
        {
            get
            {
                return _period_year;
            }
            set
            {
                Onperiod_yearChanging(value);
                ReportPropertyChanging("period_year");
                _period_year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("period_year");
                Onperiod_yearChanged();
            }
        }
        private Nullable<global::System.Int32> _period_year;
        partial void Onperiod_yearChanging(Nullable<global::System.Int32> value);
        partial void Onperiod_yearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Data_Source
        {
            get
            {
                return _Data_Source;
            }
            set
            {
                OnData_SourceChanging(value);
                ReportPropertyChanging("Data_Source");
                _Data_Source = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Data_Source");
                OnData_SourceChanged();
            }
        }
        private global::System.String _Data_Source;
        partial void OnData_SourceChanging(global::System.String value);
        partial void OnData_SourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Currency
        {
            get
            {
                return _Currency;
            }
            set
            {
                OnCurrencyChanging(value);
                ReportPropertyChanging("Currency");
                _Currency = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Currency");
                OnCurrencyChanged();
            }
        }
        private global::System.String _Currency;
        partial void OnCurrencyChanging(global::System.String value);
        partial void OnCurrencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String period_type
        {
            get
            {
                return _period_type;
            }
            set
            {
                Onperiod_typeChanging(value);
                ReportPropertyChanging("period_type");
                _period_type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("period_type");
                Onperiod_typeChanged();
            }
        }
        private global::System.String _period_type;
        partial void Onperiod_typeChanging(global::System.String value);
        partial void Onperiod_typeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DataId
        {
            get
            {
                return _DataId;
            }
            set
            {
                OnDataIdChanging(value);
                ReportPropertyChanging("DataId");
                _DataId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DataId");
                OnDataIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DataId;
        partial void OnDataIdChanging(Nullable<global::System.Int32> value);
        partial void OnDataIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> value
        {
            get
            {
                return _value;
            }
            set
            {
                OnvalueChanging(value);
                ReportPropertyChanging("value");
                _value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("value");
                OnvalueChanged();
            }
        }
        private Nullable<global::System.Decimal> _value;
        partial void OnvalueChanging(Nullable<global::System.Decimal> value);
        partial void OnvalueChanged();

        #endregion

    }

    #endregion

    
}
