//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace GreenField.DAL
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ExternalResearchEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ExternalResearchEntities object using the connection string found in the 'ExternalResearchEntities' section of the application configuration file.
        /// </summary>
        public ExternalResearchEntities() : base("name=ExternalResearchEntities", "ExternalResearchEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ExternalResearchEntities object.
        /// </summary>
        public ExternalResearchEntities(string connectionString) : base(connectionString, "ExternalResearchEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ExternalResearchEntities object.
        /// </summary>
        public ExternalResearchEntities(EntityConnection connection) : base(connection, "ExternalResearchEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CURRENT_CONSENSUS_ESTIMATES> CURRENT_CONSENSUS_ESTIMATES
        {
            get
            {
                if ((_CURRENT_CONSENSUS_ESTIMATES == null))
                {
                    _CURRENT_CONSENSUS_ESTIMATES = base.CreateObjectSet<CURRENT_CONSENSUS_ESTIMATES>("CURRENT_CONSENSUS_ESTIMATES");
                }
                return _CURRENT_CONSENSUS_ESTIMATES;
            }
        }
        private ObjectSet<CURRENT_CONSENSUS_ESTIMATES> _CURRENT_CONSENSUS_ESTIMATES;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DATA_MASTER> DATA_MASTER
        {
            get
            {
                if ((_DATA_MASTER == null))
                {
                    _DATA_MASTER = base.CreateObjectSet<DATA_MASTER>("DATA_MASTER");
                }
                return _DATA_MASTER;
            }
        }
        private ObjectSet<DATA_MASTER> _DATA_MASTER;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FX_RATES> FX_RATES
        {
            get
            {
                if ((_FX_RATES == null))
                {
                    _FX_RATES = base.CreateObjectSet<FX_RATES>("FX_RATES");
                }
                return _FX_RATES;
            }
        }
        private ObjectSet<FX_RATES> _FX_RATES;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<INTERNAL_ISSUER> INTERNAL_ISSUER
        {
            get
            {
                if ((_INTERNAL_ISSUER == null))
                {
                    _INTERNAL_ISSUER = base.CreateObjectSet<INTERNAL_ISSUER>("INTERNAL_ISSUER");
                }
                return _INTERNAL_ISSUER;
            }
        }
        private ObjectSet<INTERNAL_ISSUER> _INTERNAL_ISSUER;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ISSUER_SHARES> ISSUER_SHARES
        {
            get
            {
                if ((_ISSUER_SHARES == null))
                {
                    _ISSUER_SHARES = base.CreateObjectSet<ISSUER_SHARES>("ISSUER_SHARES");
                }
                return _ISSUER_SHARES;
            }
        }
        private ObjectSet<ISSUER_SHARES> _ISSUER_SHARES;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ISSUER_SHARES_COMPOSITION> ISSUER_SHARES_COMPOSITION
        {
            get
            {
                if ((_ISSUER_SHARES_COMPOSITION == null))
                {
                    _ISSUER_SHARES_COMPOSITION = base.CreateObjectSet<ISSUER_SHARES_COMPOSITION>("ISSUER_SHARES_COMPOSITION");
                }
                return _ISSUER_SHARES_COMPOSITION;
            }
        }
        private ObjectSet<ISSUER_SHARES_COMPOSITION> _ISSUER_SHARES_COMPOSITION;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Macroeconomic_Data> Macroeconomic_Data
        {
            get
            {
                if ((_Macroeconomic_Data == null))
                {
                    _Macroeconomic_Data = base.CreateObjectSet<Macroeconomic_Data>("Macroeconomic_Data");
                }
                return _Macroeconomic_Data;
            }
        }
        private ObjectSet<Macroeconomic_Data> _Macroeconomic_Data;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Macroeconomic_Display> Macroeconomic_Display
        {
            get
            {
                if ((_Macroeconomic_Display == null))
                {
                    _Macroeconomic_Display = base.CreateObjectSet<Macroeconomic_Display>("Macroeconomic_Display");
                }
                return _Macroeconomic_Display;
            }
        }
        private ObjectSet<Macroeconomic_Display> _Macroeconomic_Display;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PERIOD_FINANCIALS> PERIOD_FINANCIALS
        {
            get
            {
                if ((_PERIOD_FINANCIALS == null))
                {
                    _PERIOD_FINANCIALS = base.CreateObjectSet<PERIOD_FINANCIALS>("PERIOD_FINANCIALS");
                }
                return _PERIOD_FINANCIALS;
            }
        }
        private ObjectSet<PERIOD_FINANCIALS> _PERIOD_FINANCIALS;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PERIOD_FINANCIALS_DISPLAY> PERIOD_FINANCIALS_DISPLAY
        {
            get
            {
                if ((_PERIOD_FINANCIALS_DISPLAY == null))
                {
                    _PERIOD_FINANCIALS_DISPLAY = base.CreateObjectSet<PERIOD_FINANCIALS_DISPLAY>("PERIOD_FINANCIALS_DISPLAY");
                }
                return _PERIOD_FINANCIALS_DISPLAY;
            }
        }
        private ObjectSet<PERIOD_FINANCIALS_DISPLAY> _PERIOD_FINANCIALS_DISPLAY;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<REUTERS_XREF> REUTERS_XREF
        {
            get
            {
                if ((_REUTERS_XREF == null))
                {
                    _REUTERS_XREF = base.CreateObjectSet<REUTERS_XREF>("REUTERS_XREF");
                }
                return _REUTERS_XREF;
            }
        }
        private ObjectSet<REUTERS_XREF> _REUTERS_XREF;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PRICE> PRICES
        {
            get
            {
                if ((_PRICES == null))
                {
                    _PRICES = base.CreateObjectSet<PRICE>("PRICES");
                }
                return _PRICES;
            }
        }
        private ObjectSet<PRICE> _PRICES;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<External_Country_Master> External_Country_Master
        {
            get
            {
                if ((_External_Country_Master == null))
                {
                    _External_Country_Master = base.CreateObjectSet<External_Country_Master>("External_Country_Master");
                }
                return _External_Country_Master;
            }
        }
        private ObjectSet<External_Country_Master> _External_Country_Master;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CURRENT_CONSENSUS_ESTIMATES EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCURRENT_CONSENSUS_ESTIMATES(CURRENT_CONSENSUS_ESTIMATES cURRENT_CONSENSUS_ESTIMATES)
        {
            base.AddObject("CURRENT_CONSENSUS_ESTIMATES", cURRENT_CONSENSUS_ESTIMATES);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DATA_MASTER EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDATA_MASTER(DATA_MASTER dATA_MASTER)
        {
            base.AddObject("DATA_MASTER", dATA_MASTER);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FX_RATES EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFX_RATES(FX_RATES fX_RATES)
        {
            base.AddObject("FX_RATES", fX_RATES);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the INTERNAL_ISSUER EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToINTERNAL_ISSUER(INTERNAL_ISSUER iNTERNAL_ISSUER)
        {
            base.AddObject("INTERNAL_ISSUER", iNTERNAL_ISSUER);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ISSUER_SHARES EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToISSUER_SHARES(ISSUER_SHARES iSSUER_SHARES)
        {
            base.AddObject("ISSUER_SHARES", iSSUER_SHARES);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ISSUER_SHARES_COMPOSITION EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToISSUER_SHARES_COMPOSITION(ISSUER_SHARES_COMPOSITION iSSUER_SHARES_COMPOSITION)
        {
            base.AddObject("ISSUER_SHARES_COMPOSITION", iSSUER_SHARES_COMPOSITION);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Macroeconomic_Data EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMacroeconomic_Data(Macroeconomic_Data macroeconomic_Data)
        {
            base.AddObject("Macroeconomic_Data", macroeconomic_Data);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Macroeconomic_Display EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMacroeconomic_Display(Macroeconomic_Display macroeconomic_Display)
        {
            base.AddObject("Macroeconomic_Display", macroeconomic_Display);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PERIOD_FINANCIALS EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPERIOD_FINANCIALS(PERIOD_FINANCIALS pERIOD_FINANCIALS)
        {
            base.AddObject("PERIOD_FINANCIALS", pERIOD_FINANCIALS);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PERIOD_FINANCIALS_DISPLAY EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPERIOD_FINANCIALS_DISPLAY(PERIOD_FINANCIALS_DISPLAY pERIOD_FINANCIALS_DISPLAY)
        {
            base.AddObject("PERIOD_FINANCIALS_DISPLAY", pERIOD_FINANCIALS_DISPLAY);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the REUTERS_XREF EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToREUTERS_XREF(REUTERS_XREF rEUTERS_XREF)
        {
            base.AddObject("REUTERS_XREF", rEUTERS_XREF);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PRICES EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPRICES(PRICE pRICE)
        {
            base.AddObject("PRICES", pRICE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the External_Country_Master EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExternal_Country_Master(External_Country_Master external_Country_Master)
        {
            base.AddObject("External_Country_Master", external_Country_Master);
        }

        #endregion
        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="securityID">No Metadata Documentation available.</param>
        public ObjectResult<GetBasicData_Result> GetBasicData(global::System.String securityID)
        {
            ObjectParameter securityIDParameter;
            if (securityID != null)
            {
                securityIDParameter = new ObjectParameter("SecurityID", securityID);
            }
            else
            {
                securityIDParameter = new ObjectParameter("SecurityID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<GetBasicData_Result>("GetBasicData", securityIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="xRef">No Metadata Documentation available.</param>
        public ObjectResult<GetTargetPrice_Result> GetTargetPrice(global::System.String xRef)
        {
            ObjectParameter xRefParameter;
            if (xRef != null)
            {
                xRefParameter = new ObjectParameter("XRef", xRef);
            }
            else
            {
                xRefParameter = new ObjectParameter("XRef", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<GetTargetPrice_Result>("GetTargetPrice", xRefParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="security">No Metadata Documentation available.</param>
        public ObjectResult<ConsensusEstimatesSummaryData> GetConsensusEstimatesSummaryData(global::System.String security)
        {
            ObjectParameter securityParameter;
            if (security != null)
            {
                securityParameter = new ObjectParameter("Security", security);
            }
            else
            {
                securityParameter = new ObjectParameter("Security", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<ConsensusEstimatesSummaryData>("GetConsensusEstimatesSummaryData", securityParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="dataId">No Metadata Documentation available.</param>
        /// <param name="periodYear">No Metadata Documentation available.</param>
        public ObjectResult<QuarterlyResults> usp_GetQuarterlyResults(Nullable<global::System.Int32> dataId, Nullable<global::System.Int32> periodYear)
        {
            ObjectParameter dataIdParameter;
            if (dataId.HasValue)
            {
                dataIdParameter = new ObjectParameter("DataId", dataId);
            }
            else
            {
                dataIdParameter = new ObjectParameter("DataId", typeof(global::System.Int32));
            }
    
            ObjectParameter periodYearParameter;
            if (periodYear.HasValue)
            {
                periodYearParameter = new ObjectParameter("PeriodYear", periodYear);
            }
            else
            {
                periodYearParameter = new ObjectParameter("PeriodYear", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<QuarterlyResults>("usp_GetQuarterlyResults", dataIdParameter, periodYearParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iSSUER_ID">No Metadata Documentation available.</param>
        /// <param name="dATA_SOURCE">No Metadata Documentation available.</param>
        /// <param name="pERIOD_TYPE">No Metadata Documentation available.</param>
        /// <param name="fISCAL_TYPE">No Metadata Documentation available.</param>
        /// <param name="cURRENCY">No Metadata Documentation available.</param>
        public ObjectResult<ConsensusEstimateMedianData> GetConsensusEstimateData(global::System.String iSSUER_ID, global::System.String dATA_SOURCE, global::System.String pERIOD_TYPE, global::System.String fISCAL_TYPE, global::System.String cURRENCY)
        {
            ObjectParameter iSSUER_IDParameter;
            if (iSSUER_ID != null)
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", iSSUER_ID);
            }
            else
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", typeof(global::System.String));
            }
    
            ObjectParameter dATA_SOURCEParameter;
            if (dATA_SOURCE != null)
            {
                dATA_SOURCEParameter = new ObjectParameter("DATA_SOURCE", dATA_SOURCE);
            }
            else
            {
                dATA_SOURCEParameter = new ObjectParameter("DATA_SOURCE", typeof(global::System.String));
            }
    
            ObjectParameter pERIOD_TYPEParameter;
            if (pERIOD_TYPE != null)
            {
                pERIOD_TYPEParameter = new ObjectParameter("PERIOD_TYPE", pERIOD_TYPE);
            }
            else
            {
                pERIOD_TYPEParameter = new ObjectParameter("PERIOD_TYPE", typeof(global::System.String));
            }
    
            ObjectParameter fISCAL_TYPEParameter;
            if (fISCAL_TYPE != null)
            {
                fISCAL_TYPEParameter = new ObjectParameter("FISCAL_TYPE", fISCAL_TYPE);
            }
            else
            {
                fISCAL_TYPEParameter = new ObjectParameter("FISCAL_TYPE", typeof(global::System.String));
            }
    
            ObjectParameter cURRENCYParameter;
            if (cURRENCY != null)
            {
                cURRENCYParameter = new ObjectParameter("CURRENCY", cURRENCY);
            }
            else
            {
                cURRENCYParameter = new ObjectParameter("CURRENCY", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<ConsensusEstimateMedianData>("GetConsensusEstimateData", iSSUER_IDParameter, dATA_SOURCEParameter, pERIOD_TYPEParameter, fISCAL_TYPEParameter, cURRENCYParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iSSUER_ID">No Metadata Documentation available.</param>
        /// <param name="dATA_SOURCE">No Metadata Documentation available.</param>
        /// <param name="pERIOD_TYPE">No Metadata Documentation available.</param>
        /// <param name="fISCAL_TYPE">No Metadata Documentation available.</param>
        /// <param name="cURRENCY">No Metadata Documentation available.</param>
        /// <param name="eSTIMATE_ID">No Metadata Documentation available.</param>
        /// <param name="pERIOD_YEAR">No Metadata Documentation available.</param>
        public ObjectResult<ConsensusEstimateValuation> Get_ConsensusEstimatesValuation(global::System.String iSSUER_ID, global::System.String dATA_SOURCE, global::System.String pERIOD_TYPE, global::System.String fISCAL_TYPE, global::System.String cURRENCY, Nullable<global::System.Int32> eSTIMATE_ID, Nullable<global::System.Int32> pERIOD_YEAR)
        {
            ObjectParameter iSSUER_IDParameter;
            if (iSSUER_ID != null)
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", iSSUER_ID);
            }
            else
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", typeof(global::System.String));
            }
    
            ObjectParameter dATA_SOURCEParameter;
            if (dATA_SOURCE != null)
            {
                dATA_SOURCEParameter = new ObjectParameter("DATA_SOURCE", dATA_SOURCE);
            }
            else
            {
                dATA_SOURCEParameter = new ObjectParameter("DATA_SOURCE", typeof(global::System.String));
            }
    
            ObjectParameter pERIOD_TYPEParameter;
            if (pERIOD_TYPE != null)
            {
                pERIOD_TYPEParameter = new ObjectParameter("PERIOD_TYPE", pERIOD_TYPE);
            }
            else
            {
                pERIOD_TYPEParameter = new ObjectParameter("PERIOD_TYPE", typeof(global::System.String));
            }
    
            ObjectParameter fISCAL_TYPEParameter;
            if (fISCAL_TYPE != null)
            {
                fISCAL_TYPEParameter = new ObjectParameter("FISCAL_TYPE", fISCAL_TYPE);
            }
            else
            {
                fISCAL_TYPEParameter = new ObjectParameter("FISCAL_TYPE", typeof(global::System.String));
            }
    
            ObjectParameter cURRENCYParameter;
            if (cURRENCY != null)
            {
                cURRENCYParameter = new ObjectParameter("CURRENCY", cURRENCY);
            }
            else
            {
                cURRENCYParameter = new ObjectParameter("CURRENCY", typeof(global::System.String));
            }
    
            ObjectParameter eSTIMATE_IDParameter;
            if (eSTIMATE_ID.HasValue)
            {
                eSTIMATE_IDParameter = new ObjectParameter("ESTIMATE_ID", eSTIMATE_ID);
            }
            else
            {
                eSTIMATE_IDParameter = new ObjectParameter("ESTIMATE_ID", typeof(global::System.Int32));
            }
    
            ObjectParameter pERIOD_YEARParameter;
            if (pERIOD_YEAR.HasValue)
            {
                pERIOD_YEARParameter = new ObjectParameter("PERIOD_YEAR", pERIOD_YEAR);
            }
            else
            {
                pERIOD_YEARParameter = new ObjectParameter("PERIOD_YEAR", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<ConsensusEstimateValuation>("Get_ConsensusEstimatesValuation", iSSUER_IDParameter, dATA_SOURCEParameter, pERIOD_TYPEParameter, fISCAL_TYPEParameter, cURRENCYParameter, eSTIMATE_IDParameter, pERIOD_YEARParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iSSUER_ID">No Metadata Documentation available.</param>
        /// <param name="dATA_SOURCE">No Metadata Documentation available.</param>
        /// <param name="pERIOD_TYPE">No Metadata Documentation available.</param>
        /// <param name="fISCAL_TYPE">No Metadata Documentation available.</param>
        /// <param name="cURRENCY">No Metadata Documentation available.</param>
        /// <param name="eSTIMATE_ID">No Metadata Documentation available.</param>
        /// <param name="pERIOD_YEAR">No Metadata Documentation available.</param>
        public ObjectResult<ConsensusEstimateValuation> GetConsensusEstimatesValuation(global::System.String iSSUER_ID, global::System.String dATA_SOURCE, global::System.String pERIOD_TYPE, global::System.String fISCAL_TYPE, global::System.String cURRENCY, Nullable<global::System.Int32> eSTIMATE_ID, Nullable<global::System.Int32> pERIOD_YEAR)
        {
            ObjectParameter iSSUER_IDParameter;
            if (iSSUER_ID != null)
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", iSSUER_ID);
            }
            else
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", typeof(global::System.String));
            }
    
            ObjectParameter dATA_SOURCEParameter;
            if (dATA_SOURCE != null)
            {
                dATA_SOURCEParameter = new ObjectParameter("DATA_SOURCE", dATA_SOURCE);
            }
            else
            {
                dATA_SOURCEParameter = new ObjectParameter("DATA_SOURCE", typeof(global::System.String));
            }
    
            ObjectParameter pERIOD_TYPEParameter;
            if (pERIOD_TYPE != null)
            {
                pERIOD_TYPEParameter = new ObjectParameter("PERIOD_TYPE", pERIOD_TYPE);
            }
            else
            {
                pERIOD_TYPEParameter = new ObjectParameter("PERIOD_TYPE", typeof(global::System.String));
            }
    
            ObjectParameter fISCAL_TYPEParameter;
            if (fISCAL_TYPE != null)
            {
                fISCAL_TYPEParameter = new ObjectParameter("FISCAL_TYPE", fISCAL_TYPE);
            }
            else
            {
                fISCAL_TYPEParameter = new ObjectParameter("FISCAL_TYPE", typeof(global::System.String));
            }
    
            ObjectParameter cURRENCYParameter;
            if (cURRENCY != null)
            {
                cURRENCYParameter = new ObjectParameter("CURRENCY", cURRENCY);
            }
            else
            {
                cURRENCYParameter = new ObjectParameter("CURRENCY", typeof(global::System.String));
            }
    
            ObjectParameter eSTIMATE_IDParameter;
            if (eSTIMATE_ID.HasValue)
            {
                eSTIMATE_IDParameter = new ObjectParameter("ESTIMATE_ID", eSTIMATE_ID);
            }
            else
            {
                eSTIMATE_IDParameter = new ObjectParameter("ESTIMATE_ID", typeof(global::System.Int32));
            }
    
            ObjectParameter pERIOD_YEARParameter;
            if (pERIOD_YEAR.HasValue)
            {
                pERIOD_YEARParameter = new ObjectParameter("PERIOD_YEAR", pERIOD_YEAR);
            }
            else
            {
                pERIOD_YEARParameter = new ObjectParameter("PERIOD_YEAR", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<ConsensusEstimateValuation>("GetConsensusEstimatesValuation", iSSUER_IDParameter, dATA_SOURCEParameter, pERIOD_TYPEParameter, fISCAL_TYPEParameter, cURRENCYParameter, eSTIMATE_IDParameter, pERIOD_YEARParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iSSUER_ID">No Metadata Documentation available.</param>
        /// <param name="dATA_SOURCE">No Metadata Documentation available.</param>
        /// <param name="pERIOD_TYPE">No Metadata Documentation available.</param>
        /// <param name="fISCAL_TYPE">No Metadata Documentation available.</param>
        /// <param name="cURRENCY">No Metadata Documentation available.</param>
        public ObjectResult<ConsensusEstimateDetailData> GetConsensusDetail(global::System.String iSSUER_ID, global::System.String dATA_SOURCE, global::System.String pERIOD_TYPE, global::System.String fISCAL_TYPE, global::System.String cURRENCY)
        {
            ObjectParameter iSSUER_IDParameter;
            if (iSSUER_ID != null)
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", iSSUER_ID);
            }
            else
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", typeof(global::System.String));
            }
    
            ObjectParameter dATA_SOURCEParameter;
            if (dATA_SOURCE != null)
            {
                dATA_SOURCEParameter = new ObjectParameter("DATA_SOURCE", dATA_SOURCE);
            }
            else
            {
                dATA_SOURCEParameter = new ObjectParameter("DATA_SOURCE", typeof(global::System.String));
            }
    
            ObjectParameter pERIOD_TYPEParameter;
            if (pERIOD_TYPE != null)
            {
                pERIOD_TYPEParameter = new ObjectParameter("PERIOD_TYPE", pERIOD_TYPE);
            }
            else
            {
                pERIOD_TYPEParameter = new ObjectParameter("PERIOD_TYPE", typeof(global::System.String));
            }
    
            ObjectParameter fISCAL_TYPEParameter;
            if (fISCAL_TYPE != null)
            {
                fISCAL_TYPEParameter = new ObjectParameter("FISCAL_TYPE", fISCAL_TYPE);
            }
            else
            {
                fISCAL_TYPEParameter = new ObjectParameter("FISCAL_TYPE", typeof(global::System.String));
            }
    
            ObjectParameter cURRENCYParameter;
            if (cURRENCY != null)
            {
                cURRENCYParameter = new ObjectParameter("CURRENCY", cURRENCY);
            }
            else
            {
                cURRENCYParameter = new ObjectParameter("CURRENCY", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<ConsensusEstimateDetailData>("GetConsensusDetail", iSSUER_IDParameter, dATA_SOURCEParameter, pERIOD_TYPEParameter, fISCAL_TYPEParameter, cURRENCYParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="securityId">No Metadata Documentation available.</param>
        /// <param name="issuerId">No Metadata Documentation available.</param>
        /// <param name="chartTitle">No Metadata Documentation available.</param>
        public ObjectResult<GetPRevenueData_Result> Get_PRevenue(global::System.String securityId, global::System.String issuerId, global::System.String chartTitle)
        {
            ObjectParameter securityIdParameter;
            if (securityId != null)
            {
                securityIdParameter = new ObjectParameter("securityId", securityId);
            }
            else
            {
                securityIdParameter = new ObjectParameter("securityId", typeof(global::System.String));
            }
    
            ObjectParameter issuerIdParameter;
            if (issuerId != null)
            {
                issuerIdParameter = new ObjectParameter("issuerId", issuerId);
            }
            else
            {
                issuerIdParameter = new ObjectParameter("issuerId", typeof(global::System.String));
            }
    
            ObjectParameter chartTitleParameter;
            if (chartTitle != null)
            {
                chartTitleParameter = new ObjectParameter("chartTitle", chartTitle);
            }
            else
            {
                chartTitleParameter = new ObjectParameter("chartTitle", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<GetPRevenueData_Result>("Get_PRevenue", securityIdParameter, issuerIdParameter, chartTitleParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iSSUER_ID">No Metadata Documentation available.</param>
        /// <param name="dATA_SOURCE">No Metadata Documentation available.</param>
        /// <param name="pERIOD_TYPE">No Metadata Documentation available.</param>
        /// <param name="fISCAL_TYPE">No Metadata Documentation available.</param>
        /// <param name="sTATEMENT_TYPE">No Metadata Documentation available.</param>
        /// <param name="cURRENCY">No Metadata Documentation available.</param>
        public ObjectResult<FinancialStatementData> Get_Statement(global::System.String iSSUER_ID, global::System.String dATA_SOURCE, global::System.String pERIOD_TYPE, global::System.String fISCAL_TYPE, global::System.String sTATEMENT_TYPE, global::System.String cURRENCY)
        {
            ObjectParameter iSSUER_IDParameter;
            if (iSSUER_ID != null)
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", iSSUER_ID);
            }
            else
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", typeof(global::System.String));
            }
    
            ObjectParameter dATA_SOURCEParameter;
            if (dATA_SOURCE != null)
            {
                dATA_SOURCEParameter = new ObjectParameter("DATA_SOURCE", dATA_SOURCE);
            }
            else
            {
                dATA_SOURCEParameter = new ObjectParameter("DATA_SOURCE", typeof(global::System.String));
            }
    
            ObjectParameter pERIOD_TYPEParameter;
            if (pERIOD_TYPE != null)
            {
                pERIOD_TYPEParameter = new ObjectParameter("PERIOD_TYPE", pERIOD_TYPE);
            }
            else
            {
                pERIOD_TYPEParameter = new ObjectParameter("PERIOD_TYPE", typeof(global::System.String));
            }
    
            ObjectParameter fISCAL_TYPEParameter;
            if (fISCAL_TYPE != null)
            {
                fISCAL_TYPEParameter = new ObjectParameter("FISCAL_TYPE", fISCAL_TYPE);
            }
            else
            {
                fISCAL_TYPEParameter = new ObjectParameter("FISCAL_TYPE", typeof(global::System.String));
            }
    
            ObjectParameter sTATEMENT_TYPEParameter;
            if (sTATEMENT_TYPE != null)
            {
                sTATEMENT_TYPEParameter = new ObjectParameter("STATEMENT_TYPE", sTATEMENT_TYPE);
            }
            else
            {
                sTATEMENT_TYPEParameter = new ObjectParameter("STATEMENT_TYPE", typeof(global::System.String));
            }
    
            ObjectParameter cURRENCYParameter;
            if (cURRENCY != null)
            {
                cURRENCYParameter = new ObjectParameter("CURRENCY", cURRENCY);
            }
            else
            {
                cURRENCYParameter = new ObjectParameter("CURRENCY", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<FinancialStatementData>("Get_Statement", iSSUER_IDParameter, dATA_SOURCEParameter, pERIOD_TYPEParameter, fISCAL_TYPEParameter, sTATEMENT_TYPEParameter, cURRENCYParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="cSource">No Metadata Documentation available.</param>
        /// <param name="cFiscalType">No Metadata Documentation available.</param>
        /// <param name="cCurrency">No Metadata Documentation available.</param>
        /// <param name="cIssuerID">No Metadata Documentation available.</param>
        /// <param name="cSecurityID">No Metadata Documentation available.</param>
        public ObjectResult<COASpecificData> GetDataForPeriodGadgets(global::System.String cSource, global::System.String cFiscalType, global::System.String cCurrency, global::System.String cIssuerID, global::System.String cSecurityID)
        {
            ObjectParameter cSourceParameter;
            if (cSource != null)
            {
                cSourceParameter = new ObjectParameter("cSource", cSource);
            }
            else
            {
                cSourceParameter = new ObjectParameter("cSource", typeof(global::System.String));
            }
    
            ObjectParameter cFiscalTypeParameter;
            if (cFiscalType != null)
            {
                cFiscalTypeParameter = new ObjectParameter("cFiscalType", cFiscalType);
            }
            else
            {
                cFiscalTypeParameter = new ObjectParameter("cFiscalType", typeof(global::System.String));
            }
    
            ObjectParameter cCurrencyParameter;
            if (cCurrency != null)
            {
                cCurrencyParameter = new ObjectParameter("cCurrency", cCurrency);
            }
            else
            {
                cCurrencyParameter = new ObjectParameter("cCurrency", typeof(global::System.String));
            }
    
            ObjectParameter cIssuerIDParameter;
            if (cIssuerID != null)
            {
                cIssuerIDParameter = new ObjectParameter("cIssuerID", cIssuerID);
            }
            else
            {
                cIssuerIDParameter = new ObjectParameter("cIssuerID", typeof(global::System.String));
            }
    
            ObjectParameter cSecurityIDParameter;
            if (cSecurityID != null)
            {
                cSecurityIDParameter = new ObjectParameter("cSecurityID", cSecurityID);
            }
            else
            {
                cSecurityIDParameter = new ObjectParameter("cSecurityID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<COASpecificData>("GetDataForPeriodGadgets", cSourceParameter, cFiscalTypeParameter, cCurrencyParameter, cIssuerIDParameter, cSecurityIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuerID">No Metadata Documentation available.</param>
        /// <param name="securityId">No Metadata Documentation available.</param>
        /// <param name="dataSource">No Metadata Documentation available.</param>
        /// <param name="fiscalType">No Metadata Documentation available.</param>
        /// <param name="currency">No Metadata Documentation available.</param>
        public ObjectResult<FinstatDetail> GetFinstatDetail(global::System.String issuerID, global::System.String securityId, global::System.String dataSource, global::System.String fiscalType, global::System.String currency)
        {
            ObjectParameter issuerIDParameter;
            if (issuerID != null)
            {
                issuerIDParameter = new ObjectParameter("issuerID", issuerID);
            }
            else
            {
                issuerIDParameter = new ObjectParameter("issuerID", typeof(global::System.String));
            }
    
            ObjectParameter securityIdParameter;
            if (securityId != null)
            {
                securityIdParameter = new ObjectParameter("securityId", securityId);
            }
            else
            {
                securityIdParameter = new ObjectParameter("securityId", typeof(global::System.String));
            }
    
            ObjectParameter dataSourceParameter;
            if (dataSource != null)
            {
                dataSourceParameter = new ObjectParameter("dataSource", dataSource);
            }
            else
            {
                dataSourceParameter = new ObjectParameter("dataSource", typeof(global::System.String));
            }
    
            ObjectParameter fiscalTypeParameter;
            if (fiscalType != null)
            {
                fiscalTypeParameter = new ObjectParameter("fiscalType", fiscalType);
            }
            else
            {
                fiscalTypeParameter = new ObjectParameter("fiscalType", typeof(global::System.String));
            }
    
            ObjectParameter currencyParameter;
            if (currency != null)
            {
                currencyParameter = new ObjectParameter("currency", currency);
            }
            else
            {
                currencyParameter = new ObjectParameter("currency", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<FinstatDetail>("GetFinstatDetail", issuerIDParameter, securityIdParameter, dataSourceParameter, fiscalTypeParameter, currencyParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="securityId">No Metadata Documentation available.</param>
        /// <param name="issuerId">No Metadata Documentation available.</param>
        /// <param name="chartTitle">No Metadata Documentation available.</param>
        public ObjectResult<GetEV_EBITDAData_Result> Get_EV_EBITDA(global::System.String securityId, global::System.String issuerId, global::System.String chartTitle)
        {
            ObjectParameter securityIdParameter;
            if (securityId != null)
            {
                securityIdParameter = new ObjectParameter("securityId", securityId);
            }
            else
            {
                securityIdParameter = new ObjectParameter("securityId", typeof(global::System.String));
            }
    
            ObjectParameter issuerIdParameter;
            if (issuerId != null)
            {
                issuerIdParameter = new ObjectParameter("issuerId", issuerId);
            }
            else
            {
                issuerIdParameter = new ObjectParameter("issuerId", typeof(global::System.String));
            }
    
            ObjectParameter chartTitleParameter;
            if (chartTitle != null)
            {
                chartTitleParameter = new ObjectParameter("chartTitle", chartTitle);
            }
            else
            {
                chartTitleParameter = new ObjectParameter("chartTitle", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<GetEV_EBITDAData_Result>("Get_EV_EBITDA", securityIdParameter, issuerIdParameter, chartTitleParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuerID">No Metadata Documentation available.</param>
        /// <param name="securityId">No Metadata Documentation available.</param>
        /// <param name="dataSource">No Metadata Documentation available.</param>
        /// <param name="fiscalType">No Metadata Documentation available.</param>
        /// <param name="currency">No Metadata Documentation available.</param>
        public ObjectResult<FinstatEconomicMarketData> GetFinstatEconomicMarketData(global::System.String issuerID, global::System.String securityId, global::System.String dataSource, global::System.String fiscalType, global::System.String currency)
        {
            ObjectParameter issuerIDParameter;
            if (issuerID != null)
            {
                issuerIDParameter = new ObjectParameter("issuerID", issuerID);
            }
            else
            {
                issuerIDParameter = new ObjectParameter("issuerID", typeof(global::System.String));
            }
    
            ObjectParameter securityIdParameter;
            if (securityId != null)
            {
                securityIdParameter = new ObjectParameter("securityId", securityId);
            }
            else
            {
                securityIdParameter = new ObjectParameter("securityId", typeof(global::System.String));
            }
    
            ObjectParameter dataSourceParameter;
            if (dataSource != null)
            {
                dataSourceParameter = new ObjectParameter("dataSource", dataSource);
            }
            else
            {
                dataSourceParameter = new ObjectParameter("dataSource", typeof(global::System.String));
            }
    
            ObjectParameter fiscalTypeParameter;
            if (fiscalType != null)
            {
                fiscalTypeParameter = new ObjectParameter("fiscalType", fiscalType);
            }
            else
            {
                fiscalTypeParameter = new ObjectParameter("fiscalType", typeof(global::System.String));
            }
    
            ObjectParameter currencyParameter;
            if (currency != null)
            {
                currencyParameter = new ObjectParameter("currency", currency);
            }
            else
            {
                currencyParameter = new ObjectParameter("currency", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<FinstatEconomicMarketData>("GetFinstatEconomicMarketData", issuerIDParameter, securityIdParameter, dataSourceParameter, fiscalTypeParameter, currencyParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuerID">No Metadata Documentation available.</param>
        /// <param name="securityId">No Metadata Documentation available.</param>
        /// <param name="dataSource">No Metadata Documentation available.</param>
        /// <param name="fiscalType">No Metadata Documentation available.</param>
        public ObjectResult<FinstatRelativeAnalysisData> GetFinstatRelativeAnalysisData(global::System.String issuerID, global::System.String securityId, global::System.String dataSource, global::System.String fiscalType)
        {
            ObjectParameter issuerIDParameter;
            if (issuerID != null)
            {
                issuerIDParameter = new ObjectParameter("issuerID", issuerID);
            }
            else
            {
                issuerIDParameter = new ObjectParameter("issuerID", typeof(global::System.String));
            }
    
            ObjectParameter securityIdParameter;
            if (securityId != null)
            {
                securityIdParameter = new ObjectParameter("securityId", securityId);
            }
            else
            {
                securityIdParameter = new ObjectParameter("securityId", typeof(global::System.String));
            }
    
            ObjectParameter dataSourceParameter;
            if (dataSource != null)
            {
                dataSourceParameter = new ObjectParameter("dataSource", dataSource);
            }
            else
            {
                dataSourceParameter = new ObjectParameter("dataSource", typeof(global::System.String));
            }
    
            ObjectParameter fiscalTypeParameter;
            if (fiscalType != null)
            {
                fiscalTypeParameter = new ObjectParameter("fiscalType", fiscalType);
            }
            else
            {
                fiscalTypeParameter = new ObjectParameter("fiscalType", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<FinstatRelativeAnalysisData>("GetFinstatRelativeAnalysisData", issuerIDParameter, securityIdParameter, dataSourceParameter, fiscalTypeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<Nullable<global::System.Decimal>> GetMarketCap()
        {
            return base.ExecuteFunction<Nullable<global::System.Decimal>>("GetMarketCap");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iSSUER_ID">No Metadata Documentation available.</param>
        /// <param name="eSTIMATE_TYPE">No Metadata Documentation available.</param>
        /// <param name="pERIOD_TYPE">No Metadata Documentation available.</param>
        /// <param name="cURRENCY">No Metadata Documentation available.</param>
        public ObjectResult<BrokerDetailData> GetBrokerDetail(global::System.String iSSUER_ID, global::System.String eSTIMATE_TYPE, global::System.String pERIOD_TYPE, global::System.String cURRENCY)
        {
            ObjectParameter iSSUER_IDParameter;
            if (iSSUER_ID != null)
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", iSSUER_ID);
            }
            else
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", typeof(global::System.String));
            }
    
            ObjectParameter eSTIMATE_TYPEParameter;
            if (eSTIMATE_TYPE != null)
            {
                eSTIMATE_TYPEParameter = new ObjectParameter("ESTIMATE_TYPE", eSTIMATE_TYPE);
            }
            else
            {
                eSTIMATE_TYPEParameter = new ObjectParameter("ESTIMATE_TYPE", typeof(global::System.String));
            }
    
            ObjectParameter pERIOD_TYPEParameter;
            if (pERIOD_TYPE != null)
            {
                pERIOD_TYPEParameter = new ObjectParameter("PERIOD_TYPE", pERIOD_TYPE);
            }
            else
            {
                pERIOD_TYPEParameter = new ObjectParameter("PERIOD_TYPE", typeof(global::System.String));
            }
    
            ObjectParameter cURRENCYParameter;
            if (cURRENCY != null)
            {
                cURRENCYParameter = new ObjectParameter("CURRENCY", cURRENCY);
            }
            else
            {
                cURRENCYParameter = new ObjectParameter("CURRENCY", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<BrokerDetailData>("GetBrokerDetail", iSSUER_IDParameter, eSTIMATE_TYPEParameter, pERIOD_TYPEParameter, cURRENCYParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="securityBucketXML">No Metadata Documentation available.</param>
        public ObjectResult<RatioComparisonData> RetrieveRatioComparisonData(global::System.String securityBucketXML)
        {
            ObjectParameter securityBucketXMLParameter;
            if (securityBucketXML != null)
            {
                securityBucketXMLParameter = new ObjectParameter("securityBucketXML", securityBucketXML);
            }
            else
            {
                securityBucketXMLParameter = new ObjectParameter("securityBucketXML", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<RatioComparisonData>("RetrieveRatioComparisonData", securityBucketXMLParameter);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExternalResearchModel", Name="CURRENT_CONSENSUS_ESTIMATES")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CURRENT_CONSENSUS_ESTIMATES : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CURRENT_CONSENSUS_ESTIMATES object.
        /// </summary>
        /// <param name="iSSUER_ID">Initial value of the ISSUER_ID property.</param>
        /// <param name="sECURITY_ID">Initial value of the SECURITY_ID property.</param>
        /// <param name="dATA_SOURCE">Initial value of the DATA_SOURCE property.</param>
        /// <param name="dATA_SOURCE_DATE">Initial value of the DATA_SOURCE_DATE property.</param>
        /// <param name="pERIOD_TYPE">Initial value of the PERIOD_TYPE property.</param>
        /// <param name="pERIOD_YEAR">Initial value of the PERIOD_YEAR property.</param>
        /// <param name="pERIOD_END_DATE">Initial value of the PERIOD_END_DATE property.</param>
        /// <param name="fISCAL_TYPE">Initial value of the FISCAL_TYPE property.</param>
        /// <param name="eSTIMATE_ID">Initial value of the ESTIMATE_ID property.</param>
        /// <param name="cURRENCY">Initial value of the CURRENCY property.</param>
        /// <param name="aMOUNT">Initial value of the AMOUNT property.</param>
        /// <param name="nUMBER_OF_ESTIMATES">Initial value of the NUMBER_OF_ESTIMATES property.</param>
        /// <param name="hIGH">Initial value of the HIGH property.</param>
        /// <param name="lOW">Initial value of the LOW property.</param>
        /// <param name="sOURCE_CURRENCY">Initial value of the SOURCE_CURRENCY property.</param>
        /// <param name="sTANDARD_DEVIATION">Initial value of the STANDARD_DEVIATION property.</param>
        /// <param name="aMOUNT_TYPE">Initial value of the AMOUNT_TYPE property.</param>
        public static CURRENT_CONSENSUS_ESTIMATES CreateCURRENT_CONSENSUS_ESTIMATES(global::System.String iSSUER_ID, global::System.String sECURITY_ID, global::System.String dATA_SOURCE, global::System.DateTime dATA_SOURCE_DATE, global::System.String pERIOD_TYPE, global::System.Int32 pERIOD_YEAR, global::System.DateTime pERIOD_END_DATE, global::System.String fISCAL_TYPE, global::System.Int32 eSTIMATE_ID, global::System.String cURRENCY, global::System.Decimal aMOUNT, global::System.Int32 nUMBER_OF_ESTIMATES, global::System.Decimal hIGH, global::System.Decimal lOW, global::System.String sOURCE_CURRENCY, global::System.Decimal sTANDARD_DEVIATION, global::System.String aMOUNT_TYPE)
        {
            CURRENT_CONSENSUS_ESTIMATES cURRENT_CONSENSUS_ESTIMATES = new CURRENT_CONSENSUS_ESTIMATES();
            cURRENT_CONSENSUS_ESTIMATES.ISSUER_ID = iSSUER_ID;
            cURRENT_CONSENSUS_ESTIMATES.SECURITY_ID = sECURITY_ID;
            cURRENT_CONSENSUS_ESTIMATES.DATA_SOURCE = dATA_SOURCE;
            cURRENT_CONSENSUS_ESTIMATES.DATA_SOURCE_DATE = dATA_SOURCE_DATE;
            cURRENT_CONSENSUS_ESTIMATES.PERIOD_TYPE = pERIOD_TYPE;
            cURRENT_CONSENSUS_ESTIMATES.PERIOD_YEAR = pERIOD_YEAR;
            cURRENT_CONSENSUS_ESTIMATES.PERIOD_END_DATE = pERIOD_END_DATE;
            cURRENT_CONSENSUS_ESTIMATES.FISCAL_TYPE = fISCAL_TYPE;
            cURRENT_CONSENSUS_ESTIMATES.ESTIMATE_ID = eSTIMATE_ID;
            cURRENT_CONSENSUS_ESTIMATES.CURRENCY = cURRENCY;
            cURRENT_CONSENSUS_ESTIMATES.AMOUNT = aMOUNT;
            cURRENT_CONSENSUS_ESTIMATES.NUMBER_OF_ESTIMATES = nUMBER_OF_ESTIMATES;
            cURRENT_CONSENSUS_ESTIMATES.HIGH = hIGH;
            cURRENT_CONSENSUS_ESTIMATES.LOW = lOW;
            cURRENT_CONSENSUS_ESTIMATES.SOURCE_CURRENCY = sOURCE_CURRENCY;
            cURRENT_CONSENSUS_ESTIMATES.STANDARD_DEVIATION = sTANDARD_DEVIATION;
            cURRENT_CONSENSUS_ESTIMATES.AMOUNT_TYPE = aMOUNT_TYPE;
            return cURRENT_CONSENSUS_ESTIMATES;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ISSUER_ID
        {
            get
            {
                return _ISSUER_ID;
            }
            set
            {
                if (_ISSUER_ID != value)
                {
                    OnISSUER_IDChanging(value);
                    ReportPropertyChanging("ISSUER_ID");
                    _ISSUER_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ISSUER_ID");
                    OnISSUER_IDChanged();
                }
            }
        }
        private global::System.String _ISSUER_ID;
        partial void OnISSUER_IDChanging(global::System.String value);
        partial void OnISSUER_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SECURITY_ID
        {
            get
            {
                return _SECURITY_ID;
            }
            set
            {
                if (_SECURITY_ID != value)
                {
                    OnSECURITY_IDChanging(value);
                    ReportPropertyChanging("SECURITY_ID");
                    _SECURITY_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SECURITY_ID");
                    OnSECURITY_IDChanged();
                }
            }
        }
        private global::System.String _SECURITY_ID;
        partial void OnSECURITY_IDChanging(global::System.String value);
        partial void OnSECURITY_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DATA_SOURCE
        {
            get
            {
                return _DATA_SOURCE;
            }
            set
            {
                if (_DATA_SOURCE != value)
                {
                    OnDATA_SOURCEChanging(value);
                    ReportPropertyChanging("DATA_SOURCE");
                    _DATA_SOURCE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DATA_SOURCE");
                    OnDATA_SOURCEChanged();
                }
            }
        }
        private global::System.String _DATA_SOURCE;
        partial void OnDATA_SOURCEChanging(global::System.String value);
        partial void OnDATA_SOURCEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DATA_SOURCE_DATE
        {
            get
            {
                return _DATA_SOURCE_DATE;
            }
            set
            {
                if (_DATA_SOURCE_DATE != value)
                {
                    OnDATA_SOURCE_DATEChanging(value);
                    ReportPropertyChanging("DATA_SOURCE_DATE");
                    _DATA_SOURCE_DATE = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DATA_SOURCE_DATE");
                    OnDATA_SOURCE_DATEChanged();
                }
            }
        }
        private global::System.DateTime _DATA_SOURCE_DATE;
        partial void OnDATA_SOURCE_DATEChanging(global::System.DateTime value);
        partial void OnDATA_SOURCE_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PERIOD_TYPE
        {
            get
            {
                return _PERIOD_TYPE;
            }
            set
            {
                if (_PERIOD_TYPE != value)
                {
                    OnPERIOD_TYPEChanging(value);
                    ReportPropertyChanging("PERIOD_TYPE");
                    _PERIOD_TYPE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PERIOD_TYPE");
                    OnPERIOD_TYPEChanged();
                }
            }
        }
        private global::System.String _PERIOD_TYPE;
        partial void OnPERIOD_TYPEChanging(global::System.String value);
        partial void OnPERIOD_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PERIOD_YEAR
        {
            get
            {
                return _PERIOD_YEAR;
            }
            set
            {
                if (_PERIOD_YEAR != value)
                {
                    OnPERIOD_YEARChanging(value);
                    ReportPropertyChanging("PERIOD_YEAR");
                    _PERIOD_YEAR = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PERIOD_YEAR");
                    OnPERIOD_YEARChanged();
                }
            }
        }
        private global::System.Int32 _PERIOD_YEAR;
        partial void OnPERIOD_YEARChanging(global::System.Int32 value);
        partial void OnPERIOD_YEARChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PERIOD_END_DATE
        {
            get
            {
                return _PERIOD_END_DATE;
            }
            set
            {
                if (_PERIOD_END_DATE != value)
                {
                    OnPERIOD_END_DATEChanging(value);
                    ReportPropertyChanging("PERIOD_END_DATE");
                    _PERIOD_END_DATE = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PERIOD_END_DATE");
                    OnPERIOD_END_DATEChanged();
                }
            }
        }
        private global::System.DateTime _PERIOD_END_DATE;
        partial void OnPERIOD_END_DATEChanging(global::System.DateTime value);
        partial void OnPERIOD_END_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FISCAL_TYPE
        {
            get
            {
                return _FISCAL_TYPE;
            }
            set
            {
                if (_FISCAL_TYPE != value)
                {
                    OnFISCAL_TYPEChanging(value);
                    ReportPropertyChanging("FISCAL_TYPE");
                    _FISCAL_TYPE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("FISCAL_TYPE");
                    OnFISCAL_TYPEChanged();
                }
            }
        }
        private global::System.String _FISCAL_TYPE;
        partial void OnFISCAL_TYPEChanging(global::System.String value);
        partial void OnFISCAL_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ESTIMATE_ID
        {
            get
            {
                return _ESTIMATE_ID;
            }
            set
            {
                if (_ESTIMATE_ID != value)
                {
                    OnESTIMATE_IDChanging(value);
                    ReportPropertyChanging("ESTIMATE_ID");
                    _ESTIMATE_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ESTIMATE_ID");
                    OnESTIMATE_IDChanged();
                }
            }
        }
        private global::System.Int32 _ESTIMATE_ID;
        partial void OnESTIMATE_IDChanging(global::System.Int32 value);
        partial void OnESTIMATE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CURRENCY
        {
            get
            {
                return _CURRENCY;
            }
            set
            {
                if (_CURRENCY != value)
                {
                    OnCURRENCYChanging(value);
                    ReportPropertyChanging("CURRENCY");
                    _CURRENCY = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CURRENCY");
                    OnCURRENCYChanged();
                }
            }
        }
        private global::System.String _CURRENCY;
        partial void OnCURRENCYChanging(global::System.String value);
        partial void OnCURRENCYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal AMOUNT
        {
            get
            {
                return _AMOUNT;
            }
            set
            {
                if (_AMOUNT != value)
                {
                    OnAMOUNTChanging(value);
                    ReportPropertyChanging("AMOUNT");
                    _AMOUNT = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AMOUNT");
                    OnAMOUNTChanged();
                }
            }
        }
        private global::System.Decimal _AMOUNT;
        partial void OnAMOUNTChanging(global::System.Decimal value);
        partial void OnAMOUNTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NUMBER_OF_ESTIMATES
        {
            get
            {
                return _NUMBER_OF_ESTIMATES;
            }
            set
            {
                if (_NUMBER_OF_ESTIMATES != value)
                {
                    OnNUMBER_OF_ESTIMATESChanging(value);
                    ReportPropertyChanging("NUMBER_OF_ESTIMATES");
                    _NUMBER_OF_ESTIMATES = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NUMBER_OF_ESTIMATES");
                    OnNUMBER_OF_ESTIMATESChanged();
                }
            }
        }
        private global::System.Int32 _NUMBER_OF_ESTIMATES;
        partial void OnNUMBER_OF_ESTIMATESChanging(global::System.Int32 value);
        partial void OnNUMBER_OF_ESTIMATESChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal HIGH
        {
            get
            {
                return _HIGH;
            }
            set
            {
                if (_HIGH != value)
                {
                    OnHIGHChanging(value);
                    ReportPropertyChanging("HIGH");
                    _HIGH = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HIGH");
                    OnHIGHChanged();
                }
            }
        }
        private global::System.Decimal _HIGH;
        partial void OnHIGHChanging(global::System.Decimal value);
        partial void OnHIGHChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal LOW
        {
            get
            {
                return _LOW;
            }
            set
            {
                if (_LOW != value)
                {
                    OnLOWChanging(value);
                    ReportPropertyChanging("LOW");
                    _LOW = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LOW");
                    OnLOWChanged();
                }
            }
        }
        private global::System.Decimal _LOW;
        partial void OnLOWChanging(global::System.Decimal value);
        partial void OnLOWChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SOURCE_CURRENCY
        {
            get
            {
                return _SOURCE_CURRENCY;
            }
            set
            {
                if (_SOURCE_CURRENCY != value)
                {
                    OnSOURCE_CURRENCYChanging(value);
                    ReportPropertyChanging("SOURCE_CURRENCY");
                    _SOURCE_CURRENCY = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SOURCE_CURRENCY");
                    OnSOURCE_CURRENCYChanged();
                }
            }
        }
        private global::System.String _SOURCE_CURRENCY;
        partial void OnSOURCE_CURRENCYChanging(global::System.String value);
        partial void OnSOURCE_CURRENCYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal STANDARD_DEVIATION
        {
            get
            {
                return _STANDARD_DEVIATION;
            }
            set
            {
                if (_STANDARD_DEVIATION != value)
                {
                    OnSTANDARD_DEVIATIONChanging(value);
                    ReportPropertyChanging("STANDARD_DEVIATION");
                    _STANDARD_DEVIATION = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("STANDARD_DEVIATION");
                    OnSTANDARD_DEVIATIONChanged();
                }
            }
        }
        private global::System.Decimal _STANDARD_DEVIATION;
        partial void OnSTANDARD_DEVIATIONChanging(global::System.Decimal value);
        partial void OnSTANDARD_DEVIATIONChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AMOUNT_TYPE
        {
            get
            {
                return _AMOUNT_TYPE;
            }
            set
            {
                if (_AMOUNT_TYPE != value)
                {
                    OnAMOUNT_TYPEChanging(value);
                    ReportPropertyChanging("AMOUNT_TYPE");
                    _AMOUNT_TYPE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("AMOUNT_TYPE");
                    OnAMOUNT_TYPEChanged();
                }
            }
        }
        private global::System.String _AMOUNT_TYPE;
        partial void OnAMOUNT_TYPEChanging(global::System.String value);
        partial void OnAMOUNT_TYPEChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExternalResearchModel", Name="DATA_MASTER")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DATA_MASTER : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DATA_MASTER object.
        /// </summary>
        /// <param name="dATA_ID">Initial value of the DATA_ID property.</param>
        /// <param name="fX_CONV_TYPE">Initial value of the FX_CONV_TYPE property.</param>
        /// <param name="cALENDARIZE">Initial value of the CALENDARIZE property.</param>
        /// <param name="iNDUSTRIAL">Initial value of the INDUSTRIAL property.</param>
        /// <param name="bANK">Initial value of the BANK property.</param>
        /// <param name="iNSURANCE">Initial value of the INSURANCE property.</param>
        /// <param name="uTILITY">Initial value of the UTILITY property.</param>
        /// <param name="qUARTERLY">Initial value of the QUARTERLY property.</param>
        /// <param name="dATA_DESC">Initial value of the DATA_DESC property.</param>
        public static DATA_MASTER CreateDATA_MASTER(global::System.Int32 dATA_ID, global::System.String fX_CONV_TYPE, global::System.String cALENDARIZE, global::System.String iNDUSTRIAL, global::System.String bANK, global::System.String iNSURANCE, global::System.String uTILITY, global::System.String qUARTERLY, global::System.String dATA_DESC)
        {
            DATA_MASTER dATA_MASTER = new DATA_MASTER();
            dATA_MASTER.DATA_ID = dATA_ID;
            dATA_MASTER.FX_CONV_TYPE = fX_CONV_TYPE;
            dATA_MASTER.CALENDARIZE = cALENDARIZE;
            dATA_MASTER.INDUSTRIAL = iNDUSTRIAL;
            dATA_MASTER.BANK = bANK;
            dATA_MASTER.INSURANCE = iNSURANCE;
            dATA_MASTER.UTILITY = uTILITY;
            dATA_MASTER.QUARTERLY = qUARTERLY;
            dATA_MASTER.DATA_DESC = dATA_DESC;
            return dATA_MASTER;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DATA_ID
        {
            get
            {
                return _DATA_ID;
            }
            set
            {
                if (_DATA_ID != value)
                {
                    OnDATA_IDChanging(value);
                    ReportPropertyChanging("DATA_ID");
                    _DATA_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DATA_ID");
                    OnDATA_IDChanged();
                }
            }
        }
        private global::System.Int32 _DATA_ID;
        partial void OnDATA_IDChanging(global::System.Int32 value);
        partial void OnDATA_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String COA
        {
            get
            {
                return _COA;
            }
            set
            {
                OnCOAChanging(value);
                ReportPropertyChanging("COA");
                _COA = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("COA");
                OnCOAChanged();
            }
        }
        private global::System.String _COA;
        partial void OnCOAChanging(global::System.String value);
        partial void OnCOAChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FX_CONV_TYPE
        {
            get
            {
                return _FX_CONV_TYPE;
            }
            set
            {
                if (_FX_CONV_TYPE != value)
                {
                    OnFX_CONV_TYPEChanging(value);
                    ReportPropertyChanging("FX_CONV_TYPE");
                    _FX_CONV_TYPE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("FX_CONV_TYPE");
                    OnFX_CONV_TYPEChanged();
                }
            }
        }
        private global::System.String _FX_CONV_TYPE;
        partial void OnFX_CONV_TYPEChanging(global::System.String value);
        partial void OnFX_CONV_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CALENDARIZE
        {
            get
            {
                return _CALENDARIZE;
            }
            set
            {
                if (_CALENDARIZE != value)
                {
                    OnCALENDARIZEChanging(value);
                    ReportPropertyChanging("CALENDARIZE");
                    _CALENDARIZE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CALENDARIZE");
                    OnCALENDARIZEChanged();
                }
            }
        }
        private global::System.String _CALENDARIZE;
        partial void OnCALENDARIZEChanging(global::System.String value);
        partial void OnCALENDARIZEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String INDUSTRIAL
        {
            get
            {
                return _INDUSTRIAL;
            }
            set
            {
                if (_INDUSTRIAL != value)
                {
                    OnINDUSTRIALChanging(value);
                    ReportPropertyChanging("INDUSTRIAL");
                    _INDUSTRIAL = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("INDUSTRIAL");
                    OnINDUSTRIALChanged();
                }
            }
        }
        private global::System.String _INDUSTRIAL;
        partial void OnINDUSTRIALChanging(global::System.String value);
        partial void OnINDUSTRIALChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BANK
        {
            get
            {
                return _BANK;
            }
            set
            {
                if (_BANK != value)
                {
                    OnBANKChanging(value);
                    ReportPropertyChanging("BANK");
                    _BANK = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("BANK");
                    OnBANKChanged();
                }
            }
        }
        private global::System.String _BANK;
        partial void OnBANKChanging(global::System.String value);
        partial void OnBANKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String INSURANCE
        {
            get
            {
                return _INSURANCE;
            }
            set
            {
                if (_INSURANCE != value)
                {
                    OnINSURANCEChanging(value);
                    ReportPropertyChanging("INSURANCE");
                    _INSURANCE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("INSURANCE");
                    OnINSURANCEChanged();
                }
            }
        }
        private global::System.String _INSURANCE;
        partial void OnINSURANCEChanging(global::System.String value);
        partial void OnINSURANCEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UTILITY
        {
            get
            {
                return _UTILITY;
            }
            set
            {
                if (_UTILITY != value)
                {
                    OnUTILITYChanging(value);
                    ReportPropertyChanging("UTILITY");
                    _UTILITY = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UTILITY");
                    OnUTILITYChanged();
                }
            }
        }
        private global::System.String _UTILITY;
        partial void OnUTILITYChanging(global::System.String value);
        partial void OnUTILITYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String QUARTERLY
        {
            get
            {
                return _QUARTERLY;
            }
            set
            {
                if (_QUARTERLY != value)
                {
                    OnQUARTERLYChanging(value);
                    ReportPropertyChanging("QUARTERLY");
                    _QUARTERLY = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("QUARTERLY");
                    OnQUARTERLYChanged();
                }
            }
        }
        private global::System.String _QUARTERLY;
        partial void OnQUARTERLYChanging(global::System.String value);
        partial void OnQUARTERLYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DATA_DESC
        {
            get
            {
                return _DATA_DESC;
            }
            set
            {
                if (_DATA_DESC != value)
                {
                    OnDATA_DESCChanging(value);
                    ReportPropertyChanging("DATA_DESC");
                    _DATA_DESC = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DATA_DESC");
                    OnDATA_DESCChanged();
                }
            }
        }
        private global::System.String _DATA_DESC;
        partial void OnDATA_DESCChanging(global::System.String value);
        partial void OnDATA_DESCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String COA_TYPE
        {
            get
            {
                return _COA_TYPE;
            }
            set
            {
                OnCOA_TYPEChanging(value);
                ReportPropertyChanging("COA_TYPE");
                _COA_TYPE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("COA_TYPE");
                OnCOA_TYPEChanged();
            }
        }
        private global::System.String _COA_TYPE;
        partial void OnCOA_TYPEChanging(global::System.String value);
        partial void OnCOA_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ANNUAL
        {
            get
            {
                return _ANNUAL;
            }
            set
            {
                OnANNUALChanging(value);
                ReportPropertyChanging("ANNUAL");
                _ANNUAL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ANNUAL");
                OnANNUALChanged();
            }
        }
        private global::System.String _ANNUAL;
        partial void OnANNUALChanging(global::System.String value);
        partial void OnANNUALChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CURRENT
        {
            get
            {
                return _CURRENT;
            }
            set
            {
                OnCURRENTChanging(value);
                ReportPropertyChanging("CURRENT");
                _CURRENT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CURRENT");
                OnCURRENTChanged();
            }
        }
        private global::System.String _CURRENT;
        partial void OnCURRENTChanging(global::System.String value);
        partial void OnCURRENTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String STATEMENT_TYPE
        {
            get
            {
                return _STATEMENT_TYPE;
            }
            set
            {
                OnSTATEMENT_TYPEChanging(value);
                ReportPropertyChanging("STATEMENT_TYPE");
                _STATEMENT_TYPE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("STATEMENT_TYPE");
                OnSTATEMENT_TYPEChanged();
            }
        }
        private global::System.String _STATEMENT_TYPE;
        partial void OnSTATEMENT_TYPEChanging(global::System.String value);
        partial void OnSTATEMENT_TYPEChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExternalResearchModel", Name="External_Country_Master")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class External_Country_Master : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new External_Country_Master object.
        /// </summary>
        /// <param name="cOUNTRY_CODE">Initial value of the COUNTRY_CODE property.</param>
        /// <param name="cOUNTRY_NAME">Initial value of the COUNTRY_NAME property.</param>
        /// <param name="cURRENCY_CODE">Initial value of the CURRENCY_CODE property.</param>
        /// <param name="cURRENCY_NAME">Initial value of the CURRENCY_NAME property.</param>
        /// <param name="mACRO_ECON_DATA_CURRENT">Initial value of the MACRO_ECON_DATA_CURRENT property.</param>
        public static External_Country_Master CreateExternal_Country_Master(global::System.String cOUNTRY_CODE, global::System.String cOUNTRY_NAME, global::System.String cURRENCY_CODE, global::System.String cURRENCY_NAME, global::System.String mACRO_ECON_DATA_CURRENT)
        {
            External_Country_Master external_Country_Master = new External_Country_Master();
            external_Country_Master.COUNTRY_CODE = cOUNTRY_CODE;
            external_Country_Master.COUNTRY_NAME = cOUNTRY_NAME;
            external_Country_Master.CURRENCY_CODE = cURRENCY_CODE;
            external_Country_Master.CURRENCY_NAME = cURRENCY_NAME;
            external_Country_Master.MACRO_ECON_DATA_CURRENT = mACRO_ECON_DATA_CURRENT;
            return external_Country_Master;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String COUNTRY_CODE
        {
            get
            {
                return _COUNTRY_CODE;
            }
            set
            {
                if (_COUNTRY_CODE != value)
                {
                    OnCOUNTRY_CODEChanging(value);
                    ReportPropertyChanging("COUNTRY_CODE");
                    _COUNTRY_CODE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("COUNTRY_CODE");
                    OnCOUNTRY_CODEChanged();
                }
            }
        }
        private global::System.String _COUNTRY_CODE;
        partial void OnCOUNTRY_CODEChanging(global::System.String value);
        partial void OnCOUNTRY_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String COUNTRY_NAME
        {
            get
            {
                return _COUNTRY_NAME;
            }
            set
            {
                if (_COUNTRY_NAME != value)
                {
                    OnCOUNTRY_NAMEChanging(value);
                    ReportPropertyChanging("COUNTRY_NAME");
                    _COUNTRY_NAME = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("COUNTRY_NAME");
                    OnCOUNTRY_NAMEChanged();
                }
            }
        }
        private global::System.String _COUNTRY_NAME;
        partial void OnCOUNTRY_NAMEChanging(global::System.String value);
        partial void OnCOUNTRY_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CURRENCY_CODE
        {
            get
            {
                return _CURRENCY_CODE;
            }
            set
            {
                if (_CURRENCY_CODE != value)
                {
                    OnCURRENCY_CODEChanging(value);
                    ReportPropertyChanging("CURRENCY_CODE");
                    _CURRENCY_CODE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CURRENCY_CODE");
                    OnCURRENCY_CODEChanged();
                }
            }
        }
        private global::System.String _CURRENCY_CODE;
        partial void OnCURRENCY_CODEChanging(global::System.String value);
        partial void OnCURRENCY_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CURRENCY_NAME
        {
            get
            {
                return _CURRENCY_NAME;
            }
            set
            {
                if (_CURRENCY_NAME != value)
                {
                    OnCURRENCY_NAMEChanging(value);
                    ReportPropertyChanging("CURRENCY_NAME");
                    _CURRENCY_NAME = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CURRENCY_NAME");
                    OnCURRENCY_NAMEChanged();
                }
            }
        }
        private global::System.String _CURRENCY_NAME;
        partial void OnCURRENCY_NAMEChanging(global::System.String value);
        partial void OnCURRENCY_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MACRO_ECON_DATA_CURRENT
        {
            get
            {
                return _MACRO_ECON_DATA_CURRENT;
            }
            set
            {
                if (_MACRO_ECON_DATA_CURRENT != value)
                {
                    OnMACRO_ECON_DATA_CURRENTChanging(value);
                    ReportPropertyChanging("MACRO_ECON_DATA_CURRENT");
                    _MACRO_ECON_DATA_CURRENT = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MACRO_ECON_DATA_CURRENT");
                    OnMACRO_ECON_DATA_CURRENTChanged();
                }
            }
        }
        private global::System.String _MACRO_ECON_DATA_CURRENT;
        partial void OnMACRO_ECON_DATA_CURRENTChanging(global::System.String value);
        partial void OnMACRO_ECON_DATA_CURRENTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ASHEMM_PROPRIETARY_REGION_NAME
        {
            get
            {
                return _ASHEMM_PROPRIETARY_REGION_NAME;
            }
            set
            {
                OnASHEMM_PROPRIETARY_REGION_NAMEChanging(value);
                ReportPropertyChanging("ASHEMM_PROPRIETARY_REGION_NAME");
                _ASHEMM_PROPRIETARY_REGION_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ASHEMM_PROPRIETARY_REGION_NAME");
                OnASHEMM_PROPRIETARY_REGION_NAMEChanged();
            }
        }
        private global::System.String _ASHEMM_PROPRIETARY_REGION_NAME;
        partial void OnASHEMM_PROPRIETARY_REGION_NAMEChanging(global::System.String value);
        partial void OnASHEMM_PROPRIETARY_REGION_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ASHEMM_PROPRIETARY_REGION_CODE
        {
            get
            {
                return _ASHEMM_PROPRIETARY_REGION_CODE;
            }
            set
            {
                OnASHEMM_PROPRIETARY_REGION_CODEChanging(value);
                ReportPropertyChanging("ASHEMM_PROPRIETARY_REGION_CODE");
                _ASHEMM_PROPRIETARY_REGION_CODE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ASHEMM_PROPRIETARY_REGION_CODE");
                OnASHEMM_PROPRIETARY_REGION_CODEChanged();
            }
        }
        private global::System.String _ASHEMM_PROPRIETARY_REGION_CODE;
        partial void OnASHEMM_PROPRIETARY_REGION_CODEChanging(global::System.String value);
        partial void OnASHEMM_PROPRIETARY_REGION_CODEChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExternalResearchModel", Name="FX_RATES")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FX_RATES : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FX_RATES object.
        /// </summary>
        /// <param name="cURRENCY">Initial value of the CURRENCY property.</param>
        /// <param name="fX_DATE">Initial value of the FX_DATE property.</param>
        /// <param name="fX_RATE">Initial value of the FX_RATE property.</param>
        public static FX_RATES CreateFX_RATES(global::System.String cURRENCY, global::System.DateTime fX_DATE, global::System.Decimal fX_RATE)
        {
            FX_RATES fX_RATES = new FX_RATES();
            fX_RATES.CURRENCY = cURRENCY;
            fX_RATES.FX_DATE = fX_DATE;
            fX_RATES.FX_RATE = fX_RATE;
            return fX_RATES;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CURRENCY
        {
            get
            {
                return _CURRENCY;
            }
            set
            {
                if (_CURRENCY != value)
                {
                    OnCURRENCYChanging(value);
                    ReportPropertyChanging("CURRENCY");
                    _CURRENCY = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CURRENCY");
                    OnCURRENCYChanged();
                }
            }
        }
        private global::System.String _CURRENCY;
        partial void OnCURRENCYChanging(global::System.String value);
        partial void OnCURRENCYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FX_DATE
        {
            get
            {
                return _FX_DATE;
            }
            set
            {
                if (_FX_DATE != value)
                {
                    OnFX_DATEChanging(value);
                    ReportPropertyChanging("FX_DATE");
                    _FX_DATE = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FX_DATE");
                    OnFX_DATEChanged();
                }
            }
        }
        private global::System.DateTime _FX_DATE;
        partial void OnFX_DATEChanging(global::System.DateTime value);
        partial void OnFX_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal FX_RATE
        {
            get
            {
                return _FX_RATE;
            }
            set
            {
                if (_FX_RATE != value)
                {
                    OnFX_RATEChanging(value);
                    ReportPropertyChanging("FX_RATE");
                    _FX_RATE = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FX_RATE");
                    OnFX_RATEChanged();
                }
            }
        }
        private global::System.Decimal _FX_RATE;
        partial void OnFX_RATEChanging(global::System.Decimal value);
        partial void OnFX_RATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> AVG90DAYRATE
        {
            get
            {
                return _AVG90DAYRATE;
            }
            set
            {
                OnAVG90DAYRATEChanging(value);
                ReportPropertyChanging("AVG90DAYRATE");
                _AVG90DAYRATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AVG90DAYRATE");
                OnAVG90DAYRATEChanged();
            }
        }
        private Nullable<global::System.Decimal> _AVG90DAYRATE;
        partial void OnAVG90DAYRATEChanging(Nullable<global::System.Decimal> value);
        partial void OnAVG90DAYRATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> AVG12MonthRATE
        {
            get
            {
                return _AVG12MonthRATE;
            }
            set
            {
                OnAVG12MonthRATEChanging(value);
                ReportPropertyChanging("AVG12MonthRATE");
                _AVG12MonthRATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AVG12MonthRATE");
                OnAVG12MonthRATEChanged();
            }
        }
        private Nullable<global::System.Decimal> _AVG12MonthRATE;
        partial void OnAVG12MonthRATEChanging(Nullable<global::System.Decimal> value);
        partial void OnAVG12MonthRATEChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExternalResearchModel", Name="INTERNAL_ISSUER")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class INTERNAL_ISSUER : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new INTERNAL_ISSUER object.
        /// </summary>
        /// <param name="iSSUER_ID">Initial value of the ISSUER_ID property.</param>
        /// <param name="cOA_TYPE">Initial value of the COA_TYPE property.</param>
        public static INTERNAL_ISSUER CreateINTERNAL_ISSUER(global::System.String iSSUER_ID, global::System.String cOA_TYPE)
        {
            INTERNAL_ISSUER iNTERNAL_ISSUER = new INTERNAL_ISSUER();
            iNTERNAL_ISSUER.ISSUER_ID = iSSUER_ID;
            iNTERNAL_ISSUER.COA_TYPE = cOA_TYPE;
            return iNTERNAL_ISSUER;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ISSUER_ID
        {
            get
            {
                return _ISSUER_ID;
            }
            set
            {
                if (_ISSUER_ID != value)
                {
                    OnISSUER_IDChanging(value);
                    ReportPropertyChanging("ISSUER_ID");
                    _ISSUER_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ISSUER_ID");
                    OnISSUER_IDChanged();
                }
            }
        }
        private global::System.String _ISSUER_ID;
        partial void OnISSUER_IDChanging(global::System.String value);
        partial void OnISSUER_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String COA_TYPE
        {
            get
            {
                return _COA_TYPE;
            }
            set
            {
                if (_COA_TYPE != value)
                {
                    OnCOA_TYPEChanging(value);
                    ReportPropertyChanging("COA_TYPE");
                    _COA_TYPE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("COA_TYPE");
                    OnCOA_TYPEChanged();
                }
            }
        }
        private global::System.String _COA_TYPE;
        partial void OnCOA_TYPEChanging(global::System.String value);
        partial void OnCOA_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastPrimaryModelLoad
        {
            get
            {
                return _LastPrimaryModelLoad;
            }
            set
            {
                OnLastPrimaryModelLoadChanging(value);
                ReportPropertyChanging("LastPrimaryModelLoad");
                _LastPrimaryModelLoad = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastPrimaryModelLoad");
                OnLastPrimaryModelLoadChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastPrimaryModelLoad;
        partial void OnLastPrimaryModelLoadChanging(Nullable<global::System.DateTime> value);
        partial void OnLastPrimaryModelLoadChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastIndustryModelLoad
        {
            get
            {
                return _LastIndustryModelLoad;
            }
            set
            {
                OnLastIndustryModelLoadChanging(value);
                ReportPropertyChanging("LastIndustryModelLoad");
                _LastIndustryModelLoad = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastIndustryModelLoad");
                OnLastIndustryModelLoadChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastIndustryModelLoad;
        partial void OnLastIndustryModelLoadChanging(Nullable<global::System.DateTime> value);
        partial void OnLastIndustryModelLoadChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExternalResearchModel", Name="ISSUER_SHARES")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ISSUER_SHARES : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ISSUER_SHARES object.
        /// </summary>
        /// <param name="iSSUER_ID">Initial value of the ISSUER_ID property.</param>
        /// <param name="sHARES_DATE">Initial value of the SHARES_DATE property.</param>
        /// <param name="sHARES_OUTSTANDING">Initial value of the SHARES_OUTSTANDING property.</param>
        public static ISSUER_SHARES CreateISSUER_SHARES(global::System.String iSSUER_ID, global::System.DateTime sHARES_DATE, global::System.Int32 sHARES_OUTSTANDING)
        {
            ISSUER_SHARES iSSUER_SHARES = new ISSUER_SHARES();
            iSSUER_SHARES.ISSUER_ID = iSSUER_ID;
            iSSUER_SHARES.SHARES_DATE = sHARES_DATE;
            iSSUER_SHARES.SHARES_OUTSTANDING = sHARES_OUTSTANDING;
            return iSSUER_SHARES;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ISSUER_ID
        {
            get
            {
                return _ISSUER_ID;
            }
            set
            {
                if (_ISSUER_ID != value)
                {
                    OnISSUER_IDChanging(value);
                    ReportPropertyChanging("ISSUER_ID");
                    _ISSUER_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ISSUER_ID");
                    OnISSUER_IDChanged();
                }
            }
        }
        private global::System.String _ISSUER_ID;
        partial void OnISSUER_IDChanging(global::System.String value);
        partial void OnISSUER_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SHARES_DATE
        {
            get
            {
                return _SHARES_DATE;
            }
            set
            {
                if (_SHARES_DATE != value)
                {
                    OnSHARES_DATEChanging(value);
                    ReportPropertyChanging("SHARES_DATE");
                    _SHARES_DATE = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SHARES_DATE");
                    OnSHARES_DATEChanged();
                }
            }
        }
        private global::System.DateTime _SHARES_DATE;
        partial void OnSHARES_DATEChanging(global::System.DateTime value);
        partial void OnSHARES_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SHARES_OUTSTANDING
        {
            get
            {
                return _SHARES_OUTSTANDING;
            }
            set
            {
                if (_SHARES_OUTSTANDING != value)
                {
                    OnSHARES_OUTSTANDINGChanging(value);
                    ReportPropertyChanging("SHARES_OUTSTANDING");
                    _SHARES_OUTSTANDING = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SHARES_OUTSTANDING");
                    OnSHARES_OUTSTANDINGChanged();
                }
            }
        }
        private global::System.Int32 _SHARES_OUTSTANDING;
        partial void OnSHARES_OUTSTANDINGChanging(global::System.Int32 value);
        partial void OnSHARES_OUTSTANDINGChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExternalResearchModel", Name="ISSUER_SHARES_COMPOSITION")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ISSUER_SHARES_COMPOSITION : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ISSUER_SHARES_COMPOSITION object.
        /// </summary>
        /// <param name="iSSUER_ID">Initial value of the ISSUER_ID property.</param>
        /// <param name="sECURITY_ID">Initial value of the SECURITY_ID property.</param>
        public static ISSUER_SHARES_COMPOSITION CreateISSUER_SHARES_COMPOSITION(global::System.String iSSUER_ID, global::System.String sECURITY_ID)
        {
            ISSUER_SHARES_COMPOSITION iSSUER_SHARES_COMPOSITION = new ISSUER_SHARES_COMPOSITION();
            iSSUER_SHARES_COMPOSITION.ISSUER_ID = iSSUER_ID;
            iSSUER_SHARES_COMPOSITION.SECURITY_ID = sECURITY_ID;
            return iSSUER_SHARES_COMPOSITION;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ISSUER_ID
        {
            get
            {
                return _ISSUER_ID;
            }
            set
            {
                if (_ISSUER_ID != value)
                {
                    OnISSUER_IDChanging(value);
                    ReportPropertyChanging("ISSUER_ID");
                    _ISSUER_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ISSUER_ID");
                    OnISSUER_IDChanged();
                }
            }
        }
        private global::System.String _ISSUER_ID;
        partial void OnISSUER_IDChanging(global::System.String value);
        partial void OnISSUER_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SECURITY_ID
        {
            get
            {
                return _SECURITY_ID;
            }
            set
            {
                if (_SECURITY_ID != value)
                {
                    OnSECURITY_IDChanging(value);
                    ReportPropertyChanging("SECURITY_ID");
                    _SECURITY_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SECURITY_ID");
                    OnSECURITY_IDChanged();
                }
            }
        }
        private global::System.String _SECURITY_ID;
        partial void OnSECURITY_IDChanging(global::System.String value);
        partial void OnSECURITY_IDChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExternalResearchModel", Name="Macroeconomic_Data")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Macroeconomic_Data : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Macroeconomic_Data object.
        /// </summary>
        /// <param name="cOUNTRY_CODE">Initial value of the COUNTRY_CODE property.</param>
        /// <param name="fIELD">Initial value of the FIELD property.</param>
        /// <param name="yEAR1">Initial value of the YEAR1 property.</param>
        /// <param name="uPDATE_DATE">Initial value of the UPDATE_DATE property.</param>
        /// <param name="uPDATE_SOURCE">Initial value of the UPDATE_SOURCE property.</param>
        public static Macroeconomic_Data CreateMacroeconomic_Data(global::System.String cOUNTRY_CODE, global::System.String fIELD, global::System.Int32 yEAR1, global::System.DateTime uPDATE_DATE, global::System.String uPDATE_SOURCE)
        {
            Macroeconomic_Data macroeconomic_Data = new Macroeconomic_Data();
            macroeconomic_Data.COUNTRY_CODE = cOUNTRY_CODE;
            macroeconomic_Data.FIELD = fIELD;
            macroeconomic_Data.YEAR1 = yEAR1;
            macroeconomic_Data.UPDATE_DATE = uPDATE_DATE;
            macroeconomic_Data.UPDATE_SOURCE = uPDATE_SOURCE;
            return macroeconomic_Data;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String COUNTRY_CODE
        {
            get
            {
                return _COUNTRY_CODE;
            }
            set
            {
                if (_COUNTRY_CODE != value)
                {
                    OnCOUNTRY_CODEChanging(value);
                    ReportPropertyChanging("COUNTRY_CODE");
                    _COUNTRY_CODE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("COUNTRY_CODE");
                    OnCOUNTRY_CODEChanged();
                }
            }
        }
        private global::System.String _COUNTRY_CODE;
        partial void OnCOUNTRY_CODEChanging(global::System.String value);
        partial void OnCOUNTRY_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FIELD
        {
            get
            {
                return _FIELD;
            }
            set
            {
                if (_FIELD != value)
                {
                    OnFIELDChanging(value);
                    ReportPropertyChanging("FIELD");
                    _FIELD = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("FIELD");
                    OnFIELDChanged();
                }
            }
        }
        private global::System.String _FIELD;
        partial void OnFIELDChanging(global::System.String value);
        partial void OnFIELDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 YEAR1
        {
            get
            {
                return _YEAR1;
            }
            set
            {
                if (_YEAR1 != value)
                {
                    OnYEAR1Changing(value);
                    ReportPropertyChanging("YEAR1");
                    _YEAR1 = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("YEAR1");
                    OnYEAR1Changed();
                }
            }
        }
        private global::System.Int32 _YEAR1;
        partial void OnYEAR1Changing(global::System.Int32 value);
        partial void OnYEAR1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> VALUE
        {
            get
            {
                return _VALUE;
            }
            set
            {
                OnVALUEChanging(value);
                ReportPropertyChanging("VALUE");
                _VALUE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VALUE");
                OnVALUEChanged();
            }
        }
        private Nullable<global::System.Decimal> _VALUE;
        partial void OnVALUEChanging(Nullable<global::System.Decimal> value);
        partial void OnVALUEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UPDATE_DATE
        {
            get
            {
                return _UPDATE_DATE;
            }
            set
            {
                if (_UPDATE_DATE != value)
                {
                    OnUPDATE_DATEChanging(value);
                    ReportPropertyChanging("UPDATE_DATE");
                    _UPDATE_DATE = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UPDATE_DATE");
                    OnUPDATE_DATEChanged();
                }
            }
        }
        private global::System.DateTime _UPDATE_DATE;
        partial void OnUPDATE_DATEChanging(global::System.DateTime value);
        partial void OnUPDATE_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UPDATE_SOURCE
        {
            get
            {
                return _UPDATE_SOURCE;
            }
            set
            {
                if (_UPDATE_SOURCE != value)
                {
                    OnUPDATE_SOURCEChanging(value);
                    ReportPropertyChanging("UPDATE_SOURCE");
                    _UPDATE_SOURCE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UPDATE_SOURCE");
                    OnUPDATE_SOURCEChanged();
                }
            }
        }
        private global::System.String _UPDATE_SOURCE;
        partial void OnUPDATE_SOURCEChanging(global::System.String value);
        partial void OnUPDATE_SOURCEChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExternalResearchModel", Name="Macroeconomic_Display")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Macroeconomic_Display : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Macroeconomic_Display object.
        /// </summary>
        /// <param name="dISPLAY_TYPE">Initial value of the DISPLAY_TYPE property.</param>
        /// <param name="fIELD">Initial value of the FIELD property.</param>
        /// <param name="cATEGORY_NAME">Initial value of the CATEGORY_NAME property.</param>
        /// <param name="fIELD_DESC">Initial value of the FIELD_DESC property.</param>
        /// <param name="dATATYPE">Initial value of the DATATYPE property.</param>
        /// <param name="sORT_ORDER">Initial value of the SORT_ORDER property.</param>
        public static Macroeconomic_Display CreateMacroeconomic_Display(global::System.String dISPLAY_TYPE, global::System.String fIELD, global::System.String cATEGORY_NAME, global::System.String fIELD_DESC, global::System.String dATATYPE, global::System.Int32 sORT_ORDER)
        {
            Macroeconomic_Display macroeconomic_Display = new Macroeconomic_Display();
            macroeconomic_Display.DISPLAY_TYPE = dISPLAY_TYPE;
            macroeconomic_Display.FIELD = fIELD;
            macroeconomic_Display.CATEGORY_NAME = cATEGORY_NAME;
            macroeconomic_Display.FIELD_DESC = fIELD_DESC;
            macroeconomic_Display.DATATYPE = dATATYPE;
            macroeconomic_Display.SORT_ORDER = sORT_ORDER;
            return macroeconomic_Display;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DISPLAY_TYPE
        {
            get
            {
                return _DISPLAY_TYPE;
            }
            set
            {
                if (_DISPLAY_TYPE != value)
                {
                    OnDISPLAY_TYPEChanging(value);
                    ReportPropertyChanging("DISPLAY_TYPE");
                    _DISPLAY_TYPE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DISPLAY_TYPE");
                    OnDISPLAY_TYPEChanged();
                }
            }
        }
        private global::System.String _DISPLAY_TYPE;
        partial void OnDISPLAY_TYPEChanging(global::System.String value);
        partial void OnDISPLAY_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FIELD
        {
            get
            {
                return _FIELD;
            }
            set
            {
                if (_FIELD != value)
                {
                    OnFIELDChanging(value);
                    ReportPropertyChanging("FIELD");
                    _FIELD = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("FIELD");
                    OnFIELDChanged();
                }
            }
        }
        private global::System.String _FIELD;
        partial void OnFIELDChanging(global::System.String value);
        partial void OnFIELDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CATEGORY_NAME
        {
            get
            {
                return _CATEGORY_NAME;
            }
            set
            {
                if (_CATEGORY_NAME != value)
                {
                    OnCATEGORY_NAMEChanging(value);
                    ReportPropertyChanging("CATEGORY_NAME");
                    _CATEGORY_NAME = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CATEGORY_NAME");
                    OnCATEGORY_NAMEChanged();
                }
            }
        }
        private global::System.String _CATEGORY_NAME;
        partial void OnCATEGORY_NAMEChanging(global::System.String value);
        partial void OnCATEGORY_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FIELD_DESC
        {
            get
            {
                return _FIELD_DESC;
            }
            set
            {
                if (_FIELD_DESC != value)
                {
                    OnFIELD_DESCChanging(value);
                    ReportPropertyChanging("FIELD_DESC");
                    _FIELD_DESC = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("FIELD_DESC");
                    OnFIELD_DESCChanged();
                }
            }
        }
        private global::System.String _FIELD_DESC;
        partial void OnFIELD_DESCChanging(global::System.String value);
        partial void OnFIELD_DESCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DATATYPE
        {
            get
            {
                return _DATATYPE;
            }
            set
            {
                if (_DATATYPE != value)
                {
                    OnDATATYPEChanging(value);
                    ReportPropertyChanging("DATATYPE");
                    _DATATYPE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DATATYPE");
                    OnDATATYPEChanged();
                }
            }
        }
        private global::System.String _DATATYPE;
        partial void OnDATATYPEChanging(global::System.String value);
        partial void OnDATATYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DECIMALS
        {
            get
            {
                return _DECIMALS;
            }
            set
            {
                OnDECIMALSChanging(value);
                ReportPropertyChanging("DECIMALS");
                _DECIMALS = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DECIMALS");
                OnDECIMALSChanged();
            }
        }
        private Nullable<global::System.Int32> _DECIMALS;
        partial void OnDECIMALSChanging(Nullable<global::System.Int32> value);
        partial void OnDECIMALSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SORT_ORDER
        {
            get
            {
                return _SORT_ORDER;
            }
            set
            {
                if (_SORT_ORDER != value)
                {
                    OnSORT_ORDERChanging(value);
                    ReportPropertyChanging("SORT_ORDER");
                    _SORT_ORDER = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SORT_ORDER");
                    OnSORT_ORDERChanged();
                }
            }
        }
        private global::System.Int32 _SORT_ORDER;
        partial void OnSORT_ORDERChanging(global::System.Int32 value);
        partial void OnSORT_ORDERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HELP_TEXT
        {
            get
            {
                return _HELP_TEXT;
            }
            set
            {
                OnHELP_TEXTChanging(value);
                ReportPropertyChanging("HELP_TEXT");
                _HELP_TEXT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HELP_TEXT");
                OnHELP_TEXTChanged();
            }
        }
        private global::System.String _HELP_TEXT;
        partial void OnHELP_TEXTChanging(global::System.String value);
        partial void OnHELP_TEXTChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExternalResearchModel", Name="PERIOD_FINANCIALS")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PERIOD_FINANCIALS : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PERIOD_FINANCIALS object.
        /// </summary>
        /// <param name="iSSUER_ID">Initial value of the ISSUER_ID property.</param>
        /// <param name="sECURITY_ID">Initial value of the SECURITY_ID property.</param>
        /// <param name="cOA_TYPE">Initial value of the COA_TYPE property.</param>
        /// <param name="dATA_SOURCE">Initial value of the DATA_SOURCE property.</param>
        /// <param name="rOOT_SOURCE">Initial value of the ROOT_SOURCE property.</param>
        /// <param name="rOOT_SOURCE_DATE">Initial value of the ROOT_SOURCE_DATE property.</param>
        /// <param name="pERIOD_TYPE">Initial value of the PERIOD_TYPE property.</param>
        /// <param name="pERIOD_YEAR">Initial value of the PERIOD_YEAR property.</param>
        /// <param name="pERIOD_END_DATE">Initial value of the PERIOD_END_DATE property.</param>
        /// <param name="fISCAL_TYPE">Initial value of the FISCAL_TYPE property.</param>
        /// <param name="cURRENCY">Initial value of the CURRENCY property.</param>
        /// <param name="dATA_ID">Initial value of the DATA_ID property.</param>
        /// <param name="aMOUNT">Initial value of the AMOUNT property.</param>
        /// <param name="sOURCE_CURRENCY">Initial value of the SOURCE_CURRENCY property.</param>
        /// <param name="aMOUNT_TYPE">Initial value of the AMOUNT_TYPE property.</param>
        public static PERIOD_FINANCIALS CreatePERIOD_FINANCIALS(global::System.String iSSUER_ID, global::System.String sECURITY_ID, global::System.String cOA_TYPE, global::System.String dATA_SOURCE, global::System.String rOOT_SOURCE, global::System.DateTime rOOT_SOURCE_DATE, global::System.String pERIOD_TYPE, global::System.Int32 pERIOD_YEAR, global::System.DateTime pERIOD_END_DATE, global::System.String fISCAL_TYPE, global::System.String cURRENCY, global::System.Int32 dATA_ID, global::System.Decimal aMOUNT, global::System.String sOURCE_CURRENCY, global::System.String aMOUNT_TYPE)
        {
            PERIOD_FINANCIALS pERIOD_FINANCIALS = new PERIOD_FINANCIALS();
            pERIOD_FINANCIALS.ISSUER_ID = iSSUER_ID;
            pERIOD_FINANCIALS.SECURITY_ID = sECURITY_ID;
            pERIOD_FINANCIALS.COA_TYPE = cOA_TYPE;
            pERIOD_FINANCIALS.DATA_SOURCE = dATA_SOURCE;
            pERIOD_FINANCIALS.ROOT_SOURCE = rOOT_SOURCE;
            pERIOD_FINANCIALS.ROOT_SOURCE_DATE = rOOT_SOURCE_DATE;
            pERIOD_FINANCIALS.PERIOD_TYPE = pERIOD_TYPE;
            pERIOD_FINANCIALS.PERIOD_YEAR = pERIOD_YEAR;
            pERIOD_FINANCIALS.PERIOD_END_DATE = pERIOD_END_DATE;
            pERIOD_FINANCIALS.FISCAL_TYPE = fISCAL_TYPE;
            pERIOD_FINANCIALS.CURRENCY = cURRENCY;
            pERIOD_FINANCIALS.DATA_ID = dATA_ID;
            pERIOD_FINANCIALS.AMOUNT = aMOUNT;
            pERIOD_FINANCIALS.SOURCE_CURRENCY = sOURCE_CURRENCY;
            pERIOD_FINANCIALS.AMOUNT_TYPE = aMOUNT_TYPE;
            return pERIOD_FINANCIALS;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ISSUER_ID
        {
            get
            {
                return _ISSUER_ID;
            }
            set
            {
                if (_ISSUER_ID != value)
                {
                    OnISSUER_IDChanging(value);
                    ReportPropertyChanging("ISSUER_ID");
                    _ISSUER_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ISSUER_ID");
                    OnISSUER_IDChanged();
                }
            }
        }
        private global::System.String _ISSUER_ID;
        partial void OnISSUER_IDChanging(global::System.String value);
        partial void OnISSUER_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SECURITY_ID
        {
            get
            {
                return _SECURITY_ID;
            }
            set
            {
                if (_SECURITY_ID != value)
                {
                    OnSECURITY_IDChanging(value);
                    ReportPropertyChanging("SECURITY_ID");
                    _SECURITY_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SECURITY_ID");
                    OnSECURITY_IDChanged();
                }
            }
        }
        private global::System.String _SECURITY_ID;
        partial void OnSECURITY_IDChanging(global::System.String value);
        partial void OnSECURITY_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String COA_TYPE
        {
            get
            {
                return _COA_TYPE;
            }
            set
            {
                if (_COA_TYPE != value)
                {
                    OnCOA_TYPEChanging(value);
                    ReportPropertyChanging("COA_TYPE");
                    _COA_TYPE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("COA_TYPE");
                    OnCOA_TYPEChanged();
                }
            }
        }
        private global::System.String _COA_TYPE;
        partial void OnCOA_TYPEChanging(global::System.String value);
        partial void OnCOA_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DATA_SOURCE
        {
            get
            {
                return _DATA_SOURCE;
            }
            set
            {
                if (_DATA_SOURCE != value)
                {
                    OnDATA_SOURCEChanging(value);
                    ReportPropertyChanging("DATA_SOURCE");
                    _DATA_SOURCE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DATA_SOURCE");
                    OnDATA_SOURCEChanged();
                }
            }
        }
        private global::System.String _DATA_SOURCE;
        partial void OnDATA_SOURCEChanging(global::System.String value);
        partial void OnDATA_SOURCEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ROOT_SOURCE
        {
            get
            {
                return _ROOT_SOURCE;
            }
            set
            {
                if (_ROOT_SOURCE != value)
                {
                    OnROOT_SOURCEChanging(value);
                    ReportPropertyChanging("ROOT_SOURCE");
                    _ROOT_SOURCE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ROOT_SOURCE");
                    OnROOT_SOURCEChanged();
                }
            }
        }
        private global::System.String _ROOT_SOURCE;
        partial void OnROOT_SOURCEChanging(global::System.String value);
        partial void OnROOT_SOURCEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ROOT_SOURCE_DATE
        {
            get
            {
                return _ROOT_SOURCE_DATE;
            }
            set
            {
                if (_ROOT_SOURCE_DATE != value)
                {
                    OnROOT_SOURCE_DATEChanging(value);
                    ReportPropertyChanging("ROOT_SOURCE_DATE");
                    _ROOT_SOURCE_DATE = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ROOT_SOURCE_DATE");
                    OnROOT_SOURCE_DATEChanged();
                }
            }
        }
        private global::System.DateTime _ROOT_SOURCE_DATE;
        partial void OnROOT_SOURCE_DATEChanging(global::System.DateTime value);
        partial void OnROOT_SOURCE_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PERIOD_TYPE
        {
            get
            {
                return _PERIOD_TYPE;
            }
            set
            {
                if (_PERIOD_TYPE != value)
                {
                    OnPERIOD_TYPEChanging(value);
                    ReportPropertyChanging("PERIOD_TYPE");
                    _PERIOD_TYPE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PERIOD_TYPE");
                    OnPERIOD_TYPEChanged();
                }
            }
        }
        private global::System.String _PERIOD_TYPE;
        partial void OnPERIOD_TYPEChanging(global::System.String value);
        partial void OnPERIOD_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PERIOD_YEAR
        {
            get
            {
                return _PERIOD_YEAR;
            }
            set
            {
                if (_PERIOD_YEAR != value)
                {
                    OnPERIOD_YEARChanging(value);
                    ReportPropertyChanging("PERIOD_YEAR");
                    _PERIOD_YEAR = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PERIOD_YEAR");
                    OnPERIOD_YEARChanged();
                }
            }
        }
        private global::System.Int32 _PERIOD_YEAR;
        partial void OnPERIOD_YEARChanging(global::System.Int32 value);
        partial void OnPERIOD_YEARChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PERIOD_END_DATE
        {
            get
            {
                return _PERIOD_END_DATE;
            }
            set
            {
                if (_PERIOD_END_DATE != value)
                {
                    OnPERIOD_END_DATEChanging(value);
                    ReportPropertyChanging("PERIOD_END_DATE");
                    _PERIOD_END_DATE = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PERIOD_END_DATE");
                    OnPERIOD_END_DATEChanged();
                }
            }
        }
        private global::System.DateTime _PERIOD_END_DATE;
        partial void OnPERIOD_END_DATEChanging(global::System.DateTime value);
        partial void OnPERIOD_END_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FISCAL_TYPE
        {
            get
            {
                return _FISCAL_TYPE;
            }
            set
            {
                if (_FISCAL_TYPE != value)
                {
                    OnFISCAL_TYPEChanging(value);
                    ReportPropertyChanging("FISCAL_TYPE");
                    _FISCAL_TYPE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("FISCAL_TYPE");
                    OnFISCAL_TYPEChanged();
                }
            }
        }
        private global::System.String _FISCAL_TYPE;
        partial void OnFISCAL_TYPEChanging(global::System.String value);
        partial void OnFISCAL_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CURRENCY
        {
            get
            {
                return _CURRENCY;
            }
            set
            {
                if (_CURRENCY != value)
                {
                    OnCURRENCYChanging(value);
                    ReportPropertyChanging("CURRENCY");
                    _CURRENCY = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CURRENCY");
                    OnCURRENCYChanged();
                }
            }
        }
        private global::System.String _CURRENCY;
        partial void OnCURRENCYChanging(global::System.String value);
        partial void OnCURRENCYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DATA_ID
        {
            get
            {
                return _DATA_ID;
            }
            set
            {
                if (_DATA_ID != value)
                {
                    OnDATA_IDChanging(value);
                    ReportPropertyChanging("DATA_ID");
                    _DATA_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DATA_ID");
                    OnDATA_IDChanged();
                }
            }
        }
        private global::System.Int32 _DATA_ID;
        partial void OnDATA_IDChanging(global::System.Int32 value);
        partial void OnDATA_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal AMOUNT
        {
            get
            {
                return _AMOUNT;
            }
            set
            {
                if (_AMOUNT != value)
                {
                    OnAMOUNTChanging(value);
                    ReportPropertyChanging("AMOUNT");
                    _AMOUNT = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AMOUNT");
                    OnAMOUNTChanged();
                }
            }
        }
        private global::System.Decimal _AMOUNT;
        partial void OnAMOUNTChanging(global::System.Decimal value);
        partial void OnAMOUNTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CALCULATION_DIAGRAM
        {
            get
            {
                return _CALCULATION_DIAGRAM;
            }
            set
            {
                OnCALCULATION_DIAGRAMChanging(value);
                ReportPropertyChanging("CALCULATION_DIAGRAM");
                _CALCULATION_DIAGRAM = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CALCULATION_DIAGRAM");
                OnCALCULATION_DIAGRAMChanged();
            }
        }
        private global::System.String _CALCULATION_DIAGRAM;
        partial void OnCALCULATION_DIAGRAMChanging(global::System.String value);
        partial void OnCALCULATION_DIAGRAMChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SOURCE_CURRENCY
        {
            get
            {
                return _SOURCE_CURRENCY;
            }
            set
            {
                if (_SOURCE_CURRENCY != value)
                {
                    OnSOURCE_CURRENCYChanging(value);
                    ReportPropertyChanging("SOURCE_CURRENCY");
                    _SOURCE_CURRENCY = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SOURCE_CURRENCY");
                    OnSOURCE_CURRENCYChanged();
                }
            }
        }
        private global::System.String _SOURCE_CURRENCY;
        partial void OnSOURCE_CURRENCYChanging(global::System.String value);
        partial void OnSOURCE_CURRENCYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AMOUNT_TYPE
        {
            get
            {
                return _AMOUNT_TYPE;
            }
            set
            {
                if (_AMOUNT_TYPE != value)
                {
                    OnAMOUNT_TYPEChanging(value);
                    ReportPropertyChanging("AMOUNT_TYPE");
                    _AMOUNT_TYPE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("AMOUNT_TYPE");
                    OnAMOUNT_TYPEChanged();
                }
            }
        }
        private global::System.String _AMOUNT_TYPE;
        partial void OnAMOUNT_TYPEChanging(global::System.String value);
        partial void OnAMOUNT_TYPEChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExternalResearchModel", Name="PERIOD_FINANCIALS_DISPLAY")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PERIOD_FINANCIALS_DISPLAY : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PERIOD_FINANCIALS_DISPLAY object.
        /// </summary>
        /// <param name="dATA_ID">Initial value of the DATA_ID property.</param>
        /// <param name="dATA_DESC">Initial value of the DATA_DESC property.</param>
        /// <param name="cOA_TYPE">Initial value of the COA_TYPE property.</param>
        /// <param name="sORT_ORDER">Initial value of the SORT_ORDER property.</param>
        /// <param name="gROUP_NAME">Initial value of the GROUP_NAME property.</param>
        /// <param name="bOLD_FONT">Initial value of the BOLD_FONT property.</param>
        /// <param name="dECIMALS">Initial value of the DECIMALS property.</param>
        /// <param name="mULTIPLIER">Initial value of the MULTIPLIER property.</param>
        public static PERIOD_FINANCIALS_DISPLAY CreatePERIOD_FINANCIALS_DISPLAY(global::System.Int32 dATA_ID, global::System.String dATA_DESC, global::System.String cOA_TYPE, global::System.Int32 sORT_ORDER, global::System.String gROUP_NAME, global::System.String bOLD_FONT, global::System.Int32 dECIMALS, global::System.Decimal mULTIPLIER)
        {
            PERIOD_FINANCIALS_DISPLAY pERIOD_FINANCIALS_DISPLAY = new PERIOD_FINANCIALS_DISPLAY();
            pERIOD_FINANCIALS_DISPLAY.DATA_ID = dATA_ID;
            pERIOD_FINANCIALS_DISPLAY.DATA_DESC = dATA_DESC;
            pERIOD_FINANCIALS_DISPLAY.COA_TYPE = cOA_TYPE;
            pERIOD_FINANCIALS_DISPLAY.SORT_ORDER = sORT_ORDER;
            pERIOD_FINANCIALS_DISPLAY.GROUP_NAME = gROUP_NAME;
            pERIOD_FINANCIALS_DISPLAY.BOLD_FONT = bOLD_FONT;
            pERIOD_FINANCIALS_DISPLAY.DECIMALS = dECIMALS;
            pERIOD_FINANCIALS_DISPLAY.MULTIPLIER = mULTIPLIER;
            return pERIOD_FINANCIALS_DISPLAY;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DATA_ID
        {
            get
            {
                return _DATA_ID;
            }
            set
            {
                if (_DATA_ID != value)
                {
                    OnDATA_IDChanging(value);
                    ReportPropertyChanging("DATA_ID");
                    _DATA_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DATA_ID");
                    OnDATA_IDChanged();
                }
            }
        }
        private global::System.Int32 _DATA_ID;
        partial void OnDATA_IDChanging(global::System.Int32 value);
        partial void OnDATA_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DATA_DESC
        {
            get
            {
                return _DATA_DESC;
            }
            set
            {
                if (_DATA_DESC != value)
                {
                    OnDATA_DESCChanging(value);
                    ReportPropertyChanging("DATA_DESC");
                    _DATA_DESC = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DATA_DESC");
                    OnDATA_DESCChanged();
                }
            }
        }
        private global::System.String _DATA_DESC;
        partial void OnDATA_DESCChanging(global::System.String value);
        partial void OnDATA_DESCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String STATEMENT_TYPE
        {
            get
            {
                return _STATEMENT_TYPE;
            }
            set
            {
                OnSTATEMENT_TYPEChanging(value);
                ReportPropertyChanging("STATEMENT_TYPE");
                _STATEMENT_TYPE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("STATEMENT_TYPE");
                OnSTATEMENT_TYPEChanged();
            }
        }
        private global::System.String _STATEMENT_TYPE;
        partial void OnSTATEMENT_TYPEChanging(global::System.String value);
        partial void OnSTATEMENT_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String COA_TYPE
        {
            get
            {
                return _COA_TYPE;
            }
            set
            {
                if (_COA_TYPE != value)
                {
                    OnCOA_TYPEChanging(value);
                    ReportPropertyChanging("COA_TYPE");
                    _COA_TYPE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("COA_TYPE");
                    OnCOA_TYPEChanged();
                }
            }
        }
        private global::System.String _COA_TYPE;
        partial void OnCOA_TYPEChanging(global::System.String value);
        partial void OnCOA_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SORT_ORDER
        {
            get
            {
                return _SORT_ORDER;
            }
            set
            {
                if (_SORT_ORDER != value)
                {
                    OnSORT_ORDERChanging(value);
                    ReportPropertyChanging("SORT_ORDER");
                    _SORT_ORDER = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SORT_ORDER");
                    OnSORT_ORDERChanged();
                }
            }
        }
        private global::System.Int32 _SORT_ORDER;
        partial void OnSORT_ORDERChanging(global::System.Int32 value);
        partial void OnSORT_ORDERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GROUP_NAME
        {
            get
            {
                return _GROUP_NAME;
            }
            set
            {
                if (_GROUP_NAME != value)
                {
                    OnGROUP_NAMEChanging(value);
                    ReportPropertyChanging("GROUP_NAME");
                    _GROUP_NAME = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("GROUP_NAME");
                    OnGROUP_NAMEChanged();
                }
            }
        }
        private global::System.String _GROUP_NAME;
        partial void OnGROUP_NAMEChanging(global::System.String value);
        partial void OnGROUP_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BOLD_FONT
        {
            get
            {
                return _BOLD_FONT;
            }
            set
            {
                if (_BOLD_FONT != value)
                {
                    OnBOLD_FONTChanging(value);
                    ReportPropertyChanging("BOLD_FONT");
                    _BOLD_FONT = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("BOLD_FONT");
                    OnBOLD_FONTChanged();
                }
            }
        }
        private global::System.String _BOLD_FONT;
        partial void OnBOLD_FONTChanging(global::System.String value);
        partial void OnBOLD_FONTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DECIMALS
        {
            get
            {
                return _DECIMALS;
            }
            set
            {
                if (_DECIMALS != value)
                {
                    OnDECIMALSChanging(value);
                    ReportPropertyChanging("DECIMALS");
                    _DECIMALS = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DECIMALS");
                    OnDECIMALSChanged();
                }
            }
        }
        private global::System.Int32 _DECIMALS;
        partial void OnDECIMALSChanging(global::System.Int32 value);
        partial void OnDECIMALSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal MULTIPLIER
        {
            get
            {
                return _MULTIPLIER;
            }
            set
            {
                if (_MULTIPLIER != value)
                {
                    OnMULTIPLIERChanging(value);
                    ReportPropertyChanging("MULTIPLIER");
                    _MULTIPLIER = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MULTIPLIER");
                    OnMULTIPLIERChanged();
                }
            }
        }
        private global::System.Decimal _MULTIPLIER;
        partial void OnMULTIPLIERChanging(global::System.Decimal value);
        partial void OnMULTIPLIERChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExternalResearchModel", Name="PRICE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PRICE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PRICE object.
        /// </summary>
        /// <param name="sECURITY_ID">Initial value of the SECURITY_ID property.</param>
        /// <param name="pRICE_DATE">Initial value of the PRICE_DATE property.</param>
        /// <param name="pRICE1">Initial value of the PRICE1 property.</param>
        /// <param name="fX_RATE">Initial value of the FX_RATE property.</param>
        /// <param name="aDR_CONV">Initial value of the ADR_CONV property.</param>
        public static PRICE CreatePRICE(global::System.String sECURITY_ID, global::System.DateTime pRICE_DATE, global::System.Decimal pRICE1, global::System.Decimal fX_RATE, global::System.Decimal aDR_CONV)
        {
            PRICE pRICE = new PRICE();
            pRICE.SECURITY_ID = sECURITY_ID;
            pRICE.PRICE_DATE = pRICE_DATE;
            pRICE.PRICE1 = pRICE1;
            pRICE.FX_RATE = fX_RATE;
            pRICE.ADR_CONV = aDR_CONV;
            return pRICE;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SECURITY_ID
        {
            get
            {
                return _SECURITY_ID;
            }
            set
            {
                if (_SECURITY_ID != value)
                {
                    OnSECURITY_IDChanging(value);
                    ReportPropertyChanging("SECURITY_ID");
                    _SECURITY_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SECURITY_ID");
                    OnSECURITY_IDChanged();
                }
            }
        }
        private global::System.String _SECURITY_ID;
        partial void OnSECURITY_IDChanging(global::System.String value);
        partial void OnSECURITY_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PRICE_DATE
        {
            get
            {
                return _PRICE_DATE;
            }
            set
            {
                if (_PRICE_DATE != value)
                {
                    OnPRICE_DATEChanging(value);
                    ReportPropertyChanging("PRICE_DATE");
                    _PRICE_DATE = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PRICE_DATE");
                    OnPRICE_DATEChanged();
                }
            }
        }
        private global::System.DateTime _PRICE_DATE;
        partial void OnPRICE_DATEChanging(global::System.DateTime value);
        partial void OnPRICE_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal PRICE1
        {
            get
            {
                return _PRICE1;
            }
            set
            {
                if (_PRICE1 != value)
                {
                    OnPRICE1Changing(value);
                    ReportPropertyChanging("PRICE1");
                    _PRICE1 = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PRICE1");
                    OnPRICE1Changed();
                }
            }
        }
        private global::System.Decimal _PRICE1;
        partial void OnPRICE1Changing(global::System.Decimal value);
        partial void OnPRICE1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal FX_RATE
        {
            get
            {
                return _FX_RATE;
            }
            set
            {
                if (_FX_RATE != value)
                {
                    OnFX_RATEChanging(value);
                    ReportPropertyChanging("FX_RATE");
                    _FX_RATE = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FX_RATE");
                    OnFX_RATEChanged();
                }
            }
        }
        private global::System.Decimal _FX_RATE;
        partial void OnFX_RATEChanging(global::System.Decimal value);
        partial void OnFX_RATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ADR_CONV
        {
            get
            {
                return _ADR_CONV;
            }
            set
            {
                if (_ADR_CONV != value)
                {
                    OnADR_CONVChanging(value);
                    ReportPropertyChanging("ADR_CONV");
                    _ADR_CONV = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ADR_CONV");
                    OnADR_CONVChanged();
                }
            }
        }
        private global::System.Decimal _ADR_CONV;
        partial void OnADR_CONVChanging(global::System.Decimal value);
        partial void OnADR_CONVChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExternalResearchModel", Name="REUTERS_XREF")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class REUTERS_XREF : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new REUTERS_XREF object.
        /// </summary>
        /// <param name="reportNumber">Initial value of the ReportNumber property.</param>
        /// <param name="iSSUER_ID">Initial value of the ISSUER_ID property.</param>
        /// <param name="pROVIDER">Initial value of the PROVIDER property.</param>
        public static REUTERS_XREF CreateREUTERS_XREF(global::System.String reportNumber, global::System.String iSSUER_ID, global::System.String pROVIDER)
        {
            REUTERS_XREF rEUTERS_XREF = new REUTERS_XREF();
            rEUTERS_XREF.ReportNumber = reportNumber;
            rEUTERS_XREF.ISSUER_ID = iSSUER_ID;
            rEUTERS_XREF.PROVIDER = pROVIDER;
            return rEUTERS_XREF;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ReportNumber
        {
            get
            {
                return _ReportNumber;
            }
            set
            {
                if (_ReportNumber != value)
                {
                    OnReportNumberChanging(value);
                    ReportPropertyChanging("ReportNumber");
                    _ReportNumber = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ReportNumber");
                    OnReportNumberChanged();
                }
            }
        }
        private global::System.String _ReportNumber;
        partial void OnReportNumberChanging(global::System.String value);
        partial void OnReportNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Xref
        {
            get
            {
                return _Xref;
            }
            set
            {
                OnXrefChanging(value);
                ReportPropertyChanging("Xref");
                _Xref = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Xref");
                OnXrefChanged();
            }
        }
        private global::System.String _Xref;
        partial void OnXrefChanging(global::System.String value);
        partial void OnXrefChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ISSUER_ID
        {
            get
            {
                return _ISSUER_ID;
            }
            set
            {
                if (_ISSUER_ID != value)
                {
                    OnISSUER_IDChanging(value);
                    ReportPropertyChanging("ISSUER_ID");
                    _ISSUER_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ISSUER_ID");
                    OnISSUER_IDChanged();
                }
            }
        }
        private global::System.String _ISSUER_ID;
        partial void OnISSUER_IDChanging(global::System.String value);
        partial void OnISSUER_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SECURITY_ID
        {
            get
            {
                return _SECURITY_ID;
            }
            set
            {
                OnSECURITY_IDChanging(value);
                ReportPropertyChanging("SECURITY_ID");
                _SECURITY_ID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SECURITY_ID");
                OnSECURITY_IDChanged();
            }
        }
        private global::System.String _SECURITY_ID;
        partial void OnSECURITY_IDChanging(global::System.String value);
        partial void OnSECURITY_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ASEC_SEC_SHORT_NAME
        {
            get
            {
                return _ASEC_SEC_SHORT_NAME;
            }
            set
            {
                OnASEC_SEC_SHORT_NAMEChanging(value);
                ReportPropertyChanging("ASEC_SEC_SHORT_NAME");
                _ASEC_SEC_SHORT_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ASEC_SEC_SHORT_NAME");
                OnASEC_SEC_SHORT_NAMEChanged();
            }
        }
        private global::System.String _ASEC_SEC_SHORT_NAME;
        partial void OnASEC_SEC_SHORT_NAMEChanging(global::System.String value);
        partial void OnASEC_SEC_SHORT_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PROVIDER
        {
            get
            {
                return _PROVIDER;
            }
            set
            {
                if (_PROVIDER != value)
                {
                    OnPROVIDERChanging(value);
                    ReportPropertyChanging("PROVIDER");
                    _PROVIDER = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PROVIDER");
                    OnPROVIDERChanged();
                }
            }
        }
        private global::System.String _PROVIDER;
        partial void OnPROVIDERChanging(global::System.String value);
        partial void OnPROVIDERChanged();

        #endregion
    
    }

    #endregion
    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ExternalResearchModel", Name="BrokerDetailData")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class BrokerDetailData : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BrokerDetailData object.
        /// </summary>
        /// <param name="estimateType">Initial value of the EstimateType property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="last_Update_Date">Initial value of the Last_Update_Date property.</param>
        public static BrokerDetailData CreateBrokerDetailData(global::System.String estimateType, global::System.DateTime startDate, global::System.DateTime last_Update_Date)
        {
            BrokerDetailData brokerDetailData = new BrokerDetailData();
            brokerDetailData.EstimateType = estimateType;
            brokerDetailData.StartDate = startDate;
            brokerDetailData.Last_Update_Date = last_Update_Date;
            return brokerDetailData;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String broker_name
        {
            get
            {
                return _broker_name;
            }
            set
            {
                Onbroker_nameChanging(value);
                ReportPropertyChanging("broker_name");
                _broker_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("broker_name");
                Onbroker_nameChanged();
            }
        }
        private global::System.String _broker_name;
        partial void Onbroker_nameChanging(global::System.String value);
        partial void Onbroker_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EstimateType
        {
            get
            {
                return _EstimateType;
            }
            set
            {
                OnEstimateTypeChanging(value);
                ReportPropertyChanging("EstimateType");
                _EstimateType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EstimateType");
                OnEstimateTypeChanged();
            }
        }
        private global::System.String _EstimateType;
        partial void OnEstimateTypeChanging(global::System.String value);
        partial void OnEstimateTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String fPeriodEnd
        {
            get
            {
                return _fPeriodEnd;
            }
            set
            {
                OnfPeriodEndChanging(value);
                ReportPropertyChanging("fPeriodEnd");
                _fPeriodEnd = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("fPeriodEnd");
                OnfPeriodEndChanged();
            }
        }
        private global::System.String _fPeriodEnd;
        partial void OnfPeriodEndChanging(global::System.String value);
        partial void OnfPeriodEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private Nullable<global::System.Single> _Amount;
        partial void OnAmountChanging(Nullable<global::System.Single> value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Last_Update_Date
        {
            get
            {
                return _Last_Update_Date;
            }
            set
            {
                OnLast_Update_DateChanging(value);
                ReportPropertyChanging("Last_Update_Date");
                _Last_Update_Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Last_Update_Date");
                OnLast_Update_DateChanged();
            }
        }
        private global::System.DateTime _Last_Update_Date;
        partial void OnLast_Update_DateChanging(global::System.DateTime value);
        partial void OnLast_Update_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Reported_Currency
        {
            get
            {
                return _Reported_Currency;
            }
            set
            {
                OnReported_CurrencyChanging(value);
                ReportPropertyChanging("Reported_Currency");
                _Reported_Currency = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Reported_Currency");
                OnReported_CurrencyChanged();
            }
        }
        private global::System.String _Reported_Currency;
        partial void OnReported_CurrencyChanging(global::System.String value);
        partial void OnReported_CurrencyChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ExternalResearchModel", Name="COASpecificData")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class COASpecificData : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new COASpecificData object.
        /// </summary>
        /// <param name="gridId">Initial value of the GridId property.</param>
        /// <param name="gridDesc">Initial value of the GridDesc property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="amountType">Initial value of the AmountType property.</param>
        /// <param name="dataSource">Initial value of the DataSource property.</param>
        /// <param name="decimals">Initial value of the Decimals property.</param>
        /// <param name="isPercentage">Initial value of the IsPercentage property.</param>
        /// <param name="rootSource">Initial value of the RootSource property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        /// <param name="period_Type">Initial value of the Period_Type property.</param>
        /// <param name="periodYear">Initial value of the PeriodYear property.</param>
        public static COASpecificData CreateCOASpecificData(global::System.Int32 gridId, global::System.String gridDesc, global::System.Decimal amount, global::System.String amountType, global::System.String dataSource, global::System.Int32 decimals, global::System.String isPercentage, global::System.String rootSource, global::System.Int32 sortOrder, global::System.String period_Type, global::System.Int32 periodYear)
        {
            COASpecificData cOASpecificData = new COASpecificData();
            cOASpecificData.GridId = gridId;
            cOASpecificData.GridDesc = gridDesc;
            cOASpecificData.Amount = amount;
            cOASpecificData.AmountType = amountType;
            cOASpecificData.DataSource = dataSource;
            cOASpecificData.Decimals = decimals;
            cOASpecificData.IsPercentage = isPercentage;
            cOASpecificData.RootSource = rootSource;
            cOASpecificData.SortOrder = sortOrder;
            cOASpecificData.Period_Type = period_Type;
            cOASpecificData.PeriodYear = periodYear;
            return cOASpecificData;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GridId
        {
            get
            {
                return _GridId;
            }
            set
            {
                OnGridIdChanging(value);
                ReportPropertyChanging("GridId");
                _GridId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GridId");
                OnGridIdChanged();
            }
        }
        private global::System.Int32 _GridId;
        partial void OnGridIdChanging(global::System.Int32 value);
        partial void OnGridIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShowGrid
        {
            get
            {
                return _ShowGrid;
            }
            set
            {
                OnShowGridChanging(value);
                ReportPropertyChanging("ShowGrid");
                _ShowGrid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShowGrid");
                OnShowGridChanged();
            }
        }
        private global::System.String _ShowGrid;
        partial void OnShowGridChanging(global::System.String value);
        partial void OnShowGridChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GridDesc
        {
            get
            {
                return _GridDesc;
            }
            set
            {
                OnGridDescChanging(value);
                ReportPropertyChanging("GridDesc");
                _GridDesc = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("GridDesc");
                OnGridDescChanged();
            }
        }
        private global::System.String _GridDesc;
        partial void OnGridDescChanging(global::System.String value);
        partial void OnGridDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AmountType
        {
            get
            {
                return _AmountType;
            }
            set
            {
                OnAmountTypeChanging(value);
                ReportPropertyChanging("AmountType");
                _AmountType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AmountType");
                OnAmountTypeChanged();
            }
        }
        private global::System.String _AmountType;
        partial void OnAmountTypeChanging(global::System.String value);
        partial void OnAmountTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DataSource
        {
            get
            {
                return _DataSource;
            }
            set
            {
                OnDataSourceChanging(value);
                ReportPropertyChanging("DataSource");
                _DataSource = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DataSource");
                OnDataSourceChanged();
            }
        }
        private global::System.String _DataSource;
        partial void OnDataSourceChanging(global::System.String value);
        partial void OnDataSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Decimals
        {
            get
            {
                return _Decimals;
            }
            set
            {
                OnDecimalsChanging(value);
                ReportPropertyChanging("Decimals");
                _Decimals = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Decimals");
                OnDecimalsChanged();
            }
        }
        private global::System.Int32 _Decimals;
        partial void OnDecimalsChanging(global::System.Int32 value);
        partial void OnDecimalsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IsPercentage
        {
            get
            {
                return _IsPercentage;
            }
            set
            {
                OnIsPercentageChanging(value);
                ReportPropertyChanging("IsPercentage");
                _IsPercentage = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IsPercentage");
                OnIsPercentageChanged();
            }
        }
        private global::System.String _IsPercentage;
        partial void OnIsPercentageChanging(global::System.String value);
        partial void OnIsPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RootSource
        {
            get
            {
                return _RootSource;
            }
            set
            {
                OnRootSourceChanging(value);
                ReportPropertyChanging("RootSource");
                _RootSource = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RootSource");
                OnRootSourceChanged();
            }
        }
        private global::System.String _RootSource;
        partial void OnRootSourceChanging(global::System.String value);
        partial void OnRootSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Period_Type
        {
            get
            {
                return _Period_Type;
            }
            set
            {
                OnPeriod_TypeChanging(value);
                ReportPropertyChanging("Period_Type");
                _Period_Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Period_Type");
                OnPeriod_TypeChanged();
            }
        }
        private global::System.String _Period_Type;
        partial void OnPeriod_TypeChanging(global::System.String value);
        partial void OnPeriod_TypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PeriodYear
        {
            get
            {
                return _PeriodYear;
            }
            set
            {
                OnPeriodYearChanging(value);
                ReportPropertyChanging("PeriodYear");
                _PeriodYear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PeriodYear");
                OnPeriodYearChanged();
            }
        }
        private global::System.Int32 _PeriodYear;
        partial void OnPeriodYearChanging(global::System.Int32 value);
        partial void OnPeriodYearChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ExternalResearchModel", Name="ConsensusEstimateDetailData")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ConsensusEstimateDetailData : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ConsensusEstimateDetailData object.
        /// </summary>
        /// <param name="iSSUER_ID">Initial value of the ISSUER_ID property.</param>
        /// <param name="eSTIMATE_ID">Initial value of the ESTIMATE_ID property.</param>
        /// <param name="eSTIMATE_DESC">Initial value of the ESTIMATE_DESC property.</param>
        /// <param name="period">Initial value of the Period property.</param>
        /// <param name="aMOUNT_TYPE">Initial value of the AMOUNT_TYPE property.</param>
        /// <param name="pERIOD_YEAR">Initial value of the PERIOD_YEAR property.</param>
        /// <param name="pERIOD_TYPE">Initial value of the PERIOD_TYPE property.</param>
        /// <param name="aMOUNT">Initial value of the AMOUNT property.</param>
        /// <param name="nUMBER_OF_ESTIMATES">Initial value of the NUMBER_OF_ESTIMATES property.</param>
        /// <param name="hIGH">Initial value of the HIGH property.</param>
        /// <param name="lOW">Initial value of the LOW property.</param>
        /// <param name="sTANDARD_DEVIATION">Initial value of the STANDARD_DEVIATION property.</param>
        /// <param name="sOURCE_CURRENCY">Initial value of the SOURCE_CURRENCY property.</param>
        /// <param name="dATA_SOURCE">Initial value of the DATA_SOURCE property.</param>
        /// <param name="dATA_SOURCE_DATE">Initial value of the DATA_SOURCE_DATE property.</param>
        public static ConsensusEstimateDetailData CreateConsensusEstimateDetailData(global::System.String iSSUER_ID, global::System.Int32 eSTIMATE_ID, global::System.String eSTIMATE_DESC, global::System.String period, global::System.String aMOUNT_TYPE, global::System.Int32 pERIOD_YEAR, global::System.String pERIOD_TYPE, global::System.Decimal aMOUNT, global::System.Int32 nUMBER_OF_ESTIMATES, global::System.Decimal hIGH, global::System.Decimal lOW, global::System.Decimal sTANDARD_DEVIATION, global::System.String sOURCE_CURRENCY, global::System.String dATA_SOURCE, global::System.DateTime dATA_SOURCE_DATE)
        {
            ConsensusEstimateDetailData consensusEstimateDetailData = new ConsensusEstimateDetailData();
            consensusEstimateDetailData.ISSUER_ID = iSSUER_ID;
            consensusEstimateDetailData.ESTIMATE_ID = eSTIMATE_ID;
            consensusEstimateDetailData.ESTIMATE_DESC = eSTIMATE_DESC;
            consensusEstimateDetailData.Period = period;
            consensusEstimateDetailData.AMOUNT_TYPE = aMOUNT_TYPE;
            consensusEstimateDetailData.PERIOD_YEAR = pERIOD_YEAR;
            consensusEstimateDetailData.PERIOD_TYPE = pERIOD_TYPE;
            consensusEstimateDetailData.AMOUNT = aMOUNT;
            consensusEstimateDetailData.NUMBER_OF_ESTIMATES = nUMBER_OF_ESTIMATES;
            consensusEstimateDetailData.HIGH = hIGH;
            consensusEstimateDetailData.LOW = lOW;
            consensusEstimateDetailData.STANDARD_DEVIATION = sTANDARD_DEVIATION;
            consensusEstimateDetailData.SOURCE_CURRENCY = sOURCE_CURRENCY;
            consensusEstimateDetailData.DATA_SOURCE = dATA_SOURCE;
            consensusEstimateDetailData.DATA_SOURCE_DATE = dATA_SOURCE_DATE;
            return consensusEstimateDetailData;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ISSUER_ID
        {
            get
            {
                return _ISSUER_ID;
            }
            set
            {
                OnISSUER_IDChanging(value);
                ReportPropertyChanging("ISSUER_ID");
                _ISSUER_ID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ISSUER_ID");
                OnISSUER_IDChanged();
            }
        }
        private global::System.String _ISSUER_ID;
        partial void OnISSUER_IDChanging(global::System.String value);
        partial void OnISSUER_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ESTIMATE_ID
        {
            get
            {
                return _ESTIMATE_ID;
            }
            set
            {
                OnESTIMATE_IDChanging(value);
                ReportPropertyChanging("ESTIMATE_ID");
                _ESTIMATE_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ESTIMATE_ID");
                OnESTIMATE_IDChanged();
            }
        }
        private global::System.Int32 _ESTIMATE_ID;
        partial void OnESTIMATE_IDChanging(global::System.Int32 value);
        partial void OnESTIMATE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ESTIMATE_DESC
        {
            get
            {
                return _ESTIMATE_DESC;
            }
            set
            {
                OnESTIMATE_DESCChanging(value);
                ReportPropertyChanging("ESTIMATE_DESC");
                _ESTIMATE_DESC = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ESTIMATE_DESC");
                OnESTIMATE_DESCChanged();
            }
        }
        private global::System.String _ESTIMATE_DESC;
        partial void OnESTIMATE_DESCChanging(global::System.String value);
        partial void OnESTIMATE_DESCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Period
        {
            get
            {
                return _Period;
            }
            set
            {
                OnPeriodChanging(value);
                ReportPropertyChanging("Period");
                _Period = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Period");
                OnPeriodChanged();
            }
        }
        private global::System.String _Period;
        partial void OnPeriodChanging(global::System.String value);
        partial void OnPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AMOUNT_TYPE
        {
            get
            {
                return _AMOUNT_TYPE;
            }
            set
            {
                OnAMOUNT_TYPEChanging(value);
                ReportPropertyChanging("AMOUNT_TYPE");
                _AMOUNT_TYPE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AMOUNT_TYPE");
                OnAMOUNT_TYPEChanged();
            }
        }
        private global::System.String _AMOUNT_TYPE;
        partial void OnAMOUNT_TYPEChanging(global::System.String value);
        partial void OnAMOUNT_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PERIOD_YEAR
        {
            get
            {
                return _PERIOD_YEAR;
            }
            set
            {
                OnPERIOD_YEARChanging(value);
                ReportPropertyChanging("PERIOD_YEAR");
                _PERIOD_YEAR = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PERIOD_YEAR");
                OnPERIOD_YEARChanged();
            }
        }
        private global::System.Int32 _PERIOD_YEAR;
        partial void OnPERIOD_YEARChanging(global::System.Int32 value);
        partial void OnPERIOD_YEARChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PERIOD_TYPE
        {
            get
            {
                return _PERIOD_TYPE;
            }
            set
            {
                OnPERIOD_TYPEChanging(value);
                ReportPropertyChanging("PERIOD_TYPE");
                _PERIOD_TYPE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PERIOD_TYPE");
                OnPERIOD_TYPEChanged();
            }
        }
        private global::System.String _PERIOD_TYPE;
        partial void OnPERIOD_TYPEChanging(global::System.String value);
        partial void OnPERIOD_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal AMOUNT
        {
            get
            {
                return _AMOUNT;
            }
            set
            {
                OnAMOUNTChanging(value);
                ReportPropertyChanging("AMOUNT");
                _AMOUNT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AMOUNT");
                OnAMOUNTChanged();
            }
        }
        private global::System.Decimal _AMOUNT;
        partial void OnAMOUNTChanging(global::System.Decimal value);
        partial void OnAMOUNTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ASHMOREEMM_AMOUNT
        {
            get
            {
                return _ASHMOREEMM_AMOUNT;
            }
            set
            {
                OnASHMOREEMM_AMOUNTChanging(value);
                ReportPropertyChanging("ASHMOREEMM_AMOUNT");
                _ASHMOREEMM_AMOUNT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ASHMOREEMM_AMOUNT");
                OnASHMOREEMM_AMOUNTChanged();
            }
        }
        private Nullable<global::System.Decimal> _ASHMOREEMM_AMOUNT;
        partial void OnASHMOREEMM_AMOUNTChanging(Nullable<global::System.Decimal> value);
        partial void OnASHMOREEMM_AMOUNTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NUMBER_OF_ESTIMATES
        {
            get
            {
                return _NUMBER_OF_ESTIMATES;
            }
            set
            {
                OnNUMBER_OF_ESTIMATESChanging(value);
                ReportPropertyChanging("NUMBER_OF_ESTIMATES");
                _NUMBER_OF_ESTIMATES = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NUMBER_OF_ESTIMATES");
                OnNUMBER_OF_ESTIMATESChanged();
            }
        }
        private global::System.Int32 _NUMBER_OF_ESTIMATES;
        partial void OnNUMBER_OF_ESTIMATESChanging(global::System.Int32 value);
        partial void OnNUMBER_OF_ESTIMATESChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal HIGH
        {
            get
            {
                return _HIGH;
            }
            set
            {
                OnHIGHChanging(value);
                ReportPropertyChanging("HIGH");
                _HIGH = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HIGH");
                OnHIGHChanged();
            }
        }
        private global::System.Decimal _HIGH;
        partial void OnHIGHChanging(global::System.Decimal value);
        partial void OnHIGHChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal LOW
        {
            get
            {
                return _LOW;
            }
            set
            {
                OnLOWChanging(value);
                ReportPropertyChanging("LOW");
                _LOW = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LOW");
                OnLOWChanged();
            }
        }
        private global::System.Decimal _LOW;
        partial void OnLOWChanging(global::System.Decimal value);
        partial void OnLOWChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal STANDARD_DEVIATION
        {
            get
            {
                return _STANDARD_DEVIATION;
            }
            set
            {
                OnSTANDARD_DEVIATIONChanging(value);
                ReportPropertyChanging("STANDARD_DEVIATION");
                _STANDARD_DEVIATION = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("STANDARD_DEVIATION");
                OnSTANDARD_DEVIATIONChanged();
            }
        }
        private global::System.Decimal _STANDARD_DEVIATION;
        partial void OnSTANDARD_DEVIATIONChanging(global::System.Decimal value);
        partial void OnSTANDARD_DEVIATIONChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SOURCE_CURRENCY
        {
            get
            {
                return _SOURCE_CURRENCY;
            }
            set
            {
                OnSOURCE_CURRENCYChanging(value);
                ReportPropertyChanging("SOURCE_CURRENCY");
                _SOURCE_CURRENCY = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SOURCE_CURRENCY");
                OnSOURCE_CURRENCYChanged();
            }
        }
        private global::System.String _SOURCE_CURRENCY;
        partial void OnSOURCE_CURRENCYChanging(global::System.String value);
        partial void OnSOURCE_CURRENCYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DATA_SOURCE
        {
            get
            {
                return _DATA_SOURCE;
            }
            set
            {
                OnDATA_SOURCEChanging(value);
                ReportPropertyChanging("DATA_SOURCE");
                _DATA_SOURCE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DATA_SOURCE");
                OnDATA_SOURCEChanged();
            }
        }
        private global::System.String _DATA_SOURCE;
        partial void OnDATA_SOURCEChanging(global::System.String value);
        partial void OnDATA_SOURCEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DATA_SOURCE_DATE
        {
            get
            {
                return _DATA_SOURCE_DATE;
            }
            set
            {
                OnDATA_SOURCE_DATEChanging(value);
                ReportPropertyChanging("DATA_SOURCE_DATE");
                _DATA_SOURCE_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATA_SOURCE_DATE");
                OnDATA_SOURCE_DATEChanged();
            }
        }
        private global::System.DateTime _DATA_SOURCE_DATE;
        partial void OnDATA_SOURCE_DATEChanging(global::System.DateTime value);
        partial void OnDATA_SOURCE_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ACTUAL
        {
            get
            {
                return _ACTUAL;
            }
            set
            {
                OnACTUALChanging(value);
                ReportPropertyChanging("ACTUAL");
                _ACTUAL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ACTUAL");
                OnACTUALChanged();
            }
        }
        private Nullable<global::System.Decimal> _ACTUAL;
        partial void OnACTUALChanging(Nullable<global::System.Decimal> value);
        partial void OnACTUALChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ExternalResearchModel", Name="ConsensusEstimateMedianData")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ConsensusEstimateMedianData : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ConsensusEstimateMedianData object.
        /// </summary>
        /// <param name="iSSUER_ID">Initial value of the ISSUER_ID property.</param>
        /// <param name="eSTIMATE_ID">Initial value of the ESTIMATE_ID property.</param>
        /// <param name="eSTIMATE_DESC">Initial value of the ESTIMATE_DESC property.</param>
        /// <param name="period">Initial value of the Period property.</param>
        /// <param name="aMOUNT_TYPE">Initial value of the AMOUNT_TYPE property.</param>
        /// <param name="pERIOD_YEAR">Initial value of the PERIOD_YEAR property.</param>
        /// <param name="pERIOD_TYPE">Initial value of the PERIOD_TYPE property.</param>
        /// <param name="aMOUNT">Initial value of the AMOUNT property.</param>
        /// <param name="nUMBER_OF_ESTIMATES">Initial value of the NUMBER_OF_ESTIMATES property.</param>
        /// <param name="hIGH">Initial value of the HIGH property.</param>
        /// <param name="lOW">Initial value of the LOW property.</param>
        /// <param name="sTANDARD_DEVIATION">Initial value of the STANDARD_DEVIATION property.</param>
        /// <param name="sOURCE_CURRENCY">Initial value of the SOURCE_CURRENCY property.</param>
        /// <param name="dATA_SOURCE">Initial value of the DATA_SOURCE property.</param>
        /// <param name="dATA_SOURCE_DATE">Initial value of the DATA_SOURCE_DATE property.</param>
        public static ConsensusEstimateMedianData CreateConsensusEstimateMedianData(global::System.String iSSUER_ID, global::System.Int32 eSTIMATE_ID, global::System.String eSTIMATE_DESC, global::System.String period, global::System.String aMOUNT_TYPE, global::System.Int32 pERIOD_YEAR, global::System.String pERIOD_TYPE, global::System.Decimal aMOUNT, global::System.Int32 nUMBER_OF_ESTIMATES, global::System.Decimal hIGH, global::System.Decimal lOW, global::System.Decimal sTANDARD_DEVIATION, global::System.String sOURCE_CURRENCY, global::System.String dATA_SOURCE, global::System.DateTime dATA_SOURCE_DATE)
        {
            ConsensusEstimateMedianData consensusEstimateMedianData = new ConsensusEstimateMedianData();
            consensusEstimateMedianData.ISSUER_ID = iSSUER_ID;
            consensusEstimateMedianData.ESTIMATE_ID = eSTIMATE_ID;
            consensusEstimateMedianData.ESTIMATE_DESC = eSTIMATE_DESC;
            consensusEstimateMedianData.Period = period;
            consensusEstimateMedianData.AMOUNT_TYPE = aMOUNT_TYPE;
            consensusEstimateMedianData.PERIOD_YEAR = pERIOD_YEAR;
            consensusEstimateMedianData.PERIOD_TYPE = pERIOD_TYPE;
            consensusEstimateMedianData.AMOUNT = aMOUNT;
            consensusEstimateMedianData.NUMBER_OF_ESTIMATES = nUMBER_OF_ESTIMATES;
            consensusEstimateMedianData.HIGH = hIGH;
            consensusEstimateMedianData.LOW = lOW;
            consensusEstimateMedianData.STANDARD_DEVIATION = sTANDARD_DEVIATION;
            consensusEstimateMedianData.SOURCE_CURRENCY = sOURCE_CURRENCY;
            consensusEstimateMedianData.DATA_SOURCE = dATA_SOURCE;
            consensusEstimateMedianData.DATA_SOURCE_DATE = dATA_SOURCE_DATE;
            return consensusEstimateMedianData;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ISSUER_ID
        {
            get
            {
                return _ISSUER_ID;
            }
            set
            {
                OnISSUER_IDChanging(value);
                ReportPropertyChanging("ISSUER_ID");
                _ISSUER_ID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ISSUER_ID");
                OnISSUER_IDChanged();
            }
        }
        private global::System.String _ISSUER_ID;
        partial void OnISSUER_IDChanging(global::System.String value);
        partial void OnISSUER_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ESTIMATE_ID
        {
            get
            {
                return _ESTIMATE_ID;
            }
            set
            {
                OnESTIMATE_IDChanging(value);
                ReportPropertyChanging("ESTIMATE_ID");
                _ESTIMATE_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ESTIMATE_ID");
                OnESTIMATE_IDChanged();
            }
        }
        private global::System.Int32 _ESTIMATE_ID;
        partial void OnESTIMATE_IDChanging(global::System.Int32 value);
        partial void OnESTIMATE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ESTIMATE_DESC
        {
            get
            {
                return _ESTIMATE_DESC;
            }
            set
            {
                OnESTIMATE_DESCChanging(value);
                ReportPropertyChanging("ESTIMATE_DESC");
                _ESTIMATE_DESC = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ESTIMATE_DESC");
                OnESTIMATE_DESCChanged();
            }
        }
        private global::System.String _ESTIMATE_DESC;
        partial void OnESTIMATE_DESCChanging(global::System.String value);
        partial void OnESTIMATE_DESCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Period
        {
            get
            {
                return _Period;
            }
            set
            {
                OnPeriodChanging(value);
                ReportPropertyChanging("Period");
                _Period = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Period");
                OnPeriodChanged();
            }
        }
        private global::System.String _Period;
        partial void OnPeriodChanging(global::System.String value);
        partial void OnPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AMOUNT_TYPE
        {
            get
            {
                return _AMOUNT_TYPE;
            }
            set
            {
                OnAMOUNT_TYPEChanging(value);
                ReportPropertyChanging("AMOUNT_TYPE");
                _AMOUNT_TYPE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AMOUNT_TYPE");
                OnAMOUNT_TYPEChanged();
            }
        }
        private global::System.String _AMOUNT_TYPE;
        partial void OnAMOUNT_TYPEChanging(global::System.String value);
        partial void OnAMOUNT_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PERIOD_YEAR
        {
            get
            {
                return _PERIOD_YEAR;
            }
            set
            {
                OnPERIOD_YEARChanging(value);
                ReportPropertyChanging("PERIOD_YEAR");
                _PERIOD_YEAR = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PERIOD_YEAR");
                OnPERIOD_YEARChanged();
            }
        }
        private global::System.Int32 _PERIOD_YEAR;
        partial void OnPERIOD_YEARChanging(global::System.Int32 value);
        partial void OnPERIOD_YEARChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PERIOD_TYPE
        {
            get
            {
                return _PERIOD_TYPE;
            }
            set
            {
                OnPERIOD_TYPEChanging(value);
                ReportPropertyChanging("PERIOD_TYPE");
                _PERIOD_TYPE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PERIOD_TYPE");
                OnPERIOD_TYPEChanged();
            }
        }
        private global::System.String _PERIOD_TYPE;
        partial void OnPERIOD_TYPEChanging(global::System.String value);
        partial void OnPERIOD_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal AMOUNT
        {
            get
            {
                return _AMOUNT;
            }
            set
            {
                OnAMOUNTChanging(value);
                ReportPropertyChanging("AMOUNT");
                _AMOUNT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AMOUNT");
                OnAMOUNTChanged();
            }
        }
        private global::System.Decimal _AMOUNT;
        partial void OnAMOUNTChanging(global::System.Decimal value);
        partial void OnAMOUNTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ASHMOREEMM_AMOUNT
        {
            get
            {
                return _ASHMOREEMM_AMOUNT;
            }
            set
            {
                OnASHMOREEMM_AMOUNTChanging(value);
                ReportPropertyChanging("ASHMOREEMM_AMOUNT");
                _ASHMOREEMM_AMOUNT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ASHMOREEMM_AMOUNT");
                OnASHMOREEMM_AMOUNTChanged();
            }
        }
        private Nullable<global::System.Decimal> _ASHMOREEMM_AMOUNT;
        partial void OnASHMOREEMM_AMOUNTChanging(Nullable<global::System.Decimal> value);
        partial void OnASHMOREEMM_AMOUNTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NUMBER_OF_ESTIMATES
        {
            get
            {
                return _NUMBER_OF_ESTIMATES;
            }
            set
            {
                OnNUMBER_OF_ESTIMATESChanging(value);
                ReportPropertyChanging("NUMBER_OF_ESTIMATES");
                _NUMBER_OF_ESTIMATES = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NUMBER_OF_ESTIMATES");
                OnNUMBER_OF_ESTIMATESChanged();
            }
        }
        private global::System.Int32 _NUMBER_OF_ESTIMATES;
        partial void OnNUMBER_OF_ESTIMATESChanging(global::System.Int32 value);
        partial void OnNUMBER_OF_ESTIMATESChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal HIGH
        {
            get
            {
                return _HIGH;
            }
            set
            {
                OnHIGHChanging(value);
                ReportPropertyChanging("HIGH");
                _HIGH = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HIGH");
                OnHIGHChanged();
            }
        }
        private global::System.Decimal _HIGH;
        partial void OnHIGHChanging(global::System.Decimal value);
        partial void OnHIGHChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal LOW
        {
            get
            {
                return _LOW;
            }
            set
            {
                OnLOWChanging(value);
                ReportPropertyChanging("LOW");
                _LOW = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LOW");
                OnLOWChanged();
            }
        }
        private global::System.Decimal _LOW;
        partial void OnLOWChanging(global::System.Decimal value);
        partial void OnLOWChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal STANDARD_DEVIATION
        {
            get
            {
                return _STANDARD_DEVIATION;
            }
            set
            {
                OnSTANDARD_DEVIATIONChanging(value);
                ReportPropertyChanging("STANDARD_DEVIATION");
                _STANDARD_DEVIATION = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("STANDARD_DEVIATION");
                OnSTANDARD_DEVIATIONChanged();
            }
        }
        private global::System.Decimal _STANDARD_DEVIATION;
        partial void OnSTANDARD_DEVIATIONChanging(global::System.Decimal value);
        partial void OnSTANDARD_DEVIATIONChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SOURCE_CURRENCY
        {
            get
            {
                return _SOURCE_CURRENCY;
            }
            set
            {
                OnSOURCE_CURRENCYChanging(value);
                ReportPropertyChanging("SOURCE_CURRENCY");
                _SOURCE_CURRENCY = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SOURCE_CURRENCY");
                OnSOURCE_CURRENCYChanged();
            }
        }
        private global::System.String _SOURCE_CURRENCY;
        partial void OnSOURCE_CURRENCYChanging(global::System.String value);
        partial void OnSOURCE_CURRENCYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DATA_SOURCE
        {
            get
            {
                return _DATA_SOURCE;
            }
            set
            {
                OnDATA_SOURCEChanging(value);
                ReportPropertyChanging("DATA_SOURCE");
                _DATA_SOURCE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DATA_SOURCE");
                OnDATA_SOURCEChanged();
            }
        }
        private global::System.String _DATA_SOURCE;
        partial void OnDATA_SOURCEChanging(global::System.String value);
        partial void OnDATA_SOURCEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DATA_SOURCE_DATE
        {
            get
            {
                return _DATA_SOURCE_DATE;
            }
            set
            {
                OnDATA_SOURCE_DATEChanging(value);
                ReportPropertyChanging("DATA_SOURCE_DATE");
                _DATA_SOURCE_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATA_SOURCE_DATE");
                OnDATA_SOURCE_DATEChanged();
            }
        }
        private global::System.DateTime _DATA_SOURCE_DATE;
        partial void OnDATA_SOURCE_DATEChanging(global::System.DateTime value);
        partial void OnDATA_SOURCE_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ACTUAL
        {
            get
            {
                return _ACTUAL;
            }
            set
            {
                OnACTUALChanging(value);
                ReportPropertyChanging("ACTUAL");
                _ACTUAL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ACTUAL");
                OnACTUALChanged();
            }
        }
        private Nullable<global::System.Decimal> _ACTUAL;
        partial void OnACTUALChanging(Nullable<global::System.Decimal> value);
        partial void OnACTUALChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ExternalResearchModel", Name="ConsensusEstimatesSummaryData")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ConsensusEstimatesSummaryData : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ConsensusEstimatesSummaryData object.
        /// </summary>
        /// <param name="currency">Initial value of the currency property.</param>
        public static ConsensusEstimatesSummaryData CreateConsensusEstimatesSummaryData(global::System.String currency)
        {
            ConsensusEstimatesSummaryData consensusEstimatesSummaryData = new ConsensusEstimatesSummaryData();
            consensusEstimatesSummaryData.currency = currency;
            return consensusEstimatesSummaryData;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NetIncome
        {
            get
            {
                return _NetIncome;
            }
            set
            {
                OnNetIncomeChanging(value);
                ReportPropertyChanging("NetIncome");
                _NetIncome = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NetIncome");
                OnNetIncomeChanged();
            }
        }
        private global::System.String _NetIncome;
        partial void OnNetIncomeChanging(global::System.String value);
        partial void OnNetIncomeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String YEAR1
        {
            get
            {
                return _YEAR1;
            }
            set
            {
                OnYEAR1Changing(value);
                ReportPropertyChanging("YEAR1");
                _YEAR1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("YEAR1");
                OnYEAR1Changed();
            }
        }
        private global::System.String _YEAR1;
        partial void OnYEAR1Changing(global::System.String value);
        partial void OnYEAR1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String YEAR2
        {
            get
            {
                return _YEAR2;
            }
            set
            {
                OnYEAR2Changing(value);
                ReportPropertyChanging("YEAR2");
                _YEAR2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("YEAR2");
                OnYEAR2Changed();
            }
        }
        private global::System.String _YEAR2;
        partial void OnYEAR2Changing(global::System.String value);
        partial void OnYEAR2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String YEAR3
        {
            get
            {
                return _YEAR3;
            }
            set
            {
                OnYEAR3Changing(value);
                ReportPropertyChanging("YEAR3");
                _YEAR3 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("YEAR3");
                OnYEAR3Changed();
            }
        }
        private global::System.String _YEAR3;
        partial void OnYEAR3Changing(global::System.String value);
        partial void OnYEAR3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String YEAR4
        {
            get
            {
                return _YEAR4;
            }
            set
            {
                OnYEAR4Changing(value);
                ReportPropertyChanging("YEAR4");
                _YEAR4 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("YEAR4");
                OnYEAR4Changed();
            }
        }
        private global::System.String _YEAR4;
        partial void OnYEAR4Changing(global::System.String value);
        partial void OnYEAR4Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String YEAR5
        {
            get
            {
                return _YEAR5;
            }
            set
            {
                OnYEAR5Changing(value);
                ReportPropertyChanging("YEAR5");
                _YEAR5 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("YEAR5");
                OnYEAR5Changed();
            }
        }
        private global::System.String _YEAR5;
        partial void OnYEAR5Changing(global::System.String value);
        partial void OnYEAR5Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String currency
        {
            get
            {
                return _currency;
            }
            set
            {
                OncurrencyChanging(value);
                ReportPropertyChanging("currency");
                _currency = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("currency");
                OncurrencyChanged();
            }
        }
        private global::System.String _currency;
        partial void OncurrencyChanging(global::System.String value);
        partial void OncurrencyChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ExternalResearchModel", Name="ConsensusEstimateValuation")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ConsensusEstimateValuation : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ConsensusEstimateValuation object.
        /// </summary>
        /// <param name="iSSUER_ID">Initial value of the ISSUER_ID property.</param>
        /// <param name="eSTIMATE_ID">Initial value of the ESTIMATE_ID property.</param>
        /// <param name="eSTIMATE_DESC">Initial value of the ESTIMATE_DESC property.</param>
        /// <param name="period">Initial value of the Period property.</param>
        /// <param name="aMOUNT_TYPE">Initial value of the AMOUNT_TYPE property.</param>
        /// <param name="pERIOD_YEAR">Initial value of the PERIOD_YEAR property.</param>
        /// <param name="pERIOD_TYPE">Initial value of the PERIOD_TYPE property.</param>
        /// <param name="aMOUNT">Initial value of the AMOUNT property.</param>
        /// <param name="nUMBER_OF_ESTIMATES">Initial value of the NUMBER_OF_ESTIMATES property.</param>
        /// <param name="hIGH">Initial value of the HIGH property.</param>
        /// <param name="lOW">Initial value of the LOW property.</param>
        /// <param name="sTANDARD_DEVIATION">Initial value of the STANDARD_DEVIATION property.</param>
        /// <param name="sOURCE_CURRENCY">Initial value of the SOURCE_CURRENCY property.</param>
        /// <param name="dATA_SOURCE">Initial value of the DATA_SOURCE property.</param>
        /// <param name="dATA_SOURCE_DATE">Initial value of the DATA_SOURCE_DATE property.</param>
        public static ConsensusEstimateValuation CreateConsensusEstimateValuation(global::System.String iSSUER_ID, global::System.Int32 eSTIMATE_ID, global::System.String eSTIMATE_DESC, global::System.String period, global::System.String aMOUNT_TYPE, global::System.Int32 pERIOD_YEAR, global::System.String pERIOD_TYPE, global::System.Decimal aMOUNT, global::System.Int32 nUMBER_OF_ESTIMATES, global::System.Decimal hIGH, global::System.Decimal lOW, global::System.Decimal sTANDARD_DEVIATION, global::System.String sOURCE_CURRENCY, global::System.String dATA_SOURCE, global::System.DateTime dATA_SOURCE_DATE)
        {
            ConsensusEstimateValuation consensusEstimateValuation = new ConsensusEstimateValuation();
            consensusEstimateValuation.ISSUER_ID = iSSUER_ID;
            consensusEstimateValuation.ESTIMATE_ID = eSTIMATE_ID;
            consensusEstimateValuation.ESTIMATE_DESC = eSTIMATE_DESC;
            consensusEstimateValuation.Period = period;
            consensusEstimateValuation.AMOUNT_TYPE = aMOUNT_TYPE;
            consensusEstimateValuation.PERIOD_YEAR = pERIOD_YEAR;
            consensusEstimateValuation.PERIOD_TYPE = pERIOD_TYPE;
            consensusEstimateValuation.AMOUNT = aMOUNT;
            consensusEstimateValuation.NUMBER_OF_ESTIMATES = nUMBER_OF_ESTIMATES;
            consensusEstimateValuation.HIGH = hIGH;
            consensusEstimateValuation.LOW = lOW;
            consensusEstimateValuation.STANDARD_DEVIATION = sTANDARD_DEVIATION;
            consensusEstimateValuation.SOURCE_CURRENCY = sOURCE_CURRENCY;
            consensusEstimateValuation.DATA_SOURCE = dATA_SOURCE;
            consensusEstimateValuation.DATA_SOURCE_DATE = dATA_SOURCE_DATE;
            return consensusEstimateValuation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ISSUER_ID
        {
            get
            {
                return _ISSUER_ID;
            }
            set
            {
                OnISSUER_IDChanging(value);
                ReportPropertyChanging("ISSUER_ID");
                _ISSUER_ID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ISSUER_ID");
                OnISSUER_IDChanged();
            }
        }
        private global::System.String _ISSUER_ID;
        partial void OnISSUER_IDChanging(global::System.String value);
        partial void OnISSUER_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ESTIMATE_ID
        {
            get
            {
                return _ESTIMATE_ID;
            }
            set
            {
                OnESTIMATE_IDChanging(value);
                ReportPropertyChanging("ESTIMATE_ID");
                _ESTIMATE_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ESTIMATE_ID");
                OnESTIMATE_IDChanged();
            }
        }
        private global::System.Int32 _ESTIMATE_ID;
        partial void OnESTIMATE_IDChanging(global::System.Int32 value);
        partial void OnESTIMATE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ESTIMATE_DESC
        {
            get
            {
                return _ESTIMATE_DESC;
            }
            set
            {
                OnESTIMATE_DESCChanging(value);
                ReportPropertyChanging("ESTIMATE_DESC");
                _ESTIMATE_DESC = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ESTIMATE_DESC");
                OnESTIMATE_DESCChanged();
            }
        }
        private global::System.String _ESTIMATE_DESC;
        partial void OnESTIMATE_DESCChanging(global::System.String value);
        partial void OnESTIMATE_DESCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Period
        {
            get
            {
                return _Period;
            }
            set
            {
                OnPeriodChanging(value);
                ReportPropertyChanging("Period");
                _Period = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Period");
                OnPeriodChanged();
            }
        }
        private global::System.String _Period;
        partial void OnPeriodChanging(global::System.String value);
        partial void OnPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AMOUNT_TYPE
        {
            get
            {
                return _AMOUNT_TYPE;
            }
            set
            {
                OnAMOUNT_TYPEChanging(value);
                ReportPropertyChanging("AMOUNT_TYPE");
                _AMOUNT_TYPE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AMOUNT_TYPE");
                OnAMOUNT_TYPEChanged();
            }
        }
        private global::System.String _AMOUNT_TYPE;
        partial void OnAMOUNT_TYPEChanging(global::System.String value);
        partial void OnAMOUNT_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PERIOD_YEAR
        {
            get
            {
                return _PERIOD_YEAR;
            }
            set
            {
                OnPERIOD_YEARChanging(value);
                ReportPropertyChanging("PERIOD_YEAR");
                _PERIOD_YEAR = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PERIOD_YEAR");
                OnPERIOD_YEARChanged();
            }
        }
        private global::System.Int32 _PERIOD_YEAR;
        partial void OnPERIOD_YEARChanging(global::System.Int32 value);
        partial void OnPERIOD_YEARChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PERIOD_TYPE
        {
            get
            {
                return _PERIOD_TYPE;
            }
            set
            {
                OnPERIOD_TYPEChanging(value);
                ReportPropertyChanging("PERIOD_TYPE");
                _PERIOD_TYPE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PERIOD_TYPE");
                OnPERIOD_TYPEChanged();
            }
        }
        private global::System.String _PERIOD_TYPE;
        partial void OnPERIOD_TYPEChanging(global::System.String value);
        partial void OnPERIOD_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal AMOUNT
        {
            get
            {
                return _AMOUNT;
            }
            set
            {
                OnAMOUNTChanging(value);
                ReportPropertyChanging("AMOUNT");
                _AMOUNT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AMOUNT");
                OnAMOUNTChanged();
            }
        }
        private global::System.Decimal _AMOUNT;
        partial void OnAMOUNTChanging(global::System.Decimal value);
        partial void OnAMOUNTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ASHMOREEMM_AMOUNT
        {
            get
            {
                return _ASHMOREEMM_AMOUNT;
            }
            set
            {
                OnASHMOREEMM_AMOUNTChanging(value);
                ReportPropertyChanging("ASHMOREEMM_AMOUNT");
                _ASHMOREEMM_AMOUNT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ASHMOREEMM_AMOUNT");
                OnASHMOREEMM_AMOUNTChanged();
            }
        }
        private Nullable<global::System.Decimal> _ASHMOREEMM_AMOUNT;
        partial void OnASHMOREEMM_AMOUNTChanging(Nullable<global::System.Decimal> value);
        partial void OnASHMOREEMM_AMOUNTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NUMBER_OF_ESTIMATES
        {
            get
            {
                return _NUMBER_OF_ESTIMATES;
            }
            set
            {
                OnNUMBER_OF_ESTIMATESChanging(value);
                ReportPropertyChanging("NUMBER_OF_ESTIMATES");
                _NUMBER_OF_ESTIMATES = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NUMBER_OF_ESTIMATES");
                OnNUMBER_OF_ESTIMATESChanged();
            }
        }
        private global::System.Int32 _NUMBER_OF_ESTIMATES;
        partial void OnNUMBER_OF_ESTIMATESChanging(global::System.Int32 value);
        partial void OnNUMBER_OF_ESTIMATESChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal HIGH
        {
            get
            {
                return _HIGH;
            }
            set
            {
                OnHIGHChanging(value);
                ReportPropertyChanging("HIGH");
                _HIGH = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HIGH");
                OnHIGHChanged();
            }
        }
        private global::System.Decimal _HIGH;
        partial void OnHIGHChanging(global::System.Decimal value);
        partial void OnHIGHChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal LOW
        {
            get
            {
                return _LOW;
            }
            set
            {
                OnLOWChanging(value);
                ReportPropertyChanging("LOW");
                _LOW = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LOW");
                OnLOWChanged();
            }
        }
        private global::System.Decimal _LOW;
        partial void OnLOWChanging(global::System.Decimal value);
        partial void OnLOWChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal STANDARD_DEVIATION
        {
            get
            {
                return _STANDARD_DEVIATION;
            }
            set
            {
                OnSTANDARD_DEVIATIONChanging(value);
                ReportPropertyChanging("STANDARD_DEVIATION");
                _STANDARD_DEVIATION = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("STANDARD_DEVIATION");
                OnSTANDARD_DEVIATIONChanged();
            }
        }
        private global::System.Decimal _STANDARD_DEVIATION;
        partial void OnSTANDARD_DEVIATIONChanging(global::System.Decimal value);
        partial void OnSTANDARD_DEVIATIONChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SOURCE_CURRENCY
        {
            get
            {
                return _SOURCE_CURRENCY;
            }
            set
            {
                OnSOURCE_CURRENCYChanging(value);
                ReportPropertyChanging("SOURCE_CURRENCY");
                _SOURCE_CURRENCY = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SOURCE_CURRENCY");
                OnSOURCE_CURRENCYChanged();
            }
        }
        private global::System.String _SOURCE_CURRENCY;
        partial void OnSOURCE_CURRENCYChanging(global::System.String value);
        partial void OnSOURCE_CURRENCYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DATA_SOURCE
        {
            get
            {
                return _DATA_SOURCE;
            }
            set
            {
                OnDATA_SOURCEChanging(value);
                ReportPropertyChanging("DATA_SOURCE");
                _DATA_SOURCE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DATA_SOURCE");
                OnDATA_SOURCEChanged();
            }
        }
        private global::System.String _DATA_SOURCE;
        partial void OnDATA_SOURCEChanging(global::System.String value);
        partial void OnDATA_SOURCEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DATA_SOURCE_DATE
        {
            get
            {
                return _DATA_SOURCE_DATE;
            }
            set
            {
                OnDATA_SOURCE_DATEChanging(value);
                ReportPropertyChanging("DATA_SOURCE_DATE");
                _DATA_SOURCE_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATA_SOURCE_DATE");
                OnDATA_SOURCE_DATEChanged();
            }
        }
        private global::System.DateTime _DATA_SOURCE_DATE;
        partial void OnDATA_SOURCE_DATEChanging(global::System.DateTime value);
        partial void OnDATA_SOURCE_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ACTUAL
        {
            get
            {
                return _ACTUAL;
            }
            set
            {
                OnACTUALChanging(value);
                ReportPropertyChanging("ACTUAL");
                _ACTUAL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ACTUAL");
                OnACTUALChanged();
            }
        }
        private Nullable<global::System.Decimal> _ACTUAL;
        partial void OnACTUALChanging(Nullable<global::System.Decimal> value);
        partial void OnACTUALChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ExternalResearchModel", Name="FinancialStatementData")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class FinancialStatementData : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FinancialStatementData object.
        /// </summary>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="periodType">Initial value of the PeriodType property.</param>
        /// <param name="periodYear">Initial value of the PeriodYear property.</param>
        /// <param name="isConsensus">Initial value of the IsConsensus property.</param>
        public static FinancialStatementData CreateFinancialStatementData(global::System.Int32 sortOrder, global::System.String description, global::System.String periodType, global::System.Int32 periodYear, global::System.String isConsensus)
        {
            FinancialStatementData financialStatementData = new FinancialStatementData();
            financialStatementData.SortOrder = sortOrder;
            financialStatementData.Description = description;
            financialStatementData.PeriodType = periodType;
            financialStatementData.PeriodYear = periodYear;
            financialStatementData.IsConsensus = isConsensus;
            return financialStatementData;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AmountType
        {
            get
            {
                return _AmountType;
            }
            set
            {
                OnAmountTypeChanging(value);
                ReportPropertyChanging("AmountType");
                _AmountType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AmountType");
                OnAmountTypeChanged();
            }
        }
        private global::System.String _AmountType;
        partial void OnAmountTypeChanging(global::System.String value);
        partial void OnAmountTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PeriodType
        {
            get
            {
                return _PeriodType;
            }
            set
            {
                OnPeriodTypeChanging(value);
                ReportPropertyChanging("PeriodType");
                _PeriodType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PeriodType");
                OnPeriodTypeChanged();
            }
        }
        private global::System.String _PeriodType;
        partial void OnPeriodTypeChanging(global::System.String value);
        partial void OnPeriodTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _Amount;
        partial void OnAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PeriodYear
        {
            get
            {
                return _PeriodYear;
            }
            set
            {
                OnPeriodYearChanging(value);
                ReportPropertyChanging("PeriodYear");
                _PeriodYear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PeriodYear");
                OnPeriodYearChanged();
            }
        }
        private global::System.Int32 _PeriodYear;
        partial void OnPeriodYearChanging(global::System.Int32 value);
        partial void OnPeriodYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IsConsensus
        {
            get
            {
                return _IsConsensus;
            }
            set
            {
                OnIsConsensusChanging(value);
                ReportPropertyChanging("IsConsensus");
                _IsConsensus = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IsConsensus");
                OnIsConsensusChanged();
            }
        }
        private global::System.String _IsConsensus;
        partial void OnIsConsensusChanging(global::System.String value);
        partial void OnIsConsensusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DataId
        {
            get
            {
                return _DataId;
            }
            set
            {
                OnDataIdChanging(value);
                ReportPropertyChanging("DataId");
                _DataId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DataId");
                OnDataIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DataId;
        partial void OnDataIdChanging(Nullable<global::System.Int32> value);
        partial void OnDataIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GroupName
        {
            get
            {
                return _GroupName;
            }
            set
            {
                OnGroupNameChanging(value);
                ReportPropertyChanging("GroupName");
                _GroupName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GroupName");
                OnGroupNameChanged();
            }
        }
        private global::System.String _GroupName;
        partial void OnGroupNameChanging(global::System.String value);
        partial void OnGroupNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BoldFont
        {
            get
            {
                return _BoldFont;
            }
            set
            {
                OnBoldFontChanging(value);
                ReportPropertyChanging("BoldFont");
                _BoldFont = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BoldFont");
                OnBoldFontChanged();
            }
        }
        private global::System.String _BoldFont;
        partial void OnBoldFontChanging(global::System.String value);
        partial void OnBoldFontChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Decimals
        {
            get
            {
                return _Decimals;
            }
            set
            {
                OnDecimalsChanging(value);
                ReportPropertyChanging("Decimals");
                _Decimals = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Decimals");
                OnDecimalsChanged();
            }
        }
        private Nullable<global::System.Int32> _Decimals;
        partial void OnDecimalsChanging(Nullable<global::System.Int32> value);
        partial void OnDecimalsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RootSource
        {
            get
            {
                return _RootSource;
            }
            set
            {
                OnRootSourceChanging(value);
                ReportPropertyChanging("RootSource");
                _RootSource = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RootSource");
                OnRootSourceChanged();
            }
        }
        private global::System.String _RootSource;
        partial void OnRootSourceChanging(global::System.String value);
        partial void OnRootSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RootSourceDate
        {
            get
            {
                return _RootSourceDate;
            }
            set
            {
                OnRootSourceDateChanging(value);
                ReportPropertyChanging("RootSourceDate");
                _RootSourceDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RootSourceDate");
                OnRootSourceDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _RootSourceDate;
        partial void OnRootSourceDateChanging(Nullable<global::System.DateTime> value);
        partial void OnRootSourceDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CalculationDiagram
        {
            get
            {
                return _CalculationDiagram;
            }
            set
            {
                OnCalculationDiagramChanging(value);
                ReportPropertyChanging("CalculationDiagram");
                _CalculationDiagram = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CalculationDiagram");
                OnCalculationDiagramChanged();
            }
        }
        private global::System.String _CalculationDiagram;
        partial void OnCalculationDiagramChanging(global::System.String value);
        partial void OnCalculationDiagramChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ExternalResearchModel", Name="FinstatDetail")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class FinstatDetail : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FinstatDetail object.
        /// </summary>
        /// <param name="dATA_SOURCE">Initial value of the DATA_SOURCE property.</param>
        /// <param name="rOOT_SOURCE">Initial value of the ROOT_SOURCE property.</param>
        /// <param name="rOOT_SOURCE_DATE">Initial value of the ROOT_SOURCE_DATE property.</param>
        /// <param name="pERIOD_YEAR">Initial value of the PERIOD_YEAR property.</param>
        /// <param name="dATA_ID">Initial value of the DATA_ID property.</param>
        /// <param name="aMOUNT">Initial value of the AMOUNT property.</param>
        /// <param name="mULTIPLIER">Initial value of the MULTIPLIER property.</param>
        /// <param name="dECIMALS">Initial value of the DECIMALS property.</param>
        /// <param name="pERCENTAGE">Initial value of the PERCENTAGE property.</param>
        /// <param name="bOLD_FONT">Initial value of the BOLD_FONT property.</param>
        /// <param name="gROUP_NAME">Initial value of the GROUP_NAME property.</param>
        /// <param name="sORT_ORDER">Initial value of the SORT_ORDER property.</param>
        /// <param name="hARMONIC">Initial value of the HARMONIC property.</param>
        /// <param name="dATA_DESC">Initial value of the DATA_DESC property.</param>
        public static FinstatDetail CreateFinstatDetail(global::System.String dATA_SOURCE, global::System.String rOOT_SOURCE, global::System.DateTime rOOT_SOURCE_DATE, global::System.Int32 pERIOD_YEAR, global::System.Int32 dATA_ID, global::System.Decimal aMOUNT, global::System.Decimal mULTIPLIER, global::System.Int32 dECIMALS, global::System.String pERCENTAGE, global::System.String bOLD_FONT, global::System.String gROUP_NAME, global::System.Int32 sORT_ORDER, global::System.String hARMONIC, global::System.String dATA_DESC)
        {
            FinstatDetail finstatDetail = new FinstatDetail();
            finstatDetail.DATA_SOURCE = dATA_SOURCE;
            finstatDetail.ROOT_SOURCE = rOOT_SOURCE;
            finstatDetail.ROOT_SOURCE_DATE = rOOT_SOURCE_DATE;
            finstatDetail.PERIOD_YEAR = pERIOD_YEAR;
            finstatDetail.DATA_ID = dATA_ID;
            finstatDetail.AMOUNT = aMOUNT;
            finstatDetail.MULTIPLIER = mULTIPLIER;
            finstatDetail.DECIMALS = dECIMALS;
            finstatDetail.PERCENTAGE = pERCENTAGE;
            finstatDetail.BOLD_FONT = bOLD_FONT;
            finstatDetail.GROUP_NAME = gROUP_NAME;
            finstatDetail.SORT_ORDER = sORT_ORDER;
            finstatDetail.HARMONIC = hARMONIC;
            finstatDetail.DATA_DESC = dATA_DESC;
            return finstatDetail;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DATA_SOURCE
        {
            get
            {
                return _DATA_SOURCE;
            }
            set
            {
                OnDATA_SOURCEChanging(value);
                ReportPropertyChanging("DATA_SOURCE");
                _DATA_SOURCE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DATA_SOURCE");
                OnDATA_SOURCEChanged();
            }
        }
        private global::System.String _DATA_SOURCE;
        partial void OnDATA_SOURCEChanging(global::System.String value);
        partial void OnDATA_SOURCEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ROOT_SOURCE
        {
            get
            {
                return _ROOT_SOURCE;
            }
            set
            {
                OnROOT_SOURCEChanging(value);
                ReportPropertyChanging("ROOT_SOURCE");
                _ROOT_SOURCE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ROOT_SOURCE");
                OnROOT_SOURCEChanged();
            }
        }
        private global::System.String _ROOT_SOURCE;
        partial void OnROOT_SOURCEChanging(global::System.String value);
        partial void OnROOT_SOURCEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ROOT_SOURCE_DATE
        {
            get
            {
                return _ROOT_SOURCE_DATE;
            }
            set
            {
                OnROOT_SOURCE_DATEChanging(value);
                ReportPropertyChanging("ROOT_SOURCE_DATE");
                _ROOT_SOURCE_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ROOT_SOURCE_DATE");
                OnROOT_SOURCE_DATEChanged();
            }
        }
        private global::System.DateTime _ROOT_SOURCE_DATE;
        partial void OnROOT_SOURCE_DATEChanging(global::System.DateTime value);
        partial void OnROOT_SOURCE_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ESTIMATE_ID
        {
            get
            {
                return _ESTIMATE_ID;
            }
            set
            {
                OnESTIMATE_IDChanging(value);
                ReportPropertyChanging("ESTIMATE_ID");
                _ESTIMATE_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ESTIMATE_ID");
                OnESTIMATE_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _ESTIMATE_ID;
        partial void OnESTIMATE_IDChanging(Nullable<global::System.Int32> value);
        partial void OnESTIMATE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PERIOD_YEAR
        {
            get
            {
                return _PERIOD_YEAR;
            }
            set
            {
                OnPERIOD_YEARChanging(value);
                ReportPropertyChanging("PERIOD_YEAR");
                _PERIOD_YEAR = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PERIOD_YEAR");
                OnPERIOD_YEARChanged();
            }
        }
        private global::System.Int32 _PERIOD_YEAR;
        partial void OnPERIOD_YEARChanging(global::System.Int32 value);
        partial void OnPERIOD_YEARChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DATA_ID
        {
            get
            {
                return _DATA_ID;
            }
            set
            {
                OnDATA_IDChanging(value);
                ReportPropertyChanging("DATA_ID");
                _DATA_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATA_ID");
                OnDATA_IDChanged();
            }
        }
        private global::System.Int32 _DATA_ID;
        partial void OnDATA_IDChanging(global::System.Int32 value);
        partial void OnDATA_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal AMOUNT
        {
            get
            {
                return _AMOUNT;
            }
            set
            {
                OnAMOUNTChanging(value);
                ReportPropertyChanging("AMOUNT");
                _AMOUNT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AMOUNT");
                OnAMOUNTChanged();
            }
        }
        private global::System.Decimal _AMOUNT;
        partial void OnAMOUNTChanging(global::System.Decimal value);
        partial void OnAMOUNTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal MULTIPLIER
        {
            get
            {
                return _MULTIPLIER;
            }
            set
            {
                OnMULTIPLIERChanging(value);
                ReportPropertyChanging("MULTIPLIER");
                _MULTIPLIER = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MULTIPLIER");
                OnMULTIPLIERChanged();
            }
        }
        private global::System.Decimal _MULTIPLIER;
        partial void OnMULTIPLIERChanging(global::System.Decimal value);
        partial void OnMULTIPLIERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DECIMALS
        {
            get
            {
                return _DECIMALS;
            }
            set
            {
                OnDECIMALSChanging(value);
                ReportPropertyChanging("DECIMALS");
                _DECIMALS = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DECIMALS");
                OnDECIMALSChanged();
            }
        }
        private global::System.Int32 _DECIMALS;
        partial void OnDECIMALSChanging(global::System.Int32 value);
        partial void OnDECIMALSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PERCENTAGE
        {
            get
            {
                return _PERCENTAGE;
            }
            set
            {
                OnPERCENTAGEChanging(value);
                ReportPropertyChanging("PERCENTAGE");
                _PERCENTAGE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PERCENTAGE");
                OnPERCENTAGEChanged();
            }
        }
        private global::System.String _PERCENTAGE;
        partial void OnPERCENTAGEChanging(global::System.String value);
        partial void OnPERCENTAGEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BOLD_FONT
        {
            get
            {
                return _BOLD_FONT;
            }
            set
            {
                OnBOLD_FONTChanging(value);
                ReportPropertyChanging("BOLD_FONT");
                _BOLD_FONT = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BOLD_FONT");
                OnBOLD_FONTChanged();
            }
        }
        private global::System.String _BOLD_FONT;
        partial void OnBOLD_FONTChanging(global::System.String value);
        partial void OnBOLD_FONTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GROUP_NAME
        {
            get
            {
                return _GROUP_NAME;
            }
            set
            {
                OnGROUP_NAMEChanging(value);
                ReportPropertyChanging("GROUP_NAME");
                _GROUP_NAME = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("GROUP_NAME");
                OnGROUP_NAMEChanged();
            }
        }
        private global::System.String _GROUP_NAME;
        partial void OnGROUP_NAMEChanging(global::System.String value);
        partial void OnGROUP_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SORT_ORDER
        {
            get
            {
                return _SORT_ORDER;
            }
            set
            {
                OnSORT_ORDERChanging(value);
                ReportPropertyChanging("SORT_ORDER");
                _SORT_ORDER = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SORT_ORDER");
                OnSORT_ORDERChanged();
            }
        }
        private global::System.Int32 _SORT_ORDER;
        partial void OnSORT_ORDERChanging(global::System.Int32 value);
        partial void OnSORT_ORDERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HARMONIC
        {
            get
            {
                return _HARMONIC;
            }
            set
            {
                OnHARMONICChanging(value);
                ReportPropertyChanging("HARMONIC");
                _HARMONIC = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HARMONIC");
                OnHARMONICChanged();
            }
        }
        private global::System.String _HARMONIC;
        partial void OnHARMONICChanging(global::System.String value);
        partial void OnHARMONICChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DATA_DESC
        {
            get
            {
                return _DATA_DESC;
            }
            set
            {
                OnDATA_DESCChanging(value);
                ReportPropertyChanging("DATA_DESC");
                _DATA_DESC = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DATA_DESC");
                OnDATA_DESCChanged();
            }
        }
        private global::System.String _DATA_DESC;
        partial void OnDATA_DESCChanging(global::System.String value);
        partial void OnDATA_DESCChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ExternalResearchModel", Name="FinstatEconomicMarketData")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class FinstatEconomicMarketData : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FinstatEconomicMarketData object.
        /// </summary>
        /// <param name="fX_RATE">Initial value of the FX_RATE property.</param>
        /// <param name="aVG12MonthRATE">Initial value of the AVG12MonthRATE property.</param>
        /// <param name="pERIOD_YEAR">Initial value of the PERIOD_YEAR property.</param>
        public static FinstatEconomicMarketData CreateFinstatEconomicMarketData(global::System.Decimal fX_RATE, global::System.Decimal aVG12MonthRATE, global::System.String pERIOD_YEAR)
        {
            FinstatEconomicMarketData finstatEconomicMarketData = new FinstatEconomicMarketData();
            finstatEconomicMarketData.FX_RATE = fX_RATE;
            finstatEconomicMarketData.AVG12MonthRATE = aVG12MonthRATE;
            finstatEconomicMarketData.PERIOD_YEAR = pERIOD_YEAR;
            return finstatEconomicMarketData;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal FX_RATE
        {
            get
            {
                return _FX_RATE;
            }
            set
            {
                OnFX_RATEChanging(value);
                ReportPropertyChanging("FX_RATE");
                _FX_RATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FX_RATE");
                OnFX_RATEChanged();
            }
        }
        private global::System.Decimal _FX_RATE;
        partial void OnFX_RATEChanging(global::System.Decimal value);
        partial void OnFX_RATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal AVG12MonthRATE
        {
            get
            {
                return _AVG12MonthRATE;
            }
            set
            {
                OnAVG12MonthRATEChanging(value);
                ReportPropertyChanging("AVG12MonthRATE");
                _AVG12MonthRATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AVG12MonthRATE");
                OnAVG12MonthRATEChanged();
            }
        }
        private global::System.Decimal _AVG12MonthRATE;
        partial void OnAVG12MonthRATEChanging(global::System.Decimal value);
        partial void OnAVG12MonthRATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PERIOD_YEAR
        {
            get
            {
                return _PERIOD_YEAR;
            }
            set
            {
                OnPERIOD_YEARChanging(value);
                ReportPropertyChanging("PERIOD_YEAR");
                _PERIOD_YEAR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PERIOD_YEAR");
                OnPERIOD_YEARChanged();
            }
        }
        private global::System.String _PERIOD_YEAR;
        partial void OnPERIOD_YEARChanging(global::System.String value);
        partial void OnPERIOD_YEARChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FIELD
        {
            get
            {
                return _FIELD;
            }
            set
            {
                OnFIELDChanging(value);
                ReportPropertyChanging("FIELD");
                _FIELD = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FIELD");
                OnFIELDChanged();
            }
        }
        private global::System.String _FIELD;
        partial void OnFIELDChanging(global::System.String value);
        partial void OnFIELDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> YEAR1
        {
            get
            {
                return _YEAR1;
            }
            set
            {
                OnYEAR1Changing(value);
                ReportPropertyChanging("YEAR1");
                _YEAR1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YEAR1");
                OnYEAR1Changed();
            }
        }
        private Nullable<global::System.Int32> _YEAR1;
        partial void OnYEAR1Changing(Nullable<global::System.Int32> value);
        partial void OnYEAR1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> VALUE
        {
            get
            {
                return _VALUE;
            }
            set
            {
                OnVALUEChanging(value);
                ReportPropertyChanging("VALUE");
                _VALUE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VALUE");
                OnVALUEChanged();
            }
        }
        private Nullable<global::System.Decimal> _VALUE;
        partial void OnVALUEChanging(Nullable<global::System.Decimal> value);
        partial void OnVALUEChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ExternalResearchModel", Name="FinstatRelativeAnalysisData")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class FinstatRelativeAnalysisData : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FinstatRelativeAnalysisData object.
        /// </summary>
        /// <param name="dATA_ID">Initial value of the DATA_ID property.</param>
        /// <param name="pERIOD_YEAR">Initial value of the PERIOD_YEAR property.</param>
        /// <param name="aMOUNT">Initial value of the AMOUNT property.</param>
        /// <param name="dECIMALS">Initial value of the DECIMALS property.</param>
        /// <param name="mULTIPLIER">Initial value of the MULTIPLIER property.</param>
        /// <param name="pERCENTAGE">Initial value of the PERCENTAGE property.</param>
        /// <param name="vALUE">Initial value of the VALUE property.</param>
        public static FinstatRelativeAnalysisData CreateFinstatRelativeAnalysisData(global::System.Int32 dATA_ID, global::System.Int32 pERIOD_YEAR, global::System.Decimal aMOUNT, global::System.Int32 dECIMALS, global::System.Decimal mULTIPLIER, global::System.String pERCENTAGE, global::System.String vALUE)
        {
            FinstatRelativeAnalysisData finstatRelativeAnalysisData = new FinstatRelativeAnalysisData();
            finstatRelativeAnalysisData.DATA_ID = dATA_ID;
            finstatRelativeAnalysisData.PERIOD_YEAR = pERIOD_YEAR;
            finstatRelativeAnalysisData.AMOUNT = aMOUNT;
            finstatRelativeAnalysisData.DECIMALS = dECIMALS;
            finstatRelativeAnalysisData.MULTIPLIER = mULTIPLIER;
            finstatRelativeAnalysisData.PERCENTAGE = pERCENTAGE;
            finstatRelativeAnalysisData.VALUE = vALUE;
            return finstatRelativeAnalysisData;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DATA_ID
        {
            get
            {
                return _DATA_ID;
            }
            set
            {
                OnDATA_IDChanging(value);
                ReportPropertyChanging("DATA_ID");
                _DATA_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATA_ID");
                OnDATA_IDChanged();
            }
        }
        private global::System.Int32 _DATA_ID;
        partial void OnDATA_IDChanging(global::System.Int32 value);
        partial void OnDATA_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PERIOD_YEAR
        {
            get
            {
                return _PERIOD_YEAR;
            }
            set
            {
                OnPERIOD_YEARChanging(value);
                ReportPropertyChanging("PERIOD_YEAR");
                _PERIOD_YEAR = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PERIOD_YEAR");
                OnPERIOD_YEARChanged();
            }
        }
        private global::System.Int32 _PERIOD_YEAR;
        partial void OnPERIOD_YEARChanging(global::System.Int32 value);
        partial void OnPERIOD_YEARChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal AMOUNT
        {
            get
            {
                return _AMOUNT;
            }
            set
            {
                OnAMOUNTChanging(value);
                ReportPropertyChanging("AMOUNT");
                _AMOUNT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AMOUNT");
                OnAMOUNTChanged();
            }
        }
        private global::System.Decimal _AMOUNT;
        partial void OnAMOUNTChanging(global::System.Decimal value);
        partial void OnAMOUNTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DECIMALS
        {
            get
            {
                return _DECIMALS;
            }
            set
            {
                OnDECIMALSChanging(value);
                ReportPropertyChanging("DECIMALS");
                _DECIMALS = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DECIMALS");
                OnDECIMALSChanged();
            }
        }
        private global::System.Int32 _DECIMALS;
        partial void OnDECIMALSChanging(global::System.Int32 value);
        partial void OnDECIMALSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal MULTIPLIER
        {
            get
            {
                return _MULTIPLIER;
            }
            set
            {
                OnMULTIPLIERChanging(value);
                ReportPropertyChanging("MULTIPLIER");
                _MULTIPLIER = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MULTIPLIER");
                OnMULTIPLIERChanged();
            }
        }
        private global::System.Decimal _MULTIPLIER;
        partial void OnMULTIPLIERChanging(global::System.Decimal value);
        partial void OnMULTIPLIERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PERCENTAGE
        {
            get
            {
                return _PERCENTAGE;
            }
            set
            {
                OnPERCENTAGEChanging(value);
                ReportPropertyChanging("PERCENTAGE");
                _PERCENTAGE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PERCENTAGE");
                OnPERCENTAGEChanged();
            }
        }
        private global::System.String _PERCENTAGE;
        partial void OnPERCENTAGEChanging(global::System.String value);
        partial void OnPERCENTAGEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String VALUE
        {
            get
            {
                return _VALUE;
            }
            set
            {
                OnVALUEChanging(value);
                ReportPropertyChanging("VALUE");
                _VALUE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("VALUE");
                OnVALUEChanged();
            }
        }
        private global::System.String _VALUE;
        partial void OnVALUEChanging(global::System.String value);
        partial void OnVALUEChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ExternalResearchModel", Name="GetBasicData_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetBasicData_Result : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> MARKET_CAPITALIZATION
        {
            get
            {
                return _MARKET_CAPITALIZATION;
            }
            set
            {
                OnMARKET_CAPITALIZATIONChanging(value);
                ReportPropertyChanging("MARKET_CAPITALIZATION");
                _MARKET_CAPITALIZATION = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MARKET_CAPITALIZATION");
                OnMARKET_CAPITALIZATIONChanged();
            }
        }
        private Nullable<global::System.Decimal> _MARKET_CAPITALIZATION;
        partial void OnMARKET_CAPITALIZATIONChanging(Nullable<global::System.Decimal> value);
        partial void OnMARKET_CAPITALIZATIONChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ENTERPRISE_VALUE
        {
            get
            {
                return _ENTERPRISE_VALUE;
            }
            set
            {
                OnENTERPRISE_VALUEChanging(value);
                ReportPropertyChanging("ENTERPRISE_VALUE");
                _ENTERPRISE_VALUE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ENTERPRISE_VALUE");
                OnENTERPRISE_VALUEChanged();
            }
        }
        private Nullable<global::System.Decimal> _ENTERPRISE_VALUE;
        partial void OnENTERPRISE_VALUEChanging(Nullable<global::System.Decimal> value);
        partial void OnENTERPRISE_VALUEChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ExternalResearchModel", Name="GetEV_EBITDAData_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetEV_EBITDAData_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetEV_EBITDAData_Result object.
        /// </summary>
        /// <param name="periodLabel">Initial value of the PeriodLabel property.</param>
        /// <param name="period_End_Date">Initial value of the Period_End_Date property.</param>
        public static GetEV_EBITDAData_Result CreateGetEV_EBITDAData_Result(global::System.String periodLabel, global::System.DateTime period_End_Date)
        {
            GetEV_EBITDAData_Result getEV_EBITDAData_Result = new GetEV_EBITDAData_Result();
            getEV_EBITDAData_Result.PeriodLabel = periodLabel;
            getEV_EBITDAData_Result.Period_End_Date = period_End_Date;
            return getEV_EBITDAData_Result;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PeriodLabel
        {
            get
            {
                return _PeriodLabel;
            }
            set
            {
                OnPeriodLabelChanging(value);
                ReportPropertyChanging("PeriodLabel");
                _PeriodLabel = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PeriodLabel");
                OnPeriodLabelChanged();
            }
        }
        private global::System.String _PeriodLabel;
        partial void OnPeriodLabelChanging(global::System.String value);
        partial void OnPeriodLabelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Period_End_Date
        {
            get
            {
                return _Period_End_Date;
            }
            set
            {
                OnPeriod_End_DateChanging(value);
                ReportPropertyChanging("Period_End_Date");
                _Period_End_Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period_End_Date");
                OnPeriod_End_DateChanged();
            }
        }
        private global::System.DateTime _Period_End_Date;
        partial void OnPeriod_End_DateChanging(global::System.DateTime value);
        partial void OnPeriod_End_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> EBITDA
        {
            get
            {
                return _EBITDA;
            }
            set
            {
                OnEBITDAChanging(value);
                ReportPropertyChanging("EBITDA");
                _EBITDA = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EBITDA");
                OnEBITDAChanged();
            }
        }
        private Nullable<global::System.Decimal> _EBITDA;
        partial void OnEBITDAChanging(Nullable<global::System.Decimal> value);
        partial void OnEBITDAChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> NetDebt
        {
            get
            {
                return _NetDebt;
            }
            set
            {
                OnNetDebtChanging(value);
                ReportPropertyChanging("NetDebt");
                _NetDebt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetDebt");
                OnNetDebtChanged();
            }
        }
        private Nullable<global::System.Decimal> _NetDebt;
        partial void OnNetDebtChanging(Nullable<global::System.Decimal> value);
        partial void OnNetDebtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> USDPrice
        {
            get
            {
                return _USDPrice;
            }
            set
            {
                OnUSDPriceChanging(value);
                ReportPropertyChanging("USDPrice");
                _USDPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("USDPrice");
                OnUSDPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _USDPrice;
        partial void OnUSDPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnUSDPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Shares_Outstanding
        {
            get
            {
                return _Shares_Outstanding;
            }
            set
            {
                OnShares_OutstandingChanging(value);
                ReportPropertyChanging("Shares_Outstanding");
                _Shares_Outstanding = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Shares_Outstanding");
                OnShares_OutstandingChanged();
            }
        }
        private Nullable<global::System.Decimal> _Shares_Outstanding;
        partial void OnShares_OutstandingChanging(Nullable<global::System.Decimal> value);
        partial void OnShares_OutstandingChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ExternalResearchModel", Name="GetPRevenueData_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetPRevenueData_Result : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PeriodLabel
        {
            get
            {
                return _PeriodLabel;
            }
            set
            {
                OnPeriodLabelChanging(value);
                ReportPropertyChanging("PeriodLabel");
                _PeriodLabel = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PeriodLabel");
                OnPeriodLabelChanged();
            }
        }
        private global::System.String _PeriodLabel;
        partial void OnPeriodLabelChanging(global::System.String value);
        partial void OnPeriodLabelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Period_End_Date
        {
            get
            {
                return _Period_End_Date;
            }
            set
            {
                OnPeriod_End_DateChanging(value);
                ReportPropertyChanging("Period_End_Date");
                _Period_End_Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period_End_Date");
                OnPeriod_End_DateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Period_End_Date;
        partial void OnPeriod_End_DateChanging(Nullable<global::System.DateTime> value);
        partial void OnPeriod_End_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _Amount;
        partial void OnAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Period_Type
        {
            get
            {
                return _Period_Type;
            }
            set
            {
                OnPeriod_TypeChanging(value);
                ReportPropertyChanging("Period_Type");
                _Period_Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Period_Type");
                OnPeriod_TypeChanged();
            }
        }
        private global::System.String _Period_Type;
        partial void OnPeriod_TypeChanging(global::System.String value);
        partial void OnPeriod_TypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Period_Year
        {
            get
            {
                return _Period_Year;
            }
            set
            {
                OnPeriod_YearChanging(value);
                ReportPropertyChanging("Period_Year");
                _Period_Year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period_Year");
                OnPeriod_YearChanged();
            }
        }
        private Nullable<global::System.Int32> _Period_Year;
        partial void OnPeriod_YearChanging(Nullable<global::System.Int32> value);
        partial void OnPeriod_YearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> USDPrice
        {
            get
            {
                return _USDPrice;
            }
            set
            {
                OnUSDPriceChanging(value);
                ReportPropertyChanging("USDPrice");
                _USDPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("USDPrice");
                OnUSDPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _USDPrice;
        partial void OnUSDPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnUSDPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Shares_Outstanding
        {
            get
            {
                return _Shares_Outstanding;
            }
            set
            {
                OnShares_OutstandingChanging(value);
                ReportPropertyChanging("Shares_Outstanding");
                _Shares_Outstanding = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Shares_Outstanding");
                OnShares_OutstandingChanged();
            }
        }
        private Nullable<global::System.Decimal> _Shares_Outstanding;
        partial void OnShares_OutstandingChanging(Nullable<global::System.Decimal> value);
        partial void OnShares_OutstandingChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ExternalResearchModel", Name="GetTargetPrice_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetTargetPrice_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetTargetPrice_Result object.
        /// </summary>
        /// <param name="xref">Initial value of the Xref property.</param>
        public static GetTargetPrice_Result CreateGetTargetPrice_Result(global::System.String xref)
        {
            GetTargetPrice_Result getTargetPrice_Result = new GetTargetPrice_Result();
            getTargetPrice_Result.Xref = xref;
            return getTargetPrice_Result;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Xref
        {
            get
            {
                return _Xref;
            }
            set
            {
                OnXrefChanging(value);
                ReportPropertyChanging("Xref");
                _Xref = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Xref");
                OnXrefChanged();
            }
        }
        private global::System.String _Xref;
        partial void OnXrefChanging(global::System.String value);
        partial void OnXrefChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Ticker
        {
            get
            {
                return _Ticker;
            }
            set
            {
                OnTickerChanging(value);
                ReportPropertyChanging("Ticker");
                _Ticker = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Ticker");
                OnTickerChanged();
            }
        }
        private global::System.String _Ticker;
        partial void OnTickerChanging(global::System.String value);
        partial void OnTickerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> CurrentPrice
        {
            get
            {
                return _CurrentPrice;
            }
            set
            {
                OnCurrentPriceChanging(value);
                ReportPropertyChanging("CurrentPrice");
                _CurrentPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentPrice");
                OnCurrentPriceChanged();
            }
        }
        private Nullable<global::System.Single> _CurrentPrice;
        partial void OnCurrentPriceChanging(Nullable<global::System.Single> value);
        partial void OnCurrentPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CurrentPriceDate
        {
            get
            {
                return _CurrentPriceDate;
            }
            set
            {
                OnCurrentPriceDateChanging(value);
                ReportPropertyChanging("CurrentPriceDate");
                _CurrentPriceDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentPriceDate");
                OnCurrentPriceDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CurrentPriceDate;
        partial void OnCurrentPriceDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCurrentPriceDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Currency
        {
            get
            {
                return _Currency;
            }
            set
            {
                OnCurrencyChanging(value);
                ReportPropertyChanging("Currency");
                _Currency = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Currency");
                OnCurrencyChanged();
            }
        }
        private global::System.String _Currency;
        partial void OnCurrencyChanging(global::System.String value);
        partial void OnCurrencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> Median
        {
            get
            {
                return _Median;
            }
            set
            {
                OnMedianChanging(value);
                ReportPropertyChanging("Median");
                _Median = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Median");
                OnMedianChanged();
            }
        }
        private Nullable<global::System.Single> _Median;
        partial void OnMedianChanging(Nullable<global::System.Single> value);
        partial void OnMedianChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TargetCurrency
        {
            get
            {
                return _TargetCurrency;
            }
            set
            {
                OnTargetCurrencyChanging(value);
                ReportPropertyChanging("TargetCurrency");
                _TargetCurrency = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TargetCurrency");
                OnTargetCurrencyChanged();
            }
        }
        private global::System.String _TargetCurrency;
        partial void OnTargetCurrencyChanging(global::System.String value);
        partial void OnTargetCurrencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NumOfEsts
        {
            get
            {
                return _NumOfEsts;
            }
            set
            {
                OnNumOfEstsChanging(value);
                ReportPropertyChanging("NumOfEsts");
                _NumOfEsts = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumOfEsts");
                OnNumOfEstsChanged();
            }
        }
        private Nullable<global::System.Int32> _NumOfEsts;
        partial void OnNumOfEstsChanging(Nullable<global::System.Int32> value);
        partial void OnNumOfEstsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> High
        {
            get
            {
                return _High;
            }
            set
            {
                OnHighChanging(value);
                ReportPropertyChanging("High");
                _High = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("High");
                OnHighChanged();
            }
        }
        private Nullable<global::System.Single> _High;
        partial void OnHighChanging(Nullable<global::System.Single> value);
        partial void OnHighChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> Low
        {
            get
            {
                return _Low;
            }
            set
            {
                OnLowChanging(value);
                ReportPropertyChanging("Low");
                _Low = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Low");
                OnLowChanged();
            }
        }
        private Nullable<global::System.Single> _Low;
        partial void OnLowChanging(Nullable<global::System.Single> value);
        partial void OnLowChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> StdDev
        {
            get
            {
                return _StdDev;
            }
            set
            {
                OnStdDevChanging(value);
                ReportPropertyChanging("StdDev");
                _StdDev = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StdDev");
                OnStdDevChanged();
            }
        }
        private Nullable<global::System.Single> _StdDev;
        partial void OnStdDevChanging(Nullable<global::System.Single> value);
        partial void OnStdDevChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MeanLabel
        {
            get
            {
                return _MeanLabel;
            }
            set
            {
                OnMeanLabelChanging(value);
                ReportPropertyChanging("MeanLabel");
                _MeanLabel = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MeanLabel");
                OnMeanLabelChanged();
            }
        }
        private global::System.String _MeanLabel;
        partial void OnMeanLabelChanging(global::System.String value);
        partial void OnMeanLabelChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ExternalResearchModel", Name="QuarterlyResults")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class QuarterlyResults : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ISSUER_ID
        {
            get
            {
                return _ISSUER_ID;
            }
            set
            {
                OnISSUER_IDChanging(value);
                ReportPropertyChanging("ISSUER_ID");
                _ISSUER_ID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ISSUER_ID");
                OnISSUER_IDChanged();
            }
        }
        private global::System.String _ISSUER_ID;
        partial void OnISSUER_IDChanging(global::System.String value);
        partial void OnISSUER_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IssuerName
        {
            get
            {
                return _IssuerName;
            }
            set
            {
                OnIssuerNameChanging(value);
                ReportPropertyChanging("IssuerName");
                _IssuerName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IssuerName");
                OnIssuerNameChanged();
            }
        }
        private global::System.String _IssuerName;
        partial void OnIssuerNameChanging(global::System.String value);
        partial void OnIssuerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Region
        {
            get
            {
                return _Region;
            }
            set
            {
                OnRegionChanging(value);
                ReportPropertyChanging("Region");
                _Region = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Region");
                OnRegionChanged();
            }
        }
        private global::System.String _Region;
        partial void OnRegionChanging(global::System.String value);
        partial void OnRegionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Sector
        {
            get
            {
                return _Sector;
            }
            set
            {
                OnSectorChanging(value);
                ReportPropertyChanging("Sector");
                _Sector = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Sector");
                OnSectorChanged();
            }
        }
        private global::System.String _Sector;
        partial void OnSectorChanging(global::System.String value);
        partial void OnSectorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Industry
        {
            get
            {
                return _Industry;
            }
            set
            {
                OnIndustryChanging(value);
                ReportPropertyChanging("Industry");
                _Industry = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Industry");
                OnIndustryChanged();
            }
        }
        private global::System.String _Industry;
        partial void OnIndustryChanging(global::System.String value);
        partial void OnIndustryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Currency
        {
            get
            {
                return _Currency;
            }
            set
            {
                OnCurrencyChanging(value);
                ReportPropertyChanging("Currency");
                _Currency = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Currency");
                OnCurrencyChanged();
            }
        }
        private global::System.String _Currency;
        partial void OnCurrencyChanging(global::System.String value);
        partial void OnCurrencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdate
        {
            get
            {
                return _LastUpdate;
            }
            set
            {
                OnLastUpdateChanging(value);
                ReportPropertyChanging("LastUpdate");
                _LastUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdate");
                OnLastUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdate;
        partial void OnLastUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Q1
        {
            get
            {
                return _Q1;
            }
            set
            {
                OnQ1Changing(value);
                ReportPropertyChanging("Q1");
                _Q1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Q1");
                OnQ1Changed();
            }
        }
        private Nullable<global::System.Decimal> _Q1;
        partial void OnQ1Changing(Nullable<global::System.Decimal> value);
        partial void OnQ1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Q2
        {
            get
            {
                return _Q2;
            }
            set
            {
                OnQ2Changing(value);
                ReportPropertyChanging("Q2");
                _Q2 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Q2");
                OnQ2Changed();
            }
        }
        private Nullable<global::System.Decimal> _Q2;
        partial void OnQ2Changing(Nullable<global::System.Decimal> value);
        partial void OnQ2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Q3
        {
            get
            {
                return _Q3;
            }
            set
            {
                OnQ3Changing(value);
                ReportPropertyChanging("Q3");
                _Q3 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Q3");
                OnQ3Changed();
            }
        }
        private Nullable<global::System.Decimal> _Q3;
        partial void OnQ3Changing(Nullable<global::System.Decimal> value);
        partial void OnQ3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Q4
        {
            get
            {
                return _Q4;
            }
            set
            {
                OnQ4Changing(value);
                ReportPropertyChanging("Q4");
                _Q4 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Q4");
                OnQ4Changed();
            }
        }
        private Nullable<global::System.Decimal> _Q4;
        partial void OnQ4Changing(Nullable<global::System.Decimal> value);
        partial void OnQ4Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Annual
        {
            get
            {
                return _Annual;
            }
            set
            {
                OnAnnualChanging(value);
                ReportPropertyChanging("Annual");
                _Annual = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Annual");
                OnAnnualChanged();
            }
        }
        private Nullable<global::System.Decimal> _Annual;
        partial void OnAnnualChanging(Nullable<global::System.Decimal> value);
        partial void OnAnnualChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> QuarterlySum
        {
            get
            {
                return _QuarterlySum;
            }
            set
            {
                OnQuarterlySumChanging(value);
                ReportPropertyChanging("QuarterlySum");
                _QuarterlySum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QuarterlySum");
                OnQuarterlySumChanged();
            }
        }
        private Nullable<global::System.DateTime> _QuarterlySum;
        partial void OnQuarterlySumChanging(Nullable<global::System.DateTime> value);
        partial void OnQuarterlySumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> QuarterlySumPercentage
        {
            get
            {
                return _QuarterlySumPercentage;
            }
            set
            {
                OnQuarterlySumPercentageChanging(value);
                ReportPropertyChanging("QuarterlySumPercentage");
                _QuarterlySumPercentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QuarterlySumPercentage");
                OnQuarterlySumPercentageChanged();
            }
        }
        private Nullable<global::System.Decimal> _QuarterlySumPercentage;
        partial void OnQuarterlySumPercentageChanging(Nullable<global::System.Decimal> value);
        partial void OnQuarterlySumPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Consensus
        {
            get
            {
                return _Consensus;
            }
            set
            {
                OnConsensusChanging(value);
                ReportPropertyChanging("Consensus");
                _Consensus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Consensus");
                OnConsensusChanged();
            }
        }
        private Nullable<global::System.Decimal> _Consensus;
        partial void OnConsensusChanging(Nullable<global::System.Decimal> value);
        partial void OnConsensusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ConsensusPercentage
        {
            get
            {
                return _ConsensusPercentage;
            }
            set
            {
                OnConsensusPercentageChanging(value);
                ReportPropertyChanging("ConsensusPercentage");
                _ConsensusPercentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ConsensusPercentage");
                OnConsensusPercentageChanged();
            }
        }
        private Nullable<global::System.Decimal> _ConsensusPercentage;
        partial void OnConsensusPercentageChanging(Nullable<global::System.Decimal> value);
        partial void OnConsensusPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> High
        {
            get
            {
                return _High;
            }
            set
            {
                OnHighChanging(value);
                ReportPropertyChanging("High");
                _High = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("High");
                OnHighChanged();
            }
        }
        private Nullable<global::System.Decimal> _High;
        partial void OnHighChanging(Nullable<global::System.Decimal> value);
        partial void OnHighChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Low
        {
            get
            {
                return _Low;
            }
            set
            {
                OnLowChanging(value);
                ReportPropertyChanging("Low");
                _Low = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Low");
                OnLowChanged();
            }
        }
        private Nullable<global::System.Decimal> _Low;
        partial void OnLowChanging(Nullable<global::System.Decimal> value);
        partial void OnLowChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Brokers
        {
            get
            {
                return _Brokers;
            }
            set
            {
                OnBrokersChanging(value);
                ReportPropertyChanging("Brokers");
                _Brokers = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Brokers");
                OnBrokersChanged();
            }
        }
        private Nullable<global::System.Int32> _Brokers;
        partial void OnBrokersChanging(Nullable<global::System.Int32> value);
        partial void OnBrokersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EstimateId
        {
            get
            {
                return _EstimateId;
            }
            set
            {
                OnEstimateIdChanging(value);
                ReportPropertyChanging("EstimateId");
                _EstimateId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstimateId");
                OnEstimateIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EstimateId;
        partial void OnEstimateIdChanging(Nullable<global::System.Int32> value);
        partial void OnEstimateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ConsensusUpdate
        {
            get
            {
                return _ConsensusUpdate;
            }
            set
            {
                OnConsensusUpdateChanging(value);
                ReportPropertyChanging("ConsensusUpdate");
                _ConsensusUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ConsensusUpdate");
                OnConsensusUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ConsensusUpdate;
        partial void OnConsensusUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnConsensusUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> XREF
        {
            get
            {
                return _XREF;
            }
            set
            {
                OnXREFChanging(value);
                ReportPropertyChanging("XREF");
                _XREF = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("XREF");
                OnXREFChanged();
            }
        }
        private Nullable<global::System.Double> _XREF;
        partial void OnXREFChanging(Nullable<global::System.Double> value);
        partial void OnXREFChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ExternalResearchModel", Name="RatioComparisonData")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class RatioComparisonData : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SECURITY_ID
        {
            get
            {
                return _SECURITY_ID;
            }
            set
            {
                OnSECURITY_IDChanging(value);
                ReportPropertyChanging("SECURITY_ID");
                _SECURITY_ID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SECURITY_ID");
                OnSECURITY_IDChanged();
            }
        }
        private global::System.String _SECURITY_ID;
        partial void OnSECURITY_IDChanging(global::System.String value);
        partial void OnSECURITY_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ISSUER_ID
        {
            get
            {
                return _ISSUER_ID;
            }
            set
            {
                OnISSUER_IDChanging(value);
                ReportPropertyChanging("ISSUER_ID");
                _ISSUER_ID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ISSUER_ID");
                OnISSUER_IDChanged();
            }
        }
        private global::System.String _ISSUER_ID;
        partial void OnISSUER_IDChanging(global::System.String value);
        partial void OnISSUER_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ISSUE_NAME
        {
            get
            {
                return _ISSUE_NAME;
            }
            set
            {
                OnISSUE_NAMEChanging(value);
                ReportPropertyChanging("ISSUE_NAME");
                _ISSUE_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ISSUE_NAME");
                OnISSUE_NAMEChanged();
            }
        }
        private global::System.String _ISSUE_NAME;
        partial void OnISSUE_NAMEChanging(global::System.String value);
        partial void OnISSUE_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> FINANCIAL
        {
            get
            {
                return _FINANCIAL;
            }
            set
            {
                OnFINANCIALChanging(value);
                ReportPropertyChanging("FINANCIAL");
                _FINANCIAL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FINANCIAL");
                OnFINANCIALChanged();
            }
        }
        private Nullable<global::System.Decimal> _FINANCIAL;
        partial void OnFINANCIALChanging(Nullable<global::System.Decimal> value);
        partial void OnFINANCIALChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> VALUATION
        {
            get
            {
                return _VALUATION;
            }
            set
            {
                OnVALUATIONChanging(value);
                ReportPropertyChanging("VALUATION");
                _VALUATION = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VALUATION");
                OnVALUATIONChanged();
            }
        }
        private Nullable<global::System.Decimal> _VALUATION;
        partial void OnVALUATIONChanging(Nullable<global::System.Decimal> value);
        partial void OnVALUATIONChanged();

        #endregion
    }

    #endregion
    
}
