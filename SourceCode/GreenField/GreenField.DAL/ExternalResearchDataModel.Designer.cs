//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace GreenField.DAL
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ExternalResearchEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ExternalResearchEntities object using the connection string found in the 'ExternalResearchEntities' section of the application configuration file.
        /// </summary>
        public ExternalResearchEntities() : base("name=ExternalResearchEntities", "ExternalResearchEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ExternalResearchEntities object.
        /// </summary>
        public ExternalResearchEntities(string connectionString) : base(connectionString, "ExternalResearchEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ExternalResearchEntities object.
        /// </summary>
        public ExternalResearchEntities(EntityConnection connection) : base(connection, "ExternalResearchEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CURRENT_CONSENSUS_ESTIMATES> CURRENT_CONSENSUS_ESTIMATES
        {
            get
            {
                if ((_CURRENT_CONSENSUS_ESTIMATES == null))
                {
                    _CURRENT_CONSENSUS_ESTIMATES = base.CreateObjectSet<CURRENT_CONSENSUS_ESTIMATES>("CURRENT_CONSENSUS_ESTIMATES");
                }
                return _CURRENT_CONSENSUS_ESTIMATES;
            }
        }
        private ObjectSet<CURRENT_CONSENSUS_ESTIMATES> _CURRENT_CONSENSUS_ESTIMATES;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DATA_MASTER> DATA_MASTER
        {
            get
            {
                if ((_DATA_MASTER == null))
                {
                    _DATA_MASTER = base.CreateObjectSet<DATA_MASTER>("DATA_MASTER");
                }
                return _DATA_MASTER;
            }
        }
        private ObjectSet<DATA_MASTER> _DATA_MASTER;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FX_RATES> FX_RATES
        {
            get
            {
                if ((_FX_RATES == null))
                {
                    _FX_RATES = base.CreateObjectSet<FX_RATES>("FX_RATES");
                }
                return _FX_RATES;
            }
        }
        private ObjectSet<FX_RATES> _FX_RATES;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<INTERNAL_ISSUER> INTERNAL_ISSUER
        {
            get
            {
                if ((_INTERNAL_ISSUER == null))
                {
                    _INTERNAL_ISSUER = base.CreateObjectSet<INTERNAL_ISSUER>("INTERNAL_ISSUER");
                }
                return _INTERNAL_ISSUER;
            }
        }
        private ObjectSet<INTERNAL_ISSUER> _INTERNAL_ISSUER;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ISSUER_SHARES> ISSUER_SHARES
        {
            get
            {
                if ((_ISSUER_SHARES == null))
                {
                    _ISSUER_SHARES = base.CreateObjectSet<ISSUER_SHARES>("ISSUER_SHARES");
                }
                return _ISSUER_SHARES;
            }
        }
        private ObjectSet<ISSUER_SHARES> _ISSUER_SHARES;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ISSUER_SHARES_COMPOSITION> ISSUER_SHARES_COMPOSITION
        {
            get
            {
                if ((_ISSUER_SHARES_COMPOSITION == null))
                {
                    _ISSUER_SHARES_COMPOSITION = base.CreateObjectSet<ISSUER_SHARES_COMPOSITION>("ISSUER_SHARES_COMPOSITION");
                }
                return _ISSUER_SHARES_COMPOSITION;
            }
        }
        private ObjectSet<ISSUER_SHARES_COMPOSITION> _ISSUER_SHARES_COMPOSITION;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Macroeconomic_Data> Macroeconomic_Data
        {
            get
            {
                if ((_Macroeconomic_Data == null))
                {
                    _Macroeconomic_Data = base.CreateObjectSet<Macroeconomic_Data>("Macroeconomic_Data");
                }
                return _Macroeconomic_Data;
            }
        }
        private ObjectSet<Macroeconomic_Data> _Macroeconomic_Data;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Macroeconomic_Display> Macroeconomic_Display
        {
            get
            {
                if ((_Macroeconomic_Display == null))
                {
                    _Macroeconomic_Display = base.CreateObjectSet<Macroeconomic_Display>("Macroeconomic_Display");
                }
                return _Macroeconomic_Display;
            }
        }
        private ObjectSet<Macroeconomic_Display> _Macroeconomic_Display;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PERIOD_FINANCIALS_DISPLAY> PERIOD_FINANCIALS_DISPLAY
        {
            get
            {
                if ((_PERIOD_FINANCIALS_DISPLAY == null))
                {
                    _PERIOD_FINANCIALS_DISPLAY = base.CreateObjectSet<PERIOD_FINANCIALS_DISPLAY>("PERIOD_FINANCIALS_DISPLAY");
                }
                return _PERIOD_FINANCIALS_DISPLAY;
            }
        }
        private ObjectSet<PERIOD_FINANCIALS_DISPLAY> _PERIOD_FINANCIALS_DISPLAY;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PRICE> PRICES
        {
            get
            {
                if ((_PRICES == null))
                {
                    _PRICES = base.CreateObjectSet<PRICE>("PRICES");
                }
                return _PRICES;
            }
        }
        private ObjectSet<PRICE> _PRICES;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<External_Country_Master> External_Country_Master
        {
            get
            {
                if ((_External_Country_Master == null))
                {
                    _External_Country_Master = base.CreateObjectSet<External_Country_Master>("External_Country_Master");
                }
                return _External_Country_Master;
            }
        }
        private ObjectSet<External_Country_Master> _External_Country_Master;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FAIR_VALUE> FAIR_VALUE
        {
            get
            {
                if ((_FAIR_VALUE == null))
                {
                    _FAIR_VALUE = base.CreateObjectSet<FAIR_VALUE>("FAIR_VALUE");
                }
                return _FAIR_VALUE;
            }
        }
        private ObjectSet<FAIR_VALUE> _FAIR_VALUE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MODEL_INPUTS_CTY> MODEL_INPUTS_CTY
        {
            get
            {
                if ((_MODEL_INPUTS_CTY == null))
                {
                    _MODEL_INPUTS_CTY = base.CreateObjectSet<MODEL_INPUTS_CTY>("MODEL_INPUTS_CTY");
                }
                return _MODEL_INPUTS_CTY;
            }
        }
        private ObjectSet<MODEL_INPUTS_CTY> _MODEL_INPUTS_CTY;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PORTFOLIO_SECURITY_TARGETS> PORTFOLIO_SECURITY_TARGETS
        {
            get
            {
                if ((_PORTFOLIO_SECURITY_TARGETS == null))
                {
                    _PORTFOLIO_SECURITY_TARGETS = base.CreateObjectSet<PORTFOLIO_SECURITY_TARGETS>("PORTFOLIO_SECURITY_TARGETS");
                }
                return _PORTFOLIO_SECURITY_TARGETS;
            }
        }
        private ObjectSet<PORTFOLIO_SECURITY_TARGETS> _PORTFOLIO_SECURITY_TARGETS;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Portfolio_Security_Targets_Union> Portfolio_Security_Targets_Union
        {
            get
            {
                if ((_Portfolio_Security_Targets_Union == null))
                {
                    _Portfolio_Security_Targets_Union = base.CreateObjectSet<Portfolio_Security_Targets_Union>("Portfolio_Security_Targets_Union");
                }
                return _Portfolio_Security_Targets_Union;
            }
        }
        private ObjectSet<Portfolio_Security_Targets_Union> _Portfolio_Security_Targets_Union;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GF_SECURITY_BASEVIEW_Local> GF_SECURITY_BASEVIEW_Local
        {
            get
            {
                if ((_GF_SECURITY_BASEVIEW_Local == null))
                {
                    _GF_SECURITY_BASEVIEW_Local = base.CreateObjectSet<GF_SECURITY_BASEVIEW_Local>("GF_SECURITY_BASEVIEW_Local");
                }
                return _GF_SECURITY_BASEVIEW_Local;
            }
        }
        private ObjectSet<GF_SECURITY_BASEVIEW_Local> _GF_SECURITY_BASEVIEW_Local;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MODEL_UPLOAD_USER_GROUP> MODEL_UPLOAD_USER_GROUP
        {
            get
            {
                if ((_MODEL_UPLOAD_USER_GROUP == null))
                {
                    _MODEL_UPLOAD_USER_GROUP = base.CreateObjectSet<MODEL_UPLOAD_USER_GROUP>("MODEL_UPLOAD_USER_GROUP");
                }
                return _MODEL_UPLOAD_USER_GROUP;
            }
        }
        private ObjectSet<MODEL_UPLOAD_USER_GROUP> _MODEL_UPLOAD_USER_GROUP;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Portfolio_Security_Target_Baseview> Portfolio_Security_Target_Baseview
        {
            get
            {
                if ((_Portfolio_Security_Target_Baseview == null))
                {
                    _Portfolio_Security_Target_Baseview = base.CreateObjectSet<Portfolio_Security_Target_Baseview>("Portfolio_Security_Target_Baseview");
                }
                return _Portfolio_Security_Target_Baseview;
            }
        }
        private ObjectSet<Portfolio_Security_Target_Baseview> _Portfolio_Security_Target_Baseview;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BENCHMARK_MASTER> BENCHMARK_MASTER
        {
            get
            {
                if ((_BENCHMARK_MASTER == null))
                {
                    _BENCHMARK_MASTER = base.CreateObjectSet<BENCHMARK_MASTER>("BENCHMARK_MASTER");
                }
                return _BENCHMARK_MASTER;
            }
        }
        private ObjectSet<BENCHMARK_MASTER> _BENCHMARK_MASTER;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GF_BENCHMARK_HOLDINGS_Local> GF_BENCHMARK_HOLDINGS_Local
        {
            get
            {
                if ((_GF_BENCHMARK_HOLDINGS_Local == null))
                {
                    _GF_BENCHMARK_HOLDINGS_Local = base.CreateObjectSet<GF_BENCHMARK_HOLDINGS_Local>("GF_BENCHMARK_HOLDINGS_Local");
                }
                return _GF_BENCHMARK_HOLDINGS_Local;
            }
        }
        private ObjectSet<GF_BENCHMARK_HOLDINGS_Local> _GF_BENCHMARK_HOLDINGS_Local;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GF_COMPOSITE_LTHOLDINGS> GF_COMPOSITE_LTHOLDINGS
        {
            get
            {
                if ((_GF_COMPOSITE_LTHOLDINGS == null))
                {
                    _GF_COMPOSITE_LTHOLDINGS = base.CreateObjectSet<GF_COMPOSITE_LTHOLDINGS>("GF_COMPOSITE_LTHOLDINGS");
                }
                return _GF_COMPOSITE_LTHOLDINGS;
            }
        }
        private ObjectSet<GF_COMPOSITE_LTHOLDINGS> _GF_COMPOSITE_LTHOLDINGS;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<COMPOSITE_MASTER> COMPOSITE_MASTER
        {
            get
            {
                if ((_COMPOSITE_MASTER == null))
                {
                    _COMPOSITE_MASTER = base.CreateObjectSet<COMPOSITE_MASTER>("COMPOSITE_MASTER");
                }
                return _COMPOSITE_MASTER;
            }
        }
        private ObjectSet<COMPOSITE_MASTER> _COMPOSITE_MASTER;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<COMPOSITE_MATRIX> COMPOSITE_MATRIX
        {
            get
            {
                if ((_COMPOSITE_MATRIX == null))
                {
                    _COMPOSITE_MATRIX = base.CreateObjectSet<COMPOSITE_MATRIX>("COMPOSITE_MATRIX");
                }
                return _COMPOSITE_MATRIX;
            }
        }
        private ObjectSet<COMPOSITE_MATRIX> _COMPOSITE_MATRIX;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PERIOD_FINANCIALS> PERIOD_FINANCIALS
        {
            get
            {
                if ((_PERIOD_FINANCIALS == null))
                {
                    _PERIOD_FINANCIALS = base.CreateObjectSet<PERIOD_FINANCIALS>("PERIOD_FINANCIALS");
                }
                return _PERIOD_FINANCIALS;
            }
        }
        private ObjectSet<PERIOD_FINANCIALS> _PERIOD_FINANCIALS;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CURRENT_CONSENSUS_ESTIMATES EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCURRENT_CONSENSUS_ESTIMATES(CURRENT_CONSENSUS_ESTIMATES cURRENT_CONSENSUS_ESTIMATES)
        {
            base.AddObject("CURRENT_CONSENSUS_ESTIMATES", cURRENT_CONSENSUS_ESTIMATES);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DATA_MASTER EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDATA_MASTER(DATA_MASTER dATA_MASTER)
        {
            base.AddObject("DATA_MASTER", dATA_MASTER);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FX_RATES EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFX_RATES(FX_RATES fX_RATES)
        {
            base.AddObject("FX_RATES", fX_RATES);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the INTERNAL_ISSUER EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToINTERNAL_ISSUER(INTERNAL_ISSUER iNTERNAL_ISSUER)
        {
            base.AddObject("INTERNAL_ISSUER", iNTERNAL_ISSUER);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ISSUER_SHARES EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToISSUER_SHARES(ISSUER_SHARES iSSUER_SHARES)
        {
            base.AddObject("ISSUER_SHARES", iSSUER_SHARES);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ISSUER_SHARES_COMPOSITION EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToISSUER_SHARES_COMPOSITION(ISSUER_SHARES_COMPOSITION iSSUER_SHARES_COMPOSITION)
        {
            base.AddObject("ISSUER_SHARES_COMPOSITION", iSSUER_SHARES_COMPOSITION);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Macroeconomic_Data EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMacroeconomic_Data(Macroeconomic_Data macroeconomic_Data)
        {
            base.AddObject("Macroeconomic_Data", macroeconomic_Data);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Macroeconomic_Display EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMacroeconomic_Display(Macroeconomic_Display macroeconomic_Display)
        {
            base.AddObject("Macroeconomic_Display", macroeconomic_Display);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PERIOD_FINANCIALS_DISPLAY EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPERIOD_FINANCIALS_DISPLAY(PERIOD_FINANCIALS_DISPLAY pERIOD_FINANCIALS_DISPLAY)
        {
            base.AddObject("PERIOD_FINANCIALS_DISPLAY", pERIOD_FINANCIALS_DISPLAY);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PRICES EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPRICES(PRICE pRICE)
        {
            base.AddObject("PRICES", pRICE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the External_Country_Master EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExternal_Country_Master(External_Country_Master external_Country_Master)
        {
            base.AddObject("External_Country_Master", external_Country_Master);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FAIR_VALUE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFAIR_VALUE(FAIR_VALUE fAIR_VALUE)
        {
            base.AddObject("FAIR_VALUE", fAIR_VALUE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MODEL_INPUTS_CTY EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMODEL_INPUTS_CTY(MODEL_INPUTS_CTY mODEL_INPUTS_CTY)
        {
            base.AddObject("MODEL_INPUTS_CTY", mODEL_INPUTS_CTY);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PORTFOLIO_SECURITY_TARGETS EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPORTFOLIO_SECURITY_TARGETS(PORTFOLIO_SECURITY_TARGETS pORTFOLIO_SECURITY_TARGETS)
        {
            base.AddObject("PORTFOLIO_SECURITY_TARGETS", pORTFOLIO_SECURITY_TARGETS);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Portfolio_Security_Targets_Union EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPortfolio_Security_Targets_Union(Portfolio_Security_Targets_Union portfolio_Security_Targets_Union)
        {
            base.AddObject("Portfolio_Security_Targets_Union", portfolio_Security_Targets_Union);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GF_SECURITY_BASEVIEW_Local EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGF_SECURITY_BASEVIEW_Local(GF_SECURITY_BASEVIEW_Local gF_SECURITY_BASEVIEW_Local)
        {
            base.AddObject("GF_SECURITY_BASEVIEW_Local", gF_SECURITY_BASEVIEW_Local);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MODEL_UPLOAD_USER_GROUP EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMODEL_UPLOAD_USER_GROUP(MODEL_UPLOAD_USER_GROUP mODEL_UPLOAD_USER_GROUP)
        {
            base.AddObject("MODEL_UPLOAD_USER_GROUP", mODEL_UPLOAD_USER_GROUP);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Portfolio_Security_Target_Baseview EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPortfolio_Security_Target_Baseview(Portfolio_Security_Target_Baseview portfolio_Security_Target_Baseview)
        {
            base.AddObject("Portfolio_Security_Target_Baseview", portfolio_Security_Target_Baseview);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BENCHMARK_MASTER EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBENCHMARK_MASTER(BENCHMARK_MASTER bENCHMARK_MASTER)
        {
            base.AddObject("BENCHMARK_MASTER", bENCHMARK_MASTER);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GF_BENCHMARK_HOLDINGS_Local EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGF_BENCHMARK_HOLDINGS_Local(GF_BENCHMARK_HOLDINGS_Local gF_BENCHMARK_HOLDINGS_Local)
        {
            base.AddObject("GF_BENCHMARK_HOLDINGS_Local", gF_BENCHMARK_HOLDINGS_Local);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GF_COMPOSITE_LTHOLDINGS EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGF_COMPOSITE_LTHOLDINGS(GF_COMPOSITE_LTHOLDINGS gF_COMPOSITE_LTHOLDINGS)
        {
            base.AddObject("GF_COMPOSITE_LTHOLDINGS", gF_COMPOSITE_LTHOLDINGS);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the COMPOSITE_MASTER EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCOMPOSITE_MASTER(COMPOSITE_MASTER cOMPOSITE_MASTER)
        {
            base.AddObject("COMPOSITE_MASTER", cOMPOSITE_MASTER);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the COMPOSITE_MATRIX EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCOMPOSITE_MATRIX(COMPOSITE_MATRIX cOMPOSITE_MATRIX)
        {
            base.AddObject("COMPOSITE_MATRIX", cOMPOSITE_MATRIX);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PERIOD_FINANCIALS EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPERIOD_FINANCIALS(PERIOD_FINANCIALS pERIOD_FINANCIALS)
        {
            base.AddObject("PERIOD_FINANCIALS", pERIOD_FINANCIALS);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="securityID">No Metadata Documentation available.</param>
        public ObjectResult<GetBasicData_Result> GetBasicData(global::System.String securityID)
        {
            ObjectParameter securityIDParameter;
            if (securityID != null)
            {
                securityIDParameter = new ObjectParameter("SecurityID", securityID);
            }
            else
            {
                securityIDParameter = new ObjectParameter("SecurityID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<GetBasicData_Result>("GetBasicData", securityIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="xRef">No Metadata Documentation available.</param>
        public ObjectResult<GetTargetPrice_Result> GetTargetPrice(global::System.String xRef)
        {
            ObjectParameter xRefParameter;
            if (xRef != null)
            {
                xRefParameter = new ObjectParameter("XRef", xRef);
            }
            else
            {
                xRefParameter = new ObjectParameter("XRef", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<GetTargetPrice_Result>("GetTargetPrice", xRefParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="security">No Metadata Documentation available.</param>
        public ObjectResult<ConsensusEstimatesSummaryData> GetConsensusEstimatesSummaryData(global::System.String security)
        {
            ObjectParameter securityParameter;
            if (security != null)
            {
                securityParameter = new ObjectParameter("Security", security);
            }
            else
            {
                securityParameter = new ObjectParameter("Security", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<ConsensusEstimatesSummaryData>("GetConsensusEstimatesSummaryData", securityParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="dataId">No Metadata Documentation available.</param>
        /// <param name="periodYear">No Metadata Documentation available.</param>
        public ObjectResult<QuarterlyResults> usp_GetQuarterlyResults(Nullable<global::System.Int32> dataId, Nullable<global::System.Int32> periodYear)
        {
            ObjectParameter dataIdParameter;
            if (dataId.HasValue)
            {
                dataIdParameter = new ObjectParameter("DataId", dataId);
            }
            else
            {
                dataIdParameter = new ObjectParameter("DataId", typeof(global::System.Int32));
            }
    
            ObjectParameter periodYearParameter;
            if (periodYear.HasValue)
            {
                periodYearParameter = new ObjectParameter("PeriodYear", periodYear);
            }
            else
            {
                periodYearParameter = new ObjectParameter("PeriodYear", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<QuarterlyResults>("usp_GetQuarterlyResults", dataIdParameter, periodYearParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iSSUER_ID">No Metadata Documentation available.</param>
        /// <param name="dATA_SOURCE">No Metadata Documentation available.</param>
        /// <param name="pERIOD_TYPE">No Metadata Documentation available.</param>
        /// <param name="fISCAL_TYPE">No Metadata Documentation available.</param>
        /// <param name="cURRENCY">No Metadata Documentation available.</param>
        public ObjectResult<ConsensusEstimateMedianData> GetConsensusEstimateData(global::System.String iSSUER_ID, global::System.String dATA_SOURCE, global::System.String pERIOD_TYPE, global::System.String fISCAL_TYPE, global::System.String cURRENCY)
        {
            ObjectParameter iSSUER_IDParameter;
            if (iSSUER_ID != null)
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", iSSUER_ID);
            }
            else
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", typeof(global::System.String));
            }
    
            ObjectParameter dATA_SOURCEParameter;
            if (dATA_SOURCE != null)
            {
                dATA_SOURCEParameter = new ObjectParameter("DATA_SOURCE", dATA_SOURCE);
            }
            else
            {
                dATA_SOURCEParameter = new ObjectParameter("DATA_SOURCE", typeof(global::System.String));
            }
    
            ObjectParameter pERIOD_TYPEParameter;
            if (pERIOD_TYPE != null)
            {
                pERIOD_TYPEParameter = new ObjectParameter("PERIOD_TYPE", pERIOD_TYPE);
            }
            else
            {
                pERIOD_TYPEParameter = new ObjectParameter("PERIOD_TYPE", typeof(global::System.String));
            }
    
            ObjectParameter fISCAL_TYPEParameter;
            if (fISCAL_TYPE != null)
            {
                fISCAL_TYPEParameter = new ObjectParameter("FISCAL_TYPE", fISCAL_TYPE);
            }
            else
            {
                fISCAL_TYPEParameter = new ObjectParameter("FISCAL_TYPE", typeof(global::System.String));
            }
    
            ObjectParameter cURRENCYParameter;
            if (cURRENCY != null)
            {
                cURRENCYParameter = new ObjectParameter("CURRENCY", cURRENCY);
            }
            else
            {
                cURRENCYParameter = new ObjectParameter("CURRENCY", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<ConsensusEstimateMedianData>("GetConsensusEstimateData", iSSUER_IDParameter, dATA_SOURCEParameter, pERIOD_TYPEParameter, fISCAL_TYPEParameter, cURRENCYParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iSSUER_ID">No Metadata Documentation available.</param>
        /// <param name="dATA_SOURCE">No Metadata Documentation available.</param>
        /// <param name="pERIOD_TYPE">No Metadata Documentation available.</param>
        /// <param name="fISCAL_TYPE">No Metadata Documentation available.</param>
        /// <param name="cURRENCY">No Metadata Documentation available.</param>
        /// <param name="eSTIMATE_ID">No Metadata Documentation available.</param>
        /// <param name="pERIOD_YEAR">No Metadata Documentation available.</param>
        public ObjectResult<ConsensusEstimateValuation> Get_ConsensusEstimatesValuation(global::System.String iSSUER_ID, global::System.String dATA_SOURCE, global::System.String pERIOD_TYPE, global::System.String fISCAL_TYPE, global::System.String cURRENCY, Nullable<global::System.Int32> eSTIMATE_ID, Nullable<global::System.Int32> pERIOD_YEAR)
        {
            ObjectParameter iSSUER_IDParameter;
            if (iSSUER_ID != null)
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", iSSUER_ID);
            }
            else
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", typeof(global::System.String));
            }
    
            ObjectParameter dATA_SOURCEParameter;
            if (dATA_SOURCE != null)
            {
                dATA_SOURCEParameter = new ObjectParameter("DATA_SOURCE", dATA_SOURCE);
            }
            else
            {
                dATA_SOURCEParameter = new ObjectParameter("DATA_SOURCE", typeof(global::System.String));
            }
    
            ObjectParameter pERIOD_TYPEParameter;
            if (pERIOD_TYPE != null)
            {
                pERIOD_TYPEParameter = new ObjectParameter("PERIOD_TYPE", pERIOD_TYPE);
            }
            else
            {
                pERIOD_TYPEParameter = new ObjectParameter("PERIOD_TYPE", typeof(global::System.String));
            }
    
            ObjectParameter fISCAL_TYPEParameter;
            if (fISCAL_TYPE != null)
            {
                fISCAL_TYPEParameter = new ObjectParameter("FISCAL_TYPE", fISCAL_TYPE);
            }
            else
            {
                fISCAL_TYPEParameter = new ObjectParameter("FISCAL_TYPE", typeof(global::System.String));
            }
    
            ObjectParameter cURRENCYParameter;
            if (cURRENCY != null)
            {
                cURRENCYParameter = new ObjectParameter("CURRENCY", cURRENCY);
            }
            else
            {
                cURRENCYParameter = new ObjectParameter("CURRENCY", typeof(global::System.String));
            }
    
            ObjectParameter eSTIMATE_IDParameter;
            if (eSTIMATE_ID.HasValue)
            {
                eSTIMATE_IDParameter = new ObjectParameter("ESTIMATE_ID", eSTIMATE_ID);
            }
            else
            {
                eSTIMATE_IDParameter = new ObjectParameter("ESTIMATE_ID", typeof(global::System.Int32));
            }
    
            ObjectParameter pERIOD_YEARParameter;
            if (pERIOD_YEAR.HasValue)
            {
                pERIOD_YEARParameter = new ObjectParameter("PERIOD_YEAR", pERIOD_YEAR);
            }
            else
            {
                pERIOD_YEARParameter = new ObjectParameter("PERIOD_YEAR", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<ConsensusEstimateValuation>("Get_ConsensusEstimatesValuation", iSSUER_IDParameter, dATA_SOURCEParameter, pERIOD_TYPEParameter, fISCAL_TYPEParameter, cURRENCYParameter, eSTIMATE_IDParameter, pERIOD_YEARParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iSSUER_ID">No Metadata Documentation available.</param>
        /// <param name="dATA_SOURCE">No Metadata Documentation available.</param>
        /// <param name="rOOT_SOURCE">No Metadata Documentation available.</param>
        /// <param name="pERIOD_TYPE">No Metadata Documentation available.</param>
        /// <param name="fISCAL_TYPE">No Metadata Documentation available.</param>
        /// <param name="cURRENCY">No Metadata Documentation available.</param>
        /// <param name="eSTIMATE_ID">No Metadata Documentation available.</param>
        /// <param name="pERIOD_YEAR">No Metadata Documentation available.</param>
        /// <param name="security_ID">No Metadata Documentation available.</param>
        public ObjectResult<ConsensusEstimateValuation> GetConsensusEstimatesValuation(global::System.String iSSUER_ID, global::System.String dATA_SOURCE, global::System.String rOOT_SOURCE, global::System.String pERIOD_TYPE, global::System.String fISCAL_TYPE, global::System.String cURRENCY, Nullable<global::System.Int32> eSTIMATE_ID, Nullable<global::System.Int32> pERIOD_YEAR, global::System.String security_ID)
        {
            ObjectParameter iSSUER_IDParameter;
            if (iSSUER_ID != null)
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", iSSUER_ID);
            }
            else
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", typeof(global::System.String));
            }
    
            ObjectParameter dATA_SOURCEParameter;
            if (dATA_SOURCE != null)
            {
                dATA_SOURCEParameter = new ObjectParameter("DATA_SOURCE", dATA_SOURCE);
            }
            else
            {
                dATA_SOURCEParameter = new ObjectParameter("DATA_SOURCE", typeof(global::System.String));
            }
    
            ObjectParameter rOOT_SOURCEParameter;
            if (rOOT_SOURCE != null)
            {
                rOOT_SOURCEParameter = new ObjectParameter("ROOT_SOURCE", rOOT_SOURCE);
            }
            else
            {
                rOOT_SOURCEParameter = new ObjectParameter("ROOT_SOURCE", typeof(global::System.String));
            }
    
            ObjectParameter pERIOD_TYPEParameter;
            if (pERIOD_TYPE != null)
            {
                pERIOD_TYPEParameter = new ObjectParameter("PERIOD_TYPE", pERIOD_TYPE);
            }
            else
            {
                pERIOD_TYPEParameter = new ObjectParameter("PERIOD_TYPE", typeof(global::System.String));
            }
    
            ObjectParameter fISCAL_TYPEParameter;
            if (fISCAL_TYPE != null)
            {
                fISCAL_TYPEParameter = new ObjectParameter("FISCAL_TYPE", fISCAL_TYPE);
            }
            else
            {
                fISCAL_TYPEParameter = new ObjectParameter("FISCAL_TYPE", typeof(global::System.String));
            }
    
            ObjectParameter cURRENCYParameter;
            if (cURRENCY != null)
            {
                cURRENCYParameter = new ObjectParameter("CURRENCY", cURRENCY);
            }
            else
            {
                cURRENCYParameter = new ObjectParameter("CURRENCY", typeof(global::System.String));
            }
    
            ObjectParameter eSTIMATE_IDParameter;
            if (eSTIMATE_ID.HasValue)
            {
                eSTIMATE_IDParameter = new ObjectParameter("ESTIMATE_ID", eSTIMATE_ID);
            }
            else
            {
                eSTIMATE_IDParameter = new ObjectParameter("ESTIMATE_ID", typeof(global::System.Int32));
            }
    
            ObjectParameter pERIOD_YEARParameter;
            if (pERIOD_YEAR.HasValue)
            {
                pERIOD_YEARParameter = new ObjectParameter("PERIOD_YEAR", pERIOD_YEAR);
            }
            else
            {
                pERIOD_YEARParameter = new ObjectParameter("PERIOD_YEAR", typeof(global::System.Int32));
            }
    
            ObjectParameter security_IDParameter;
            if (security_ID != null)
            {
                security_IDParameter = new ObjectParameter("Security_ID", security_ID);
            }
            else
            {
                security_IDParameter = new ObjectParameter("Security_ID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<ConsensusEstimateValuation>("GetConsensusEstimatesValuation", iSSUER_IDParameter, dATA_SOURCEParameter, rOOT_SOURCEParameter, pERIOD_TYPEParameter, fISCAL_TYPEParameter, cURRENCYParameter, eSTIMATE_IDParameter, pERIOD_YEARParameter, security_IDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iSSUER_ID">No Metadata Documentation available.</param>
        /// <param name="dATA_SOURCE">No Metadata Documentation available.</param>
        /// <param name="pERIOD_TYPE">No Metadata Documentation available.</param>
        /// <param name="fISCAL_TYPE">No Metadata Documentation available.</param>
        /// <param name="cURRENCY">No Metadata Documentation available.</param>
        public ObjectResult<ConsensusEstimateDetailData> GetConsensusDetail(global::System.String iSSUER_ID, global::System.String dATA_SOURCE, global::System.String pERIOD_TYPE, global::System.String fISCAL_TYPE, global::System.String cURRENCY)
        {
            ObjectParameter iSSUER_IDParameter;
            if (iSSUER_ID != null)
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", iSSUER_ID);
            }
            else
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", typeof(global::System.String));
            }
    
            ObjectParameter dATA_SOURCEParameter;
            if (dATA_SOURCE != null)
            {
                dATA_SOURCEParameter = new ObjectParameter("DATA_SOURCE", dATA_SOURCE);
            }
            else
            {
                dATA_SOURCEParameter = new ObjectParameter("DATA_SOURCE", typeof(global::System.String));
            }
    
            ObjectParameter pERIOD_TYPEParameter;
            if (pERIOD_TYPE != null)
            {
                pERIOD_TYPEParameter = new ObjectParameter("PERIOD_TYPE", pERIOD_TYPE);
            }
            else
            {
                pERIOD_TYPEParameter = new ObjectParameter("PERIOD_TYPE", typeof(global::System.String));
            }
    
            ObjectParameter fISCAL_TYPEParameter;
            if (fISCAL_TYPE != null)
            {
                fISCAL_TYPEParameter = new ObjectParameter("FISCAL_TYPE", fISCAL_TYPE);
            }
            else
            {
                fISCAL_TYPEParameter = new ObjectParameter("FISCAL_TYPE", typeof(global::System.String));
            }
    
            ObjectParameter cURRENCYParameter;
            if (cURRENCY != null)
            {
                cURRENCYParameter = new ObjectParameter("CURRENCY", cURRENCY);
            }
            else
            {
                cURRENCYParameter = new ObjectParameter("CURRENCY", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<ConsensusEstimateDetailData>("GetConsensusDetail", iSSUER_IDParameter, dATA_SOURCEParameter, pERIOD_TYPEParameter, fISCAL_TYPEParameter, cURRENCYParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="securityId">No Metadata Documentation available.</param>
        /// <param name="issuerId">No Metadata Documentation available.</param>
        /// <param name="chartTitle">No Metadata Documentation available.</param>
        public ObjectResult<GetPRevenueData_Result> Get_PRevenue(global::System.String securityId, global::System.String issuerId, global::System.String chartTitle)
        {
            ObjectParameter securityIdParameter;
            if (securityId != null)
            {
                securityIdParameter = new ObjectParameter("securityId", securityId);
            }
            else
            {
                securityIdParameter = new ObjectParameter("securityId", typeof(global::System.String));
            }
    
            ObjectParameter issuerIdParameter;
            if (issuerId != null)
            {
                issuerIdParameter = new ObjectParameter("issuerId", issuerId);
            }
            else
            {
                issuerIdParameter = new ObjectParameter("issuerId", typeof(global::System.String));
            }
    
            ObjectParameter chartTitleParameter;
            if (chartTitle != null)
            {
                chartTitleParameter = new ObjectParameter("chartTitle", chartTitle);
            }
            else
            {
                chartTitleParameter = new ObjectParameter("chartTitle", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<GetPRevenueData_Result>("Get_PRevenue", securityIdParameter, issuerIdParameter, chartTitleParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iSSUER_ID">No Metadata Documentation available.</param>
        /// <param name="dATA_SOURCE">No Metadata Documentation available.</param>
        /// <param name="pERIOD_TYPE">No Metadata Documentation available.</param>
        /// <param name="fISCAL_TYPE">No Metadata Documentation available.</param>
        /// <param name="sTATEMENT_TYPE">No Metadata Documentation available.</param>
        /// <param name="cURRENCY">No Metadata Documentation available.</param>
        public ObjectResult<FinancialStatementData> Get_Statement(global::System.String iSSUER_ID, global::System.String dATA_SOURCE, global::System.String pERIOD_TYPE, global::System.String fISCAL_TYPE, global::System.String sTATEMENT_TYPE, global::System.String cURRENCY)
        {
            ObjectParameter iSSUER_IDParameter;
            if (iSSUER_ID != null)
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", iSSUER_ID);
            }
            else
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", typeof(global::System.String));
            }
    
            ObjectParameter dATA_SOURCEParameter;
            if (dATA_SOURCE != null)
            {
                dATA_SOURCEParameter = new ObjectParameter("DATA_SOURCE", dATA_SOURCE);
            }
            else
            {
                dATA_SOURCEParameter = new ObjectParameter("DATA_SOURCE", typeof(global::System.String));
            }
    
            ObjectParameter pERIOD_TYPEParameter;
            if (pERIOD_TYPE != null)
            {
                pERIOD_TYPEParameter = new ObjectParameter("PERIOD_TYPE", pERIOD_TYPE);
            }
            else
            {
                pERIOD_TYPEParameter = new ObjectParameter("PERIOD_TYPE", typeof(global::System.String));
            }
    
            ObjectParameter fISCAL_TYPEParameter;
            if (fISCAL_TYPE != null)
            {
                fISCAL_TYPEParameter = new ObjectParameter("FISCAL_TYPE", fISCAL_TYPE);
            }
            else
            {
                fISCAL_TYPEParameter = new ObjectParameter("FISCAL_TYPE", typeof(global::System.String));
            }
    
            ObjectParameter sTATEMENT_TYPEParameter;
            if (sTATEMENT_TYPE != null)
            {
                sTATEMENT_TYPEParameter = new ObjectParameter("STATEMENT_TYPE", sTATEMENT_TYPE);
            }
            else
            {
                sTATEMENT_TYPEParameter = new ObjectParameter("STATEMENT_TYPE", typeof(global::System.String));
            }
    
            ObjectParameter cURRENCYParameter;
            if (cURRENCY != null)
            {
                cURRENCYParameter = new ObjectParameter("CURRENCY", cURRENCY);
            }
            else
            {
                cURRENCYParameter = new ObjectParameter("CURRENCY", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<FinancialStatementData>("Get_Statement", iSSUER_IDParameter, dATA_SOURCEParameter, pERIOD_TYPEParameter, fISCAL_TYPEParameter, sTATEMENT_TYPEParameter, cURRENCYParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="cSource">No Metadata Documentation available.</param>
        /// <param name="cFiscalType">No Metadata Documentation available.</param>
        /// <param name="cCurrency">No Metadata Documentation available.</param>
        /// <param name="cIssuerID">No Metadata Documentation available.</param>
        /// <param name="cSecurityID">No Metadata Documentation available.</param>
        public ObjectResult<COASpecificData> GetDataForPeriodGadgets(global::System.String cSource, global::System.String cFiscalType, global::System.String cCurrency, global::System.String cIssuerID, global::System.String cSecurityID)
        {
            ObjectParameter cSourceParameter;
            if (cSource != null)
            {
                cSourceParameter = new ObjectParameter("cSource", cSource);
            }
            else
            {
                cSourceParameter = new ObjectParameter("cSource", typeof(global::System.String));
            }
    
            ObjectParameter cFiscalTypeParameter;
            if (cFiscalType != null)
            {
                cFiscalTypeParameter = new ObjectParameter("cFiscalType", cFiscalType);
            }
            else
            {
                cFiscalTypeParameter = new ObjectParameter("cFiscalType", typeof(global::System.String));
            }
    
            ObjectParameter cCurrencyParameter;
            if (cCurrency != null)
            {
                cCurrencyParameter = new ObjectParameter("cCurrency", cCurrency);
            }
            else
            {
                cCurrencyParameter = new ObjectParameter("cCurrency", typeof(global::System.String));
            }
    
            ObjectParameter cIssuerIDParameter;
            if (cIssuerID != null)
            {
                cIssuerIDParameter = new ObjectParameter("cIssuerID", cIssuerID);
            }
            else
            {
                cIssuerIDParameter = new ObjectParameter("cIssuerID", typeof(global::System.String));
            }
    
            ObjectParameter cSecurityIDParameter;
            if (cSecurityID != null)
            {
                cSecurityIDParameter = new ObjectParameter("cSecurityID", cSecurityID);
            }
            else
            {
                cSecurityIDParameter = new ObjectParameter("cSecurityID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<COASpecificData>("GetDataForPeriodGadgets", cSourceParameter, cFiscalTypeParameter, cCurrencyParameter, cIssuerIDParameter, cSecurityIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuerID">No Metadata Documentation available.</param>
        /// <param name="securityId">No Metadata Documentation available.</param>
        /// <param name="dataSource">No Metadata Documentation available.</param>
        /// <param name="fiscalType">No Metadata Documentation available.</param>
        /// <param name="currency">No Metadata Documentation available.</param>
        public ObjectResult<FinstatDetail> GetFinstatDetail(global::System.String issuerID, global::System.String securityId, global::System.String dataSource, global::System.String fiscalType, global::System.String currency)
        {
            ObjectParameter issuerIDParameter;
            if (issuerID != null)
            {
                issuerIDParameter = new ObjectParameter("issuerID", issuerID);
            }
            else
            {
                issuerIDParameter = new ObjectParameter("issuerID", typeof(global::System.String));
            }
    
            ObjectParameter securityIdParameter;
            if (securityId != null)
            {
                securityIdParameter = new ObjectParameter("securityId", securityId);
            }
            else
            {
                securityIdParameter = new ObjectParameter("securityId", typeof(global::System.String));
            }
    
            ObjectParameter dataSourceParameter;
            if (dataSource != null)
            {
                dataSourceParameter = new ObjectParameter("dataSource", dataSource);
            }
            else
            {
                dataSourceParameter = new ObjectParameter("dataSource", typeof(global::System.String));
            }
    
            ObjectParameter fiscalTypeParameter;
            if (fiscalType != null)
            {
                fiscalTypeParameter = new ObjectParameter("fiscalType", fiscalType);
            }
            else
            {
                fiscalTypeParameter = new ObjectParameter("fiscalType", typeof(global::System.String));
            }
    
            ObjectParameter currencyParameter;
            if (currency != null)
            {
                currencyParameter = new ObjectParameter("currency", currency);
            }
            else
            {
                currencyParameter = new ObjectParameter("currency", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<FinstatDetail>("GetFinstatDetail", issuerIDParameter, securityIdParameter, dataSourceParameter, fiscalTypeParameter, currencyParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="securityId">No Metadata Documentation available.</param>
        /// <param name="issuerId">No Metadata Documentation available.</param>
        /// <param name="chartTitle">No Metadata Documentation available.</param>
        public ObjectResult<GetEV_EBITDAData_Result> Get_EV_EBITDA(global::System.String securityId, global::System.String issuerId, global::System.String chartTitle)
        {
            ObjectParameter securityIdParameter;
            if (securityId != null)
            {
                securityIdParameter = new ObjectParameter("securityId", securityId);
            }
            else
            {
                securityIdParameter = new ObjectParameter("securityId", typeof(global::System.String));
            }
    
            ObjectParameter issuerIdParameter;
            if (issuerId != null)
            {
                issuerIdParameter = new ObjectParameter("issuerId", issuerId);
            }
            else
            {
                issuerIdParameter = new ObjectParameter("issuerId", typeof(global::System.String));
            }
    
            ObjectParameter chartTitleParameter;
            if (chartTitle != null)
            {
                chartTitleParameter = new ObjectParameter("chartTitle", chartTitle);
            }
            else
            {
                chartTitleParameter = new ObjectParameter("chartTitle", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<GetEV_EBITDAData_Result>("Get_EV_EBITDA", securityIdParameter, issuerIdParameter, chartTitleParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuerID">No Metadata Documentation available.</param>
        /// <param name="securityId">No Metadata Documentation available.</param>
        /// <param name="dataSource">No Metadata Documentation available.</param>
        /// <param name="fiscalType">No Metadata Documentation available.</param>
        /// <param name="currency">No Metadata Documentation available.</param>
        public ObjectResult<FinstatEconomicMarketData> GetFinstatEconomicMarketData(global::System.String issuerID, global::System.String securityId, global::System.String dataSource, global::System.String fiscalType, global::System.String currency)
        {
            ObjectParameter issuerIDParameter;
            if (issuerID != null)
            {
                issuerIDParameter = new ObjectParameter("issuerID", issuerID);
            }
            else
            {
                issuerIDParameter = new ObjectParameter("issuerID", typeof(global::System.String));
            }
    
            ObjectParameter securityIdParameter;
            if (securityId != null)
            {
                securityIdParameter = new ObjectParameter("securityId", securityId);
            }
            else
            {
                securityIdParameter = new ObjectParameter("securityId", typeof(global::System.String));
            }
    
            ObjectParameter dataSourceParameter;
            if (dataSource != null)
            {
                dataSourceParameter = new ObjectParameter("dataSource", dataSource);
            }
            else
            {
                dataSourceParameter = new ObjectParameter("dataSource", typeof(global::System.String));
            }
    
            ObjectParameter fiscalTypeParameter;
            if (fiscalType != null)
            {
                fiscalTypeParameter = new ObjectParameter("fiscalType", fiscalType);
            }
            else
            {
                fiscalTypeParameter = new ObjectParameter("fiscalType", typeof(global::System.String));
            }
    
            ObjectParameter currencyParameter;
            if (currency != null)
            {
                currencyParameter = new ObjectParameter("currency", currency);
            }
            else
            {
                currencyParameter = new ObjectParameter("currency", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<FinstatEconomicMarketData>("GetFinstatEconomicMarketData", issuerIDParameter, securityIdParameter, dataSourceParameter, fiscalTypeParameter, currencyParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuerID">No Metadata Documentation available.</param>
        /// <param name="securityId">No Metadata Documentation available.</param>
        /// <param name="dataSource">No Metadata Documentation available.</param>
        /// <param name="fiscalType">No Metadata Documentation available.</param>
        public ObjectResult<FinstatRelativeAnalysisData> GetFinstatRelativeAnalysisData(global::System.String issuerID, global::System.String securityId, global::System.String dataSource, global::System.String fiscalType)
        {
            ObjectParameter issuerIDParameter;
            if (issuerID != null)
            {
                issuerIDParameter = new ObjectParameter("issuerID", issuerID);
            }
            else
            {
                issuerIDParameter = new ObjectParameter("issuerID", typeof(global::System.String));
            }
    
            ObjectParameter securityIdParameter;
            if (securityId != null)
            {
                securityIdParameter = new ObjectParameter("securityId", securityId);
            }
            else
            {
                securityIdParameter = new ObjectParameter("securityId", typeof(global::System.String));
            }
    
            ObjectParameter dataSourceParameter;
            if (dataSource != null)
            {
                dataSourceParameter = new ObjectParameter("dataSource", dataSource);
            }
            else
            {
                dataSourceParameter = new ObjectParameter("dataSource", typeof(global::System.String));
            }
    
            ObjectParameter fiscalTypeParameter;
            if (fiscalType != null)
            {
                fiscalTypeParameter = new ObjectParameter("fiscalType", fiscalType);
            }
            else
            {
                fiscalTypeParameter = new ObjectParameter("fiscalType", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<FinstatRelativeAnalysisData>("GetFinstatRelativeAnalysisData", issuerIDParameter, securityIdParameter, dataSourceParameter, fiscalTypeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<Nullable<global::System.Decimal>> GetMarketCap()
        {
            return base.ExecuteFunction<Nullable<global::System.Decimal>>("GetMarketCap");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iSSUER_ID">No Metadata Documentation available.</param>
        /// <param name="eSTIMATE_TYPE">No Metadata Documentation available.</param>
        /// <param name="pERIOD_TYPE">No Metadata Documentation available.</param>
        /// <param name="cURRENCY">No Metadata Documentation available.</param>
        public ObjectResult<BrokerDetailData> GetBrokerDetail(global::System.String iSSUER_ID, global::System.String eSTIMATE_TYPE, global::System.String pERIOD_TYPE, global::System.String cURRENCY)
        {
            ObjectParameter iSSUER_IDParameter;
            if (iSSUER_ID != null)
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", iSSUER_ID);
            }
            else
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", typeof(global::System.String));
            }
    
            ObjectParameter eSTIMATE_TYPEParameter;
            if (eSTIMATE_TYPE != null)
            {
                eSTIMATE_TYPEParameter = new ObjectParameter("ESTIMATE_TYPE", eSTIMATE_TYPE);
            }
            else
            {
                eSTIMATE_TYPEParameter = new ObjectParameter("ESTIMATE_TYPE", typeof(global::System.String));
            }
    
            ObjectParameter pERIOD_TYPEParameter;
            if (pERIOD_TYPE != null)
            {
                pERIOD_TYPEParameter = new ObjectParameter("PERIOD_TYPE", pERIOD_TYPE);
            }
            else
            {
                pERIOD_TYPEParameter = new ObjectParameter("PERIOD_TYPE", typeof(global::System.String));
            }
    
            ObjectParameter cURRENCYParameter;
            if (cURRENCY != null)
            {
                cURRENCYParameter = new ObjectParameter("CURRENCY", cURRENCY);
            }
            else
            {
                cURRENCYParameter = new ObjectParameter("CURRENCY", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<BrokerDetailData>("GetBrokerDetail", iSSUER_IDParameter, eSTIMATE_TYPEParameter, pERIOD_TYPEParameter, cURRENCYParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iSSUER_ID">No Metadata Documentation available.</param>
        /// <param name="dATA_SOURCE">No Metadata Documentation available.</param>
        /// <param name="pERIOD_TYPE">No Metadata Documentation available.</param>
        /// <param name="fISCAL_TYPE">No Metadata Documentation available.</param>
        /// <param name="cURRENCY">No Metadata Documentation available.</param>
        public ObjectResult<DCFAnalysisSummaryData_Result> RetrieveDCFAnalysisSummaryData(global::System.String iSSUER_ID, global::System.String dATA_SOURCE, global::System.String pERIOD_TYPE, global::System.String fISCAL_TYPE, global::System.String cURRENCY)
        {
            ObjectParameter iSSUER_IDParameter;
            if (iSSUER_ID != null)
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", iSSUER_ID);
            }
            else
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", typeof(global::System.String));
            }
    
            ObjectParameter dATA_SOURCEParameter;
            if (dATA_SOURCE != null)
            {
                dATA_SOURCEParameter = new ObjectParameter("DATA_SOURCE", dATA_SOURCE);
            }
            else
            {
                dATA_SOURCEParameter = new ObjectParameter("DATA_SOURCE", typeof(global::System.String));
            }
    
            ObjectParameter pERIOD_TYPEParameter;
            if (pERIOD_TYPE != null)
            {
                pERIOD_TYPEParameter = new ObjectParameter("PERIOD_TYPE", pERIOD_TYPE);
            }
            else
            {
                pERIOD_TYPEParameter = new ObjectParameter("PERIOD_TYPE", typeof(global::System.String));
            }
    
            ObjectParameter fISCAL_TYPEParameter;
            if (fISCAL_TYPE != null)
            {
                fISCAL_TYPEParameter = new ObjectParameter("FISCAL_TYPE", fISCAL_TYPE);
            }
            else
            {
                fISCAL_TYPEParameter = new ObjectParameter("FISCAL_TYPE", typeof(global::System.String));
            }
    
            ObjectParameter cURRENCYParameter;
            if (cURRENCY != null)
            {
                cURRENCYParameter = new ObjectParameter("CURRENCY", cURRENCY);
            }
            else
            {
                cURRENCYParameter = new ObjectParameter("CURRENCY", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<DCFAnalysisSummaryData_Result>("RetrieveDCFAnalysisSummaryData", iSSUER_IDParameter, dATA_SOURCEParameter, pERIOD_TYPEParameter, fISCAL_TYPEParameter, cURRENCYParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="securityId">No Metadata Documentation available.</param>
        /// <param name="pFVMeasure">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Decimal>> RetrieveSecurityPFVMeasureCurrentPrice(global::System.String securityId, global::System.String pFVMeasure)
        {
            ObjectParameter securityIdParameter;
            if (securityId != null)
            {
                securityIdParameter = new ObjectParameter("SecurityId", securityId);
            }
            else
            {
                securityIdParameter = new ObjectParameter("SecurityId", typeof(global::System.String));
            }
    
            ObjectParameter pFVMeasureParameter;
            if (pFVMeasure != null)
            {
                pFVMeasureParameter = new ObjectParameter("PFVMeasure", pFVMeasure);
            }
            else
            {
                pFVMeasureParameter = new ObjectParameter("PFVMeasure", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Decimal>>("RetrieveSecurityPFVMeasureCurrentPrice", securityIdParameter, pFVMeasureParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuerIdsForPortfolio">No Metadata Documentation available.</param>
        /// <param name="securityIdsForPortfolio">No Metadata Documentation available.</param>
        /// <param name="issuerIdsForBenchmark">No Metadata Documentation available.</param>
        /// <param name="securityIdsForBenchmark">No Metadata Documentation available.</param>
        public ObjectResult<ValuationQualityGrowthData> usp_GetDataForValuationQualityGrowth(global::System.String issuerIdsForPortfolio, global::System.String securityIdsForPortfolio, global::System.String issuerIdsForBenchmark, global::System.String securityIdsForBenchmark)
        {
            ObjectParameter issuerIdsForPortfolioParameter;
            if (issuerIdsForPortfolio != null)
            {
                issuerIdsForPortfolioParameter = new ObjectParameter("issuerIdsForPortfolio", issuerIdsForPortfolio);
            }
            else
            {
                issuerIdsForPortfolioParameter = new ObjectParameter("issuerIdsForPortfolio", typeof(global::System.String));
            }
    
            ObjectParameter securityIdsForPortfolioParameter;
            if (securityIdsForPortfolio != null)
            {
                securityIdsForPortfolioParameter = new ObjectParameter("securityIdsForPortfolio", securityIdsForPortfolio);
            }
            else
            {
                securityIdsForPortfolioParameter = new ObjectParameter("securityIdsForPortfolio", typeof(global::System.String));
            }
    
            ObjectParameter issuerIdsForBenchmarkParameter;
            if (issuerIdsForBenchmark != null)
            {
                issuerIdsForBenchmarkParameter = new ObjectParameter("issuerIdsForBenchmark", issuerIdsForBenchmark);
            }
            else
            {
                issuerIdsForBenchmarkParameter = new ObjectParameter("issuerIdsForBenchmark", typeof(global::System.String));
            }
    
            ObjectParameter securityIdsForBenchmarkParameter;
            if (securityIdsForBenchmark != null)
            {
                securityIdsForBenchmarkParameter = new ObjectParameter("securityIdsForBenchmark", securityIdsForBenchmark);
            }
            else
            {
                securityIdsForBenchmarkParameter = new ObjectParameter("securityIdsForBenchmark", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<ValuationQualityGrowthData>("usp_GetDataForValuationQualityGrowth", issuerIdsForPortfolioParameter, securityIdsForPortfolioParameter, issuerIdsForBenchmarkParameter, securityIdsForBenchmarkParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="securityID">No Metadata Documentation available.</param>
        public ObjectResult<NewICPresentationSecurityData> GetNewICPresentationSecurityData(global::System.String securityID)
        {
            ObjectParameter securityIDParameter;
            if (securityID != null)
            {
                securityIDParameter = new ObjectParameter("securityID", securityID);
            }
            else
            {
                securityIDParameter = new ObjectParameter("securityID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<NewICPresentationSecurityData>("GetNewICPresentationSecurityData", securityIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iSSUER_ID">No Metadata Documentation available.</param>
        /// <param name="yEAR">No Metadata Documentation available.</param>
        /// <param name="dATA_SOURCE">No Metadata Documentation available.</param>
        /// <param name="pERIOD_TYPE">No Metadata Documentation available.</param>
        /// <param name="fISCAL_TYPE">No Metadata Documentation available.</param>
        /// <param name="cURRENCY">No Metadata Documentation available.</param>
        public ObjectResult<DCF_ROICResult> GetDCF_ROIC(global::System.String iSSUER_ID, Nullable<global::System.Int32> yEAR, global::System.String dATA_SOURCE, global::System.String pERIOD_TYPE, global::System.String fISCAL_TYPE, global::System.String cURRENCY)
        {
            ObjectParameter iSSUER_IDParameter;
            if (iSSUER_ID != null)
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", iSSUER_ID);
            }
            else
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", typeof(global::System.String));
            }
    
            ObjectParameter yEARParameter;
            if (yEAR.HasValue)
            {
                yEARParameter = new ObjectParameter("YEAR", yEAR);
            }
            else
            {
                yEARParameter = new ObjectParameter("YEAR", typeof(global::System.Int32));
            }
    
            ObjectParameter dATA_SOURCEParameter;
            if (dATA_SOURCE != null)
            {
                dATA_SOURCEParameter = new ObjectParameter("DATA_SOURCE", dATA_SOURCE);
            }
            else
            {
                dATA_SOURCEParameter = new ObjectParameter("DATA_SOURCE", typeof(global::System.String));
            }
    
            ObjectParameter pERIOD_TYPEParameter;
            if (pERIOD_TYPE != null)
            {
                pERIOD_TYPEParameter = new ObjectParameter("PERIOD_TYPE", pERIOD_TYPE);
            }
            else
            {
                pERIOD_TYPEParameter = new ObjectParameter("PERIOD_TYPE", typeof(global::System.String));
            }
    
            ObjectParameter fISCAL_TYPEParameter;
            if (fISCAL_TYPE != null)
            {
                fISCAL_TYPEParameter = new ObjectParameter("FISCAL_TYPE", fISCAL_TYPE);
            }
            else
            {
                fISCAL_TYPEParameter = new ObjectParameter("FISCAL_TYPE", typeof(global::System.String));
            }
    
            ObjectParameter cURRENCYParameter;
            if (cURRENCY != null)
            {
                cURRENCYParameter = new ObjectParameter("CURRENCY", cURRENCY);
            }
            else
            {
                cURRENCYParameter = new ObjectParameter("CURRENCY", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<DCF_ROICResult>("GetDCF_ROIC", iSSUER_IDParameter, yEARParameter, dATA_SOURCEParameter, pERIOD_TYPEParameter, fISCAL_TYPEParameter, cURRENCYParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iSSUER_ID">No Metadata Documentation available.</param>
        /// <param name="dATA_SOURCE">No Metadata Documentation available.</param>
        /// <param name="pERIOD_TYPE">No Metadata Documentation available.</param>
        /// <param name="fISCAL_TYPE">No Metadata Documentation available.</param>
        /// <param name="cURRENCY">No Metadata Documentation available.</param>
        public ObjectResult<ModelConsensusEstimatesData> GetModelConsensusEstimates(global::System.String iSSUER_ID, global::System.String dATA_SOURCE, global::System.String pERIOD_TYPE, global::System.String fISCAL_TYPE, global::System.String cURRENCY)
        {
            ObjectParameter iSSUER_IDParameter;
            if (iSSUER_ID != null)
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", iSSUER_ID);
            }
            else
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", typeof(global::System.String));
            }
    
            ObjectParameter dATA_SOURCEParameter;
            if (dATA_SOURCE != null)
            {
                dATA_SOURCEParameter = new ObjectParameter("DATA_SOURCE", dATA_SOURCE);
            }
            else
            {
                dATA_SOURCEParameter = new ObjectParameter("DATA_SOURCE", typeof(global::System.String));
            }
    
            ObjectParameter pERIOD_TYPEParameter;
            if (pERIOD_TYPE != null)
            {
                pERIOD_TYPEParameter = new ObjectParameter("PERIOD_TYPE", pERIOD_TYPE);
            }
            else
            {
                pERIOD_TYPEParameter = new ObjectParameter("PERIOD_TYPE", typeof(global::System.String));
            }
    
            ObjectParameter fISCAL_TYPEParameter;
            if (fISCAL_TYPE != null)
            {
                fISCAL_TYPEParameter = new ObjectParameter("FISCAL_TYPE", fISCAL_TYPE);
            }
            else
            {
                fISCAL_TYPEParameter = new ObjectParameter("FISCAL_TYPE", typeof(global::System.String));
            }
    
            ObjectParameter cURRENCYParameter;
            if (cURRENCY != null)
            {
                cURRENCYParameter = new ObjectParameter("CURRENCY", cURRENCY);
            }
            else
            {
                cURRENCYParameter = new ObjectParameter("CURRENCY", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<ModelConsensusEstimatesData>("GetModelConsensusEstimates", iSSUER_IDParameter, dATA_SOURCEParameter, pERIOD_TYPEParameter, fISCAL_TYPEParameter, cURRENCYParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iSSUER_ID">No Metadata Documentation available.</param>
        /// <param name="dATA_SOURCE">No Metadata Documentation available.</param>
        /// <param name="pERIOD_TYPE">No Metadata Documentation available.</param>
        /// <param name="fISCAL_TYPE">No Metadata Documentation available.</param>
        /// <param name="sTATEMENT_TYPE">No Metadata Documentation available.</param>
        /// <param name="cURRENCY">No Metadata Documentation available.</param>
        public ObjectResult<FinancialStatementDataModels> Get_Statement_Models(global::System.String iSSUER_ID, global::System.String dATA_SOURCE, global::System.String pERIOD_TYPE, global::System.String fISCAL_TYPE, global::System.String sTATEMENT_TYPE, global::System.String cURRENCY)
        {
            ObjectParameter iSSUER_IDParameter;
            if (iSSUER_ID != null)
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", iSSUER_ID);
            }
            else
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", typeof(global::System.String));
            }
    
            ObjectParameter dATA_SOURCEParameter;
            if (dATA_SOURCE != null)
            {
                dATA_SOURCEParameter = new ObjectParameter("DATA_SOURCE", dATA_SOURCE);
            }
            else
            {
                dATA_SOURCEParameter = new ObjectParameter("DATA_SOURCE", typeof(global::System.String));
            }
    
            ObjectParameter pERIOD_TYPEParameter;
            if (pERIOD_TYPE != null)
            {
                pERIOD_TYPEParameter = new ObjectParameter("PERIOD_TYPE", pERIOD_TYPE);
            }
            else
            {
                pERIOD_TYPEParameter = new ObjectParameter("PERIOD_TYPE", typeof(global::System.String));
            }
    
            ObjectParameter fISCAL_TYPEParameter;
            if (fISCAL_TYPE != null)
            {
                fISCAL_TYPEParameter = new ObjectParameter("FISCAL_TYPE", fISCAL_TYPE);
            }
            else
            {
                fISCAL_TYPEParameter = new ObjectParameter("FISCAL_TYPE", typeof(global::System.String));
            }
    
            ObjectParameter sTATEMENT_TYPEParameter;
            if (sTATEMENT_TYPE != null)
            {
                sTATEMENT_TYPEParameter = new ObjectParameter("STATEMENT_TYPE", sTATEMENT_TYPE);
            }
            else
            {
                sTATEMENT_TYPEParameter = new ObjectParameter("STATEMENT_TYPE", typeof(global::System.String));
            }
    
            ObjectParameter cURRENCYParameter;
            if (cURRENCY != null)
            {
                cURRENCYParameter = new ObjectParameter("CURRENCY", cURRENCY);
            }
            else
            {
                cURRENCYParameter = new ObjectParameter("CURRENCY", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<FinancialStatementDataModels>("Get_Statement_Models", iSSUER_IDParameter, dATA_SOURCEParameter, pERIOD_TYPEParameter, fISCAL_TYPEParameter, sTATEMENT_TYPEParameter, cURRENCYParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="cOUNTRY_CODE">No Metadata Documentation available.</param>
        public ObjectResult<MODEL_INPUTS_CTY> GetDCFRiskFreeRate(global::System.String cOUNTRY_CODE)
        {
            ObjectParameter cOUNTRY_CODEParameter;
            if (cOUNTRY_CODE != null)
            {
                cOUNTRY_CODEParameter = new ObjectParameter("COUNTRY_CODE", cOUNTRY_CODE);
            }
            else
            {
                cOUNTRY_CODEParameter = new ObjectParameter("COUNTRY_CODE", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<MODEL_INPUTS_CTY>("GetDCFRiskFreeRate", cOUNTRY_CODEParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="cOUNTRY_CODE">No Metadata Documentation available.</param>
        public ObjectResult<MODEL_INPUTS_CTY> GetDCFRiskFreeRate(global::System.String cOUNTRY_CODE, MergeOption mergeOption)
        {
            ObjectParameter cOUNTRY_CODEParameter;
            if (cOUNTRY_CODE != null)
            {
                cOUNTRY_CODEParameter = new ObjectParameter("COUNTRY_CODE", cOUNTRY_CODE);
            }
            else
            {
                cOUNTRY_CODEParameter = new ObjectParameter("COUNTRY_CODE", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<MODEL_INPUTS_CTY>("GetDCFRiskFreeRate", mergeOption, cOUNTRY_CODEParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="sECURITY_ID">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Decimal>> GetDCFMarketCap(global::System.String sECURITY_ID)
        {
            ObjectParameter sECURITY_IDParameter;
            if (sECURITY_ID != null)
            {
                sECURITY_IDParameter = new ObjectParameter("SECURITY_ID", sECURITY_ID);
            }
            else
            {
                sECURITY_IDParameter = new ObjectParameter("SECURITY_ID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Decimal>>("GetDCFMarketCap", sECURITY_IDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iSSUER_ID">No Metadata Documentation available.</param>
        public ObjectResult<DCFCashFlowData> GetDCFCashFlow(global::System.String iSSUER_ID)
        {
            ObjectParameter iSSUER_IDParameter;
            if (iSSUER_ID != null)
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", iSSUER_ID);
            }
            else
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<DCFCashFlowData>("GetDCFCashFlow", iSSUER_IDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iSSUER_ID">No Metadata Documentation available.</param>
        public ObjectResult<DCFSummaryDBData> GetDCFSummaryData(global::System.String iSSUER_ID)
        {
            ObjectParameter iSSUER_IDParameter;
            if (iSSUER_ID != null)
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", iSSUER_ID);
            }
            else
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<DCFSummaryDBData>("GetDCFSummaryData", iSSUER_IDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="sECURITY_ID">No Metadata Documentation available.</param>
        public ObjectResult<DCFSummaryDBData> GetDCF_NumberOfShares(global::System.String sECURITY_ID)
        {
            ObjectParameter sECURITY_IDParameter;
            if (sECURITY_ID != null)
            {
                sECURITY_IDParameter = new ObjectParameter("SECURITY_ID", sECURITY_ID);
            }
            else
            {
                sECURITY_IDParameter = new ObjectParameter("SECURITY_ID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<DCFSummaryDBData>("GetDCF_NumberOfShares", sECURITY_IDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="cOUNTRY_CODE">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Decimal>> GetDCFGDP(global::System.String cOUNTRY_CODE)
        {
            ObjectParameter cOUNTRY_CODEParameter;
            if (cOUNTRY_CODE != null)
            {
                cOUNTRY_CODEParameter = new ObjectParameter("COUNTRY_CODE", cOUNTRY_CODE);
            }
            else
            {
                cOUNTRY_CODEParameter = new ObjectParameter("COUNTRY_CODE", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Decimal>>("GetDCFGDP", cOUNTRY_CODEParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuerId">No Metadata Documentation available.</param>
        public ObjectResult<GetFreeCashFlows_Result> GetFreeCashFlows(global::System.String issuerId)
        {
            ObjectParameter issuerIdParameter;
            if (issuerId != null)
            {
                issuerIdParameter = new ObjectParameter("IssuerId", issuerId);
            }
            else
            {
                issuerIdParameter = new ObjectParameter("IssuerId", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<GetFreeCashFlows_Result>("GetFreeCashFlows", issuerIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="sECURITY_ID">No Metadata Documentation available.</param>
        public ObjectResult<GetFairValueComposition_Result> GetFairValueCompositionSummaryData(global::System.String sECURITY_ID)
        {
            ObjectParameter sECURITY_IDParameter;
            if (sECURITY_ID != null)
            {
                sECURITY_IDParameter = new ObjectParameter("SECURITY_ID", sECURITY_ID);
            }
            else
            {
                sECURITY_IDParameter = new ObjectParameter("SECURITY_ID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<GetFairValueComposition_Result>("GetFairValueCompositionSummaryData", sECURITY_IDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="securityBucketXML">No Metadata Documentation available.</param>
        public ObjectResult<RatioComparisonData> RetrieveRatioComparisonData(global::System.String securityBucketXML)
        {
            ObjectParameter securityBucketXMLParameter;
            if (securityBucketXML != null)
            {
                securityBucketXMLParameter = new ObjectParameter("securityBucketXML", securityBucketXML);
            }
            else
            {
                securityBucketXMLParameter = new ObjectParameter("securityBucketXML", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<RatioComparisonData>("RetrieveRatioComparisonData", securityBucketXMLParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="sECURITY_ID">No Metadata Documentation available.</param>
        /// <param name="dATA_ID">No Metadata Documentation available.</param>
        /// <param name="dATA_SOURCE">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Decimal>> GetAmountForUpsideCalculation(global::System.String sECURITY_ID, Nullable<global::System.Int32> dATA_ID, global::System.String dATA_SOURCE)
        {
            ObjectParameter sECURITY_IDParameter;
            if (sECURITY_ID != null)
            {
                sECURITY_IDParameter = new ObjectParameter("SECURITY_ID", sECURITY_ID);
            }
            else
            {
                sECURITY_IDParameter = new ObjectParameter("SECURITY_ID", typeof(global::System.String));
            }
    
            ObjectParameter dATA_IDParameter;
            if (dATA_ID.HasValue)
            {
                dATA_IDParameter = new ObjectParameter("DATA_ID", dATA_ID);
            }
            else
            {
                dATA_IDParameter = new ObjectParameter("DATA_ID", typeof(global::System.Int32));
            }
    
            ObjectParameter dATA_SOURCEParameter;
            if (dATA_SOURCE != null)
            {
                dATA_SOURCEParameter = new ObjectParameter("DATA_SOURCE", dATA_SOURCE);
            }
            else
            {
                dATA_SOURCEParameter = new ObjectParameter("DATA_SOURCE", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Decimal>>("GetAmountForUpsideCalculation", sECURITY_IDParameter, dATA_IDParameter, dATA_SOURCEParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="securityId">No Metadata Documentation available.</param>
        /// <param name="xmlScript">No Metadata Documentation available.</param>
        public ObjectResult<GetFairValueComposition_Result> SaveUpdatedFairValueMeasures(global::System.String securityId, global::System.String xmlScript)
        {
            ObjectParameter securityIdParameter;
            if (securityId != null)
            {
                securityIdParameter = new ObjectParameter("securityId", securityId);
            }
            else
            {
                securityIdParameter = new ObjectParameter("securityId", typeof(global::System.String));
            }
    
            ObjectParameter xmlScriptParameter;
            if (xmlScript != null)
            {
                xmlScriptParameter = new ObjectParameter("xmlScript", xmlScript);
            }
            else
            {
                xmlScriptParameter = new ObjectParameter("xmlScript", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<GetFairValueComposition_Result>("SaveUpdatedFairValueMeasures", securityIdParameter, xmlScriptParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iSSUER_ID">No Metadata Documentation available.</param>
        public ObjectResult<DataPointsModelUploadData> RetrieveDataPointsModelUpload(global::System.String iSSUER_ID)
        {
            ObjectParameter iSSUER_IDParameter;
            if (iSSUER_ID != null)
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", iSSUER_ID);
            }
            else
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<DataPointsModelUploadData>("RetrieveDataPointsModelUpload", iSSUER_IDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iSSUER_ID">No Metadata Documentation available.</param>
        public ObjectResult<INTERNAL_ISSUER> RetrieveCOAType(global::System.String iSSUER_ID)
        {
            ObjectParameter iSSUER_IDParameter;
            if (iSSUER_ID != null)
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", iSSUER_ID);
            }
            else
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<INTERNAL_ISSUER>("RetrieveCOAType", iSSUER_IDParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="iSSUER_ID">No Metadata Documentation available.</param>
        public ObjectResult<INTERNAL_ISSUER> RetrieveCOAType(global::System.String iSSUER_ID, MergeOption mergeOption)
        {
            ObjectParameter iSSUER_IDParameter;
            if (iSSUER_ID != null)
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", iSSUER_ID);
            }
            else
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<INTERNAL_ISSUER>("RetrieveCOAType", mergeOption, iSSUER_IDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<global::System.String> RetrieveDistinctFXRates()
        {
            return base.ExecuteFunction<global::System.String>("RetrieveDistinctFXRates");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="cOA_TYPE">No Metadata Documentation available.</param>
        public ObjectResult<DataPointsModelUploadData> RetrieveCOACodes(global::System.String cOA_TYPE)
        {
            ObjectParameter cOA_TYPEParameter;
            if (cOA_TYPE != null)
            {
                cOA_TYPEParameter = new ObjectParameter("COA_TYPE", cOA_TYPE);
            }
            else
            {
                cOA_TYPEParameter = new ObjectParameter("COA_TYPE", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<DataPointsModelUploadData>("RetrieveCOACodes", cOA_TYPEParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<global::System.String> RetrieveCommodityForecasts()
        {
            return base.ExecuteFunction<global::System.String>("RetrieveCommodityForecasts");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iSSUER_ID">No Metadata Documentation available.</param>
        /// <param name="rOOT_SOURCE">No Metadata Documentation available.</param>
        public ObjectResult<global::System.String> ModelDeleteInteralStatement(global::System.String iSSUER_ID, global::System.String rOOT_SOURCE)
        {
            ObjectParameter iSSUER_IDParameter;
            if (iSSUER_ID != null)
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", iSSUER_ID);
            }
            else
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", typeof(global::System.String));
            }
    
            ObjectParameter rOOT_SOURCEParameter;
            if (rOOT_SOURCE != null)
            {
                rOOT_SOURCEParameter = new ObjectParameter("ROOT_SOURCE", rOOT_SOURCE);
            }
            else
            {
                rOOT_SOURCEParameter = new ObjectParameter("ROOT_SOURCE", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<global::System.String>("ModelDeleteInteralStatement", iSSUER_IDParameter, rOOT_SOURCEParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iSSUER_ID">No Metadata Documentation available.</param>
        /// <param name="rEF_NO">No Metadata Documentation available.</param>
        public int ModelDeleteInternalData(global::System.String iSSUER_ID, global::System.String rEF_NO)
        {
            ObjectParameter iSSUER_IDParameter;
            if (iSSUER_ID != null)
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", iSSUER_ID);
            }
            else
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", typeof(global::System.String));
            }
    
            ObjectParameter rEF_NOParameter;
            if (rEF_NO != null)
            {
                rEF_NOParameter = new ObjectParameter("REF_NO", rEF_NO);
            }
            else
            {
                rEF_NOParameter = new ObjectParameter("REF_NO", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("ModelDeleteInternalData", iSSUER_IDParameter, rEF_NOParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iSSUER_ID">No Metadata Documentation available.</param>
        /// <param name="dATA_SOURCE">No Metadata Documentation available.</param>
        public int ModelDeleteInternalIssuerQuarterlyDistribution(global::System.String iSSUER_ID, global::System.String dATA_SOURCE)
        {
            ObjectParameter iSSUER_IDParameter;
            if (iSSUER_ID != null)
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", iSSUER_ID);
            }
            else
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", typeof(global::System.String));
            }
    
            ObjectParameter dATA_SOURCEParameter;
            if (dATA_SOURCE != null)
            {
                dATA_SOURCEParameter = new ObjectParameter("DATA_SOURCE", dATA_SOURCE);
            }
            else
            {
                dATA_SOURCEParameter = new ObjectParameter("DATA_SOURCE", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("ModelDeleteInternalIssuerQuarterlyDistribution", iSSUER_IDParameter, dATA_SOURCEParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iSSUER_ID">No Metadata Documentation available.</param>
        /// <param name="rEF_NO">No Metadata Documentation available.</param>
        /// <param name="pERIOD_TYPE">No Metadata Documentation available.</param>
        /// <param name="cOA">No Metadata Documentation available.</param>
        /// <param name="aMOUNT">No Metadata Documentation available.</param>
        public int ModelInsertInternalData(global::System.String iSSUER_ID, global::System.String rEF_NO, global::System.String pERIOD_TYPE, global::System.String cOA, Nullable<global::System.Decimal> aMOUNT)
        {
            ObjectParameter iSSUER_IDParameter;
            if (iSSUER_ID != null)
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", iSSUER_ID);
            }
            else
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", typeof(global::System.String));
            }
    
            ObjectParameter rEF_NOParameter;
            if (rEF_NO != null)
            {
                rEF_NOParameter = new ObjectParameter("REF_NO", rEF_NO);
            }
            else
            {
                rEF_NOParameter = new ObjectParameter("REF_NO", typeof(global::System.String));
            }
    
            ObjectParameter pERIOD_TYPEParameter;
            if (pERIOD_TYPE != null)
            {
                pERIOD_TYPEParameter = new ObjectParameter("PERIOD_TYPE", pERIOD_TYPE);
            }
            else
            {
                pERIOD_TYPEParameter = new ObjectParameter("PERIOD_TYPE", typeof(global::System.String));
            }
    
            ObjectParameter cOAParameter;
            if (cOA != null)
            {
                cOAParameter = new ObjectParameter("COA", cOA);
            }
            else
            {
                cOAParameter = new ObjectParameter("COA", typeof(global::System.String));
            }
    
            ObjectParameter aMOUNTParameter;
            if (aMOUNT.HasValue)
            {
                aMOUNTParameter = new ObjectParameter("AMOUNT", aMOUNT);
            }
            else
            {
                aMOUNTParameter = new ObjectParameter("AMOUNT", typeof(global::System.Decimal));
            }
    
            return base.ExecuteFunction("ModelInsertInternalData", iSSUER_IDParameter, rEF_NOParameter, pERIOD_TYPEParameter, cOAParameter, aMOUNTParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iSSUER_ID">No Metadata Documentation available.</param>
        /// <param name="cOA_TYPE">No Metadata Documentation available.</param>
        /// <param name="lASTPRIMARYMODELLOAD">No Metadata Documentation available.</param>
        /// <param name="lASTINDUSTRYMODELLOAD">No Metadata Documentation available.</param>
        public int ModelInsertInternalIssuer(global::System.String iSSUER_ID, global::System.String cOA_TYPE, Nullable<global::System.DateTime> lASTPRIMARYMODELLOAD, Nullable<global::System.DateTime> lASTINDUSTRYMODELLOAD)
        {
            ObjectParameter iSSUER_IDParameter;
            if (iSSUER_ID != null)
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", iSSUER_ID);
            }
            else
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", typeof(global::System.String));
            }
    
            ObjectParameter cOA_TYPEParameter;
            if (cOA_TYPE != null)
            {
                cOA_TYPEParameter = new ObjectParameter("COA_TYPE", cOA_TYPE);
            }
            else
            {
                cOA_TYPEParameter = new ObjectParameter("COA_TYPE", typeof(global::System.String));
            }
    
            ObjectParameter lASTPRIMARYMODELLOADParameter;
            if (lASTPRIMARYMODELLOAD.HasValue)
            {
                lASTPRIMARYMODELLOADParameter = new ObjectParameter("LASTPRIMARYMODELLOAD", lASTPRIMARYMODELLOAD);
            }
            else
            {
                lASTPRIMARYMODELLOADParameter = new ObjectParameter("LASTPRIMARYMODELLOAD", typeof(global::System.DateTime));
            }
    
            ObjectParameter lASTINDUSTRYMODELLOADParameter;
            if (lASTINDUSTRYMODELLOAD.HasValue)
            {
                lASTINDUSTRYMODELLOADParameter = new ObjectParameter("LASTINDUSTRYMODELLOAD", lASTINDUSTRYMODELLOAD);
            }
            else
            {
                lASTINDUSTRYMODELLOADParameter = new ObjectParameter("LASTINDUSTRYMODELLOAD", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction("ModelInsertInternalIssuer", iSSUER_IDParameter, cOA_TYPEParameter, lASTPRIMARYMODELLOADParameter, lASTINDUSTRYMODELLOADParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iSSUER_ID">No Metadata Documentation available.</param>
        /// <param name="dATA_SOURCE">No Metadata Documentation available.</param>
        /// <param name="pERIOD_TYPE">No Metadata Documentation available.</param>
        /// <param name="pERCENTAGE">No Metadata Documentation available.</param>
        /// <param name="lAST_UPDATED">No Metadata Documentation available.</param>
        public int ModelInsertInternalIssuerQuaterelyDistribution(global::System.String iSSUER_ID, global::System.String dATA_SOURCE, global::System.String pERIOD_TYPE, Nullable<global::System.Decimal> pERCENTAGE, Nullable<global::System.DateTime> lAST_UPDATED)
        {
            ObjectParameter iSSUER_IDParameter;
            if (iSSUER_ID != null)
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", iSSUER_ID);
            }
            else
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", typeof(global::System.String));
            }
    
            ObjectParameter dATA_SOURCEParameter;
            if (dATA_SOURCE != null)
            {
                dATA_SOURCEParameter = new ObjectParameter("DATA_SOURCE", dATA_SOURCE);
            }
            else
            {
                dATA_SOURCEParameter = new ObjectParameter("DATA_SOURCE", typeof(global::System.String));
            }
    
            ObjectParameter pERIOD_TYPEParameter;
            if (pERIOD_TYPE != null)
            {
                pERIOD_TYPEParameter = new ObjectParameter("PERIOD_TYPE", pERIOD_TYPE);
            }
            else
            {
                pERIOD_TYPEParameter = new ObjectParameter("PERIOD_TYPE", typeof(global::System.String));
            }
    
            ObjectParameter pERCENTAGEParameter;
            if (pERCENTAGE.HasValue)
            {
                pERCENTAGEParameter = new ObjectParameter("PERCENTAGE", pERCENTAGE);
            }
            else
            {
                pERCENTAGEParameter = new ObjectParameter("PERCENTAGE", typeof(global::System.Decimal));
            }
    
            ObjectParameter lAST_UPDATEDParameter;
            if (lAST_UPDATED.HasValue)
            {
                lAST_UPDATEDParameter = new ObjectParameter("LAST_UPDATED", lAST_UPDATED);
            }
            else
            {
                lAST_UPDATEDParameter = new ObjectParameter("LAST_UPDATED", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction("ModelInsertInternalIssuerQuaterelyDistribution", iSSUER_IDParameter, dATA_SOURCEParameter, pERIOD_TYPEParameter, pERCENTAGEParameter, lAST_UPDATEDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iSSUER_ID">No Metadata Documentation available.</param>
        /// <param name="rEF_NO">No Metadata Documentation available.</param>
        /// <param name="pERIOD_YEAR">No Metadata Documentation available.</param>
        /// <param name="rOOT_SOURCE">No Metadata Documentation available.</param>
        /// <param name="rOOT_SOURCE_DATE">No Metadata Documentation available.</param>
        /// <param name="pERIOD_LENGTH">No Metadata Documentation available.</param>
        /// <param name="pERIOD_END_DATE">No Metadata Documentation available.</param>
        /// <param name="cURRENCY">No Metadata Documentation available.</param>
        /// <param name="aMOUNT_TYPE">No Metadata Documentation available.</param>
        public int ModelInsertInternalStatement(global::System.String iSSUER_ID, global::System.String rEF_NO, Nullable<global::System.Int32> pERIOD_YEAR, global::System.String rOOT_SOURCE, Nullable<global::System.DateTime> rOOT_SOURCE_DATE, Nullable<global::System.Int32> pERIOD_LENGTH, Nullable<global::System.DateTime> pERIOD_END_DATE, global::System.String cURRENCY, global::System.String aMOUNT_TYPE)
        {
            ObjectParameter iSSUER_IDParameter;
            if (iSSUER_ID != null)
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", iSSUER_ID);
            }
            else
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", typeof(global::System.String));
            }
    
            ObjectParameter rEF_NOParameter;
            if (rEF_NO != null)
            {
                rEF_NOParameter = new ObjectParameter("REF_NO", rEF_NO);
            }
            else
            {
                rEF_NOParameter = new ObjectParameter("REF_NO", typeof(global::System.String));
            }
    
            ObjectParameter pERIOD_YEARParameter;
            if (pERIOD_YEAR.HasValue)
            {
                pERIOD_YEARParameter = new ObjectParameter("PERIOD_YEAR", pERIOD_YEAR);
            }
            else
            {
                pERIOD_YEARParameter = new ObjectParameter("PERIOD_YEAR", typeof(global::System.Int32));
            }
    
            ObjectParameter rOOT_SOURCEParameter;
            if (rOOT_SOURCE != null)
            {
                rOOT_SOURCEParameter = new ObjectParameter("ROOT_SOURCE", rOOT_SOURCE);
            }
            else
            {
                rOOT_SOURCEParameter = new ObjectParameter("ROOT_SOURCE", typeof(global::System.String));
            }
    
            ObjectParameter rOOT_SOURCE_DATEParameter;
            if (rOOT_SOURCE_DATE.HasValue)
            {
                rOOT_SOURCE_DATEParameter = new ObjectParameter("ROOT_SOURCE_DATE", rOOT_SOURCE_DATE);
            }
            else
            {
                rOOT_SOURCE_DATEParameter = new ObjectParameter("ROOT_SOURCE_DATE", typeof(global::System.DateTime));
            }
    
            ObjectParameter pERIOD_LENGTHParameter;
            if (pERIOD_LENGTH.HasValue)
            {
                pERIOD_LENGTHParameter = new ObjectParameter("PERIOD_LENGTH", pERIOD_LENGTH);
            }
            else
            {
                pERIOD_LENGTHParameter = new ObjectParameter("PERIOD_LENGTH", typeof(global::System.Int32));
            }
    
            ObjectParameter pERIOD_END_DATEParameter;
            if (pERIOD_END_DATE.HasValue)
            {
                pERIOD_END_DATEParameter = new ObjectParameter("PERIOD_END_DATE", pERIOD_END_DATE);
            }
            else
            {
                pERIOD_END_DATEParameter = new ObjectParameter("PERIOD_END_DATE", typeof(global::System.DateTime));
            }
    
            ObjectParameter cURRENCYParameter;
            if (cURRENCY != null)
            {
                cURRENCYParameter = new ObjectParameter("CURRENCY", cURRENCY);
            }
            else
            {
                cURRENCYParameter = new ObjectParameter("CURRENCY", typeof(global::System.String));
            }
    
            ObjectParameter aMOUNT_TYPEParameter;
            if (aMOUNT_TYPE != null)
            {
                aMOUNT_TYPEParameter = new ObjectParameter("AMOUNT_TYPE", aMOUNT_TYPE);
            }
            else
            {
                aMOUNT_TYPEParameter = new ObjectParameter("AMOUNT_TYPE", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("ModelInsertInternalStatement", iSSUER_IDParameter, rEF_NOParameter, pERIOD_YEARParameter, rOOT_SOURCEParameter, rOOT_SOURCE_DATEParameter, pERIOD_LENGTHParameter, pERIOD_END_DATEParameter, cURRENCYParameter, aMOUNT_TYPEParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iSSUER_ID">No Metadata Documentation available.</param>
        public ObjectResult<INTERNAL_ISSUER> ModelRetrieveInternalIssuer(global::System.String iSSUER_ID)
        {
            ObjectParameter iSSUER_IDParameter;
            if (iSSUER_ID != null)
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", iSSUER_ID);
            }
            else
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<INTERNAL_ISSUER>("ModelRetrieveInternalIssuer", iSSUER_IDParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="iSSUER_ID">No Metadata Documentation available.</param>
        public ObjectResult<INTERNAL_ISSUER> ModelRetrieveInternalIssuer(global::System.String iSSUER_ID, MergeOption mergeOption)
        {
            ObjectParameter iSSUER_IDParameter;
            if (iSSUER_ID != null)
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", iSSUER_ID);
            }
            else
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<INTERNAL_ISSUER>("ModelRetrieveInternalIssuer", mergeOption, iSSUER_IDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iSSUER_ID">No Metadata Documentation available.</param>
        public int ModelDeleteInternalIssuer(global::System.String iSSUER_ID)
        {
            ObjectParameter iSSUER_IDParameter;
            if (iSSUER_ID != null)
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", iSSUER_ID);
            }
            else
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("ModelDeleteInternalIssuer", iSSUER_IDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iSSUER_ID">No Metadata Documentation available.</param>
        /// <param name="rEF_NO">No Metadata Documentation available.</param>
        /// <param name="cOMMODITY_ID">No Metadata Documentation available.</param>
        /// <param name="aMOUNT">No Metadata Documentation available.</param>
        public int ModelInsertInternalCommodityAssumptions(global::System.String iSSUER_ID, global::System.String rEF_NO, global::System.String cOMMODITY_ID, Nullable<global::System.Decimal> aMOUNT)
        {
            ObjectParameter iSSUER_IDParameter;
            if (iSSUER_ID != null)
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", iSSUER_ID);
            }
            else
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", typeof(global::System.String));
            }
    
            ObjectParameter rEF_NOParameter;
            if (rEF_NO != null)
            {
                rEF_NOParameter = new ObjectParameter("REF_NO", rEF_NO);
            }
            else
            {
                rEF_NOParameter = new ObjectParameter("REF_NO", typeof(global::System.String));
            }
    
            ObjectParameter cOMMODITY_IDParameter;
            if (cOMMODITY_ID != null)
            {
                cOMMODITY_IDParameter = new ObjectParameter("COMMODITY_ID", cOMMODITY_ID);
            }
            else
            {
                cOMMODITY_IDParameter = new ObjectParameter("COMMODITY_ID", typeof(global::System.String));
            }
    
            ObjectParameter aMOUNTParameter;
            if (aMOUNT.HasValue)
            {
                aMOUNTParameter = new ObjectParameter("AMOUNT", aMOUNT);
            }
            else
            {
                aMOUNTParameter = new ObjectParameter("AMOUNT", typeof(global::System.Decimal));
            }
    
            return base.ExecuteFunction("ModelInsertInternalCommodityAssumptions", iSSUER_IDParameter, rEF_NOParameter, cOMMODITY_IDParameter, aMOUNTParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iSSUER_ID">No Metadata Documentation available.</param>
        /// <param name="rEF_NO">No Metadata Documentation available.</param>
        public int ModelDeleteInternalCommodityAssumptions(global::System.String iSSUER_ID, global::System.String rEF_NO)
        {
            ObjectParameter iSSUER_IDParameter;
            if (iSSUER_ID != null)
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", iSSUER_ID);
            }
            else
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", typeof(global::System.String));
            }
    
            ObjectParameter rEF_NOParameter;
            if (rEF_NO != null)
            {
                rEF_NOParameter = new ObjectParameter("REF_NO", rEF_NO);
            }
            else
            {
                rEF_NOParameter = new ObjectParameter("REF_NO", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("ModelDeleteInternalCommodityAssumptions", iSSUER_IDParameter, rEF_NOParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iSSUER_ID">No Metadata Documentation available.</param>
        /// <param name="lASTPRIMARYMODELLOAD">No Metadata Documentation available.</param>
        /// <param name="lASTINDUSTRYMODELLOAD">No Metadata Documentation available.</param>
        public int ModelUpdateDataInternalIssuer(global::System.String iSSUER_ID, Nullable<global::System.DateTime> lASTPRIMARYMODELLOAD, Nullable<global::System.DateTime> lASTINDUSTRYMODELLOAD)
        {
            ObjectParameter iSSUER_IDParameter;
            if (iSSUER_ID != null)
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", iSSUER_ID);
            }
            else
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", typeof(global::System.String));
            }
    
            ObjectParameter lASTPRIMARYMODELLOADParameter;
            if (lASTPRIMARYMODELLOAD.HasValue)
            {
                lASTPRIMARYMODELLOADParameter = new ObjectParameter("LASTPRIMARYMODELLOAD", lASTPRIMARYMODELLOAD);
            }
            else
            {
                lASTPRIMARYMODELLOADParameter = new ObjectParameter("LASTPRIMARYMODELLOAD", typeof(global::System.DateTime));
            }
    
            ObjectParameter lASTINDUSTRYMODELLOADParameter;
            if (lASTINDUSTRYMODELLOAD.HasValue)
            {
                lASTINDUSTRYMODELLOADParameter = new ObjectParameter("LASTINDUSTRYMODELLOAD", lASTINDUSTRYMODELLOAD);
            }
            else
            {
                lASTINDUSTRYMODELLOADParameter = new ObjectParameter("LASTINDUSTRYMODELLOAD", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction("ModelUpdateDataInternalIssuer", iSSUER_IDParameter, lASTPRIMARYMODELLOADParameter, lASTINDUSTRYMODELLOADParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iSSUER_ID">No Metadata Documentation available.</param>
        /// <param name="dATA_SOURCE">No Metadata Documentation available.</param>
        public int SET_INTERIM_AMOUNTS(global::System.String iSSUER_ID, global::System.String dATA_SOURCE)
        {
            ObjectParameter iSSUER_IDParameter;
            if (iSSUER_ID != null)
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", iSSUER_ID);
            }
            else
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", typeof(global::System.String));
            }
    
            ObjectParameter dATA_SOURCEParameter;
            if (dATA_SOURCE != null)
            {
                dATA_SOURCEParameter = new ObjectParameter("DATA_SOURCE", dATA_SOURCE);
            }
            else
            {
                dATA_SOURCEParameter = new ObjectParameter("DATA_SOURCE", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("SET_INTERIM_AMOUNTS", iSSUER_IDParameter, dATA_SOURCEParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iSSUER_ID">No Metadata Documentation available.</param>
        /// <param name="cALC_LOG">No Metadata Documentation available.</param>
        /// <param name="vERBOSE">No Metadata Documentation available.</param>
        /// <param name="rUN_MODE">No Metadata Documentation available.</param>
        /// <param name="sTAGE">No Metadata Documentation available.</param>
        public int Get_Data(global::System.String iSSUER_ID, global::System.String cALC_LOG, global::System.String vERBOSE, global::System.String rUN_MODE, global::System.String sTAGE)
        {
            ObjectParameter iSSUER_IDParameter;
            if (iSSUER_ID != null)
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", iSSUER_ID);
            }
            else
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", typeof(global::System.String));
            }
    
            ObjectParameter cALC_LOGParameter;
            if (cALC_LOG != null)
            {
                cALC_LOGParameter = new ObjectParameter("CALC_LOG", cALC_LOG);
            }
            else
            {
                cALC_LOGParameter = new ObjectParameter("CALC_LOG", typeof(global::System.String));
            }
    
            ObjectParameter vERBOSEParameter;
            if (vERBOSE != null)
            {
                vERBOSEParameter = new ObjectParameter("VERBOSE", vERBOSE);
            }
            else
            {
                vERBOSEParameter = new ObjectParameter("VERBOSE", typeof(global::System.String));
            }
    
            ObjectParameter rUN_MODEParameter;
            if (rUN_MODE != null)
            {
                rUN_MODEParameter = new ObjectParameter("RUN_MODE", rUN_MODE);
            }
            else
            {
                rUN_MODEParameter = new ObjectParameter("RUN_MODE", typeof(global::System.String));
            }
    
            ObjectParameter sTAGEParameter;
            if (sTAGE != null)
            {
                sTAGEParameter = new ObjectParameter("STAGE", sTAGE);
            }
            else
            {
                sTAGEParameter = new ObjectParameter("STAGE", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("Get_Data", iSSUER_IDParameter, cALC_LOGParameter, vERBOSEParameter, rUN_MODEParameter, sTAGEParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iSSUER_ID">No Metadata Documentation available.</param>
        /// <param name="rOOT_SOURCE">No Metadata Documentation available.</param>
        /// <param name="uSER_NAME">No Metadata Documentation available.</param>
        /// <param name="lOAD_TIME">No Metadata Documentation available.</param>
        /// <param name="dOCUMENT_ID">No Metadata Documentation available.</param>
        public int ModelInsertInternalModelLoadData(global::System.String iSSUER_ID, global::System.String rOOT_SOURCE, global::System.String uSER_NAME, Nullable<global::System.DateTime> lOAD_TIME, Nullable<global::System.Int64> dOCUMENT_ID)
        {
            ObjectParameter iSSUER_IDParameter;
            if (iSSUER_ID != null)
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", iSSUER_ID);
            }
            else
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", typeof(global::System.String));
            }
    
            ObjectParameter rOOT_SOURCEParameter;
            if (rOOT_SOURCE != null)
            {
                rOOT_SOURCEParameter = new ObjectParameter("ROOT_SOURCE", rOOT_SOURCE);
            }
            else
            {
                rOOT_SOURCEParameter = new ObjectParameter("ROOT_SOURCE", typeof(global::System.String));
            }
    
            ObjectParameter uSER_NAMEParameter;
            if (uSER_NAME != null)
            {
                uSER_NAMEParameter = new ObjectParameter("USER_NAME", uSER_NAME);
            }
            else
            {
                uSER_NAMEParameter = new ObjectParameter("USER_NAME", typeof(global::System.String));
            }
    
            ObjectParameter lOAD_TIMEParameter;
            if (lOAD_TIME.HasValue)
            {
                lOAD_TIMEParameter = new ObjectParameter("LOAD_TIME", lOAD_TIME);
            }
            else
            {
                lOAD_TIMEParameter = new ObjectParameter("LOAD_TIME", typeof(global::System.DateTime));
            }
    
            ObjectParameter dOCUMENT_IDParameter;
            if (dOCUMENT_ID.HasValue)
            {
                dOCUMENT_IDParameter = new ObjectParameter("DOCUMENT_ID", dOCUMENT_ID);
            }
            else
            {
                dOCUMENT_IDParameter = new ObjectParameter("DOCUMENT_ID", typeof(global::System.Int64));
            }
    
            return base.ExecuteFunction("ModelInsertInternalModelLoadData", iSSUER_IDParameter, rOOT_SOURCEParameter, uSER_NAMEParameter, lOAD_TIMEParameter, dOCUMENT_IDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="lOAD_ID">No Metadata Documentation available.</param>
        /// <param name="iSSUER_ID">No Metadata Documentation available.</param>
        /// <param name="rOOT_SOURCE">No Metadata Documentation available.</param>
        /// <param name="uSER_NAME">No Metadata Documentation available.</param>
        /// <param name="lOAD_TIME">No Metadata Documentation available.</param>
        /// <param name="dOCUMENT_ID">No Metadata Documentation available.</param>
        public int ModelUpdateInternalModelLoadData(Nullable<global::System.Int32> lOAD_ID, global::System.String iSSUER_ID, global::System.String rOOT_SOURCE, global::System.String uSER_NAME, Nullable<global::System.DateTime> lOAD_TIME, Nullable<global::System.Int64> dOCUMENT_ID)
        {
            ObjectParameter lOAD_IDParameter;
            if (lOAD_ID.HasValue)
            {
                lOAD_IDParameter = new ObjectParameter("LOAD_ID", lOAD_ID);
            }
            else
            {
                lOAD_IDParameter = new ObjectParameter("LOAD_ID", typeof(global::System.Int32));
            }
    
            ObjectParameter iSSUER_IDParameter;
            if (iSSUER_ID != null)
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", iSSUER_ID);
            }
            else
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", typeof(global::System.String));
            }
    
            ObjectParameter rOOT_SOURCEParameter;
            if (rOOT_SOURCE != null)
            {
                rOOT_SOURCEParameter = new ObjectParameter("ROOT_SOURCE", rOOT_SOURCE);
            }
            else
            {
                rOOT_SOURCEParameter = new ObjectParameter("ROOT_SOURCE", typeof(global::System.String));
            }
    
            ObjectParameter uSER_NAMEParameter;
            if (uSER_NAME != null)
            {
                uSER_NAMEParameter = new ObjectParameter("USER_NAME", uSER_NAME);
            }
            else
            {
                uSER_NAMEParameter = new ObjectParameter("USER_NAME", typeof(global::System.String));
            }
    
            ObjectParameter lOAD_TIMEParameter;
            if (lOAD_TIME.HasValue)
            {
                lOAD_TIMEParameter = new ObjectParameter("LOAD_TIME", lOAD_TIME);
            }
            else
            {
                lOAD_TIMEParameter = new ObjectParameter("LOAD_TIME", typeof(global::System.DateTime));
            }
    
            ObjectParameter dOCUMENT_IDParameter;
            if (dOCUMENT_ID.HasValue)
            {
                dOCUMENT_IDParameter = new ObjectParameter("DOCUMENT_ID", dOCUMENT_ID);
            }
            else
            {
                dOCUMENT_IDParameter = new ObjectParameter("DOCUMENT_ID", typeof(global::System.Int64));
            }
    
            return base.ExecuteFunction("ModelUpdateInternalModelLoadData", lOAD_IDParameter, iSSUER_IDParameter, rOOT_SOURCEParameter, uSER_NAMEParameter, lOAD_TIMEParameter, dOCUMENT_IDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iSSUER_ID">No Metadata Documentation available.</param>
        /// <param name="rOOT_SOURCE">No Metadata Documentation available.</param>
        /// <param name="lOAD_TIME">No Metadata Documentation available.</param>
        public ObjectResult<Internal_Model_Load> ModelRetrieveinternalModelLoadData(global::System.String iSSUER_ID, global::System.String rOOT_SOURCE, Nullable<global::System.DateTime> lOAD_TIME)
        {
            ObjectParameter iSSUER_IDParameter;
            if (iSSUER_ID != null)
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", iSSUER_ID);
            }
            else
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", typeof(global::System.String));
            }
    
            ObjectParameter rOOT_SOURCEParameter;
            if (rOOT_SOURCE != null)
            {
                rOOT_SOURCEParameter = new ObjectParameter("ROOT_SOURCE", rOOT_SOURCE);
            }
            else
            {
                rOOT_SOURCEParameter = new ObjectParameter("ROOT_SOURCE", typeof(global::System.String));
            }
    
            ObjectParameter lOAD_TIMEParameter;
            if (lOAD_TIME.HasValue)
            {
                lOAD_TIMEParameter = new ObjectParameter("LOAD_TIME", lOAD_TIME);
            }
            else
            {
                lOAD_TIMEParameter = new ObjectParameter("LOAD_TIME", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction<Internal_Model_Load>("ModelRetrieveinternalModelLoadData", iSSUER_IDParameter, rOOT_SOURCEParameter, lOAD_TIMEParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<TrackedCOA> ModelRetrieveTrackCOA()
        {
            return base.ExecuteFunction<TrackedCOA>("ModelRetrieveTrackCOA");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iSSUER_ID">No Metadata Documentation available.</param>
        /// <param name="rOOT_SOURCE">No Metadata Documentation available.</param>
        /// <param name="lOAD_ID">No Metadata Documentation available.</param>
        /// <param name="cURRENCY">No Metadata Documentation available.</param>
        /// <param name="cOA">No Metadata Documentation available.</param>
        /// <param name="pERIOD_YEAR">No Metadata Documentation available.</param>
        /// <param name="pERIOD_END_DATE">No Metadata Documentation available.</param>
        /// <param name="sTART_DATE">No Metadata Documentation available.</param>
        /// <param name="eND_DATE">No Metadata Documentation available.</param>
        /// <param name="aMOUNT">No Metadata Documentation available.</param>
        /// <param name="uNITS">No Metadata Documentation available.</param>
        public int ModelInsertInternalCOAChanges(global::System.String iSSUER_ID, global::System.String rOOT_SOURCE, Nullable<global::System.Int64> lOAD_ID, global::System.String cURRENCY, global::System.String cOA, Nullable<global::System.Int32> pERIOD_YEAR, Nullable<global::System.DateTime> pERIOD_END_DATE, Nullable<global::System.DateTime> sTART_DATE, Nullable<global::System.DateTime> eND_DATE, Nullable<global::System.Decimal> aMOUNT, global::System.String uNITS)
        {
            ObjectParameter iSSUER_IDParameter;
            if (iSSUER_ID != null)
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", iSSUER_ID);
            }
            else
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", typeof(global::System.String));
            }
    
            ObjectParameter rOOT_SOURCEParameter;
            if (rOOT_SOURCE != null)
            {
                rOOT_SOURCEParameter = new ObjectParameter("ROOT_SOURCE", rOOT_SOURCE);
            }
            else
            {
                rOOT_SOURCEParameter = new ObjectParameter("ROOT_SOURCE", typeof(global::System.String));
            }
    
            ObjectParameter lOAD_IDParameter;
            if (lOAD_ID.HasValue)
            {
                lOAD_IDParameter = new ObjectParameter("LOAD_ID", lOAD_ID);
            }
            else
            {
                lOAD_IDParameter = new ObjectParameter("LOAD_ID", typeof(global::System.Int64));
            }
    
            ObjectParameter cURRENCYParameter;
            if (cURRENCY != null)
            {
                cURRENCYParameter = new ObjectParameter("CURRENCY", cURRENCY);
            }
            else
            {
                cURRENCYParameter = new ObjectParameter("CURRENCY", typeof(global::System.String));
            }
    
            ObjectParameter cOAParameter;
            if (cOA != null)
            {
                cOAParameter = new ObjectParameter("COA", cOA);
            }
            else
            {
                cOAParameter = new ObjectParameter("COA", typeof(global::System.String));
            }
    
            ObjectParameter pERIOD_YEARParameter;
            if (pERIOD_YEAR.HasValue)
            {
                pERIOD_YEARParameter = new ObjectParameter("PERIOD_YEAR", pERIOD_YEAR);
            }
            else
            {
                pERIOD_YEARParameter = new ObjectParameter("PERIOD_YEAR", typeof(global::System.Int32));
            }
    
            ObjectParameter pERIOD_END_DATEParameter;
            if (pERIOD_END_DATE.HasValue)
            {
                pERIOD_END_DATEParameter = new ObjectParameter("PERIOD_END_DATE", pERIOD_END_DATE);
            }
            else
            {
                pERIOD_END_DATEParameter = new ObjectParameter("PERIOD_END_DATE", typeof(global::System.DateTime));
            }
    
            ObjectParameter sTART_DATEParameter;
            if (sTART_DATE.HasValue)
            {
                sTART_DATEParameter = new ObjectParameter("START_DATE", sTART_DATE);
            }
            else
            {
                sTART_DATEParameter = new ObjectParameter("START_DATE", typeof(global::System.DateTime));
            }
    
            ObjectParameter eND_DATEParameter;
            if (eND_DATE.HasValue)
            {
                eND_DATEParameter = new ObjectParameter("END_DATE", eND_DATE);
            }
            else
            {
                eND_DATEParameter = new ObjectParameter("END_DATE", typeof(global::System.DateTime));
            }
    
            ObjectParameter aMOUNTParameter;
            if (aMOUNT.HasValue)
            {
                aMOUNTParameter = new ObjectParameter("AMOUNT", aMOUNT);
            }
            else
            {
                aMOUNTParameter = new ObjectParameter("AMOUNT", typeof(global::System.Decimal));
            }
    
            ObjectParameter uNITSParameter;
            if (uNITS != null)
            {
                uNITSParameter = new ObjectParameter("UNITS", uNITS);
            }
            else
            {
                uNITSParameter = new ObjectParameter("UNITS", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("ModelInsertInternalCOAChanges", iSSUER_IDParameter, rOOT_SOURCEParameter, lOAD_IDParameter, cURRENCYParameter, cOAParameter, pERIOD_YEARParameter, pERIOD_END_DATEParameter, sTART_DATEParameter, eND_DATEParameter, aMOUNTParameter, uNITSParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iSSUER_ID">No Metadata Documentation available.</param>
        /// <param name="rOOT_SOURCE">No Metadata Documentation available.</param>
        /// <param name="cURRENCY">No Metadata Documentation available.</param>
        /// <param name="cOA">No Metadata Documentation available.</param>
        /// <param name="pERIOD_YEAR">No Metadata Documentation available.</param>
        /// <param name="tIME_STAMP">No Metadata Documentation available.</param>
        public int ModelUpdateInternalCOAChanges(global::System.String iSSUER_ID, global::System.String rOOT_SOURCE, global::System.String cURRENCY, global::System.String cOA, Nullable<global::System.Int32> pERIOD_YEAR, Nullable<global::System.DateTime> tIME_STAMP)
        {
            ObjectParameter iSSUER_IDParameter;
            if (iSSUER_ID != null)
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", iSSUER_ID);
            }
            else
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", typeof(global::System.String));
            }
    
            ObjectParameter rOOT_SOURCEParameter;
            if (rOOT_SOURCE != null)
            {
                rOOT_SOURCEParameter = new ObjectParameter("ROOT_SOURCE", rOOT_SOURCE);
            }
            else
            {
                rOOT_SOURCEParameter = new ObjectParameter("ROOT_SOURCE", typeof(global::System.String));
            }
    
            ObjectParameter cURRENCYParameter;
            if (cURRENCY != null)
            {
                cURRENCYParameter = new ObjectParameter("CURRENCY", cURRENCY);
            }
            else
            {
                cURRENCYParameter = new ObjectParameter("CURRENCY", typeof(global::System.String));
            }
    
            ObjectParameter cOAParameter;
            if (cOA != null)
            {
                cOAParameter = new ObjectParameter("COA", cOA);
            }
            else
            {
                cOAParameter = new ObjectParameter("COA", typeof(global::System.String));
            }
    
            ObjectParameter pERIOD_YEARParameter;
            if (pERIOD_YEAR.HasValue)
            {
                pERIOD_YEARParameter = new ObjectParameter("PERIOD_YEAR", pERIOD_YEAR);
            }
            else
            {
                pERIOD_YEARParameter = new ObjectParameter("PERIOD_YEAR", typeof(global::System.Int32));
            }
    
            ObjectParameter tIME_STAMPParameter;
            if (tIME_STAMP.HasValue)
            {
                tIME_STAMPParameter = new ObjectParameter("TIME_STAMP", tIME_STAMP);
            }
            else
            {
                tIME_STAMPParameter = new ObjectParameter("TIME_STAMP", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction("ModelUpdateInternalCOAChanges", iSSUER_IDParameter, rOOT_SOURCEParameter, cURRENCYParameter, cOAParameter, pERIOD_YEARParameter, tIME_STAMPParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iSSUER_ID">No Metadata Documentation available.</param>
        /// <param name="rOOT_SOURCE">No Metadata Documentation available.</param>
        /// <param name="cOA">No Metadata Documentation available.</param>
        /// <param name="pERIOD_YEAR">No Metadata Documentation available.</param>
        /// <param name="cURRENCY">No Metadata Documentation available.</param>
        public ObjectResult<INTERNAL_COA_CHANGES> ModelRetrieveInternalCOAChanges(global::System.String iSSUER_ID, global::System.String rOOT_SOURCE, global::System.String cOA, Nullable<global::System.Int32> pERIOD_YEAR, global::System.String cURRENCY)
        {
            ObjectParameter iSSUER_IDParameter;
            if (iSSUER_ID != null)
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", iSSUER_ID);
            }
            else
            {
                iSSUER_IDParameter = new ObjectParameter("ISSUER_ID", typeof(global::System.String));
            }
    
            ObjectParameter rOOT_SOURCEParameter;
            if (rOOT_SOURCE != null)
            {
                rOOT_SOURCEParameter = new ObjectParameter("ROOT_SOURCE", rOOT_SOURCE);
            }
            else
            {
                rOOT_SOURCEParameter = new ObjectParameter("ROOT_SOURCE", typeof(global::System.String));
            }
    
            ObjectParameter cOAParameter;
            if (cOA != null)
            {
                cOAParameter = new ObjectParameter("COA", cOA);
            }
            else
            {
                cOAParameter = new ObjectParameter("COA", typeof(global::System.String));
            }
    
            ObjectParameter pERIOD_YEARParameter;
            if (pERIOD_YEAR.HasValue)
            {
                pERIOD_YEARParameter = new ObjectParameter("PERIOD_YEAR", pERIOD_YEAR);
            }
            else
            {
                pERIOD_YEARParameter = new ObjectParameter("PERIOD_YEAR", typeof(global::System.Int32));
            }
    
            ObjectParameter cURRENCYParameter;
            if (cURRENCY != null)
            {
                cURRENCYParameter = new ObjectParameter("CURRENCY", cURRENCY);
            }
            else
            {
                cURRENCYParameter = new ObjectParameter("CURRENCY", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<INTERNAL_COA_CHANGES>("ModelRetrieveInternalCOAChanges", iSSUER_IDParameter, rOOT_SOURCEParameter, cOAParameter, pERIOD_YEARParameter, cURRENCYParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="sECURITY_ID">No Metadata Documentation available.</param>
        /// <param name="pFV_MEASURE">No Metadata Documentation available.</param>
        /// <param name="pFV_MEASURE_VALUE">No Metadata Documentation available.</param>
        /// <param name="fV_BUY">No Metadata Documentation available.</param>
        /// <param name="fV_SELL">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> SetFairValue(global::System.String sECURITY_ID, global::System.String pFV_MEASURE, Nullable<global::System.Decimal> pFV_MEASURE_VALUE, Nullable<global::System.Decimal> fV_BUY, Nullable<global::System.Decimal> fV_SELL)
        {
            ObjectParameter sECURITY_IDParameter;
            if (sECURITY_ID != null)
            {
                sECURITY_IDParameter = new ObjectParameter("SECURITY_ID", sECURITY_ID);
            }
            else
            {
                sECURITY_IDParameter = new ObjectParameter("SECURITY_ID", typeof(global::System.String));
            }
    
            ObjectParameter pFV_MEASUREParameter;
            if (pFV_MEASURE != null)
            {
                pFV_MEASUREParameter = new ObjectParameter("PFV_MEASURE", pFV_MEASURE);
            }
            else
            {
                pFV_MEASUREParameter = new ObjectParameter("PFV_MEASURE", typeof(global::System.String));
            }
    
            ObjectParameter pFV_MEASURE_VALUEParameter;
            if (pFV_MEASURE_VALUE.HasValue)
            {
                pFV_MEASURE_VALUEParameter = new ObjectParameter("PFV_MEASURE_VALUE", pFV_MEASURE_VALUE);
            }
            else
            {
                pFV_MEASURE_VALUEParameter = new ObjectParameter("PFV_MEASURE_VALUE", typeof(global::System.Decimal));
            }
    
            ObjectParameter fV_BUYParameter;
            if (fV_BUY.HasValue)
            {
                fV_BUYParameter = new ObjectParameter("FV_BUY", fV_BUY);
            }
            else
            {
                fV_BUYParameter = new ObjectParameter("FV_BUY", typeof(global::System.Decimal));
            }
    
            ObjectParameter fV_SELLParameter;
            if (fV_SELL.HasValue)
            {
                fV_SELLParameter = new ObjectParameter("FV_SELL", fV_SELL);
            }
            else
            {
                fV_SELLParameter = new ObjectParameter("FV_SELL", typeof(global::System.Decimal));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("SetFairValue", sECURITY_IDParameter, pFV_MEASUREParameter, pFV_MEASURE_VALUEParameter, fV_BUYParameter, fV_SELLParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="sECURITY_ID">No Metadata Documentation available.</param>
        /// <param name="vALUE_TYPE">No Metadata Documentation available.</param>
        /// <param name="fV_MEASURE">No Metadata Documentation available.</param>
        /// <param name="fV_BUY">No Metadata Documentation available.</param>
        /// <param name="fV_SELL">No Metadata Documentation available.</param>
        /// <param name="cURRENT_MEASURE_VALUE">No Metadata Documentation available.</param>
        /// <param name="uPSIDE">No Metadata Documentation available.</param>
        /// <param name="uPDATED">No Metadata Documentation available.</param>
        /// <param name="pERIOD_TYPE">No Metadata Documentation available.</param>
        /// <param name="pERIOD_YEAR">No Metadata Documentation available.</param>
        public int InsertDCFFairValue(global::System.String sECURITY_ID, global::System.String vALUE_TYPE, Nullable<global::System.Int32> fV_MEASURE, Nullable<global::System.Decimal> fV_BUY, Nullable<global::System.Decimal> fV_SELL, Nullable<global::System.Decimal> cURRENT_MEASURE_VALUE, Nullable<global::System.Decimal> uPSIDE, Nullable<global::System.DateTime> uPDATED, global::System.String pERIOD_TYPE, Nullable<global::System.Int32> pERIOD_YEAR)
        {
            ObjectParameter sECURITY_IDParameter;
            if (sECURITY_ID != null)
            {
                sECURITY_IDParameter = new ObjectParameter("SECURITY_ID", sECURITY_ID);
            }
            else
            {
                sECURITY_IDParameter = new ObjectParameter("SECURITY_ID", typeof(global::System.String));
            }
    
            ObjectParameter vALUE_TYPEParameter;
            if (vALUE_TYPE != null)
            {
                vALUE_TYPEParameter = new ObjectParameter("VALUE_TYPE", vALUE_TYPE);
            }
            else
            {
                vALUE_TYPEParameter = new ObjectParameter("VALUE_TYPE", typeof(global::System.String));
            }
    
            ObjectParameter fV_MEASUREParameter;
            if (fV_MEASURE.HasValue)
            {
                fV_MEASUREParameter = new ObjectParameter("FV_MEASURE", fV_MEASURE);
            }
            else
            {
                fV_MEASUREParameter = new ObjectParameter("FV_MEASURE", typeof(global::System.Int32));
            }
    
            ObjectParameter fV_BUYParameter;
            if (fV_BUY.HasValue)
            {
                fV_BUYParameter = new ObjectParameter("FV_BUY", fV_BUY);
            }
            else
            {
                fV_BUYParameter = new ObjectParameter("FV_BUY", typeof(global::System.Decimal));
            }
    
            ObjectParameter fV_SELLParameter;
            if (fV_SELL.HasValue)
            {
                fV_SELLParameter = new ObjectParameter("FV_SELL", fV_SELL);
            }
            else
            {
                fV_SELLParameter = new ObjectParameter("FV_SELL", typeof(global::System.Decimal));
            }
    
            ObjectParameter cURRENT_MEASURE_VALUEParameter;
            if (cURRENT_MEASURE_VALUE.HasValue)
            {
                cURRENT_MEASURE_VALUEParameter = new ObjectParameter("CURRENT_MEASURE_VALUE", cURRENT_MEASURE_VALUE);
            }
            else
            {
                cURRENT_MEASURE_VALUEParameter = new ObjectParameter("CURRENT_MEASURE_VALUE", typeof(global::System.Decimal));
            }
    
            ObjectParameter uPSIDEParameter;
            if (uPSIDE.HasValue)
            {
                uPSIDEParameter = new ObjectParameter("UPSIDE", uPSIDE);
            }
            else
            {
                uPSIDEParameter = new ObjectParameter("UPSIDE", typeof(global::System.Decimal));
            }
    
            ObjectParameter uPDATEDParameter;
            if (uPDATED.HasValue)
            {
                uPDATEDParameter = new ObjectParameter("UPDATED", uPDATED);
            }
            else
            {
                uPDATEDParameter = new ObjectParameter("UPDATED", typeof(global::System.DateTime));
            }
    
            ObjectParameter pERIOD_TYPEParameter;
            if (pERIOD_TYPE != null)
            {
                pERIOD_TYPEParameter = new ObjectParameter("PERIOD_TYPE", pERIOD_TYPE);
            }
            else
            {
                pERIOD_TYPEParameter = new ObjectParameter("PERIOD_TYPE", typeof(global::System.String));
            }
    
            ObjectParameter pERIOD_YEARParameter;
            if (pERIOD_YEAR.HasValue)
            {
                pERIOD_YEARParameter = new ObjectParameter("PERIOD_YEAR", pERIOD_YEAR);
            }
            else
            {
                pERIOD_YEARParameter = new ObjectParameter("PERIOD_YEAR", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("InsertDCFFairValue", sECURITY_IDParameter, vALUE_TYPEParameter, fV_MEASUREParameter, fV_BUYParameter, fV_SELLParameter, cURRENT_MEASURE_VALUEParameter, uPSIDEParameter, uPDATEDParameter, pERIOD_TYPEParameter, pERIOD_YEARParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="sECURITY_ID">No Metadata Documentation available.</param>
        public int DeleteDCFFairValueData(global::System.String sECURITY_ID)
        {
            ObjectParameter sECURITY_IDParameter;
            if (sECURITY_ID != null)
            {
                sECURITY_IDParameter = new ObjectParameter("SECURITY_ID", sECURITY_ID);
            }
            else
            {
                sECURITY_IDParameter = new ObjectParameter("SECURITY_ID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("DeleteDCFFairValueData", sECURITY_IDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuerIds">No Metadata Documentation available.</param>
        /// <param name="securityIds">No Metadata Documentation available.</param>
        public ObjectResult<PortfolioDetailsExternalData> GetPortfolioDetailsExternalData(global::System.String issuerIds, global::System.String securityIds)
        {
            ObjectParameter issuerIdsParameter;
            if (issuerIds != null)
            {
                issuerIdsParameter = new ObjectParameter("issuerIds", issuerIds);
            }
            else
            {
                issuerIdsParameter = new ObjectParameter("issuerIds", typeof(global::System.String));
            }
    
            ObjectParameter securityIdsParameter;
            if (securityIds != null)
            {
                securityIdsParameter = new ObjectParameter("securityIds", securityIds);
            }
            else
            {
                securityIdsParameter = new ObjectParameter("securityIds", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<PortfolioDetailsExternalData>("GetPortfolioDetailsExternalData", issuerIdsParameter, securityIdsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="sECURITY_IDS">No Metadata Documentation available.</param>
        public ObjectResult<FAIR_VALUE> GetPortfolioDetailsFairValue(global::System.String sECURITY_IDS)
        {
            ObjectParameter sECURITY_IDSParameter;
            if (sECURITY_IDS != null)
            {
                sECURITY_IDSParameter = new ObjectParameter("SECURITY_IDS", sECURITY_IDS);
            }
            else
            {
                sECURITY_IDSParameter = new ObjectParameter("SECURITY_IDS", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<FAIR_VALUE>("GetPortfolioDetailsFairValue", sECURITY_IDSParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="sECURITY_IDS">No Metadata Documentation available.</param>
        public ObjectResult<FAIR_VALUE> GetPortfolioDetailsFairValue(global::System.String sECURITY_IDS, MergeOption mergeOption)
        {
            ObjectParameter sECURITY_IDSParameter;
            if (sECURITY_IDS != null)
            {
                sECURITY_IDSParameter = new ObjectParameter("SECURITY_IDS", sECURITY_IDS);
            }
            else
            {
                sECURITY_IDSParameter = new ObjectParameter("SECURITY_IDS", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<FAIR_VALUE>("GetPortfolioDetailsFairValue", mergeOption, sECURITY_IDSParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<EMSumCountryData> usp_GetCountryDataForEMMarketData()
        {
            return base.ExecuteFunction<EMSumCountryData>("usp_GetCountryDataForEMMarketData");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="securityIdsList">No Metadata Documentation available.</param>
        /// <param name="yearList">No Metadata Documentation available.</param>
        public ObjectResult<EMData> usp_GetDataForEMData(global::System.String securityIdsList, global::System.String yearList)
        {
            ObjectParameter securityIdsListParameter;
            if (securityIdsList != null)
            {
                securityIdsListParameter = new ObjectParameter("securityIdsList", securityIdsList);
            }
            else
            {
                securityIdsListParameter = new ObjectParameter("securityIdsList", typeof(global::System.String));
            }
    
            ObjectParameter yearListParameter;
            if (yearList != null)
            {
                yearListParameter = new ObjectParameter("yearList", yearList);
            }
            else
            {
                yearListParameter = new ObjectParameter("yearList", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<EMData>("usp_GetDataForEMData", securityIdsListParameter, yearListParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="countryCodes">No Metadata Documentation available.</param>
        public ObjectResult<FXData> usp_GetCurrencyDataForCountries(global::System.String countryCodes)
        {
            ObjectParameter countryCodesParameter;
            if (countryCodes != null)
            {
                countryCodesParameter = new ObjectParameter("countryCodes", countryCodes);
            }
            else
            {
                countryCodesParameter = new ObjectParameter("countryCodes", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<FXData>("usp_GetCurrencyDataForCountries", countryCodesParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="countryCodes">No Metadata Documentation available.</param>
        public ObjectResult<MacroEMData> usp_GetMacroDataEMSummary(global::System.String countryCodes)
        {
            ObjectParameter countryCodesParameter;
            if (countryCodes != null)
            {
                countryCodesParameter = new ObjectParameter("countryCodes", countryCodes);
            }
            else
            {
                countryCodesParameter = new ObjectParameter("countryCodes", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<MacroEMData>("usp_GetMacroDataEMSummary", countryCodesParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issuer_id">No Metadata Documentation available.</param>
        /// <param name="viewReportBy">No Metadata Documentation available.</param>
        public ObjectResult<InvestmentContextData> getInvestmentContext(global::System.String issuer_id, global::System.String viewReportBy)
        {
            ObjectParameter issuer_idParameter;
            if (issuer_id != null)
            {
                issuer_idParameter = new ObjectParameter("issuer_id", issuer_id);
            }
            else
            {
                issuer_idParameter = new ObjectParameter("issuer_id", typeof(global::System.String));
            }
    
            ObjectParameter viewReportByParameter;
            if (viewReportBy != null)
            {
                viewReportByParameter = new ObjectParameter("ViewReportBy", viewReportBy);
            }
            else
            {
                viewReportByParameter = new ObjectParameter("ViewReportBy", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<InvestmentContextData>("getInvestmentContext", issuer_idParameter, viewReportByParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="sECURITY_ID">No Metadata Documentation available.</param>
        public ObjectResult<PERIOD_FINANCIALS> GetDCFFairValue(global::System.String sECURITY_ID)
        {
            ObjectParameter sECURITY_IDParameter;
            if (sECURITY_ID != null)
            {
                sECURITY_IDParameter = new ObjectParameter("SECURITY_ID", sECURITY_ID);
            }
            else
            {
                sECURITY_IDParameter = new ObjectParameter("SECURITY_ID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<PERIOD_FINANCIALS>("GetDCFFairValue", sECURITY_IDParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="sECURITY_ID">No Metadata Documentation available.</param>
        public ObjectResult<PERIOD_FINANCIALS> GetDCFFairValue(global::System.String sECURITY_ID, MergeOption mergeOption)
        {
            ObjectParameter sECURITY_IDParameter;
            if (sECURITY_ID != null)
            {
                sECURITY_IDParameter = new ObjectParameter("SECURITY_ID", sECURITY_ID);
            }
            else
            {
                sECURITY_IDParameter = new ObjectParameter("SECURITY_ID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<PERIOD_FINANCIALS>("GetDCFFairValue", mergeOption, sECURITY_IDParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExternalResearchModel", Name="BENCHMARK_MASTER")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BENCHMARK_MASTER : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BENCHMARK_MASTER object.
        /// </summary>
        /// <param name="bENCHMARK_ID">Initial value of the BENCHMARK_ID property.</param>
        /// <param name="bENCHMARK_NAME">Initial value of the BENCHMARK_NAME property.</param>
        public static BENCHMARK_MASTER CreateBENCHMARK_MASTER(global::System.String bENCHMARK_ID, global::System.String bENCHMARK_NAME)
        {
            BENCHMARK_MASTER bENCHMARK_MASTER = new BENCHMARK_MASTER();
            bENCHMARK_MASTER.BENCHMARK_ID = bENCHMARK_ID;
            bENCHMARK_MASTER.BENCHMARK_NAME = bENCHMARK_NAME;
            return bENCHMARK_MASTER;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BENCHMARK_ID
        {
            get
            {
                return _BENCHMARK_ID;
            }
            set
            {
                if (_BENCHMARK_ID != value)
                {
                    OnBENCHMARK_IDChanging(value);
                    ReportPropertyChanging("BENCHMARK_ID");
                    _BENCHMARK_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("BENCHMARK_ID");
                    OnBENCHMARK_IDChanged();
                }
            }
        }
        private global::System.String _BENCHMARK_ID;
        partial void OnBENCHMARK_IDChanging(global::System.String value);
        partial void OnBENCHMARK_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BENCHMARK_NAME
        {
            get
            {
                return _BENCHMARK_NAME;
            }
            set
            {
                if (_BENCHMARK_NAME != value)
                {
                    OnBENCHMARK_NAMEChanging(value);
                    ReportPropertyChanging("BENCHMARK_NAME");
                    _BENCHMARK_NAME = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("BENCHMARK_NAME");
                    OnBENCHMARK_NAMEChanged();
                }
            }
        }
        private global::System.String _BENCHMARK_NAME;
        partial void OnBENCHMARK_NAMEChanging(global::System.String value);
        partial void OnBENCHMARK_NAMEChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExternalResearchModel", Name="COMPOSITE_MASTER")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class COMPOSITE_MASTER : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new COMPOSITE_MASTER object.
        /// </summary>
        /// <param name="cOMPOSITE_ID">Initial value of the COMPOSITE_ID property.</param>
        public static COMPOSITE_MASTER CreateCOMPOSITE_MASTER(global::System.String cOMPOSITE_ID)
        {
            COMPOSITE_MASTER cOMPOSITE_MASTER = new COMPOSITE_MASTER();
            cOMPOSITE_MASTER.COMPOSITE_ID = cOMPOSITE_ID;
            return cOMPOSITE_MASTER;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String COMPOSITE_ID
        {
            get
            {
                return _COMPOSITE_ID;
            }
            set
            {
                if (_COMPOSITE_ID != value)
                {
                    OnCOMPOSITE_IDChanging(value);
                    ReportPropertyChanging("COMPOSITE_ID");
                    _COMPOSITE_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("COMPOSITE_ID");
                    OnCOMPOSITE_IDChanged();
                }
            }
        }
        private global::System.String _COMPOSITE_ID;
        partial void OnCOMPOSITE_IDChanging(global::System.String value);
        partial void OnCOMPOSITE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BENCHMARK_ID
        {
            get
            {
                return _BENCHMARK_ID;
            }
            set
            {
                OnBENCHMARK_IDChanging(value);
                ReportPropertyChanging("BENCHMARK_ID");
                _BENCHMARK_ID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BENCHMARK_ID");
                OnBENCHMARK_IDChanged();
            }
        }
        private global::System.String _BENCHMARK_ID;
        partial void OnBENCHMARK_IDChanging(global::System.String value);
        partial void OnBENCHMARK_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> LOOK_THRU
        {
            get
            {
                return _LOOK_THRU;
            }
            set
            {
                OnLOOK_THRUChanging(value);
                ReportPropertyChanging("LOOK_THRU");
                _LOOK_THRU = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LOOK_THRU");
                OnLOOK_THRUChanged();
            }
        }
        private Nullable<global::System.Boolean> _LOOK_THRU;
        partial void OnLOOK_THRUChanging(Nullable<global::System.Boolean> value);
        partial void OnLOOK_THRUChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> ACTIVE
        {
            get
            {
                return _ACTIVE;
            }
            set
            {
                OnACTIVEChanging(value);
                ReportPropertyChanging("ACTIVE");
                _ACTIVE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ACTIVE");
                OnACTIVEChanged();
            }
        }
        private Nullable<global::System.Boolean> _ACTIVE;
        partial void OnACTIVEChanging(Nullable<global::System.Boolean> value);
        partial void OnACTIVEChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExternalResearchModel", Name="COMPOSITE_MATRIX")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class COMPOSITE_MATRIX : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new COMPOSITE_MATRIX object.
        /// </summary>
        /// <param name="cOMPOSITE">Initial value of the COMPOSITE property.</param>
        /// <param name="pORTFOLIO">Initial value of the PORTFOLIO property.</param>
        public static COMPOSITE_MATRIX CreateCOMPOSITE_MATRIX(global::System.String cOMPOSITE, global::System.String pORTFOLIO)
        {
            COMPOSITE_MATRIX cOMPOSITE_MATRIX = new COMPOSITE_MATRIX();
            cOMPOSITE_MATRIX.COMPOSITE = cOMPOSITE;
            cOMPOSITE_MATRIX.PORTFOLIO = pORTFOLIO;
            return cOMPOSITE_MATRIX;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String COMPOSITE
        {
            get
            {
                return _COMPOSITE;
            }
            set
            {
                if (_COMPOSITE != value)
                {
                    OnCOMPOSITEChanging(value);
                    ReportPropertyChanging("COMPOSITE");
                    _COMPOSITE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("COMPOSITE");
                    OnCOMPOSITEChanged();
                }
            }
        }
        private global::System.String _COMPOSITE;
        partial void OnCOMPOSITEChanging(global::System.String value);
        partial void OnCOMPOSITEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PORTFOLIO
        {
            get
            {
                return _PORTFOLIO;
            }
            set
            {
                if (_PORTFOLIO != value)
                {
                    OnPORTFOLIOChanging(value);
                    ReportPropertyChanging("PORTFOLIO");
                    _PORTFOLIO = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PORTFOLIO");
                    OnPORTFOLIOChanged();
                }
            }
        }
        private global::System.String _PORTFOLIO;
        partial void OnPORTFOLIOChanging(global::System.String value);
        partial void OnPORTFOLIOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> ACTIVE
        {
            get
            {
                return _ACTIVE;
            }
            set
            {
                OnACTIVEChanging(value);
                ReportPropertyChanging("ACTIVE");
                _ACTIVE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ACTIVE");
                OnACTIVEChanged();
            }
        }
        private Nullable<global::System.Boolean> _ACTIVE;
        partial void OnACTIVEChanging(Nullable<global::System.Boolean> value);
        partial void OnACTIVEChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExternalResearchModel", Name="CURRENT_CONSENSUS_ESTIMATES")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CURRENT_CONSENSUS_ESTIMATES : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CURRENT_CONSENSUS_ESTIMATES object.
        /// </summary>
        /// <param name="iSSUER_ID">Initial value of the ISSUER_ID property.</param>
        /// <param name="sECURITY_ID">Initial value of the SECURITY_ID property.</param>
        /// <param name="dATA_SOURCE">Initial value of the DATA_SOURCE property.</param>
        /// <param name="dATA_SOURCE_DATE">Initial value of the DATA_SOURCE_DATE property.</param>
        /// <param name="pERIOD_TYPE">Initial value of the PERIOD_TYPE property.</param>
        /// <param name="pERIOD_YEAR">Initial value of the PERIOD_YEAR property.</param>
        /// <param name="pERIOD_END_DATE">Initial value of the PERIOD_END_DATE property.</param>
        /// <param name="fISCAL_TYPE">Initial value of the FISCAL_TYPE property.</param>
        /// <param name="eSTIMATE_ID">Initial value of the ESTIMATE_ID property.</param>
        /// <param name="cURRENCY">Initial value of the CURRENCY property.</param>
        /// <param name="aMOUNT">Initial value of the AMOUNT property.</param>
        /// <param name="nUMBER_OF_ESTIMATES">Initial value of the NUMBER_OF_ESTIMATES property.</param>
        /// <param name="hIGH">Initial value of the HIGH property.</param>
        /// <param name="lOW">Initial value of the LOW property.</param>
        /// <param name="sOURCE_CURRENCY">Initial value of the SOURCE_CURRENCY property.</param>
        /// <param name="sTANDARD_DEVIATION">Initial value of the STANDARD_DEVIATION property.</param>
        /// <param name="aMOUNT_TYPE">Initial value of the AMOUNT_TYPE property.</param>
        public static CURRENT_CONSENSUS_ESTIMATES CreateCURRENT_CONSENSUS_ESTIMATES(global::System.String iSSUER_ID, global::System.String sECURITY_ID, global::System.String dATA_SOURCE, global::System.DateTime dATA_SOURCE_DATE, global::System.String pERIOD_TYPE, global::System.Int32 pERIOD_YEAR, global::System.DateTime pERIOD_END_DATE, global::System.String fISCAL_TYPE, global::System.Int32 eSTIMATE_ID, global::System.String cURRENCY, global::System.Decimal aMOUNT, global::System.Int32 nUMBER_OF_ESTIMATES, global::System.Decimal hIGH, global::System.Decimal lOW, global::System.String sOURCE_CURRENCY, global::System.Decimal sTANDARD_DEVIATION, global::System.String aMOUNT_TYPE)
        {
            CURRENT_CONSENSUS_ESTIMATES cURRENT_CONSENSUS_ESTIMATES = new CURRENT_CONSENSUS_ESTIMATES();
            cURRENT_CONSENSUS_ESTIMATES.ISSUER_ID = iSSUER_ID;
            cURRENT_CONSENSUS_ESTIMATES.SECURITY_ID = sECURITY_ID;
            cURRENT_CONSENSUS_ESTIMATES.DATA_SOURCE = dATA_SOURCE;
            cURRENT_CONSENSUS_ESTIMATES.DATA_SOURCE_DATE = dATA_SOURCE_DATE;
            cURRENT_CONSENSUS_ESTIMATES.PERIOD_TYPE = pERIOD_TYPE;
            cURRENT_CONSENSUS_ESTIMATES.PERIOD_YEAR = pERIOD_YEAR;
            cURRENT_CONSENSUS_ESTIMATES.PERIOD_END_DATE = pERIOD_END_DATE;
            cURRENT_CONSENSUS_ESTIMATES.FISCAL_TYPE = fISCAL_TYPE;
            cURRENT_CONSENSUS_ESTIMATES.ESTIMATE_ID = eSTIMATE_ID;
            cURRENT_CONSENSUS_ESTIMATES.CURRENCY = cURRENCY;
            cURRENT_CONSENSUS_ESTIMATES.AMOUNT = aMOUNT;
            cURRENT_CONSENSUS_ESTIMATES.NUMBER_OF_ESTIMATES = nUMBER_OF_ESTIMATES;
            cURRENT_CONSENSUS_ESTIMATES.HIGH = hIGH;
            cURRENT_CONSENSUS_ESTIMATES.LOW = lOW;
            cURRENT_CONSENSUS_ESTIMATES.SOURCE_CURRENCY = sOURCE_CURRENCY;
            cURRENT_CONSENSUS_ESTIMATES.STANDARD_DEVIATION = sTANDARD_DEVIATION;
            cURRENT_CONSENSUS_ESTIMATES.AMOUNT_TYPE = aMOUNT_TYPE;
            return cURRENT_CONSENSUS_ESTIMATES;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ISSUER_ID
        {
            get
            {
                return _ISSUER_ID;
            }
            set
            {
                if (_ISSUER_ID != value)
                {
                    OnISSUER_IDChanging(value);
                    ReportPropertyChanging("ISSUER_ID");
                    _ISSUER_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ISSUER_ID");
                    OnISSUER_IDChanged();
                }
            }
        }
        private global::System.String _ISSUER_ID;
        partial void OnISSUER_IDChanging(global::System.String value);
        partial void OnISSUER_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SECURITY_ID
        {
            get
            {
                return _SECURITY_ID;
            }
            set
            {
                if (_SECURITY_ID != value)
                {
                    OnSECURITY_IDChanging(value);
                    ReportPropertyChanging("SECURITY_ID");
                    _SECURITY_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SECURITY_ID");
                    OnSECURITY_IDChanged();
                }
            }
        }
        private global::System.String _SECURITY_ID;
        partial void OnSECURITY_IDChanging(global::System.String value);
        partial void OnSECURITY_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DATA_SOURCE
        {
            get
            {
                return _DATA_SOURCE;
            }
            set
            {
                if (_DATA_SOURCE != value)
                {
                    OnDATA_SOURCEChanging(value);
                    ReportPropertyChanging("DATA_SOURCE");
                    _DATA_SOURCE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DATA_SOURCE");
                    OnDATA_SOURCEChanged();
                }
            }
        }
        private global::System.String _DATA_SOURCE;
        partial void OnDATA_SOURCEChanging(global::System.String value);
        partial void OnDATA_SOURCEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DATA_SOURCE_DATE
        {
            get
            {
                return _DATA_SOURCE_DATE;
            }
            set
            {
                if (_DATA_SOURCE_DATE != value)
                {
                    OnDATA_SOURCE_DATEChanging(value);
                    ReportPropertyChanging("DATA_SOURCE_DATE");
                    _DATA_SOURCE_DATE = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DATA_SOURCE_DATE");
                    OnDATA_SOURCE_DATEChanged();
                }
            }
        }
        private global::System.DateTime _DATA_SOURCE_DATE;
        partial void OnDATA_SOURCE_DATEChanging(global::System.DateTime value);
        partial void OnDATA_SOURCE_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PERIOD_TYPE
        {
            get
            {
                return _PERIOD_TYPE;
            }
            set
            {
                if (_PERIOD_TYPE != value)
                {
                    OnPERIOD_TYPEChanging(value);
                    ReportPropertyChanging("PERIOD_TYPE");
                    _PERIOD_TYPE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PERIOD_TYPE");
                    OnPERIOD_TYPEChanged();
                }
            }
        }
        private global::System.String _PERIOD_TYPE;
        partial void OnPERIOD_TYPEChanging(global::System.String value);
        partial void OnPERIOD_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PERIOD_YEAR
        {
            get
            {
                return _PERIOD_YEAR;
            }
            set
            {
                if (_PERIOD_YEAR != value)
                {
                    OnPERIOD_YEARChanging(value);
                    ReportPropertyChanging("PERIOD_YEAR");
                    _PERIOD_YEAR = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PERIOD_YEAR");
                    OnPERIOD_YEARChanged();
                }
            }
        }
        private global::System.Int32 _PERIOD_YEAR;
        partial void OnPERIOD_YEARChanging(global::System.Int32 value);
        partial void OnPERIOD_YEARChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PERIOD_END_DATE
        {
            get
            {
                return _PERIOD_END_DATE;
            }
            set
            {
                if (_PERIOD_END_DATE != value)
                {
                    OnPERIOD_END_DATEChanging(value);
                    ReportPropertyChanging("PERIOD_END_DATE");
                    _PERIOD_END_DATE = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PERIOD_END_DATE");
                    OnPERIOD_END_DATEChanged();
                }
            }
        }
        private global::System.DateTime _PERIOD_END_DATE;
        partial void OnPERIOD_END_DATEChanging(global::System.DateTime value);
        partial void OnPERIOD_END_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FISCAL_TYPE
        {
            get
            {
                return _FISCAL_TYPE;
            }
            set
            {
                if (_FISCAL_TYPE != value)
                {
                    OnFISCAL_TYPEChanging(value);
                    ReportPropertyChanging("FISCAL_TYPE");
                    _FISCAL_TYPE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("FISCAL_TYPE");
                    OnFISCAL_TYPEChanged();
                }
            }
        }
        private global::System.String _FISCAL_TYPE;
        partial void OnFISCAL_TYPEChanging(global::System.String value);
        partial void OnFISCAL_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ESTIMATE_ID
        {
            get
            {
                return _ESTIMATE_ID;
            }
            set
            {
                if (_ESTIMATE_ID != value)
                {
                    OnESTIMATE_IDChanging(value);
                    ReportPropertyChanging("ESTIMATE_ID");
                    _ESTIMATE_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ESTIMATE_ID");
                    OnESTIMATE_IDChanged();
                }
            }
        }
        private global::System.Int32 _ESTIMATE_ID;
        partial void OnESTIMATE_IDChanging(global::System.Int32 value);
        partial void OnESTIMATE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CURRENCY
        {
            get
            {
                return _CURRENCY;
            }
            set
            {
                if (_CURRENCY != value)
                {
                    OnCURRENCYChanging(value);
                    ReportPropertyChanging("CURRENCY");
                    _CURRENCY = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CURRENCY");
                    OnCURRENCYChanged();
                }
            }
        }
        private global::System.String _CURRENCY;
        partial void OnCURRENCYChanging(global::System.String value);
        partial void OnCURRENCYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal AMOUNT
        {
            get
            {
                return _AMOUNT;
            }
            set
            {
                if (_AMOUNT != value)
                {
                    OnAMOUNTChanging(value);
                    ReportPropertyChanging("AMOUNT");
                    _AMOUNT = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AMOUNT");
                    OnAMOUNTChanged();
                }
            }
        }
        private global::System.Decimal _AMOUNT;
        partial void OnAMOUNTChanging(global::System.Decimal value);
        partial void OnAMOUNTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NUMBER_OF_ESTIMATES
        {
            get
            {
                return _NUMBER_OF_ESTIMATES;
            }
            set
            {
                if (_NUMBER_OF_ESTIMATES != value)
                {
                    OnNUMBER_OF_ESTIMATESChanging(value);
                    ReportPropertyChanging("NUMBER_OF_ESTIMATES");
                    _NUMBER_OF_ESTIMATES = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NUMBER_OF_ESTIMATES");
                    OnNUMBER_OF_ESTIMATESChanged();
                }
            }
        }
        private global::System.Int32 _NUMBER_OF_ESTIMATES;
        partial void OnNUMBER_OF_ESTIMATESChanging(global::System.Int32 value);
        partial void OnNUMBER_OF_ESTIMATESChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal HIGH
        {
            get
            {
                return _HIGH;
            }
            set
            {
                if (_HIGH != value)
                {
                    OnHIGHChanging(value);
                    ReportPropertyChanging("HIGH");
                    _HIGH = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HIGH");
                    OnHIGHChanged();
                }
            }
        }
        private global::System.Decimal _HIGH;
        partial void OnHIGHChanging(global::System.Decimal value);
        partial void OnHIGHChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal LOW
        {
            get
            {
                return _LOW;
            }
            set
            {
                if (_LOW != value)
                {
                    OnLOWChanging(value);
                    ReportPropertyChanging("LOW");
                    _LOW = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LOW");
                    OnLOWChanged();
                }
            }
        }
        private global::System.Decimal _LOW;
        partial void OnLOWChanging(global::System.Decimal value);
        partial void OnLOWChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SOURCE_CURRENCY
        {
            get
            {
                return _SOURCE_CURRENCY;
            }
            set
            {
                if (_SOURCE_CURRENCY != value)
                {
                    OnSOURCE_CURRENCYChanging(value);
                    ReportPropertyChanging("SOURCE_CURRENCY");
                    _SOURCE_CURRENCY = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SOURCE_CURRENCY");
                    OnSOURCE_CURRENCYChanged();
                }
            }
        }
        private global::System.String _SOURCE_CURRENCY;
        partial void OnSOURCE_CURRENCYChanging(global::System.String value);
        partial void OnSOURCE_CURRENCYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal STANDARD_DEVIATION
        {
            get
            {
                return _STANDARD_DEVIATION;
            }
            set
            {
                if (_STANDARD_DEVIATION != value)
                {
                    OnSTANDARD_DEVIATIONChanging(value);
                    ReportPropertyChanging("STANDARD_DEVIATION");
                    _STANDARD_DEVIATION = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("STANDARD_DEVIATION");
                    OnSTANDARD_DEVIATIONChanged();
                }
            }
        }
        private global::System.Decimal _STANDARD_DEVIATION;
        partial void OnSTANDARD_DEVIATIONChanging(global::System.Decimal value);
        partial void OnSTANDARD_DEVIATIONChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AMOUNT_TYPE
        {
            get
            {
                return _AMOUNT_TYPE;
            }
            set
            {
                if (_AMOUNT_TYPE != value)
                {
                    OnAMOUNT_TYPEChanging(value);
                    ReportPropertyChanging("AMOUNT_TYPE");
                    _AMOUNT_TYPE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("AMOUNT_TYPE");
                    OnAMOUNT_TYPEChanged();
                }
            }
        }
        private global::System.String _AMOUNT_TYPE;
        partial void OnAMOUNT_TYPEChanging(global::System.String value);
        partial void OnAMOUNT_TYPEChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExternalResearchModel", Name="DATA_MASTER")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DATA_MASTER : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DATA_MASTER object.
        /// </summary>
        /// <param name="dATA_ID">Initial value of the DATA_ID property.</param>
        /// <param name="fX_CONV_TYPE">Initial value of the FX_CONV_TYPE property.</param>
        /// <param name="cALENDARIZE">Initial value of the CALENDARIZE property.</param>
        /// <param name="iNDUSTRIAL">Initial value of the INDUSTRIAL property.</param>
        /// <param name="bANK">Initial value of the BANK property.</param>
        /// <param name="iNSURANCE">Initial value of the INSURANCE property.</param>
        /// <param name="uTILITY">Initial value of the UTILITY property.</param>
        /// <param name="qUARTERLY">Initial value of the QUARTERLY property.</param>
        /// <param name="dATA_DESC">Initial value of the DATA_DESC property.</param>
        public static DATA_MASTER CreateDATA_MASTER(global::System.Int32 dATA_ID, global::System.String fX_CONV_TYPE, global::System.String cALENDARIZE, global::System.String iNDUSTRIAL, global::System.String bANK, global::System.String iNSURANCE, global::System.String uTILITY, global::System.String qUARTERLY, global::System.String dATA_DESC)
        {
            DATA_MASTER dATA_MASTER = new DATA_MASTER();
            dATA_MASTER.DATA_ID = dATA_ID;
            dATA_MASTER.FX_CONV_TYPE = fX_CONV_TYPE;
            dATA_MASTER.CALENDARIZE = cALENDARIZE;
            dATA_MASTER.INDUSTRIAL = iNDUSTRIAL;
            dATA_MASTER.BANK = bANK;
            dATA_MASTER.INSURANCE = iNSURANCE;
            dATA_MASTER.UTILITY = uTILITY;
            dATA_MASTER.QUARTERLY = qUARTERLY;
            dATA_MASTER.DATA_DESC = dATA_DESC;
            return dATA_MASTER;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DATA_ID
        {
            get
            {
                return _DATA_ID;
            }
            set
            {
                if (_DATA_ID != value)
                {
                    OnDATA_IDChanging(value);
                    ReportPropertyChanging("DATA_ID");
                    _DATA_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DATA_ID");
                    OnDATA_IDChanged();
                }
            }
        }
        private global::System.Int32 _DATA_ID;
        partial void OnDATA_IDChanging(global::System.Int32 value);
        partial void OnDATA_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String COA
        {
            get
            {
                return _COA;
            }
            set
            {
                OnCOAChanging(value);
                ReportPropertyChanging("COA");
                _COA = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("COA");
                OnCOAChanged();
            }
        }
        private global::System.String _COA;
        partial void OnCOAChanging(global::System.String value);
        partial void OnCOAChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FX_CONV_TYPE
        {
            get
            {
                return _FX_CONV_TYPE;
            }
            set
            {
                if (_FX_CONV_TYPE != value)
                {
                    OnFX_CONV_TYPEChanging(value);
                    ReportPropertyChanging("FX_CONV_TYPE");
                    _FX_CONV_TYPE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("FX_CONV_TYPE");
                    OnFX_CONV_TYPEChanged();
                }
            }
        }
        private global::System.String _FX_CONV_TYPE;
        partial void OnFX_CONV_TYPEChanging(global::System.String value);
        partial void OnFX_CONV_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CALENDARIZE
        {
            get
            {
                return _CALENDARIZE;
            }
            set
            {
                if (_CALENDARIZE != value)
                {
                    OnCALENDARIZEChanging(value);
                    ReportPropertyChanging("CALENDARIZE");
                    _CALENDARIZE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CALENDARIZE");
                    OnCALENDARIZEChanged();
                }
            }
        }
        private global::System.String _CALENDARIZE;
        partial void OnCALENDARIZEChanging(global::System.String value);
        partial void OnCALENDARIZEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String INDUSTRIAL
        {
            get
            {
                return _INDUSTRIAL;
            }
            set
            {
                if (_INDUSTRIAL != value)
                {
                    OnINDUSTRIALChanging(value);
                    ReportPropertyChanging("INDUSTRIAL");
                    _INDUSTRIAL = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("INDUSTRIAL");
                    OnINDUSTRIALChanged();
                }
            }
        }
        private global::System.String _INDUSTRIAL;
        partial void OnINDUSTRIALChanging(global::System.String value);
        partial void OnINDUSTRIALChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BANK
        {
            get
            {
                return _BANK;
            }
            set
            {
                if (_BANK != value)
                {
                    OnBANKChanging(value);
                    ReportPropertyChanging("BANK");
                    _BANK = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("BANK");
                    OnBANKChanged();
                }
            }
        }
        private global::System.String _BANK;
        partial void OnBANKChanging(global::System.String value);
        partial void OnBANKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String INSURANCE
        {
            get
            {
                return _INSURANCE;
            }
            set
            {
                if (_INSURANCE != value)
                {
                    OnINSURANCEChanging(value);
                    ReportPropertyChanging("INSURANCE");
                    _INSURANCE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("INSURANCE");
                    OnINSURANCEChanged();
                }
            }
        }
        private global::System.String _INSURANCE;
        partial void OnINSURANCEChanging(global::System.String value);
        partial void OnINSURANCEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UTILITY
        {
            get
            {
                return _UTILITY;
            }
            set
            {
                if (_UTILITY != value)
                {
                    OnUTILITYChanging(value);
                    ReportPropertyChanging("UTILITY");
                    _UTILITY = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UTILITY");
                    OnUTILITYChanged();
                }
            }
        }
        private global::System.String _UTILITY;
        partial void OnUTILITYChanging(global::System.String value);
        partial void OnUTILITYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String QUARTERLY
        {
            get
            {
                return _QUARTERLY;
            }
            set
            {
                if (_QUARTERLY != value)
                {
                    OnQUARTERLYChanging(value);
                    ReportPropertyChanging("QUARTERLY");
                    _QUARTERLY = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("QUARTERLY");
                    OnQUARTERLYChanged();
                }
            }
        }
        private global::System.String _QUARTERLY;
        partial void OnQUARTERLYChanging(global::System.String value);
        partial void OnQUARTERLYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DATA_DESC
        {
            get
            {
                return _DATA_DESC;
            }
            set
            {
                if (_DATA_DESC != value)
                {
                    OnDATA_DESCChanging(value);
                    ReportPropertyChanging("DATA_DESC");
                    _DATA_DESC = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DATA_DESC");
                    OnDATA_DESCChanged();
                }
            }
        }
        private global::System.String _DATA_DESC;
        partial void OnDATA_DESCChanging(global::System.String value);
        partial void OnDATA_DESCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String COA_TYPE
        {
            get
            {
                return _COA_TYPE;
            }
            set
            {
                OnCOA_TYPEChanging(value);
                ReportPropertyChanging("COA_TYPE");
                _COA_TYPE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("COA_TYPE");
                OnCOA_TYPEChanged();
            }
        }
        private global::System.String _COA_TYPE;
        partial void OnCOA_TYPEChanging(global::System.String value);
        partial void OnCOA_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ANNUAL
        {
            get
            {
                return _ANNUAL;
            }
            set
            {
                OnANNUALChanging(value);
                ReportPropertyChanging("ANNUAL");
                _ANNUAL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ANNUAL");
                OnANNUALChanged();
            }
        }
        private global::System.String _ANNUAL;
        partial void OnANNUALChanging(global::System.String value);
        partial void OnANNUALChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CURRENT
        {
            get
            {
                return _CURRENT;
            }
            set
            {
                OnCURRENTChanging(value);
                ReportPropertyChanging("CURRENT");
                _CURRENT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CURRENT");
                OnCURRENTChanged();
            }
        }
        private global::System.String _CURRENT;
        partial void OnCURRENTChanging(global::System.String value);
        partial void OnCURRENTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String STATEMENT_TYPE
        {
            get
            {
                return _STATEMENT_TYPE;
            }
            set
            {
                OnSTATEMENT_TYPEChanging(value);
                ReportPropertyChanging("STATEMENT_TYPE");
                _STATEMENT_TYPE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("STATEMENT_TYPE");
                OnSTATEMENT_TYPEChanged();
            }
        }
        private global::System.String _STATEMENT_TYPE;
        partial void OnSTATEMENT_TYPEChanging(global::System.String value);
        partial void OnSTATEMENT_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CONVERT_FLAG
        {
            get
            {
                return _CONVERT_FLAG;
            }
            set
            {
                OnCONVERT_FLAGChanging(value);
                ReportPropertyChanging("CONVERT_FLAG");
                _CONVERT_FLAG = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CONVERT_FLAG");
                OnCONVERT_FLAGChanged();
            }
        }
        private global::System.String _CONVERT_FLAG;
        partial void OnCONVERT_FLAGChanging(global::System.String value);
        partial void OnCONVERT_FLAGChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LONG_DESC
        {
            get
            {
                return _LONG_DESC;
            }
            set
            {
                OnLONG_DESCChanging(value);
                ReportPropertyChanging("LONG_DESC");
                _LONG_DESC = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LONG_DESC");
                OnLONG_DESCChanged();
            }
        }
        private global::System.String _LONG_DESC;
        partial void OnLONG_DESCChanging(global::System.String value);
        partial void OnLONG_DESCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> MinValue
        {
            get
            {
                return _MinValue;
            }
            set
            {
                OnMinValueChanging(value);
                ReportPropertyChanging("MinValue");
                _MinValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MinValue");
                OnMinValueChanged();
            }
        }
        private Nullable<global::System.Decimal> _MinValue;
        partial void OnMinValueChanging(Nullable<global::System.Decimal> value);
        partial void OnMinValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> MaxValue
        {
            get
            {
                return _MaxValue;
            }
            set
            {
                OnMaxValueChanging(value);
                ReportPropertyChanging("MaxValue");
                _MaxValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxValue");
                OnMaxValueChanged();
            }
        }
        private Nullable<global::System.Decimal> _MaxValue;
        partial void OnMaxValueChanging(Nullable<global::System.Decimal> value);
        partial void OnMaxValueChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExternalResearchModel", Name="External_Country_Master")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class External_Country_Master : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new External_Country_Master object.
        /// </summary>
        /// <param name="cOUNTRY_CODE">Initial value of the COUNTRY_CODE property.</param>
        /// <param name="cOUNTRY_NAME">Initial value of the COUNTRY_NAME property.</param>
        /// <param name="cURRENCY_CODE">Initial value of the CURRENCY_CODE property.</param>
        /// <param name="cURRENCY_NAME">Initial value of the CURRENCY_NAME property.</param>
        /// <param name="mACRO_ECON_DATA_CURRENT">Initial value of the MACRO_ECON_DATA_CURRENT property.</param>
        public static External_Country_Master CreateExternal_Country_Master(global::System.String cOUNTRY_CODE, global::System.String cOUNTRY_NAME, global::System.String cURRENCY_CODE, global::System.String cURRENCY_NAME, global::System.String mACRO_ECON_DATA_CURRENT)
        {
            External_Country_Master external_Country_Master = new External_Country_Master();
            external_Country_Master.COUNTRY_CODE = cOUNTRY_CODE;
            external_Country_Master.COUNTRY_NAME = cOUNTRY_NAME;
            external_Country_Master.CURRENCY_CODE = cURRENCY_CODE;
            external_Country_Master.CURRENCY_NAME = cURRENCY_NAME;
            external_Country_Master.MACRO_ECON_DATA_CURRENT = mACRO_ECON_DATA_CURRENT;
            return external_Country_Master;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String COUNTRY_CODE
        {
            get
            {
                return _COUNTRY_CODE;
            }
            set
            {
                if (_COUNTRY_CODE != value)
                {
                    OnCOUNTRY_CODEChanging(value);
                    ReportPropertyChanging("COUNTRY_CODE");
                    _COUNTRY_CODE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("COUNTRY_CODE");
                    OnCOUNTRY_CODEChanged();
                }
            }
        }
        private global::System.String _COUNTRY_CODE;
        partial void OnCOUNTRY_CODEChanging(global::System.String value);
        partial void OnCOUNTRY_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String COUNTRY_NAME
        {
            get
            {
                return _COUNTRY_NAME;
            }
            set
            {
                if (_COUNTRY_NAME != value)
                {
                    OnCOUNTRY_NAMEChanging(value);
                    ReportPropertyChanging("COUNTRY_NAME");
                    _COUNTRY_NAME = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("COUNTRY_NAME");
                    OnCOUNTRY_NAMEChanged();
                }
            }
        }
        private global::System.String _COUNTRY_NAME;
        partial void OnCOUNTRY_NAMEChanging(global::System.String value);
        partial void OnCOUNTRY_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CURRENCY_CODE
        {
            get
            {
                return _CURRENCY_CODE;
            }
            set
            {
                if (_CURRENCY_CODE != value)
                {
                    OnCURRENCY_CODEChanging(value);
                    ReportPropertyChanging("CURRENCY_CODE");
                    _CURRENCY_CODE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CURRENCY_CODE");
                    OnCURRENCY_CODEChanged();
                }
            }
        }
        private global::System.String _CURRENCY_CODE;
        partial void OnCURRENCY_CODEChanging(global::System.String value);
        partial void OnCURRENCY_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CURRENCY_NAME
        {
            get
            {
                return _CURRENCY_NAME;
            }
            set
            {
                if (_CURRENCY_NAME != value)
                {
                    OnCURRENCY_NAMEChanging(value);
                    ReportPropertyChanging("CURRENCY_NAME");
                    _CURRENCY_NAME = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CURRENCY_NAME");
                    OnCURRENCY_NAMEChanged();
                }
            }
        }
        private global::System.String _CURRENCY_NAME;
        partial void OnCURRENCY_NAMEChanging(global::System.String value);
        partial void OnCURRENCY_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MACRO_ECON_DATA_CURRENT
        {
            get
            {
                return _MACRO_ECON_DATA_CURRENT;
            }
            set
            {
                if (_MACRO_ECON_DATA_CURRENT != value)
                {
                    OnMACRO_ECON_DATA_CURRENTChanging(value);
                    ReportPropertyChanging("MACRO_ECON_DATA_CURRENT");
                    _MACRO_ECON_DATA_CURRENT = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MACRO_ECON_DATA_CURRENT");
                    OnMACRO_ECON_DATA_CURRENTChanged();
                }
            }
        }
        private global::System.String _MACRO_ECON_DATA_CURRENT;
        partial void OnMACRO_ECON_DATA_CURRENTChanging(global::System.String value);
        partial void OnMACRO_ECON_DATA_CURRENTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ASHEMM_PROPRIETARY_REGION_NAME
        {
            get
            {
                return _ASHEMM_PROPRIETARY_REGION_NAME;
            }
            set
            {
                OnASHEMM_PROPRIETARY_REGION_NAMEChanging(value);
                ReportPropertyChanging("ASHEMM_PROPRIETARY_REGION_NAME");
                _ASHEMM_PROPRIETARY_REGION_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ASHEMM_PROPRIETARY_REGION_NAME");
                OnASHEMM_PROPRIETARY_REGION_NAMEChanged();
            }
        }
        private global::System.String _ASHEMM_PROPRIETARY_REGION_NAME;
        partial void OnASHEMM_PROPRIETARY_REGION_NAMEChanging(global::System.String value);
        partial void OnASHEMM_PROPRIETARY_REGION_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ASHEMM_PROPRIETARY_REGION_CODE
        {
            get
            {
                return _ASHEMM_PROPRIETARY_REGION_CODE;
            }
            set
            {
                OnASHEMM_PROPRIETARY_REGION_CODEChanging(value);
                ReportPropertyChanging("ASHEMM_PROPRIETARY_REGION_CODE");
                _ASHEMM_PROPRIETARY_REGION_CODE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ASHEMM_PROPRIETARY_REGION_CODE");
                OnASHEMM_PROPRIETARY_REGION_CODEChanged();
            }
        }
        private global::System.String _ASHEMM_PROPRIETARY_REGION_CODE;
        partial void OnASHEMM_PROPRIETARY_REGION_CODEChanging(global::System.String value);
        partial void OnASHEMM_PROPRIETARY_REGION_CODEChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExternalResearchModel", Name="FAIR_VALUE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FAIR_VALUE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FAIR_VALUE object.
        /// </summary>
        /// <param name="vALUE_TYPE">Initial value of the VALUE_TYPE property.</param>
        /// <param name="sECURITY_ID">Initial value of the SECURITY_ID property.</param>
        /// <param name="fV_MEASURE">Initial value of the FV_MEASURE property.</param>
        /// <param name="fV_BUY">Initial value of the FV_BUY property.</param>
        /// <param name="fV_SELL">Initial value of the FV_SELL property.</param>
        /// <param name="cURRENT_MEASURE_VALUE">Initial value of the CURRENT_MEASURE_VALUE property.</param>
        /// <param name="uPSIDE">Initial value of the UPSIDE property.</param>
        public static FAIR_VALUE CreateFAIR_VALUE(global::System.String vALUE_TYPE, global::System.String sECURITY_ID, global::System.Int32 fV_MEASURE, global::System.Decimal fV_BUY, global::System.Decimal fV_SELL, global::System.Decimal cURRENT_MEASURE_VALUE, global::System.Decimal uPSIDE)
        {
            FAIR_VALUE fAIR_VALUE = new FAIR_VALUE();
            fAIR_VALUE.VALUE_TYPE = vALUE_TYPE;
            fAIR_VALUE.SECURITY_ID = sECURITY_ID;
            fAIR_VALUE.FV_MEASURE = fV_MEASURE;
            fAIR_VALUE.FV_BUY = fV_BUY;
            fAIR_VALUE.FV_SELL = fV_SELL;
            fAIR_VALUE.CURRENT_MEASURE_VALUE = cURRENT_MEASURE_VALUE;
            fAIR_VALUE.UPSIDE = uPSIDE;
            return fAIR_VALUE;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String VALUE_TYPE
        {
            get
            {
                return _VALUE_TYPE;
            }
            set
            {
                if (_VALUE_TYPE != value)
                {
                    OnVALUE_TYPEChanging(value);
                    ReportPropertyChanging("VALUE_TYPE");
                    _VALUE_TYPE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("VALUE_TYPE");
                    OnVALUE_TYPEChanged();
                }
            }
        }
        private global::System.String _VALUE_TYPE;
        partial void OnVALUE_TYPEChanging(global::System.String value);
        partial void OnVALUE_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SECURITY_ID
        {
            get
            {
                return _SECURITY_ID;
            }
            set
            {
                if (_SECURITY_ID != value)
                {
                    OnSECURITY_IDChanging(value);
                    ReportPropertyChanging("SECURITY_ID");
                    _SECURITY_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SECURITY_ID");
                    OnSECURITY_IDChanged();
                }
            }
        }
        private global::System.String _SECURITY_ID;
        partial void OnSECURITY_IDChanging(global::System.String value);
        partial void OnSECURITY_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FV_MEASURE
        {
            get
            {
                return _FV_MEASURE;
            }
            set
            {
                if (_FV_MEASURE != value)
                {
                    OnFV_MEASUREChanging(value);
                    ReportPropertyChanging("FV_MEASURE");
                    _FV_MEASURE = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FV_MEASURE");
                    OnFV_MEASUREChanged();
                }
            }
        }
        private global::System.Int32 _FV_MEASURE;
        partial void OnFV_MEASUREChanging(global::System.Int32 value);
        partial void OnFV_MEASUREChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal FV_BUY
        {
            get
            {
                return _FV_BUY;
            }
            set
            {
                if (_FV_BUY != value)
                {
                    OnFV_BUYChanging(value);
                    ReportPropertyChanging("FV_BUY");
                    _FV_BUY = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FV_BUY");
                    OnFV_BUYChanged();
                }
            }
        }
        private global::System.Decimal _FV_BUY;
        partial void OnFV_BUYChanging(global::System.Decimal value);
        partial void OnFV_BUYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal FV_SELL
        {
            get
            {
                return _FV_SELL;
            }
            set
            {
                if (_FV_SELL != value)
                {
                    OnFV_SELLChanging(value);
                    ReportPropertyChanging("FV_SELL");
                    _FV_SELL = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FV_SELL");
                    OnFV_SELLChanged();
                }
            }
        }
        private global::System.Decimal _FV_SELL;
        partial void OnFV_SELLChanging(global::System.Decimal value);
        partial void OnFV_SELLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal CURRENT_MEASURE_VALUE
        {
            get
            {
                return _CURRENT_MEASURE_VALUE;
            }
            set
            {
                if (_CURRENT_MEASURE_VALUE != value)
                {
                    OnCURRENT_MEASURE_VALUEChanging(value);
                    ReportPropertyChanging("CURRENT_MEASURE_VALUE");
                    _CURRENT_MEASURE_VALUE = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CURRENT_MEASURE_VALUE");
                    OnCURRENT_MEASURE_VALUEChanged();
                }
            }
        }
        private global::System.Decimal _CURRENT_MEASURE_VALUE;
        partial void OnCURRENT_MEASURE_VALUEChanging(global::System.Decimal value);
        partial void OnCURRENT_MEASURE_VALUEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal UPSIDE
        {
            get
            {
                return _UPSIDE;
            }
            set
            {
                if (_UPSIDE != value)
                {
                    OnUPSIDEChanging(value);
                    ReportPropertyChanging("UPSIDE");
                    _UPSIDE = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UPSIDE");
                    OnUPSIDEChanged();
                }
            }
        }
        private global::System.Decimal _UPSIDE;
        partial void OnUPSIDEChanging(global::System.Decimal value);
        partial void OnUPSIDEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UPDATED
        {
            get
            {
                return _UPDATED;
            }
            set
            {
                OnUPDATEDChanging(value);
                ReportPropertyChanging("UPDATED");
                _UPDATED = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UPDATED");
                OnUPDATEDChanged();
            }
        }
        private Nullable<global::System.DateTime> _UPDATED;
        partial void OnUPDATEDChanging(Nullable<global::System.DateTime> value);
        partial void OnUPDATEDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PERIOD_TYPE
        {
            get
            {
                return _PERIOD_TYPE;
            }
            set
            {
                OnPERIOD_TYPEChanging(value);
                ReportPropertyChanging("PERIOD_TYPE");
                _PERIOD_TYPE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PERIOD_TYPE");
                OnPERIOD_TYPEChanged();
            }
        }
        private global::System.String _PERIOD_TYPE;
        partial void OnPERIOD_TYPEChanging(global::System.String value);
        partial void OnPERIOD_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PERIOD_YEAR
        {
            get
            {
                return _PERIOD_YEAR;
            }
            set
            {
                OnPERIOD_YEARChanging(value);
                ReportPropertyChanging("PERIOD_YEAR");
                _PERIOD_YEAR = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PERIOD_YEAR");
                OnPERIOD_YEARChanged();
            }
        }
        private Nullable<global::System.Int32> _PERIOD_YEAR;
        partial void OnPERIOD_YEARChanging(Nullable<global::System.Int32> value);
        partial void OnPERIOD_YEARChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExternalResearchModel", Name="FX_RATES")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FX_RATES : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FX_RATES object.
        /// </summary>
        /// <param name="cURRENCY">Initial value of the CURRENCY property.</param>
        /// <param name="fX_DATE">Initial value of the FX_DATE property.</param>
        /// <param name="fX_RATE">Initial value of the FX_RATE property.</param>
        public static FX_RATES CreateFX_RATES(global::System.String cURRENCY, global::System.DateTime fX_DATE, global::System.Decimal fX_RATE)
        {
            FX_RATES fX_RATES = new FX_RATES();
            fX_RATES.CURRENCY = cURRENCY;
            fX_RATES.FX_DATE = fX_DATE;
            fX_RATES.FX_RATE = fX_RATE;
            return fX_RATES;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CURRENCY
        {
            get
            {
                return _CURRENCY;
            }
            set
            {
                if (_CURRENCY != value)
                {
                    OnCURRENCYChanging(value);
                    ReportPropertyChanging("CURRENCY");
                    _CURRENCY = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CURRENCY");
                    OnCURRENCYChanged();
                }
            }
        }
        private global::System.String _CURRENCY;
        partial void OnCURRENCYChanging(global::System.String value);
        partial void OnCURRENCYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FX_DATE
        {
            get
            {
                return _FX_DATE;
            }
            set
            {
                if (_FX_DATE != value)
                {
                    OnFX_DATEChanging(value);
                    ReportPropertyChanging("FX_DATE");
                    _FX_DATE = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FX_DATE");
                    OnFX_DATEChanged();
                }
            }
        }
        private global::System.DateTime _FX_DATE;
        partial void OnFX_DATEChanging(global::System.DateTime value);
        partial void OnFX_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal FX_RATE
        {
            get
            {
                return _FX_RATE;
            }
            set
            {
                if (_FX_RATE != value)
                {
                    OnFX_RATEChanging(value);
                    ReportPropertyChanging("FX_RATE");
                    _FX_RATE = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FX_RATE");
                    OnFX_RATEChanged();
                }
            }
        }
        private global::System.Decimal _FX_RATE;
        partial void OnFX_RATEChanging(global::System.Decimal value);
        partial void OnFX_RATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> AVG90DAYRATE
        {
            get
            {
                return _AVG90DAYRATE;
            }
            set
            {
                OnAVG90DAYRATEChanging(value);
                ReportPropertyChanging("AVG90DAYRATE");
                _AVG90DAYRATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AVG90DAYRATE");
                OnAVG90DAYRATEChanged();
            }
        }
        private Nullable<global::System.Decimal> _AVG90DAYRATE;
        partial void OnAVG90DAYRATEChanging(Nullable<global::System.Decimal> value);
        partial void OnAVG90DAYRATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> AVG12MonthRATE
        {
            get
            {
                return _AVG12MonthRATE;
            }
            set
            {
                OnAVG12MonthRATEChanging(value);
                ReportPropertyChanging("AVG12MonthRATE");
                _AVG12MonthRATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AVG12MonthRATE");
                OnAVG12MonthRATEChanged();
            }
        }
        private Nullable<global::System.Decimal> _AVG12MonthRATE;
        partial void OnAVG12MonthRATEChanging(Nullable<global::System.Decimal> value);
        partial void OnAVG12MonthRATEChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExternalResearchModel", Name="GF_BENCHMARK_HOLDINGS_Local")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GF_BENCHMARK_HOLDINGS_Local : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GF_BENCHMARK_HOLDINGS_Local object.
        /// </summary>
        /// <param name="gF_ID">Initial value of the GF_ID property.</param>
        public static GF_BENCHMARK_HOLDINGS_Local CreateGF_BENCHMARK_HOLDINGS_Local(global::System.Int32 gF_ID)
        {
            GF_BENCHMARK_HOLDINGS_Local gF_BENCHMARK_HOLDINGS_Local = new GF_BENCHMARK_HOLDINGS_Local();
            gF_BENCHMARK_HOLDINGS_Local.GF_ID = gF_ID;
            return gF_BENCHMARK_HOLDINGS_Local;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GF_ID
        {
            get
            {
                return _GF_ID;
            }
            set
            {
                if (_GF_ID != value)
                {
                    OnGF_IDChanging(value);
                    ReportPropertyChanging("GF_ID");
                    _GF_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GF_ID");
                    OnGF_IDChanged();
                }
            }
        }
        private global::System.Int32 _GF_ID;
        partial void OnGF_IDChanging(global::System.Int32 value);
        partial void OnGF_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PORTFOLIO_DATE
        {
            get
            {
                return _PORTFOLIO_DATE;
            }
            set
            {
                OnPORTFOLIO_DATEChanging(value);
                ReportPropertyChanging("PORTFOLIO_DATE");
                _PORTFOLIO_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PORTFOLIO_DATE");
                OnPORTFOLIO_DATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _PORTFOLIO_DATE;
        partial void OnPORTFOLIO_DATEChanging(Nullable<global::System.DateTime> value);
        partial void OnPORTFOLIO_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PORTFOLIO_ID
        {
            get
            {
                return _PORTFOLIO_ID;
            }
            set
            {
                OnPORTFOLIO_IDChanging(value);
                ReportPropertyChanging("PORTFOLIO_ID");
                _PORTFOLIO_ID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PORTFOLIO_ID");
                OnPORTFOLIO_IDChanged();
            }
        }
        private global::System.String _PORTFOLIO_ID;
        partial void OnPORTFOLIO_IDChanging(global::System.String value);
        partial void OnPORTFOLIO_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PORTFOLIO_THEME_SUBGROUP_CODE
        {
            get
            {
                return _PORTFOLIO_THEME_SUBGROUP_CODE;
            }
            set
            {
                OnPORTFOLIO_THEME_SUBGROUP_CODEChanging(value);
                ReportPropertyChanging("PORTFOLIO_THEME_SUBGROUP_CODE");
                _PORTFOLIO_THEME_SUBGROUP_CODE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PORTFOLIO_THEME_SUBGROUP_CODE");
                OnPORTFOLIO_THEME_SUBGROUP_CODEChanged();
            }
        }
        private global::System.String _PORTFOLIO_THEME_SUBGROUP_CODE;
        partial void OnPORTFOLIO_THEME_SUBGROUP_CODEChanging(global::System.String value);
        partial void OnPORTFOLIO_THEME_SUBGROUP_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PORTFOLIO_CURRENCY
        {
            get
            {
                return _PORTFOLIO_CURRENCY;
            }
            set
            {
                OnPORTFOLIO_CURRENCYChanging(value);
                ReportPropertyChanging("PORTFOLIO_CURRENCY");
                _PORTFOLIO_CURRENCY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PORTFOLIO_CURRENCY");
                OnPORTFOLIO_CURRENCYChanged();
            }
        }
        private global::System.String _PORTFOLIO_CURRENCY;
        partial void OnPORTFOLIO_CURRENCYChanging(global::System.String value);
        partial void OnPORTFOLIO_CURRENCYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BENCHMARK_ID
        {
            get
            {
                return _BENCHMARK_ID;
            }
            set
            {
                OnBENCHMARK_IDChanging(value);
                ReportPropertyChanging("BENCHMARK_ID");
                _BENCHMARK_ID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BENCHMARK_ID");
                OnBENCHMARK_IDChanged();
            }
        }
        private global::System.String _BENCHMARK_ID;
        partial void OnBENCHMARK_IDChanging(global::System.String value);
        partial void OnBENCHMARK_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ISSUER_ID
        {
            get
            {
                return _ISSUER_ID;
            }
            set
            {
                OnISSUER_IDChanging(value);
                ReportPropertyChanging("ISSUER_ID");
                _ISSUER_ID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ISSUER_ID");
                OnISSUER_IDChanged();
            }
        }
        private global::System.String _ISSUER_ID;
        partial void OnISSUER_IDChanging(global::System.String value);
        partial void OnISSUER_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ASEC_SEC_SHORT_NAME
        {
            get
            {
                return _ASEC_SEC_SHORT_NAME;
            }
            set
            {
                OnASEC_SEC_SHORT_NAMEChanging(value);
                ReportPropertyChanging("ASEC_SEC_SHORT_NAME");
                _ASEC_SEC_SHORT_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ASEC_SEC_SHORT_NAME");
                OnASEC_SEC_SHORT_NAMEChanged();
            }
        }
        private global::System.String _ASEC_SEC_SHORT_NAME;
        partial void OnASEC_SEC_SHORT_NAMEChanging(global::System.String value);
        partial void OnASEC_SEC_SHORT_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ISSUE_NAME
        {
            get
            {
                return _ISSUE_NAME;
            }
            set
            {
                OnISSUE_NAMEChanging(value);
                ReportPropertyChanging("ISSUE_NAME");
                _ISSUE_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ISSUE_NAME");
                OnISSUE_NAMEChanged();
            }
        }
        private global::System.String _ISSUE_NAME;
        partial void OnISSUE_NAMEChanging(global::System.String value);
        partial void OnISSUE_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TICKER
        {
            get
            {
                return _TICKER;
            }
            set
            {
                OnTICKERChanging(value);
                ReportPropertyChanging("TICKER");
                _TICKER = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TICKER");
                OnTICKERChanged();
            }
        }
        private global::System.String _TICKER;
        partial void OnTICKERChanging(global::System.String value);
        partial void OnTICKERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SECURITYTHEMECODE
        {
            get
            {
                return _SECURITYTHEMECODE;
            }
            set
            {
                OnSECURITYTHEMECODEChanging(value);
                ReportPropertyChanging("SECURITYTHEMECODE");
                _SECURITYTHEMECODE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SECURITYTHEMECODE");
                OnSECURITYTHEMECODEChanged();
            }
        }
        private global::System.String _SECURITYTHEMECODE;
        partial void OnSECURITYTHEMECODEChanging(global::System.String value);
        partial void OnSECURITYTHEMECODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String A_SEC_INSTR_TYPE
        {
            get
            {
                return _A_SEC_INSTR_TYPE;
            }
            set
            {
                OnA_SEC_INSTR_TYPEChanging(value);
                ReportPropertyChanging("A_SEC_INSTR_TYPE");
                _A_SEC_INSTR_TYPE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("A_SEC_INSTR_TYPE");
                OnA_SEC_INSTR_TYPEChanged();
            }
        }
        private global::System.String _A_SEC_INSTR_TYPE;
        partial void OnA_SEC_INSTR_TYPEChanging(global::System.String value);
        partial void OnA_SEC_INSTR_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SECURITY_TYPE
        {
            get
            {
                return _SECURITY_TYPE;
            }
            set
            {
                OnSECURITY_TYPEChanging(value);
                ReportPropertyChanging("SECURITY_TYPE");
                _SECURITY_TYPE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SECURITY_TYPE");
                OnSECURITY_TYPEChanged();
            }
        }
        private global::System.String _SECURITY_TYPE;
        partial void OnSECURITY_TYPEChanging(global::System.String value);
        partial void OnSECURITY_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> BALANCE_NOMINAL
        {
            get
            {
                return _BALANCE_NOMINAL;
            }
            set
            {
                OnBALANCE_NOMINALChanging(value);
                ReportPropertyChanging("BALANCE_NOMINAL");
                _BALANCE_NOMINAL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BALANCE_NOMINAL");
                OnBALANCE_NOMINALChanged();
            }
        }
        private Nullable<global::System.Decimal> _BALANCE_NOMINAL;
        partial void OnBALANCE_NOMINALChanging(Nullable<global::System.Decimal> value);
        partial void OnBALANCE_NOMINALChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> DIRTY_PRICE
        {
            get
            {
                return _DIRTY_PRICE;
            }
            set
            {
                OnDIRTY_PRICEChanging(value);
                ReportPropertyChanging("DIRTY_PRICE");
                _DIRTY_PRICE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DIRTY_PRICE");
                OnDIRTY_PRICEChanged();
            }
        }
        private Nullable<global::System.Decimal> _DIRTY_PRICE;
        partial void OnDIRTY_PRICEChanging(Nullable<global::System.Decimal> value);
        partial void OnDIRTY_PRICEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TRADING_CURRENCY
        {
            get
            {
                return _TRADING_CURRENCY;
            }
            set
            {
                OnTRADING_CURRENCYChanging(value);
                ReportPropertyChanging("TRADING_CURRENCY");
                _TRADING_CURRENCY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TRADING_CURRENCY");
                OnTRADING_CURRENCYChanged();
            }
        }
        private global::System.String _TRADING_CURRENCY;
        partial void OnTRADING_CURRENCYChanging(global::System.String value);
        partial void OnTRADING_CURRENCYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> DIRTY_VALUE_PC
        {
            get
            {
                return _DIRTY_VALUE_PC;
            }
            set
            {
                OnDIRTY_VALUE_PCChanging(value);
                ReportPropertyChanging("DIRTY_VALUE_PC");
                _DIRTY_VALUE_PC = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DIRTY_VALUE_PC");
                OnDIRTY_VALUE_PCChanged();
            }
        }
        private Nullable<global::System.Decimal> _DIRTY_VALUE_PC;
        partial void OnDIRTY_VALUE_PCChanging(Nullable<global::System.Decimal> value);
        partial void OnDIRTY_VALUE_PCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> BENCHMARK_WEIGHT
        {
            get
            {
                return _BENCHMARK_WEIGHT;
            }
            set
            {
                OnBENCHMARK_WEIGHTChanging(value);
                ReportPropertyChanging("BENCHMARK_WEIGHT");
                _BENCHMARK_WEIGHT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BENCHMARK_WEIGHT");
                OnBENCHMARK_WEIGHTChanged();
            }
        }
        private Nullable<global::System.Decimal> _BENCHMARK_WEIGHT;
        partial void OnBENCHMARK_WEIGHTChanging(Nullable<global::System.Decimal> value);
        partial void OnBENCHMARK_WEIGHTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ASH_EMM_MODEL_WEIGHT
        {
            get
            {
                return _ASH_EMM_MODEL_WEIGHT;
            }
            set
            {
                OnASH_EMM_MODEL_WEIGHTChanging(value);
                ReportPropertyChanging("ASH_EMM_MODEL_WEIGHT");
                _ASH_EMM_MODEL_WEIGHT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ASH_EMM_MODEL_WEIGHT");
                OnASH_EMM_MODEL_WEIGHTChanged();
            }
        }
        private Nullable<global::System.Decimal> _ASH_EMM_MODEL_WEIGHT;
        partial void OnASH_EMM_MODEL_WEIGHTChanging(Nullable<global::System.Decimal> value);
        partial void OnASH_EMM_MODEL_WEIGHTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> MARKET_CAP_IN_USD
        {
            get
            {
                return _MARKET_CAP_IN_USD;
            }
            set
            {
                OnMARKET_CAP_IN_USDChanging(value);
                ReportPropertyChanging("MARKET_CAP_IN_USD");
                _MARKET_CAP_IN_USD = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MARKET_CAP_IN_USD");
                OnMARKET_CAP_IN_USDChanged();
            }
        }
        private Nullable<global::System.Decimal> _MARKET_CAP_IN_USD;
        partial void OnMARKET_CAP_IN_USDChanging(Nullable<global::System.Decimal> value);
        partial void OnMARKET_CAP_IN_USDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ASHEMM_PROP_REGION_CODE
        {
            get
            {
                return _ASHEMM_PROP_REGION_CODE;
            }
            set
            {
                OnASHEMM_PROP_REGION_CODEChanging(value);
                ReportPropertyChanging("ASHEMM_PROP_REGION_CODE");
                _ASHEMM_PROP_REGION_CODE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ASHEMM_PROP_REGION_CODE");
                OnASHEMM_PROP_REGION_CODEChanged();
            }
        }
        private global::System.String _ASHEMM_PROP_REGION_CODE;
        partial void OnASHEMM_PROP_REGION_CODEChanging(global::System.String value);
        partial void OnASHEMM_PROP_REGION_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ASHEMM_PROP_REGION_NAME
        {
            get
            {
                return _ASHEMM_PROP_REGION_NAME;
            }
            set
            {
                OnASHEMM_PROP_REGION_NAMEChanging(value);
                ReportPropertyChanging("ASHEMM_PROP_REGION_NAME");
                _ASHEMM_PROP_REGION_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ASHEMM_PROP_REGION_NAME");
                OnASHEMM_PROP_REGION_NAMEChanged();
            }
        }
        private global::System.String _ASHEMM_PROP_REGION_NAME;
        partial void OnASHEMM_PROP_REGION_NAMEChanging(global::System.String value);
        partial void OnASHEMM_PROP_REGION_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ISO_COUNTRY_CODE
        {
            get
            {
                return _ISO_COUNTRY_CODE;
            }
            set
            {
                OnISO_COUNTRY_CODEChanging(value);
                ReportPropertyChanging("ISO_COUNTRY_CODE");
                _ISO_COUNTRY_CODE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ISO_COUNTRY_CODE");
                OnISO_COUNTRY_CODEChanged();
            }
        }
        private global::System.String _ISO_COUNTRY_CODE;
        partial void OnISO_COUNTRY_CODEChanging(global::System.String value);
        partial void OnISO_COUNTRY_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String COUNTRYNAME
        {
            get
            {
                return _COUNTRYNAME;
            }
            set
            {
                OnCOUNTRYNAMEChanging(value);
                ReportPropertyChanging("COUNTRYNAME");
                _COUNTRYNAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("COUNTRYNAME");
                OnCOUNTRYNAMEChanged();
            }
        }
        private global::System.String _COUNTRYNAME;
        partial void OnCOUNTRYNAMEChanging(global::System.String value);
        partial void OnCOUNTRYNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GICS_SECTOR
        {
            get
            {
                return _GICS_SECTOR;
            }
            set
            {
                OnGICS_SECTORChanging(value);
                ReportPropertyChanging("GICS_SECTOR");
                _GICS_SECTOR = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GICS_SECTOR");
                OnGICS_SECTORChanged();
            }
        }
        private global::System.String _GICS_SECTOR;
        partial void OnGICS_SECTORChanging(global::System.String value);
        partial void OnGICS_SECTORChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GICS_SECTOR_NAME
        {
            get
            {
                return _GICS_SECTOR_NAME;
            }
            set
            {
                OnGICS_SECTOR_NAMEChanging(value);
                ReportPropertyChanging("GICS_SECTOR_NAME");
                _GICS_SECTOR_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GICS_SECTOR_NAME");
                OnGICS_SECTOR_NAMEChanged();
            }
        }
        private global::System.String _GICS_SECTOR_NAME;
        partial void OnGICS_SECTOR_NAMEChanging(global::System.String value);
        partial void OnGICS_SECTOR_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GICS_INDUSTRY
        {
            get
            {
                return _GICS_INDUSTRY;
            }
            set
            {
                OnGICS_INDUSTRYChanging(value);
                ReportPropertyChanging("GICS_INDUSTRY");
                _GICS_INDUSTRY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GICS_INDUSTRY");
                OnGICS_INDUSTRYChanged();
            }
        }
        private global::System.String _GICS_INDUSTRY;
        partial void OnGICS_INDUSTRYChanging(global::System.String value);
        partial void OnGICS_INDUSTRYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GICS_INDUSTRY_NAME
        {
            get
            {
                return _GICS_INDUSTRY_NAME;
            }
            set
            {
                OnGICS_INDUSTRY_NAMEChanging(value);
                ReportPropertyChanging("GICS_INDUSTRY_NAME");
                _GICS_INDUSTRY_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GICS_INDUSTRY_NAME");
                OnGICS_INDUSTRY_NAMEChanged();
            }
        }
        private global::System.String _GICS_INDUSTRY_NAME;
        partial void OnGICS_INDUSTRY_NAMEChanging(global::System.String value);
        partial void OnGICS_INDUSTRY_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GICS_SUB_INDUSTRY
        {
            get
            {
                return _GICS_SUB_INDUSTRY;
            }
            set
            {
                OnGICS_SUB_INDUSTRYChanging(value);
                ReportPropertyChanging("GICS_SUB_INDUSTRY");
                _GICS_SUB_INDUSTRY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GICS_SUB_INDUSTRY");
                OnGICS_SUB_INDUSTRYChanged();
            }
        }
        private global::System.String _GICS_SUB_INDUSTRY;
        partial void OnGICS_SUB_INDUSTRYChanging(global::System.String value);
        partial void OnGICS_SUB_INDUSTRYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GICS_SUB_INDUSTRY_NAME
        {
            get
            {
                return _GICS_SUB_INDUSTRY_NAME;
            }
            set
            {
                OnGICS_SUB_INDUSTRY_NAMEChanging(value);
                ReportPropertyChanging("GICS_SUB_INDUSTRY_NAME");
                _GICS_SUB_INDUSTRY_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GICS_SUB_INDUSTRY_NAME");
                OnGICS_SUB_INDUSTRY_NAMEChanged();
            }
        }
        private global::System.String _GICS_SUB_INDUSTRY_NAME;
        partial void OnGICS_SUB_INDUSTRY_NAMEChanging(global::System.String value);
        partial void OnGICS_SUB_INDUSTRY_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LOOK_THRU_FUND
        {
            get
            {
                return _LOOK_THRU_FUND;
            }
            set
            {
                OnLOOK_THRU_FUNDChanging(value);
                ReportPropertyChanging("LOOK_THRU_FUND");
                _LOOK_THRU_FUND = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LOOK_THRU_FUND");
                OnLOOK_THRU_FUNDChanged();
            }
        }
        private global::System.String _LOOK_THRU_FUND;
        partial void OnLOOK_THRU_FUNDChanging(global::System.String value);
        partial void OnLOOK_THRU_FUNDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> BARRA_RISK_FACTOR_MOMENTUM
        {
            get
            {
                return _BARRA_RISK_FACTOR_MOMENTUM;
            }
            set
            {
                OnBARRA_RISK_FACTOR_MOMENTUMChanging(value);
                ReportPropertyChanging("BARRA_RISK_FACTOR_MOMENTUM");
                _BARRA_RISK_FACTOR_MOMENTUM = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BARRA_RISK_FACTOR_MOMENTUM");
                OnBARRA_RISK_FACTOR_MOMENTUMChanged();
            }
        }
        private Nullable<global::System.Decimal> _BARRA_RISK_FACTOR_MOMENTUM;
        partial void OnBARRA_RISK_FACTOR_MOMENTUMChanging(Nullable<global::System.Decimal> value);
        partial void OnBARRA_RISK_FACTOR_MOMENTUMChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> BARRA_RISK_FACTOR_VOLATILITY
        {
            get
            {
                return _BARRA_RISK_FACTOR_VOLATILITY;
            }
            set
            {
                OnBARRA_RISK_FACTOR_VOLATILITYChanging(value);
                ReportPropertyChanging("BARRA_RISK_FACTOR_VOLATILITY");
                _BARRA_RISK_FACTOR_VOLATILITY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BARRA_RISK_FACTOR_VOLATILITY");
                OnBARRA_RISK_FACTOR_VOLATILITYChanged();
            }
        }
        private Nullable<global::System.Decimal> _BARRA_RISK_FACTOR_VOLATILITY;
        partial void OnBARRA_RISK_FACTOR_VOLATILITYChanging(Nullable<global::System.Decimal> value);
        partial void OnBARRA_RISK_FACTOR_VOLATILITYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> BARRA_RISK_FACTOR_VALUE
        {
            get
            {
                return _BARRA_RISK_FACTOR_VALUE;
            }
            set
            {
                OnBARRA_RISK_FACTOR_VALUEChanging(value);
                ReportPropertyChanging("BARRA_RISK_FACTOR_VALUE");
                _BARRA_RISK_FACTOR_VALUE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BARRA_RISK_FACTOR_VALUE");
                OnBARRA_RISK_FACTOR_VALUEChanged();
            }
        }
        private Nullable<global::System.Decimal> _BARRA_RISK_FACTOR_VALUE;
        partial void OnBARRA_RISK_FACTOR_VALUEChanging(Nullable<global::System.Decimal> value);
        partial void OnBARRA_RISK_FACTOR_VALUEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> BARRA_RISK_FACTOR_SIZE
        {
            get
            {
                return _BARRA_RISK_FACTOR_SIZE;
            }
            set
            {
                OnBARRA_RISK_FACTOR_SIZEChanging(value);
                ReportPropertyChanging("BARRA_RISK_FACTOR_SIZE");
                _BARRA_RISK_FACTOR_SIZE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BARRA_RISK_FACTOR_SIZE");
                OnBARRA_RISK_FACTOR_SIZEChanged();
            }
        }
        private Nullable<global::System.Decimal> _BARRA_RISK_FACTOR_SIZE;
        partial void OnBARRA_RISK_FACTOR_SIZEChanging(Nullable<global::System.Decimal> value);
        partial void OnBARRA_RISK_FACTOR_SIZEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> BARRA_RISK_FACTOR_SIZE_NONLIN
        {
            get
            {
                return _BARRA_RISK_FACTOR_SIZE_NONLIN;
            }
            set
            {
                OnBARRA_RISK_FACTOR_SIZE_NONLINChanging(value);
                ReportPropertyChanging("BARRA_RISK_FACTOR_SIZE_NONLIN");
                _BARRA_RISK_FACTOR_SIZE_NONLIN = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BARRA_RISK_FACTOR_SIZE_NONLIN");
                OnBARRA_RISK_FACTOR_SIZE_NONLINChanged();
            }
        }
        private Nullable<global::System.Decimal> _BARRA_RISK_FACTOR_SIZE_NONLIN;
        partial void OnBARRA_RISK_FACTOR_SIZE_NONLINChanging(Nullable<global::System.Decimal> value);
        partial void OnBARRA_RISK_FACTOR_SIZE_NONLINChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> BARRA_RISK_FACTOR_GROWTH
        {
            get
            {
                return _BARRA_RISK_FACTOR_GROWTH;
            }
            set
            {
                OnBARRA_RISK_FACTOR_GROWTHChanging(value);
                ReportPropertyChanging("BARRA_RISK_FACTOR_GROWTH");
                _BARRA_RISK_FACTOR_GROWTH = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BARRA_RISK_FACTOR_GROWTH");
                OnBARRA_RISK_FACTOR_GROWTHChanged();
            }
        }
        private Nullable<global::System.Decimal> _BARRA_RISK_FACTOR_GROWTH;
        partial void OnBARRA_RISK_FACTOR_GROWTHChanging(Nullable<global::System.Decimal> value);
        partial void OnBARRA_RISK_FACTOR_GROWTHChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> BARRA_RISK_FACTOR_LIQUIDITY
        {
            get
            {
                return _BARRA_RISK_FACTOR_LIQUIDITY;
            }
            set
            {
                OnBARRA_RISK_FACTOR_LIQUIDITYChanging(value);
                ReportPropertyChanging("BARRA_RISK_FACTOR_LIQUIDITY");
                _BARRA_RISK_FACTOR_LIQUIDITY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BARRA_RISK_FACTOR_LIQUIDITY");
                OnBARRA_RISK_FACTOR_LIQUIDITYChanged();
            }
        }
        private Nullable<global::System.Decimal> _BARRA_RISK_FACTOR_LIQUIDITY;
        partial void OnBARRA_RISK_FACTOR_LIQUIDITYChanging(Nullable<global::System.Decimal> value);
        partial void OnBARRA_RISK_FACTOR_LIQUIDITYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> BARRA_RISK_FACTOR_LEVERAGE
        {
            get
            {
                return _BARRA_RISK_FACTOR_LEVERAGE;
            }
            set
            {
                OnBARRA_RISK_FACTOR_LEVERAGEChanging(value);
                ReportPropertyChanging("BARRA_RISK_FACTOR_LEVERAGE");
                _BARRA_RISK_FACTOR_LEVERAGE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BARRA_RISK_FACTOR_LEVERAGE");
                OnBARRA_RISK_FACTOR_LEVERAGEChanged();
            }
        }
        private Nullable<global::System.Decimal> _BARRA_RISK_FACTOR_LEVERAGE;
        partial void OnBARRA_RISK_FACTOR_LEVERAGEChanging(Nullable<global::System.Decimal> value);
        partial void OnBARRA_RISK_FACTOR_LEVERAGEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> BARRA_RISK_FACTOR_PBETEWLD
        {
            get
            {
                return _BARRA_RISK_FACTOR_PBETEWLD;
            }
            set
            {
                OnBARRA_RISK_FACTOR_PBETEWLDChanging(value);
                ReportPropertyChanging("BARRA_RISK_FACTOR_PBETEWLD");
                _BARRA_RISK_FACTOR_PBETEWLD = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BARRA_RISK_FACTOR_PBETEWLD");
                OnBARRA_RISK_FACTOR_PBETEWLDChanged();
            }
        }
        private Nullable<global::System.Decimal> _BARRA_RISK_FACTOR_PBETEWLD;
        partial void OnBARRA_RISK_FACTOR_PBETEWLDChanging(Nullable<global::System.Decimal> value);
        partial void OnBARRA_RISK_FACTOR_PBETEWLDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExternalResearchModel", Name="GF_COMPOSITE_LTHOLDINGS")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GF_COMPOSITE_LTHOLDINGS : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GF_COMPOSITE_LTHOLDINGS object.
        /// </summary>
        /// <param name="gF_ID">Initial value of the GF_ID property.</param>
        public static GF_COMPOSITE_LTHOLDINGS CreateGF_COMPOSITE_LTHOLDINGS(global::System.Decimal gF_ID)
        {
            GF_COMPOSITE_LTHOLDINGS gF_COMPOSITE_LTHOLDINGS = new GF_COMPOSITE_LTHOLDINGS();
            gF_COMPOSITE_LTHOLDINGS.GF_ID = gF_ID;
            return gF_COMPOSITE_LTHOLDINGS;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal GF_ID
        {
            get
            {
                return _GF_ID;
            }
            set
            {
                if (_GF_ID != value)
                {
                    OnGF_IDChanging(value);
                    ReportPropertyChanging("GF_ID");
                    _GF_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GF_ID");
                    OnGF_IDChanged();
                }
            }
        }
        private global::System.Decimal _GF_ID;
        partial void OnGF_IDChanging(global::System.Decimal value);
        partial void OnGF_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PORTFOLIO_DATE
        {
            get
            {
                return _PORTFOLIO_DATE;
            }
            set
            {
                OnPORTFOLIO_DATEChanging(value);
                ReportPropertyChanging("PORTFOLIO_DATE");
                _PORTFOLIO_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PORTFOLIO_DATE");
                OnPORTFOLIO_DATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _PORTFOLIO_DATE;
        partial void OnPORTFOLIO_DATEChanging(Nullable<global::System.DateTime> value);
        partial void OnPORTFOLIO_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PORTFOLIO_ID
        {
            get
            {
                return _PORTFOLIO_ID;
            }
            set
            {
                OnPORTFOLIO_IDChanging(value);
                ReportPropertyChanging("PORTFOLIO_ID");
                _PORTFOLIO_ID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PORTFOLIO_ID");
                OnPORTFOLIO_IDChanged();
            }
        }
        private global::System.String _PORTFOLIO_ID;
        partial void OnPORTFOLIO_IDChanging(global::System.String value);
        partial void OnPORTFOLIO_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String A_PFCHOLDINGS_PORLT
        {
            get
            {
                return _A_PFCHOLDINGS_PORLT;
            }
            set
            {
                OnA_PFCHOLDINGS_PORLTChanging(value);
                ReportPropertyChanging("A_PFCHOLDINGS_PORLT");
                _A_PFCHOLDINGS_PORLT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("A_PFCHOLDINGS_PORLT");
                OnA_PFCHOLDINGS_PORLTChanged();
            }
        }
        private global::System.String _A_PFCHOLDINGS_PORLT;
        partial void OnA_PFCHOLDINGS_PORLTChanging(global::System.String value);
        partial void OnA_PFCHOLDINGS_PORLTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PORPATH
        {
            get
            {
                return _PORPATH;
            }
            set
            {
                OnPORPATHChanging(value);
                ReportPropertyChanging("PORPATH");
                _PORPATH = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PORPATH");
                OnPORPATHChanged();
            }
        }
        private global::System.String _PORPATH;
        partial void OnPORPATHChanging(global::System.String value);
        partial void OnPORPATHChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PORTFOLIO_THEME_SUBGROUP_CODE
        {
            get
            {
                return _PORTFOLIO_THEME_SUBGROUP_CODE;
            }
            set
            {
                OnPORTFOLIO_THEME_SUBGROUP_CODEChanging(value);
                ReportPropertyChanging("PORTFOLIO_THEME_SUBGROUP_CODE");
                _PORTFOLIO_THEME_SUBGROUP_CODE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PORTFOLIO_THEME_SUBGROUP_CODE");
                OnPORTFOLIO_THEME_SUBGROUP_CODEChanged();
            }
        }
        private global::System.String _PORTFOLIO_THEME_SUBGROUP_CODE;
        partial void OnPORTFOLIO_THEME_SUBGROUP_CODEChanging(global::System.String value);
        partial void OnPORTFOLIO_THEME_SUBGROUP_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PORTFOLIO_CURRENCY
        {
            get
            {
                return _PORTFOLIO_CURRENCY;
            }
            set
            {
                OnPORTFOLIO_CURRENCYChanging(value);
                ReportPropertyChanging("PORTFOLIO_CURRENCY");
                _PORTFOLIO_CURRENCY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PORTFOLIO_CURRENCY");
                OnPORTFOLIO_CURRENCYChanged();
            }
        }
        private global::System.String _PORTFOLIO_CURRENCY;
        partial void OnPORTFOLIO_CURRENCYChanging(global::System.String value);
        partial void OnPORTFOLIO_CURRENCYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BENCHMARK_ID
        {
            get
            {
                return _BENCHMARK_ID;
            }
            set
            {
                OnBENCHMARK_IDChanging(value);
                ReportPropertyChanging("BENCHMARK_ID");
                _BENCHMARK_ID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BENCHMARK_ID");
                OnBENCHMARK_IDChanged();
            }
        }
        private global::System.String _BENCHMARK_ID;
        partial void OnBENCHMARK_IDChanging(global::System.String value);
        partial void OnBENCHMARK_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ISSUER_ID
        {
            get
            {
                return _ISSUER_ID;
            }
            set
            {
                OnISSUER_IDChanging(value);
                ReportPropertyChanging("ISSUER_ID");
                _ISSUER_ID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ISSUER_ID");
                OnISSUER_IDChanged();
            }
        }
        private global::System.String _ISSUER_ID;
        partial void OnISSUER_IDChanging(global::System.String value);
        partial void OnISSUER_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ASEC_SEC_SHORT_NAME
        {
            get
            {
                return _ASEC_SEC_SHORT_NAME;
            }
            set
            {
                OnASEC_SEC_SHORT_NAMEChanging(value);
                ReportPropertyChanging("ASEC_SEC_SHORT_NAME");
                _ASEC_SEC_SHORT_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ASEC_SEC_SHORT_NAME");
                OnASEC_SEC_SHORT_NAMEChanged();
            }
        }
        private global::System.String _ASEC_SEC_SHORT_NAME;
        partial void OnASEC_SEC_SHORT_NAMEChanging(global::System.String value);
        partial void OnASEC_SEC_SHORT_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ISSUE_NAME
        {
            get
            {
                return _ISSUE_NAME;
            }
            set
            {
                OnISSUE_NAMEChanging(value);
                ReportPropertyChanging("ISSUE_NAME");
                _ISSUE_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ISSUE_NAME");
                OnISSUE_NAMEChanged();
            }
        }
        private global::System.String _ISSUE_NAME;
        partial void OnISSUE_NAMEChanging(global::System.String value);
        partial void OnISSUE_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TICKER
        {
            get
            {
                return _TICKER;
            }
            set
            {
                OnTICKERChanging(value);
                ReportPropertyChanging("TICKER");
                _TICKER = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TICKER");
                OnTICKERChanged();
            }
        }
        private global::System.String _TICKER;
        partial void OnTICKERChanging(global::System.String value);
        partial void OnTICKERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SECURITYTHEMECODE
        {
            get
            {
                return _SECURITYTHEMECODE;
            }
            set
            {
                OnSECURITYTHEMECODEChanging(value);
                ReportPropertyChanging("SECURITYTHEMECODE");
                _SECURITYTHEMECODE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SECURITYTHEMECODE");
                OnSECURITYTHEMECODEChanged();
            }
        }
        private global::System.String _SECURITYTHEMECODE;
        partial void OnSECURITYTHEMECODEChanging(global::System.String value);
        partial void OnSECURITYTHEMECODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String A_SEC_INSTR_TYPE
        {
            get
            {
                return _A_SEC_INSTR_TYPE;
            }
            set
            {
                OnA_SEC_INSTR_TYPEChanging(value);
                ReportPropertyChanging("A_SEC_INSTR_TYPE");
                _A_SEC_INSTR_TYPE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("A_SEC_INSTR_TYPE");
                OnA_SEC_INSTR_TYPEChanged();
            }
        }
        private global::System.String _A_SEC_INSTR_TYPE;
        partial void OnA_SEC_INSTR_TYPEChanging(global::System.String value);
        partial void OnA_SEC_INSTR_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SECURITY_TYPE
        {
            get
            {
                return _SECURITY_TYPE;
            }
            set
            {
                OnSECURITY_TYPEChanging(value);
                ReportPropertyChanging("SECURITY_TYPE");
                _SECURITY_TYPE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SECURITY_TYPE");
                OnSECURITY_TYPEChanged();
            }
        }
        private global::System.String _SECURITY_TYPE;
        partial void OnSECURITY_TYPEChanging(global::System.String value);
        partial void OnSECURITY_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> BALANCE_NOMINAL
        {
            get
            {
                return _BALANCE_NOMINAL;
            }
            set
            {
                OnBALANCE_NOMINALChanging(value);
                ReportPropertyChanging("BALANCE_NOMINAL");
                _BALANCE_NOMINAL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BALANCE_NOMINAL");
                OnBALANCE_NOMINALChanged();
            }
        }
        private Nullable<global::System.Decimal> _BALANCE_NOMINAL;
        partial void OnBALANCE_NOMINALChanging(Nullable<global::System.Decimal> value);
        partial void OnBALANCE_NOMINALChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> DIRTY_PRICE
        {
            get
            {
                return _DIRTY_PRICE;
            }
            set
            {
                OnDIRTY_PRICEChanging(value);
                ReportPropertyChanging("DIRTY_PRICE");
                _DIRTY_PRICE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DIRTY_PRICE");
                OnDIRTY_PRICEChanged();
            }
        }
        private Nullable<global::System.Decimal> _DIRTY_PRICE;
        partial void OnDIRTY_PRICEChanging(Nullable<global::System.Decimal> value);
        partial void OnDIRTY_PRICEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TRADING_CURRENCY
        {
            get
            {
                return _TRADING_CURRENCY;
            }
            set
            {
                OnTRADING_CURRENCYChanging(value);
                ReportPropertyChanging("TRADING_CURRENCY");
                _TRADING_CURRENCY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TRADING_CURRENCY");
                OnTRADING_CURRENCYChanged();
            }
        }
        private global::System.String _TRADING_CURRENCY;
        partial void OnTRADING_CURRENCYChanging(global::System.String value);
        partial void OnTRADING_CURRENCYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> DIRTY_VALUE_PC
        {
            get
            {
                return _DIRTY_VALUE_PC;
            }
            set
            {
                OnDIRTY_VALUE_PCChanging(value);
                ReportPropertyChanging("DIRTY_VALUE_PC");
                _DIRTY_VALUE_PC = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DIRTY_VALUE_PC");
                OnDIRTY_VALUE_PCChanged();
            }
        }
        private Nullable<global::System.Decimal> _DIRTY_VALUE_PC;
        partial void OnDIRTY_VALUE_PCChanging(Nullable<global::System.Decimal> value);
        partial void OnDIRTY_VALUE_PCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> BENCHMARK_WEIGHT
        {
            get
            {
                return _BENCHMARK_WEIGHT;
            }
            set
            {
                OnBENCHMARK_WEIGHTChanging(value);
                ReportPropertyChanging("BENCHMARK_WEIGHT");
                _BENCHMARK_WEIGHT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BENCHMARK_WEIGHT");
                OnBENCHMARK_WEIGHTChanged();
            }
        }
        private Nullable<global::System.Decimal> _BENCHMARK_WEIGHT;
        partial void OnBENCHMARK_WEIGHTChanging(Nullable<global::System.Decimal> value);
        partial void OnBENCHMARK_WEIGHTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ASH_EMM_MODEL_WEIGHT
        {
            get
            {
                return _ASH_EMM_MODEL_WEIGHT;
            }
            set
            {
                OnASH_EMM_MODEL_WEIGHTChanging(value);
                ReportPropertyChanging("ASH_EMM_MODEL_WEIGHT");
                _ASH_EMM_MODEL_WEIGHT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ASH_EMM_MODEL_WEIGHT");
                OnASH_EMM_MODEL_WEIGHTChanged();
            }
        }
        private Nullable<global::System.Decimal> _ASH_EMM_MODEL_WEIGHT;
        partial void OnASH_EMM_MODEL_WEIGHTChanging(Nullable<global::System.Decimal> value);
        partial void OnASH_EMM_MODEL_WEIGHTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> MARKET_CAP_IN_USD
        {
            get
            {
                return _MARKET_CAP_IN_USD;
            }
            set
            {
                OnMARKET_CAP_IN_USDChanging(value);
                ReportPropertyChanging("MARKET_CAP_IN_USD");
                _MARKET_CAP_IN_USD = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MARKET_CAP_IN_USD");
                OnMARKET_CAP_IN_USDChanged();
            }
        }
        private Nullable<global::System.Decimal> _MARKET_CAP_IN_USD;
        partial void OnMARKET_CAP_IN_USDChanging(Nullable<global::System.Decimal> value);
        partial void OnMARKET_CAP_IN_USDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ASHEMM_PROP_REGION_CODE
        {
            get
            {
                return _ASHEMM_PROP_REGION_CODE;
            }
            set
            {
                OnASHEMM_PROP_REGION_CODEChanging(value);
                ReportPropertyChanging("ASHEMM_PROP_REGION_CODE");
                _ASHEMM_PROP_REGION_CODE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ASHEMM_PROP_REGION_CODE");
                OnASHEMM_PROP_REGION_CODEChanged();
            }
        }
        private global::System.String _ASHEMM_PROP_REGION_CODE;
        partial void OnASHEMM_PROP_REGION_CODEChanging(global::System.String value);
        partial void OnASHEMM_PROP_REGION_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ASHEMM_PROP_REGION_NAME
        {
            get
            {
                return _ASHEMM_PROP_REGION_NAME;
            }
            set
            {
                OnASHEMM_PROP_REGION_NAMEChanging(value);
                ReportPropertyChanging("ASHEMM_PROP_REGION_NAME");
                _ASHEMM_PROP_REGION_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ASHEMM_PROP_REGION_NAME");
                OnASHEMM_PROP_REGION_NAMEChanged();
            }
        }
        private global::System.String _ASHEMM_PROP_REGION_NAME;
        partial void OnASHEMM_PROP_REGION_NAMEChanging(global::System.String value);
        partial void OnASHEMM_PROP_REGION_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ISO_COUNTRY_CODE
        {
            get
            {
                return _ISO_COUNTRY_CODE;
            }
            set
            {
                OnISO_COUNTRY_CODEChanging(value);
                ReportPropertyChanging("ISO_COUNTRY_CODE");
                _ISO_COUNTRY_CODE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ISO_COUNTRY_CODE");
                OnISO_COUNTRY_CODEChanged();
            }
        }
        private global::System.String _ISO_COUNTRY_CODE;
        partial void OnISO_COUNTRY_CODEChanging(global::System.String value);
        partial void OnISO_COUNTRY_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String COUNTRYNAME
        {
            get
            {
                return _COUNTRYNAME;
            }
            set
            {
                OnCOUNTRYNAMEChanging(value);
                ReportPropertyChanging("COUNTRYNAME");
                _COUNTRYNAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("COUNTRYNAME");
                OnCOUNTRYNAMEChanged();
            }
        }
        private global::System.String _COUNTRYNAME;
        partial void OnCOUNTRYNAMEChanging(global::System.String value);
        partial void OnCOUNTRYNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GICS_SECTOR
        {
            get
            {
                return _GICS_SECTOR;
            }
            set
            {
                OnGICS_SECTORChanging(value);
                ReportPropertyChanging("GICS_SECTOR");
                _GICS_SECTOR = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GICS_SECTOR");
                OnGICS_SECTORChanged();
            }
        }
        private global::System.String _GICS_SECTOR;
        partial void OnGICS_SECTORChanging(global::System.String value);
        partial void OnGICS_SECTORChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GICS_SECTOR_NAME
        {
            get
            {
                return _GICS_SECTOR_NAME;
            }
            set
            {
                OnGICS_SECTOR_NAMEChanging(value);
                ReportPropertyChanging("GICS_SECTOR_NAME");
                _GICS_SECTOR_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GICS_SECTOR_NAME");
                OnGICS_SECTOR_NAMEChanged();
            }
        }
        private global::System.String _GICS_SECTOR_NAME;
        partial void OnGICS_SECTOR_NAMEChanging(global::System.String value);
        partial void OnGICS_SECTOR_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GICS_INDUSTRY
        {
            get
            {
                return _GICS_INDUSTRY;
            }
            set
            {
                OnGICS_INDUSTRYChanging(value);
                ReportPropertyChanging("GICS_INDUSTRY");
                _GICS_INDUSTRY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GICS_INDUSTRY");
                OnGICS_INDUSTRYChanged();
            }
        }
        private global::System.String _GICS_INDUSTRY;
        partial void OnGICS_INDUSTRYChanging(global::System.String value);
        partial void OnGICS_INDUSTRYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GICS_INDUSTRY_NAME
        {
            get
            {
                return _GICS_INDUSTRY_NAME;
            }
            set
            {
                OnGICS_INDUSTRY_NAMEChanging(value);
                ReportPropertyChanging("GICS_INDUSTRY_NAME");
                _GICS_INDUSTRY_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GICS_INDUSTRY_NAME");
                OnGICS_INDUSTRY_NAMEChanged();
            }
        }
        private global::System.String _GICS_INDUSTRY_NAME;
        partial void OnGICS_INDUSTRY_NAMEChanging(global::System.String value);
        partial void OnGICS_INDUSTRY_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GICS_SUB_INDUSTRY
        {
            get
            {
                return _GICS_SUB_INDUSTRY;
            }
            set
            {
                OnGICS_SUB_INDUSTRYChanging(value);
                ReportPropertyChanging("GICS_SUB_INDUSTRY");
                _GICS_SUB_INDUSTRY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GICS_SUB_INDUSTRY");
                OnGICS_SUB_INDUSTRYChanged();
            }
        }
        private global::System.String _GICS_SUB_INDUSTRY;
        partial void OnGICS_SUB_INDUSTRYChanging(global::System.String value);
        partial void OnGICS_SUB_INDUSTRYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GICS_SUB_INDUSTRY_NAME
        {
            get
            {
                return _GICS_SUB_INDUSTRY_NAME;
            }
            set
            {
                OnGICS_SUB_INDUSTRY_NAMEChanging(value);
                ReportPropertyChanging("GICS_SUB_INDUSTRY_NAME");
                _GICS_SUB_INDUSTRY_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GICS_SUB_INDUSTRY_NAME");
                OnGICS_SUB_INDUSTRY_NAMEChanged();
            }
        }
        private global::System.String _GICS_SUB_INDUSTRY_NAME;
        partial void OnGICS_SUB_INDUSTRY_NAMEChanging(global::System.String value);
        partial void OnGICS_SUB_INDUSTRY_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LOOK_THRU_FUND
        {
            get
            {
                return _LOOK_THRU_FUND;
            }
            set
            {
                OnLOOK_THRU_FUNDChanging(value);
                ReportPropertyChanging("LOOK_THRU_FUND");
                _LOOK_THRU_FUND = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LOOK_THRU_FUND");
                OnLOOK_THRU_FUNDChanged();
            }
        }
        private global::System.String _LOOK_THRU_FUND;
        partial void OnLOOK_THRU_FUNDChanging(global::System.String value);
        partial void OnLOOK_THRU_FUNDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExternalResearchModel", Name="GF_SECURITY_BASEVIEW_Local")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GF_SECURITY_BASEVIEW_Local : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GF_SECURITY_BASEVIEW_Local object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static GF_SECURITY_BASEVIEW_Local CreateGF_SECURITY_BASEVIEW_Local(global::System.Int32 id)
        {
            GF_SECURITY_BASEVIEW_Local gF_SECURITY_BASEVIEW_Local = new GF_SECURITY_BASEVIEW_Local();
            gF_SECURITY_BASEVIEW_Local.ID = id;
            return gF_SECURITY_BASEVIEW_Local;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> GF_ID
        {
            get
            {
                return _GF_ID;
            }
            set
            {
                OnGF_IDChanging(value);
                ReportPropertyChanging("GF_ID");
                _GF_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GF_ID");
                OnGF_IDChanged();
            }
        }
        private Nullable<global::System.Int16> _GF_ID;
        partial void OnGF_IDChanging(Nullable<global::System.Int16> value);
        partial void OnGF_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SECURITY_ID
        {
            get
            {
                return _SECURITY_ID;
            }
            set
            {
                OnSECURITY_IDChanging(value);
                ReportPropertyChanging("SECURITY_ID");
                _SECURITY_ID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SECURITY_ID");
                OnSECURITY_IDChanged();
            }
        }
        private global::System.String _SECURITY_ID;
        partial void OnSECURITY_IDChanging(global::System.String value);
        partial void OnSECURITY_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ASEC_SEC_SHORT_NAME
        {
            get
            {
                return _ASEC_SEC_SHORT_NAME;
            }
            set
            {
                OnASEC_SEC_SHORT_NAMEChanging(value);
                ReportPropertyChanging("ASEC_SEC_SHORT_NAME");
                _ASEC_SEC_SHORT_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ASEC_SEC_SHORT_NAME");
                OnASEC_SEC_SHORT_NAMEChanged();
            }
        }
        private global::System.String _ASEC_SEC_SHORT_NAME;
        partial void OnASEC_SEC_SHORT_NAMEChanging(global::System.String value);
        partial void OnASEC_SEC_SHORT_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ISSUE_NAME
        {
            get
            {
                return _ISSUE_NAME;
            }
            set
            {
                OnISSUE_NAMEChanging(value);
                ReportPropertyChanging("ISSUE_NAME");
                _ISSUE_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ISSUE_NAME");
                OnISSUE_NAMEChanged();
            }
        }
        private global::System.String _ISSUE_NAME;
        partial void OnISSUE_NAMEChanging(global::System.String value);
        partial void OnISSUE_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ISIN
        {
            get
            {
                return _ISIN;
            }
            set
            {
                OnISINChanging(value);
                ReportPropertyChanging("ISIN");
                _ISIN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ISIN");
                OnISINChanged();
            }
        }
        private global::System.String _ISIN;
        partial void OnISINChanging(global::System.String value);
        partial void OnISINChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SEDOL
        {
            get
            {
                return _SEDOL;
            }
            set
            {
                OnSEDOLChanging(value);
                ReportPropertyChanging("SEDOL");
                _SEDOL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SEDOL");
                OnSEDOLChanged();
            }
        }
        private global::System.String _SEDOL;
        partial void OnSEDOLChanging(global::System.String value);
        partial void OnSEDOLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SECS_INSTYPE
        {
            get
            {
                return _SECS_INSTYPE;
            }
            set
            {
                OnSECS_INSTYPEChanging(value);
                ReportPropertyChanging("SECS_INSTYPE");
                _SECS_INSTYPE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SECS_INSTYPE");
                OnSECS_INSTYPEChanged();
            }
        }
        private global::System.String _SECS_INSTYPE;
        partial void OnSECS_INSTYPEChanging(global::System.String value);
        partial void OnSECS_INSTYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ASEC_INSTR_TYPE
        {
            get
            {
                return _ASEC_INSTR_TYPE;
            }
            set
            {
                OnASEC_INSTR_TYPEChanging(value);
                ReportPropertyChanging("ASEC_INSTR_TYPE");
                _ASEC_INSTR_TYPE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ASEC_INSTR_TYPE");
                OnASEC_INSTR_TYPEChanged();
            }
        }
        private global::System.String _ASEC_INSTR_TYPE;
        partial void OnASEC_INSTR_TYPEChanging(global::System.String value);
        partial void OnASEC_INSTR_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SECURITY_TYPE
        {
            get
            {
                return _SECURITY_TYPE;
            }
            set
            {
                OnSECURITY_TYPEChanging(value);
                ReportPropertyChanging("SECURITY_TYPE");
                _SECURITY_TYPE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SECURITY_TYPE");
                OnSECURITY_TYPEChanged();
            }
        }
        private global::System.String _SECURITY_TYPE;
        partial void OnSECURITY_TYPEChanging(global::System.String value);
        partial void OnSECURITY_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ASEC_FC_SEC_REF
        {
            get
            {
                return _ASEC_FC_SEC_REF;
            }
            set
            {
                OnASEC_FC_SEC_REFChanging(value);
                ReportPropertyChanging("ASEC_FC_SEC_REF");
                _ASEC_FC_SEC_REF = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ASEC_FC_SEC_REF");
                OnASEC_FC_SEC_REFChanged();
            }
        }
        private Nullable<global::System.Int32> _ASEC_FC_SEC_REF;
        partial void OnASEC_FC_SEC_REFChanging(Nullable<global::System.Int32> value);
        partial void OnASEC_FC_SEC_REFChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LOOK_THRU_FUND
        {
            get
            {
                return _LOOK_THRU_FUND;
            }
            set
            {
                OnLOOK_THRU_FUNDChanging(value);
                ReportPropertyChanging("LOOK_THRU_FUND");
                _LOOK_THRU_FUND = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LOOK_THRU_FUND");
                OnLOOK_THRU_FUNDChanged();
            }
        }
        private global::System.String _LOOK_THRU_FUND;
        partial void OnLOOK_THRU_FUNDChanging(global::System.String value);
        partial void OnLOOK_THRU_FUNDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> FIFTYTWO_WEEK_LOW
        {
            get
            {
                return _FIFTYTWO_WEEK_LOW;
            }
            set
            {
                OnFIFTYTWO_WEEK_LOWChanging(value);
                ReportPropertyChanging("FIFTYTWO_WEEK_LOW");
                _FIFTYTWO_WEEK_LOW = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FIFTYTWO_WEEK_LOW");
                OnFIFTYTWO_WEEK_LOWChanged();
            }
        }
        private Nullable<global::System.Double> _FIFTYTWO_WEEK_LOW;
        partial void OnFIFTYTWO_WEEK_LOWChanging(Nullable<global::System.Double> value);
        partial void OnFIFTYTWO_WEEK_LOWChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> FIFTYTWO_WEEK_HIGH
        {
            get
            {
                return _FIFTYTWO_WEEK_HIGH;
            }
            set
            {
                OnFIFTYTWO_WEEK_HIGHChanging(value);
                ReportPropertyChanging("FIFTYTWO_WEEK_HIGH");
                _FIFTYTWO_WEEK_HIGH = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FIFTYTWO_WEEK_HIGH");
                OnFIFTYTWO_WEEK_HIGHChanged();
            }
        }
        private Nullable<global::System.Double> _FIFTYTWO_WEEK_HIGH;
        partial void OnFIFTYTWO_WEEK_HIGHChanging(Nullable<global::System.Double> value);
        partial void OnFIFTYTWO_WEEK_HIGHChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SECURITY_VOLUME_AVG_90D
        {
            get
            {
                return _SECURITY_VOLUME_AVG_90D;
            }
            set
            {
                OnSECURITY_VOLUME_AVG_90DChanging(value);
                ReportPropertyChanging("SECURITY_VOLUME_AVG_90D");
                _SECURITY_VOLUME_AVG_90D = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SECURITY_VOLUME_AVG_90D");
                OnSECURITY_VOLUME_AVG_90DChanged();
            }
        }
        private global::System.String _SECURITY_VOLUME_AVG_90D;
        partial void OnSECURITY_VOLUME_AVG_90DChanging(global::System.String value);
        partial void OnSECURITY_VOLUME_AVG_90DChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> SECURITY_VOLUME_AVG_6M
        {
            get
            {
                return _SECURITY_VOLUME_AVG_6M;
            }
            set
            {
                OnSECURITY_VOLUME_AVG_6MChanging(value);
                ReportPropertyChanging("SECURITY_VOLUME_AVG_6M");
                _SECURITY_VOLUME_AVG_6M = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SECURITY_VOLUME_AVG_6M");
                OnSECURITY_VOLUME_AVG_6MChanged();
            }
        }
        private Nullable<global::System.Double> _SECURITY_VOLUME_AVG_6M;
        partial void OnSECURITY_VOLUME_AVG_6MChanging(Nullable<global::System.Double> value);
        partial void OnSECURITY_VOLUME_AVG_6MChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> SECURITY_VOLUME_AVG_30D
        {
            get
            {
                return _SECURITY_VOLUME_AVG_30D;
            }
            set
            {
                OnSECURITY_VOLUME_AVG_30DChanging(value);
                ReportPropertyChanging("SECURITY_VOLUME_AVG_30D");
                _SECURITY_VOLUME_AVG_30D = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SECURITY_VOLUME_AVG_30D");
                OnSECURITY_VOLUME_AVG_30DChanged();
            }
        }
        private Nullable<global::System.Double> _SECURITY_VOLUME_AVG_30D;
        partial void OnSECURITY_VOLUME_AVG_30DChanging(Nullable<global::System.Double> value);
        partial void OnSECURITY_VOLUME_AVG_30DChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GREENFIELD_FLAG
        {
            get
            {
                return _GREENFIELD_FLAG;
            }
            set
            {
                OnGREENFIELD_FLAGChanging(value);
                ReportPropertyChanging("GREENFIELD_FLAG");
                _GREENFIELD_FLAG = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GREENFIELD_FLAG");
                OnGREENFIELD_FLAGChanged();
            }
        }
        private global::System.String _GREENFIELD_FLAG;
        partial void OnGREENFIELD_FLAGChanging(global::System.String value);
        partial void OnGREENFIELD_FLAGChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WACC_COST_EQUITY
        {
            get
            {
                return _WACC_COST_EQUITY;
            }
            set
            {
                OnWACC_COST_EQUITYChanging(value);
                ReportPropertyChanging("WACC_COST_EQUITY");
                _WACC_COST_EQUITY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WACC_COST_EQUITY");
                OnWACC_COST_EQUITYChanged();
            }
        }
        private global::System.String _WACC_COST_EQUITY;
        partial void OnWACC_COST_EQUITYChanging(global::System.String value);
        partial void OnWACC_COST_EQUITYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WACC_COST_PFD
        {
            get
            {
                return _WACC_COST_PFD;
            }
            set
            {
                OnWACC_COST_PFDChanging(value);
                ReportPropertyChanging("WACC_COST_PFD");
                _WACC_COST_PFD = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WACC_COST_PFD");
                OnWACC_COST_PFDChanged();
            }
        }
        private global::System.String _WACC_COST_PFD;
        partial void OnWACC_COST_PFDChanging(global::System.String value);
        partial void OnWACC_COST_PFDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WACC_COST_DEBT
        {
            get
            {
                return _WACC_COST_DEBT;
            }
            set
            {
                OnWACC_COST_DEBTChanging(value);
                ReportPropertyChanging("WACC_COST_DEBT");
                _WACC_COST_DEBT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WACC_COST_DEBT");
                OnWACC_COST_DEBTChanged();
            }
        }
        private global::System.String _WACC_COST_DEBT;
        partial void OnWACC_COST_DEBTChanging(global::System.String value);
        partial void OnWACC_COST_DEBTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FLOAT_AMOUNT
        {
            get
            {
                return _FLOAT_AMOUNT;
            }
            set
            {
                OnFLOAT_AMOUNTChanging(value);
                ReportPropertyChanging("FLOAT_AMOUNT");
                _FLOAT_AMOUNT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FLOAT_AMOUNT");
                OnFLOAT_AMOUNTChanged();
            }
        }
        private global::System.String _FLOAT_AMOUNT;
        partial void OnFLOAT_AMOUNTChanging(global::System.String value);
        partial void OnFLOAT_AMOUNTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CUSIP
        {
            get
            {
                return _CUSIP;
            }
            set
            {
                OnCUSIPChanging(value);
                ReportPropertyChanging("CUSIP");
                _CUSIP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CUSIP");
                OnCUSIPChanged();
            }
        }
        private global::System.String _CUSIP;
        partial void OnCUSIPChanging(global::System.String value);
        partial void OnCUSIPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String STOCK_EXCHANGE_ID
        {
            get
            {
                return _STOCK_EXCHANGE_ID;
            }
            set
            {
                OnSTOCK_EXCHANGE_IDChanging(value);
                ReportPropertyChanging("STOCK_EXCHANGE_ID");
                _STOCK_EXCHANGE_ID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("STOCK_EXCHANGE_ID");
                OnSTOCK_EXCHANGE_IDChanged();
            }
        }
        private global::System.String _STOCK_EXCHANGE_ID;
        partial void OnSTOCK_EXCHANGE_IDChanging(global::System.String value);
        partial void OnSTOCK_EXCHANGE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> ASEC_ISSUED_VOLUME
        {
            get
            {
                return _ASEC_ISSUED_VOLUME;
            }
            set
            {
                OnASEC_ISSUED_VOLUMEChanging(value);
                ReportPropertyChanging("ASEC_ISSUED_VOLUME");
                _ASEC_ISSUED_VOLUME = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ASEC_ISSUED_VOLUME");
                OnASEC_ISSUED_VOLUMEChanged();
            }
        }
        private Nullable<global::System.Double> _ASEC_ISSUED_VOLUME;
        partial void OnASEC_ISSUED_VOLUMEChanging(Nullable<global::System.Double> value);
        partial void OnASEC_ISSUED_VOLUMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ISSUER_ID
        {
            get
            {
                return _ISSUER_ID;
            }
            set
            {
                OnISSUER_IDChanging(value);
                ReportPropertyChanging("ISSUER_ID");
                _ISSUER_ID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ISSUER_ID");
                OnISSUER_IDChanged();
            }
        }
        private global::System.String _ISSUER_ID;
        partial void OnISSUER_IDChanging(global::System.String value);
        partial void OnISSUER_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TRADING_CURRENCY
        {
            get
            {
                return _TRADING_CURRENCY;
            }
            set
            {
                OnTRADING_CURRENCYChanging(value);
                ReportPropertyChanging("TRADING_CURRENCY");
                _TRADING_CURRENCY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TRADING_CURRENCY");
                OnTRADING_CURRENCYChanged();
            }
        }
        private global::System.String _TRADING_CURRENCY;
        partial void OnTRADING_CURRENCYChanging(global::System.String value);
        partial void OnTRADING_CURRENCYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> SHARES_OUTSTANDING
        {
            get
            {
                return _SHARES_OUTSTANDING;
            }
            set
            {
                OnSHARES_OUTSTANDINGChanging(value);
                ReportPropertyChanging("SHARES_OUTSTANDING");
                _SHARES_OUTSTANDING = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SHARES_OUTSTANDING");
                OnSHARES_OUTSTANDINGChanged();
            }
        }
        private Nullable<global::System.Double> _SHARES_OUTSTANDING;
        partial void OnSHARES_OUTSTANDINGChanging(Nullable<global::System.Double> value);
        partial void OnSHARES_OUTSTANDINGChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BETA
        {
            get
            {
                return _BETA;
            }
            set
            {
                OnBETAChanging(value);
                ReportPropertyChanging("BETA");
                _BETA = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BETA");
                OnBETAChanged();
            }
        }
        private global::System.String _BETA;
        partial void OnBETAChanging(global::System.String value);
        partial void OnBETAChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> BARRA_BETA
        {
            get
            {
                return _BARRA_BETA;
            }
            set
            {
                OnBARRA_BETAChanging(value);
                ReportPropertyChanging("BARRA_BETA");
                _BARRA_BETA = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BARRA_BETA");
                OnBARRA_BETAChanged();
            }
        }
        private Nullable<global::System.Double> _BARRA_BETA;
        partial void OnBARRA_BETAChanging(Nullable<global::System.Double> value);
        partial void OnBARRA_BETAChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TICKER
        {
            get
            {
                return _TICKER;
            }
            set
            {
                OnTICKERChanging(value);
                ReportPropertyChanging("TICKER");
                _TICKER = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TICKER");
                OnTICKERChanged();
            }
        }
        private global::System.String _TICKER;
        partial void OnTICKERChanging(global::System.String value);
        partial void OnTICKERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MSCI
        {
            get
            {
                return _MSCI;
            }
            set
            {
                OnMSCIChanging(value);
                ReportPropertyChanging("MSCI");
                _MSCI = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MSCI");
                OnMSCIChanged();
            }
        }
        private global::System.String _MSCI;
        partial void OnMSCIChanging(global::System.String value);
        partial void OnMSCIChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BARRA
        {
            get
            {
                return _BARRA;
            }
            set
            {
                OnBARRAChanging(value);
                ReportPropertyChanging("BARRA");
                _BARRA = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BARRA");
                OnBARRAChanged();
            }
        }
        private global::System.String _BARRA;
        partial void OnBARRAChanging(global::System.String value);
        partial void OnBARRAChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ISO_COUNTRY_CODE
        {
            get
            {
                return _ISO_COUNTRY_CODE;
            }
            set
            {
                OnISO_COUNTRY_CODEChanging(value);
                ReportPropertyChanging("ISO_COUNTRY_CODE");
                _ISO_COUNTRY_CODE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ISO_COUNTRY_CODE");
                OnISO_COUNTRY_CODEChanged();
            }
        }
        private global::System.String _ISO_COUNTRY_CODE;
        partial void OnISO_COUNTRY_CODEChanging(global::System.String value);
        partial void OnISO_COUNTRY_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ASEC_SEC_COUNTRY_NAME
        {
            get
            {
                return _ASEC_SEC_COUNTRY_NAME;
            }
            set
            {
                OnASEC_SEC_COUNTRY_NAMEChanging(value);
                ReportPropertyChanging("ASEC_SEC_COUNTRY_NAME");
                _ASEC_SEC_COUNTRY_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ASEC_SEC_COUNTRY_NAME");
                OnASEC_SEC_COUNTRY_NAMEChanged();
            }
        }
        private global::System.String _ASEC_SEC_COUNTRY_NAME;
        partial void OnASEC_SEC_COUNTRY_NAMEChanging(global::System.String value);
        partial void OnASEC_SEC_COUNTRY_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ASHEMM_PROPRIETARY_REGION_CODE
        {
            get
            {
                return _ASHEMM_PROPRIETARY_REGION_CODE;
            }
            set
            {
                OnASHEMM_PROPRIETARY_REGION_CODEChanging(value);
                ReportPropertyChanging("ASHEMM_PROPRIETARY_REGION_CODE");
                _ASHEMM_PROPRIETARY_REGION_CODE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ASHEMM_PROPRIETARY_REGION_CODE");
                OnASHEMM_PROPRIETARY_REGION_CODEChanged();
            }
        }
        private global::System.String _ASHEMM_PROPRIETARY_REGION_CODE;
        partial void OnASHEMM_PROPRIETARY_REGION_CODEChanging(global::System.String value);
        partial void OnASHEMM_PROPRIETARY_REGION_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ASEC_SEC_COUNTRY_ZONE_NAME
        {
            get
            {
                return _ASEC_SEC_COUNTRY_ZONE_NAME;
            }
            set
            {
                OnASEC_SEC_COUNTRY_ZONE_NAMEChanging(value);
                ReportPropertyChanging("ASEC_SEC_COUNTRY_ZONE_NAME");
                _ASEC_SEC_COUNTRY_ZONE_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ASEC_SEC_COUNTRY_ZONE_NAME");
                OnASEC_SEC_COUNTRY_ZONE_NAMEChanged();
            }
        }
        private global::System.String _ASEC_SEC_COUNTRY_ZONE_NAME;
        partial void OnASEC_SEC_COUNTRY_ZONE_NAMEChanging(global::System.String value);
        partial void OnASEC_SEC_COUNTRY_ZONE_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ISSUER_NAME
        {
            get
            {
                return _ISSUER_NAME;
            }
            set
            {
                OnISSUER_NAMEChanging(value);
                ReportPropertyChanging("ISSUER_NAME");
                _ISSUER_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ISSUER_NAME");
                OnISSUER_NAMEChanged();
            }
        }
        private global::System.String _ISSUER_NAME;
        partial void OnISSUER_NAMEChanging(global::System.String value);
        partial void OnISSUER_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ASHEMM_ONE_LINER_DESCRIPTION
        {
            get
            {
                return _ASHEMM_ONE_LINER_DESCRIPTION;
            }
            set
            {
                OnASHEMM_ONE_LINER_DESCRIPTIONChanging(value);
                ReportPropertyChanging("ASHEMM_ONE_LINER_DESCRIPTION");
                _ASHEMM_ONE_LINER_DESCRIPTION = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ASHEMM_ONE_LINER_DESCRIPTION");
                OnASHEMM_ONE_LINER_DESCRIPTIONChanged();
            }
        }
        private global::System.String _ASHEMM_ONE_LINER_DESCRIPTION;
        partial void OnASHEMM_ONE_LINER_DESCRIPTIONChanging(global::System.String value);
        partial void OnASHEMM_ONE_LINER_DESCRIPTIONChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BLOOMBERG_DESCRIPTION
        {
            get
            {
                return _BLOOMBERG_DESCRIPTION;
            }
            set
            {
                OnBLOOMBERG_DESCRIPTIONChanging(value);
                ReportPropertyChanging("BLOOMBERG_DESCRIPTION");
                _BLOOMBERG_DESCRIPTION = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BLOOMBERG_DESCRIPTION");
                OnBLOOMBERG_DESCRIPTIONChanged();
            }
        }
        private global::System.String _BLOOMBERG_DESCRIPTION;
        partial void OnBLOOMBERG_DESCRIPTIONChanging(global::System.String value);
        partial void OnBLOOMBERG_DESCRIPTIONChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ASHMOREEMM_INDUSTRY_ANALYST
        {
            get
            {
                return _ASHMOREEMM_INDUSTRY_ANALYST;
            }
            set
            {
                OnASHMOREEMM_INDUSTRY_ANALYSTChanging(value);
                ReportPropertyChanging("ASHMOREEMM_INDUSTRY_ANALYST");
                _ASHMOREEMM_INDUSTRY_ANALYST = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ASHMOREEMM_INDUSTRY_ANALYST");
                OnASHMOREEMM_INDUSTRY_ANALYSTChanged();
            }
        }
        private global::System.String _ASHMOREEMM_INDUSTRY_ANALYST;
        partial void OnASHMOREEMM_INDUSTRY_ANALYSTChanging(global::System.String value);
        partial void OnASHMOREEMM_INDUSTRY_ANALYSTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ASHMOREEMM_PRIMARY_ANALYST
        {
            get
            {
                return _ASHMOREEMM_PRIMARY_ANALYST;
            }
            set
            {
                OnASHMOREEMM_PRIMARY_ANALYSTChanging(value);
                ReportPropertyChanging("ASHMOREEMM_PRIMARY_ANALYST");
                _ASHMOREEMM_PRIMARY_ANALYST = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ASHMOREEMM_PRIMARY_ANALYST");
                OnASHMOREEMM_PRIMARY_ANALYSTChanged();
            }
        }
        private global::System.String _ASHMOREEMM_PRIMARY_ANALYST;
        partial void OnASHMOREEMM_PRIMARY_ANALYSTChanging(global::System.String value);
        partial void OnASHMOREEMM_PRIMARY_ANALYSTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ASHMOREEMM_PORTFOLIO_MANAGER
        {
            get
            {
                return _ASHMOREEMM_PORTFOLIO_MANAGER;
            }
            set
            {
                OnASHMOREEMM_PORTFOLIO_MANAGERChanging(value);
                ReportPropertyChanging("ASHMOREEMM_PORTFOLIO_MANAGER");
                _ASHMOREEMM_PORTFOLIO_MANAGER = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ASHMOREEMM_PORTFOLIO_MANAGER");
                OnASHMOREEMM_PORTFOLIO_MANAGERChanged();
            }
        }
        private global::System.String _ASHMOREEMM_PORTFOLIO_MANAGER;
        partial void OnASHMOREEMM_PORTFOLIO_MANAGERChanging(global::System.String value);
        partial void OnASHMOREEMM_PORTFOLIO_MANAGERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WEBSITE
        {
            get
            {
                return _WEBSITE;
            }
            set
            {
                OnWEBSITEChanging(value);
                ReportPropertyChanging("WEBSITE");
                _WEBSITE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WEBSITE");
                OnWEBSITEChanged();
            }
        }
        private global::System.String _WEBSITE;
        partial void OnWEBSITEChanging(global::System.String value);
        partial void OnWEBSITEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FISCAL_YEAR_END
        {
            get
            {
                return _FISCAL_YEAR_END;
            }
            set
            {
                OnFISCAL_YEAR_ENDChanging(value);
                ReportPropertyChanging("FISCAL_YEAR_END");
                _FISCAL_YEAR_END = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FISCAL_YEAR_END");
                OnFISCAL_YEAR_ENDChanged();
            }
        }
        private global::System.String _FISCAL_YEAR_END;
        partial void OnFISCAL_YEAR_ENDChanging(global::System.String value);
        partial void OnFISCAL_YEAR_ENDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String XREF
        {
            get
            {
                return _XREF;
            }
            set
            {
                OnXREFChanging(value);
                ReportPropertyChanging("XREF");
                _XREF = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("XREF");
                OnXREFChanged();
            }
        }
        private global::System.String _XREF;
        partial void OnXREFChanging(global::System.String value);
        partial void OnXREFChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String REPORTNUMBER
        {
            get
            {
                return _REPORTNUMBER;
            }
            set
            {
                OnREPORTNUMBERChanging(value);
                ReportPropertyChanging("REPORTNUMBER");
                _REPORTNUMBER = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("REPORTNUMBER");
                OnREPORTNUMBERChanged();
            }
        }
        private global::System.String _REPORTNUMBER;
        partial void OnREPORTNUMBERChanging(global::System.String value);
        partial void OnREPORTNUMBERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GICS_SECTOR
        {
            get
            {
                return _GICS_SECTOR;
            }
            set
            {
                OnGICS_SECTORChanging(value);
                ReportPropertyChanging("GICS_SECTOR");
                _GICS_SECTOR = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GICS_SECTOR");
                OnGICS_SECTORChanged();
            }
        }
        private global::System.String _GICS_SECTOR;
        partial void OnGICS_SECTORChanging(global::System.String value);
        partial void OnGICS_SECTORChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GICS_SECTOR_NAME
        {
            get
            {
                return _GICS_SECTOR_NAME;
            }
            set
            {
                OnGICS_SECTOR_NAMEChanging(value);
                ReportPropertyChanging("GICS_SECTOR_NAME");
                _GICS_SECTOR_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GICS_SECTOR_NAME");
                OnGICS_SECTOR_NAMEChanged();
            }
        }
        private global::System.String _GICS_SECTOR_NAME;
        partial void OnGICS_SECTOR_NAMEChanging(global::System.String value);
        partial void OnGICS_SECTOR_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GICS_INDUSTRY
        {
            get
            {
                return _GICS_INDUSTRY;
            }
            set
            {
                OnGICS_INDUSTRYChanging(value);
                ReportPropertyChanging("GICS_INDUSTRY");
                _GICS_INDUSTRY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GICS_INDUSTRY");
                OnGICS_INDUSTRYChanged();
            }
        }
        private global::System.String _GICS_INDUSTRY;
        partial void OnGICS_INDUSTRYChanging(global::System.String value);
        partial void OnGICS_INDUSTRYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GICS_INDUSTRY_NAME
        {
            get
            {
                return _GICS_INDUSTRY_NAME;
            }
            set
            {
                OnGICS_INDUSTRY_NAMEChanging(value);
                ReportPropertyChanging("GICS_INDUSTRY_NAME");
                _GICS_INDUSTRY_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GICS_INDUSTRY_NAME");
                OnGICS_INDUSTRY_NAMEChanged();
            }
        }
        private global::System.String _GICS_INDUSTRY_NAME;
        partial void OnGICS_INDUSTRY_NAMEChanging(global::System.String value);
        partial void OnGICS_INDUSTRY_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GICS_SUB_INDUSTRY
        {
            get
            {
                return _GICS_SUB_INDUSTRY;
            }
            set
            {
                OnGICS_SUB_INDUSTRYChanging(value);
                ReportPropertyChanging("GICS_SUB_INDUSTRY");
                _GICS_SUB_INDUSTRY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GICS_SUB_INDUSTRY");
                OnGICS_SUB_INDUSTRYChanged();
            }
        }
        private global::System.String _GICS_SUB_INDUSTRY;
        partial void OnGICS_SUB_INDUSTRYChanging(global::System.String value);
        partial void OnGICS_SUB_INDUSTRYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GICS_SUB_INDUSTRY_NAME
        {
            get
            {
                return _GICS_SUB_INDUSTRY_NAME;
            }
            set
            {
                OnGICS_SUB_INDUSTRY_NAMEChanging(value);
                ReportPropertyChanging("GICS_SUB_INDUSTRY_NAME");
                _GICS_SUB_INDUSTRY_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GICS_SUB_INDUSTRY_NAME");
                OnGICS_SUB_INDUSTRY_NAMEChanged();
            }
        }
        private global::System.String _GICS_SUB_INDUSTRY_NAME;
        partial void OnGICS_SUB_INDUSTRY_NAMEChanging(global::System.String value);
        partial void OnGICS_SUB_INDUSTRY_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> SHARES_PER_ADR
        {
            get
            {
                return _SHARES_PER_ADR;
            }
            set
            {
                OnSHARES_PER_ADRChanging(value);
                ReportPropertyChanging("SHARES_PER_ADR");
                _SHARES_PER_ADR = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SHARES_PER_ADR");
                OnSHARES_PER_ADRChanged();
            }
        }
        private Nullable<global::System.Double> _SHARES_PER_ADR;
        partial void OnSHARES_PER_ADRChanging(Nullable<global::System.Double> value);
        partial void OnSHARES_PER_ADRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ADR_UNDERLYING_TICKER
        {
            get
            {
                return _ADR_UNDERLYING_TICKER;
            }
            set
            {
                OnADR_UNDERLYING_TICKERChanging(value);
                ReportPropertyChanging("ADR_UNDERLYING_TICKER");
                _ADR_UNDERLYING_TICKER = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ADR_UNDERLYING_TICKER");
                OnADR_UNDERLYING_TICKERChanged();
            }
        }
        private global::System.String _ADR_UNDERLYING_TICKER;
        partial void OnADR_UNDERLYING_TICKERChanging(global::System.String value);
        partial void OnADR_UNDERLYING_TICKERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> MARKET_CAP_IN_TRADING_CURRENCY
        {
            get
            {
                return _MARKET_CAP_IN_TRADING_CURRENCY;
            }
            set
            {
                OnMARKET_CAP_IN_TRADING_CURRENCYChanging(value);
                ReportPropertyChanging("MARKET_CAP_IN_TRADING_CURRENCY");
                _MARKET_CAP_IN_TRADING_CURRENCY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MARKET_CAP_IN_TRADING_CURRENCY");
                OnMARKET_CAP_IN_TRADING_CURRENCYChanged();
            }
        }
        private Nullable<global::System.Double> _MARKET_CAP_IN_TRADING_CURRENCY;
        partial void OnMARKET_CAP_IN_TRADING_CURRENCYChanging(Nullable<global::System.Double> value);
        partial void OnMARKET_CAP_IN_TRADING_CURRENCYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> CLOSING_PRICE
        {
            get
            {
                return _CLOSING_PRICE;
            }
            set
            {
                OnCLOSING_PRICEChanging(value);
                ReportPropertyChanging("CLOSING_PRICE");
                _CLOSING_PRICE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CLOSING_PRICE");
                OnCLOSING_PRICEChanged();
            }
        }
        private Nullable<global::System.Double> _CLOSING_PRICE;
        partial void OnCLOSING_PRICEChanging(Nullable<global::System.Double> value);
        partial void OnCLOSING_PRICEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> LAST_CLOSE_FX_QUO_CURR_TO_USD
        {
            get
            {
                return _LAST_CLOSE_FX_QUO_CURR_TO_USD;
            }
            set
            {
                OnLAST_CLOSE_FX_QUO_CURR_TO_USDChanging(value);
                ReportPropertyChanging("LAST_CLOSE_FX_QUO_CURR_TO_USD");
                _LAST_CLOSE_FX_QUO_CURR_TO_USD = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LAST_CLOSE_FX_QUO_CURR_TO_USD");
                OnLAST_CLOSE_FX_QUO_CURR_TO_USDChanged();
            }
        }
        private Nullable<global::System.Double> _LAST_CLOSE_FX_QUO_CURR_TO_USD;
        partial void OnLAST_CLOSE_FX_QUO_CURR_TO_USDChanging(Nullable<global::System.Double> value);
        partial void OnLAST_CLOSE_FX_QUO_CURR_TO_USDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LAST_CLOSE_DATE
        {
            get
            {
                return _LAST_CLOSE_DATE;
            }
            set
            {
                OnLAST_CLOSE_DATEChanging(value);
                ReportPropertyChanging("LAST_CLOSE_DATE");
                _LAST_CLOSE_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LAST_CLOSE_DATE");
                OnLAST_CLOSE_DATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _LAST_CLOSE_DATE;
        partial void OnLAST_CLOSE_DATEChanging(Nullable<global::System.DateTime> value);
        partial void OnLAST_CLOSE_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> TOT_CURR_SHRS_OUTST_ALL_CLASS
        {
            get
            {
                return _TOT_CURR_SHRS_OUTST_ALL_CLASS;
            }
            set
            {
                OnTOT_CURR_SHRS_OUTST_ALL_CLASSChanging(value);
                ReportPropertyChanging("TOT_CURR_SHRS_OUTST_ALL_CLASS");
                _TOT_CURR_SHRS_OUTST_ALL_CLASS = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TOT_CURR_SHRS_OUTST_ALL_CLASS");
                OnTOT_CURR_SHRS_OUTST_ALL_CLASSChanged();
            }
        }
        private Nullable<global::System.Double> _TOT_CURR_SHRS_OUTST_ALL_CLASS;
        partial void OnTOT_CURR_SHRS_OUTST_ALL_CLASSChanging(Nullable<global::System.Double> value);
        partial void OnTOT_CURR_SHRS_OUTST_ALL_CLASSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CHG_PCT_MTD
        {
            get
            {
                return _CHG_PCT_MTD;
            }
            set
            {
                OnCHG_PCT_MTDChanging(value);
                ReportPropertyChanging("CHG_PCT_MTD");
                _CHG_PCT_MTD = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CHG_PCT_MTD");
                OnCHG_PCT_MTDChanged();
            }
        }
        private global::System.String _CHG_PCT_MTD;
        partial void OnCHG_PCT_MTDChanging(global::System.String value);
        partial void OnCHG_PCT_MTDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CHG_PCT_QTD
        {
            get
            {
                return _CHG_PCT_QTD;
            }
            set
            {
                OnCHG_PCT_QTDChanging(value);
                ReportPropertyChanging("CHG_PCT_QTD");
                _CHG_PCT_QTD = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CHG_PCT_QTD");
                OnCHG_PCT_QTDChanged();
            }
        }
        private global::System.String _CHG_PCT_QTD;
        partial void OnCHG_PCT_QTDChanging(global::System.String value);
        partial void OnCHG_PCT_QTDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CHG_PCT_YTD
        {
            get
            {
                return _CHG_PCT_YTD;
            }
            set
            {
                OnCHG_PCT_YTDChanging(value);
                ReportPropertyChanging("CHG_PCT_YTD");
                _CHG_PCT_YTD = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CHG_PCT_YTD");
                OnCHG_PCT_YTDChanged();
            }
        }
        private global::System.String _CHG_PCT_YTD;
        partial void OnCHG_PCT_YTDChanging(global::System.String value);
        partial void OnCHG_PCT_YTDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CHG_PCT_1YR
        {
            get
            {
                return _CHG_PCT_1YR;
            }
            set
            {
                OnCHG_PCT_1YRChanging(value);
                ReportPropertyChanging("CHG_PCT_1YR");
                _CHG_PCT_1YR = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CHG_PCT_1YR");
                OnCHG_PCT_1YRChanged();
            }
        }
        private global::System.String _CHG_PCT_1YR;
        partial void OnCHG_PCT_1YRChanging(global::System.String value);
        partial void OnCHG_PCT_1YRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String issuer_proxy
        {
            get
            {
                return _issuer_proxy;
            }
            set
            {
                Onissuer_proxyChanging(value);
                ReportPropertyChanging("issuer_proxy");
                _issuer_proxy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("issuer_proxy");
                Onissuer_proxyChanged();
            }
        }
        private global::System.String _issuer_proxy;
        partial void Onissuer_proxyChanging(global::System.String value);
        partial void Onissuer_proxyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UPDATE_BB_STATUS
        {
            get
            {
                return _UPDATE_BB_STATUS;
            }
            set
            {
                OnUPDATE_BB_STATUSChanging(value);
                ReportPropertyChanging("UPDATE_BB_STATUS");
                _UPDATE_BB_STATUS = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UPDATE_BB_STATUS");
                OnUPDATE_BB_STATUSChanged();
            }
        }
        private global::System.String _UPDATE_BB_STATUS;
        partial void OnUPDATE_BB_STATUSChanging(global::System.String value);
        partial void OnUPDATE_BB_STATUSChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExternalResearchModel", Name="INTERNAL_ISSUER")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class INTERNAL_ISSUER : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new INTERNAL_ISSUER object.
        /// </summary>
        /// <param name="iSSUER_ID">Initial value of the ISSUER_ID property.</param>
        /// <param name="cOA_TYPE">Initial value of the COA_TYPE property.</param>
        public static INTERNAL_ISSUER CreateINTERNAL_ISSUER(global::System.String iSSUER_ID, global::System.String cOA_TYPE)
        {
            INTERNAL_ISSUER iNTERNAL_ISSUER = new INTERNAL_ISSUER();
            iNTERNAL_ISSUER.ISSUER_ID = iSSUER_ID;
            iNTERNAL_ISSUER.COA_TYPE = cOA_TYPE;
            return iNTERNAL_ISSUER;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ISSUER_ID
        {
            get
            {
                return _ISSUER_ID;
            }
            set
            {
                if (_ISSUER_ID != value)
                {
                    OnISSUER_IDChanging(value);
                    ReportPropertyChanging("ISSUER_ID");
                    _ISSUER_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ISSUER_ID");
                    OnISSUER_IDChanged();
                }
            }
        }
        private global::System.String _ISSUER_ID;
        partial void OnISSUER_IDChanging(global::System.String value);
        partial void OnISSUER_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String COA_TYPE
        {
            get
            {
                return _COA_TYPE;
            }
            set
            {
                if (_COA_TYPE != value)
                {
                    OnCOA_TYPEChanging(value);
                    ReportPropertyChanging("COA_TYPE");
                    _COA_TYPE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("COA_TYPE");
                    OnCOA_TYPEChanged();
                }
            }
        }
        private global::System.String _COA_TYPE;
        partial void OnCOA_TYPEChanging(global::System.String value);
        partial void OnCOA_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastPrimaryModelLoad
        {
            get
            {
                return _LastPrimaryModelLoad;
            }
            set
            {
                OnLastPrimaryModelLoadChanging(value);
                ReportPropertyChanging("LastPrimaryModelLoad");
                _LastPrimaryModelLoad = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastPrimaryModelLoad");
                OnLastPrimaryModelLoadChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastPrimaryModelLoad;
        partial void OnLastPrimaryModelLoadChanging(Nullable<global::System.DateTime> value);
        partial void OnLastPrimaryModelLoadChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastIndustryModelLoad
        {
            get
            {
                return _LastIndustryModelLoad;
            }
            set
            {
                OnLastIndustryModelLoadChanging(value);
                ReportPropertyChanging("LastIndustryModelLoad");
                _LastIndustryModelLoad = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastIndustryModelLoad");
                OnLastIndustryModelLoadChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastIndustryModelLoad;
        partial void OnLastIndustryModelLoadChanging(Nullable<global::System.DateTime> value);
        partial void OnLastIndustryModelLoadChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExternalResearchModel", Name="ISSUER_SHARES")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ISSUER_SHARES : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ISSUER_SHARES object.
        /// </summary>
        /// <param name="iSSUER_ID">Initial value of the ISSUER_ID property.</param>
        /// <param name="sHARES_DATE">Initial value of the SHARES_DATE property.</param>
        /// <param name="sHARES_OUTSTANDING">Initial value of the SHARES_OUTSTANDING property.</param>
        public static ISSUER_SHARES CreateISSUER_SHARES(global::System.String iSSUER_ID, global::System.DateTime sHARES_DATE, global::System.Int32 sHARES_OUTSTANDING)
        {
            ISSUER_SHARES iSSUER_SHARES = new ISSUER_SHARES();
            iSSUER_SHARES.ISSUER_ID = iSSUER_ID;
            iSSUER_SHARES.SHARES_DATE = sHARES_DATE;
            iSSUER_SHARES.SHARES_OUTSTANDING = sHARES_OUTSTANDING;
            return iSSUER_SHARES;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ISSUER_ID
        {
            get
            {
                return _ISSUER_ID;
            }
            set
            {
                if (_ISSUER_ID != value)
                {
                    OnISSUER_IDChanging(value);
                    ReportPropertyChanging("ISSUER_ID");
                    _ISSUER_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ISSUER_ID");
                    OnISSUER_IDChanged();
                }
            }
        }
        private global::System.String _ISSUER_ID;
        partial void OnISSUER_IDChanging(global::System.String value);
        partial void OnISSUER_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SHARES_DATE
        {
            get
            {
                return _SHARES_DATE;
            }
            set
            {
                if (_SHARES_DATE != value)
                {
                    OnSHARES_DATEChanging(value);
                    ReportPropertyChanging("SHARES_DATE");
                    _SHARES_DATE = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SHARES_DATE");
                    OnSHARES_DATEChanged();
                }
            }
        }
        private global::System.DateTime _SHARES_DATE;
        partial void OnSHARES_DATEChanging(global::System.DateTime value);
        partial void OnSHARES_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SHARES_OUTSTANDING
        {
            get
            {
                return _SHARES_OUTSTANDING;
            }
            set
            {
                if (_SHARES_OUTSTANDING != value)
                {
                    OnSHARES_OUTSTANDINGChanging(value);
                    ReportPropertyChanging("SHARES_OUTSTANDING");
                    _SHARES_OUTSTANDING = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SHARES_OUTSTANDING");
                    OnSHARES_OUTSTANDINGChanged();
                }
            }
        }
        private global::System.Int32 _SHARES_OUTSTANDING;
        partial void OnSHARES_OUTSTANDINGChanging(global::System.Int32 value);
        partial void OnSHARES_OUTSTANDINGChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExternalResearchModel", Name="ISSUER_SHARES_COMPOSITION")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ISSUER_SHARES_COMPOSITION : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ISSUER_SHARES_COMPOSITION object.
        /// </summary>
        /// <param name="iSSUER_ID">Initial value of the ISSUER_ID property.</param>
        /// <param name="sECURITY_ID">Initial value of the SECURITY_ID property.</param>
        public static ISSUER_SHARES_COMPOSITION CreateISSUER_SHARES_COMPOSITION(global::System.String iSSUER_ID, global::System.String sECURITY_ID)
        {
            ISSUER_SHARES_COMPOSITION iSSUER_SHARES_COMPOSITION = new ISSUER_SHARES_COMPOSITION();
            iSSUER_SHARES_COMPOSITION.ISSUER_ID = iSSUER_ID;
            iSSUER_SHARES_COMPOSITION.SECURITY_ID = sECURITY_ID;
            return iSSUER_SHARES_COMPOSITION;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ISSUER_ID
        {
            get
            {
                return _ISSUER_ID;
            }
            set
            {
                if (_ISSUER_ID != value)
                {
                    OnISSUER_IDChanging(value);
                    ReportPropertyChanging("ISSUER_ID");
                    _ISSUER_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ISSUER_ID");
                    OnISSUER_IDChanged();
                }
            }
        }
        private global::System.String _ISSUER_ID;
        partial void OnISSUER_IDChanging(global::System.String value);
        partial void OnISSUER_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SECURITY_ID
        {
            get
            {
                return _SECURITY_ID;
            }
            set
            {
                if (_SECURITY_ID != value)
                {
                    OnSECURITY_IDChanging(value);
                    ReportPropertyChanging("SECURITY_ID");
                    _SECURITY_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SECURITY_ID");
                    OnSECURITY_IDChanged();
                }
            }
        }
        private global::System.String _SECURITY_ID;
        partial void OnSECURITY_IDChanging(global::System.String value);
        partial void OnSECURITY_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PREFERRED
        {
            get
            {
                return _PREFERRED;
            }
            set
            {
                OnPREFERREDChanging(value);
                ReportPropertyChanging("PREFERRED");
                _PREFERRED = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PREFERRED");
                OnPREFERREDChanged();
            }
        }
        private global::System.String _PREFERRED;
        partial void OnPREFERREDChanging(global::System.String value);
        partial void OnPREFERREDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExternalResearchModel", Name="Macroeconomic_Data")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Macroeconomic_Data : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Macroeconomic_Data object.
        /// </summary>
        /// <param name="cOUNTRY_CODE">Initial value of the COUNTRY_CODE property.</param>
        /// <param name="fIELD">Initial value of the FIELD property.</param>
        /// <param name="yEAR1">Initial value of the YEAR1 property.</param>
        /// <param name="uPDATE_DATE">Initial value of the UPDATE_DATE property.</param>
        /// <param name="uPDATE_SOURCE">Initial value of the UPDATE_SOURCE property.</param>
        public static Macroeconomic_Data CreateMacroeconomic_Data(global::System.String cOUNTRY_CODE, global::System.String fIELD, global::System.Int32 yEAR1, global::System.DateTime uPDATE_DATE, global::System.String uPDATE_SOURCE)
        {
            Macroeconomic_Data macroeconomic_Data = new Macroeconomic_Data();
            macroeconomic_Data.COUNTRY_CODE = cOUNTRY_CODE;
            macroeconomic_Data.FIELD = fIELD;
            macroeconomic_Data.YEAR1 = yEAR1;
            macroeconomic_Data.UPDATE_DATE = uPDATE_DATE;
            macroeconomic_Data.UPDATE_SOURCE = uPDATE_SOURCE;
            return macroeconomic_Data;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String COUNTRY_CODE
        {
            get
            {
                return _COUNTRY_CODE;
            }
            set
            {
                if (_COUNTRY_CODE != value)
                {
                    OnCOUNTRY_CODEChanging(value);
                    ReportPropertyChanging("COUNTRY_CODE");
                    _COUNTRY_CODE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("COUNTRY_CODE");
                    OnCOUNTRY_CODEChanged();
                }
            }
        }
        private global::System.String _COUNTRY_CODE;
        partial void OnCOUNTRY_CODEChanging(global::System.String value);
        partial void OnCOUNTRY_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FIELD
        {
            get
            {
                return _FIELD;
            }
            set
            {
                if (_FIELD != value)
                {
                    OnFIELDChanging(value);
                    ReportPropertyChanging("FIELD");
                    _FIELD = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("FIELD");
                    OnFIELDChanged();
                }
            }
        }
        private global::System.String _FIELD;
        partial void OnFIELDChanging(global::System.String value);
        partial void OnFIELDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 YEAR1
        {
            get
            {
                return _YEAR1;
            }
            set
            {
                if (_YEAR1 != value)
                {
                    OnYEAR1Changing(value);
                    ReportPropertyChanging("YEAR1");
                    _YEAR1 = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("YEAR1");
                    OnYEAR1Changed();
                }
            }
        }
        private global::System.Int32 _YEAR1;
        partial void OnYEAR1Changing(global::System.Int32 value);
        partial void OnYEAR1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> VALUE
        {
            get
            {
                return _VALUE;
            }
            set
            {
                OnVALUEChanging(value);
                ReportPropertyChanging("VALUE");
                _VALUE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VALUE");
                OnVALUEChanged();
            }
        }
        private Nullable<global::System.Decimal> _VALUE;
        partial void OnVALUEChanging(Nullable<global::System.Decimal> value);
        partial void OnVALUEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UPDATE_DATE
        {
            get
            {
                return _UPDATE_DATE;
            }
            set
            {
                OnUPDATE_DATEChanging(value);
                ReportPropertyChanging("UPDATE_DATE");
                _UPDATE_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UPDATE_DATE");
                OnUPDATE_DATEChanged();
            }
        }
        private global::System.DateTime _UPDATE_DATE;
        partial void OnUPDATE_DATEChanging(global::System.DateTime value);
        partial void OnUPDATE_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UPDATE_SOURCE
        {
            get
            {
                return _UPDATE_SOURCE;
            }
            set
            {
                OnUPDATE_SOURCEChanging(value);
                ReportPropertyChanging("UPDATE_SOURCE");
                _UPDATE_SOURCE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UPDATE_SOURCE");
                OnUPDATE_SOURCEChanged();
            }
        }
        private global::System.String _UPDATE_SOURCE;
        partial void OnUPDATE_SOURCEChanging(global::System.String value);
        partial void OnUPDATE_SOURCEChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExternalResearchModel", Name="Macroeconomic_Display")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Macroeconomic_Display : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Macroeconomic_Display object.
        /// </summary>
        /// <param name="dISPLAY_TYPE">Initial value of the DISPLAY_TYPE property.</param>
        /// <param name="fIELD">Initial value of the FIELD property.</param>
        /// <param name="cATEGORY_NAME">Initial value of the CATEGORY_NAME property.</param>
        /// <param name="fIELD_DESC">Initial value of the FIELD_DESC property.</param>
        /// <param name="dATATYPE">Initial value of the DATATYPE property.</param>
        /// <param name="sORT_ORDER">Initial value of the SORT_ORDER property.</param>
        public static Macroeconomic_Display CreateMacroeconomic_Display(global::System.String dISPLAY_TYPE, global::System.String fIELD, global::System.String cATEGORY_NAME, global::System.String fIELD_DESC, global::System.String dATATYPE, global::System.Int32 sORT_ORDER)
        {
            Macroeconomic_Display macroeconomic_Display = new Macroeconomic_Display();
            macroeconomic_Display.DISPLAY_TYPE = dISPLAY_TYPE;
            macroeconomic_Display.FIELD = fIELD;
            macroeconomic_Display.CATEGORY_NAME = cATEGORY_NAME;
            macroeconomic_Display.FIELD_DESC = fIELD_DESC;
            macroeconomic_Display.DATATYPE = dATATYPE;
            macroeconomic_Display.SORT_ORDER = sORT_ORDER;
            return macroeconomic_Display;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DISPLAY_TYPE
        {
            get
            {
                return _DISPLAY_TYPE;
            }
            set
            {
                if (_DISPLAY_TYPE != value)
                {
                    OnDISPLAY_TYPEChanging(value);
                    ReportPropertyChanging("DISPLAY_TYPE");
                    _DISPLAY_TYPE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DISPLAY_TYPE");
                    OnDISPLAY_TYPEChanged();
                }
            }
        }
        private global::System.String _DISPLAY_TYPE;
        partial void OnDISPLAY_TYPEChanging(global::System.String value);
        partial void OnDISPLAY_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FIELD
        {
            get
            {
                return _FIELD;
            }
            set
            {
                if (_FIELD != value)
                {
                    OnFIELDChanging(value);
                    ReportPropertyChanging("FIELD");
                    _FIELD = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("FIELD");
                    OnFIELDChanged();
                }
            }
        }
        private global::System.String _FIELD;
        partial void OnFIELDChanging(global::System.String value);
        partial void OnFIELDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CATEGORY_NAME
        {
            get
            {
                return _CATEGORY_NAME;
            }
            set
            {
                if (_CATEGORY_NAME != value)
                {
                    OnCATEGORY_NAMEChanging(value);
                    ReportPropertyChanging("CATEGORY_NAME");
                    _CATEGORY_NAME = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CATEGORY_NAME");
                    OnCATEGORY_NAMEChanged();
                }
            }
        }
        private global::System.String _CATEGORY_NAME;
        partial void OnCATEGORY_NAMEChanging(global::System.String value);
        partial void OnCATEGORY_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FIELD_DESC
        {
            get
            {
                return _FIELD_DESC;
            }
            set
            {
                if (_FIELD_DESC != value)
                {
                    OnFIELD_DESCChanging(value);
                    ReportPropertyChanging("FIELD_DESC");
                    _FIELD_DESC = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("FIELD_DESC");
                    OnFIELD_DESCChanged();
                }
            }
        }
        private global::System.String _FIELD_DESC;
        partial void OnFIELD_DESCChanging(global::System.String value);
        partial void OnFIELD_DESCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DATATYPE
        {
            get
            {
                return _DATATYPE;
            }
            set
            {
                if (_DATATYPE != value)
                {
                    OnDATATYPEChanging(value);
                    ReportPropertyChanging("DATATYPE");
                    _DATATYPE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DATATYPE");
                    OnDATATYPEChanged();
                }
            }
        }
        private global::System.String _DATATYPE;
        partial void OnDATATYPEChanging(global::System.String value);
        partial void OnDATATYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DECIMALS
        {
            get
            {
                return _DECIMALS;
            }
            set
            {
                OnDECIMALSChanging(value);
                ReportPropertyChanging("DECIMALS");
                _DECIMALS = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DECIMALS");
                OnDECIMALSChanged();
            }
        }
        private Nullable<global::System.Int32> _DECIMALS;
        partial void OnDECIMALSChanging(Nullable<global::System.Int32> value);
        partial void OnDECIMALSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SORT_ORDER
        {
            get
            {
                return _SORT_ORDER;
            }
            set
            {
                if (_SORT_ORDER != value)
                {
                    OnSORT_ORDERChanging(value);
                    ReportPropertyChanging("SORT_ORDER");
                    _SORT_ORDER = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SORT_ORDER");
                    OnSORT_ORDERChanged();
                }
            }
        }
        private global::System.Int32 _SORT_ORDER;
        partial void OnSORT_ORDERChanging(global::System.Int32 value);
        partial void OnSORT_ORDERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HELP_TEXT
        {
            get
            {
                return _HELP_TEXT;
            }
            set
            {
                OnHELP_TEXTChanging(value);
                ReportPropertyChanging("HELP_TEXT");
                _HELP_TEXT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HELP_TEXT");
                OnHELP_TEXTChanged();
            }
        }
        private global::System.String _HELP_TEXT;
        partial void OnHELP_TEXTChanging(global::System.String value);
        partial void OnHELP_TEXTChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExternalResearchModel", Name="MODEL_INPUTS_CTY")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MODEL_INPUTS_CTY : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MODEL_INPUTS_CTY object.
        /// </summary>
        /// <param name="cOUNTRY_CODE">Initial value of the COUNTRY_CODE property.</param>
        /// <param name="rISK_PREM">Initial value of the RISK_PREM property.</param>
        /// <param name="rISK_FREE_RATE">Initial value of the RISK_FREE_RATE property.</param>
        /// <param name="lONG_TERM_GDP_GR">Initial value of the LONG_TERM_GDP_GR property.</param>
        public static MODEL_INPUTS_CTY CreateMODEL_INPUTS_CTY(global::System.String cOUNTRY_CODE, global::System.Decimal rISK_PREM, global::System.Decimal rISK_FREE_RATE, global::System.Decimal lONG_TERM_GDP_GR)
        {
            MODEL_INPUTS_CTY mODEL_INPUTS_CTY = new MODEL_INPUTS_CTY();
            mODEL_INPUTS_CTY.COUNTRY_CODE = cOUNTRY_CODE;
            mODEL_INPUTS_CTY.RISK_PREM = rISK_PREM;
            mODEL_INPUTS_CTY.RISK_FREE_RATE = rISK_FREE_RATE;
            mODEL_INPUTS_CTY.LONG_TERM_GDP_GR = lONG_TERM_GDP_GR;
            return mODEL_INPUTS_CTY;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String COUNTRY_CODE
        {
            get
            {
                return _COUNTRY_CODE;
            }
            set
            {
                if (_COUNTRY_CODE != value)
                {
                    OnCOUNTRY_CODEChanging(value);
                    ReportPropertyChanging("COUNTRY_CODE");
                    _COUNTRY_CODE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("COUNTRY_CODE");
                    OnCOUNTRY_CODEChanged();
                }
            }
        }
        private global::System.String _COUNTRY_CODE;
        partial void OnCOUNTRY_CODEChanging(global::System.String value);
        partial void OnCOUNTRY_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal RISK_PREM
        {
            get
            {
                return _RISK_PREM;
            }
            set
            {
                if (_RISK_PREM != value)
                {
                    OnRISK_PREMChanging(value);
                    ReportPropertyChanging("RISK_PREM");
                    _RISK_PREM = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RISK_PREM");
                    OnRISK_PREMChanged();
                }
            }
        }
        private global::System.Decimal _RISK_PREM;
        partial void OnRISK_PREMChanging(global::System.Decimal value);
        partial void OnRISK_PREMChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal RISK_FREE_RATE
        {
            get
            {
                return _RISK_FREE_RATE;
            }
            set
            {
                if (_RISK_FREE_RATE != value)
                {
                    OnRISK_FREE_RATEChanging(value);
                    ReportPropertyChanging("RISK_FREE_RATE");
                    _RISK_FREE_RATE = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RISK_FREE_RATE");
                    OnRISK_FREE_RATEChanged();
                }
            }
        }
        private global::System.Decimal _RISK_FREE_RATE;
        partial void OnRISK_FREE_RATEChanging(global::System.Decimal value);
        partial void OnRISK_FREE_RATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal LONG_TERM_GDP_GR
        {
            get
            {
                return _LONG_TERM_GDP_GR;
            }
            set
            {
                if (_LONG_TERM_GDP_GR != value)
                {
                    OnLONG_TERM_GDP_GRChanging(value);
                    ReportPropertyChanging("LONG_TERM_GDP_GR");
                    _LONG_TERM_GDP_GR = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LONG_TERM_GDP_GR");
                    OnLONG_TERM_GDP_GRChanged();
                }
            }
        }
        private global::System.Decimal _LONG_TERM_GDP_GR;
        partial void OnLONG_TERM_GDP_GRChanging(global::System.Decimal value);
        partial void OnLONG_TERM_GDP_GRChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExternalResearchModel", Name="MODEL_UPLOAD_USER_GROUP")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MODEL_UPLOAD_USER_GROUP : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MODEL_UPLOAD_USER_GROUP object.
        /// </summary>
        /// <param name="mANAGER_NAME">Initial value of the MANAGER_NAME property.</param>
        /// <param name="aNALYST_NAME">Initial value of the ANALYST_NAME property.</param>
        public static MODEL_UPLOAD_USER_GROUP CreateMODEL_UPLOAD_USER_GROUP(global::System.String mANAGER_NAME, global::System.String aNALYST_NAME)
        {
            MODEL_UPLOAD_USER_GROUP mODEL_UPLOAD_USER_GROUP = new MODEL_UPLOAD_USER_GROUP();
            mODEL_UPLOAD_USER_GROUP.MANAGER_NAME = mANAGER_NAME;
            mODEL_UPLOAD_USER_GROUP.ANALYST_NAME = aNALYST_NAME;
            return mODEL_UPLOAD_USER_GROUP;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MANAGER_NAME
        {
            get
            {
                return _MANAGER_NAME;
            }
            set
            {
                if (_MANAGER_NAME != value)
                {
                    OnMANAGER_NAMEChanging(value);
                    ReportPropertyChanging("MANAGER_NAME");
                    _MANAGER_NAME = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MANAGER_NAME");
                    OnMANAGER_NAMEChanged();
                }
            }
        }
        private global::System.String _MANAGER_NAME;
        partial void OnMANAGER_NAMEChanging(global::System.String value);
        partial void OnMANAGER_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ANALYST_NAME
        {
            get
            {
                return _ANALYST_NAME;
            }
            set
            {
                if (_ANALYST_NAME != value)
                {
                    OnANALYST_NAMEChanging(value);
                    ReportPropertyChanging("ANALYST_NAME");
                    _ANALYST_NAME = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ANALYST_NAME");
                    OnANALYST_NAMEChanged();
                }
            }
        }
        private global::System.String _ANALYST_NAME;
        partial void OnANALYST_NAMEChanging(global::System.String value);
        partial void OnANALYST_NAMEChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExternalResearchModel", Name="PERIOD_FINANCIALS")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PERIOD_FINANCIALS : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PERIOD_FINANCIALS object.
        /// </summary>
        /// <param name="iSSUER_ID">Initial value of the ISSUER_ID property.</param>
        /// <param name="sECURITY_ID">Initial value of the SECURITY_ID property.</param>
        /// <param name="cOA_TYPE">Initial value of the COA_TYPE property.</param>
        /// <param name="dATA_SOURCE">Initial value of the DATA_SOURCE property.</param>
        /// <param name="rOOT_SOURCE">Initial value of the ROOT_SOURCE property.</param>
        /// <param name="rOOT_SOURCE_DATE">Initial value of the ROOT_SOURCE_DATE property.</param>
        /// <param name="pERIOD_TYPE">Initial value of the PERIOD_TYPE property.</param>
        /// <param name="pERIOD_YEAR">Initial value of the PERIOD_YEAR property.</param>
        /// <param name="pERIOD_END_DATE">Initial value of the PERIOD_END_DATE property.</param>
        /// <param name="fISCAL_TYPE">Initial value of the FISCAL_TYPE property.</param>
        /// <param name="cURRENCY">Initial value of the CURRENCY property.</param>
        /// <param name="dATA_ID">Initial value of the DATA_ID property.</param>
        /// <param name="aMOUNT">Initial value of the AMOUNT property.</param>
        /// <param name="sOURCE_CURRENCY">Initial value of the SOURCE_CURRENCY property.</param>
        /// <param name="aMOUNT_TYPE">Initial value of the AMOUNT_TYPE property.</param>
        public static PERIOD_FINANCIALS CreatePERIOD_FINANCIALS(global::System.String iSSUER_ID, global::System.String sECURITY_ID, global::System.String cOA_TYPE, global::System.String dATA_SOURCE, global::System.String rOOT_SOURCE, global::System.DateTime rOOT_SOURCE_DATE, global::System.String pERIOD_TYPE, global::System.Int32 pERIOD_YEAR, global::System.DateTime pERIOD_END_DATE, global::System.String fISCAL_TYPE, global::System.String cURRENCY, global::System.Int32 dATA_ID, global::System.Decimal aMOUNT, global::System.String sOURCE_CURRENCY, global::System.String aMOUNT_TYPE)
        {
            PERIOD_FINANCIALS pERIOD_FINANCIALS = new PERIOD_FINANCIALS();
            pERIOD_FINANCIALS.ISSUER_ID = iSSUER_ID;
            pERIOD_FINANCIALS.SECURITY_ID = sECURITY_ID;
            pERIOD_FINANCIALS.COA_TYPE = cOA_TYPE;
            pERIOD_FINANCIALS.DATA_SOURCE = dATA_SOURCE;
            pERIOD_FINANCIALS.ROOT_SOURCE = rOOT_SOURCE;
            pERIOD_FINANCIALS.ROOT_SOURCE_DATE = rOOT_SOURCE_DATE;
            pERIOD_FINANCIALS.PERIOD_TYPE = pERIOD_TYPE;
            pERIOD_FINANCIALS.PERIOD_YEAR = pERIOD_YEAR;
            pERIOD_FINANCIALS.PERIOD_END_DATE = pERIOD_END_DATE;
            pERIOD_FINANCIALS.FISCAL_TYPE = fISCAL_TYPE;
            pERIOD_FINANCIALS.CURRENCY = cURRENCY;
            pERIOD_FINANCIALS.DATA_ID = dATA_ID;
            pERIOD_FINANCIALS.AMOUNT = aMOUNT;
            pERIOD_FINANCIALS.SOURCE_CURRENCY = sOURCE_CURRENCY;
            pERIOD_FINANCIALS.AMOUNT_TYPE = aMOUNT_TYPE;
            return pERIOD_FINANCIALS;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ISSUER_ID
        {
            get
            {
                return _ISSUER_ID;
            }
            set
            {
                if (_ISSUER_ID != value)
                {
                    OnISSUER_IDChanging(value);
                    ReportPropertyChanging("ISSUER_ID");
                    _ISSUER_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ISSUER_ID");
                    OnISSUER_IDChanged();
                }
            }
        }
        private global::System.String _ISSUER_ID;
        partial void OnISSUER_IDChanging(global::System.String value);
        partial void OnISSUER_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SECURITY_ID
        {
            get
            {
                return _SECURITY_ID;
            }
            set
            {
                if (_SECURITY_ID != value)
                {
                    OnSECURITY_IDChanging(value);
                    ReportPropertyChanging("SECURITY_ID");
                    _SECURITY_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SECURITY_ID");
                    OnSECURITY_IDChanged();
                }
            }
        }
        private global::System.String _SECURITY_ID;
        partial void OnSECURITY_IDChanging(global::System.String value);
        partial void OnSECURITY_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String COA_TYPE
        {
            get
            {
                return _COA_TYPE;
            }
            set
            {
                if (_COA_TYPE != value)
                {
                    OnCOA_TYPEChanging(value);
                    ReportPropertyChanging("COA_TYPE");
                    _COA_TYPE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("COA_TYPE");
                    OnCOA_TYPEChanged();
                }
            }
        }
        private global::System.String _COA_TYPE;
        partial void OnCOA_TYPEChanging(global::System.String value);
        partial void OnCOA_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DATA_SOURCE
        {
            get
            {
                return _DATA_SOURCE;
            }
            set
            {
                if (_DATA_SOURCE != value)
                {
                    OnDATA_SOURCEChanging(value);
                    ReportPropertyChanging("DATA_SOURCE");
                    _DATA_SOURCE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DATA_SOURCE");
                    OnDATA_SOURCEChanged();
                }
            }
        }
        private global::System.String _DATA_SOURCE;
        partial void OnDATA_SOURCEChanging(global::System.String value);
        partial void OnDATA_SOURCEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ROOT_SOURCE
        {
            get
            {
                return _ROOT_SOURCE;
            }
            set
            {
                if (_ROOT_SOURCE != value)
                {
                    OnROOT_SOURCEChanging(value);
                    ReportPropertyChanging("ROOT_SOURCE");
                    _ROOT_SOURCE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ROOT_SOURCE");
                    OnROOT_SOURCEChanged();
                }
            }
        }
        private global::System.String _ROOT_SOURCE;
        partial void OnROOT_SOURCEChanging(global::System.String value);
        partial void OnROOT_SOURCEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ROOT_SOURCE_DATE
        {
            get
            {
                return _ROOT_SOURCE_DATE;
            }
            set
            {
                if (_ROOT_SOURCE_DATE != value)
                {
                    OnROOT_SOURCE_DATEChanging(value);
                    ReportPropertyChanging("ROOT_SOURCE_DATE");
                    _ROOT_SOURCE_DATE = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ROOT_SOURCE_DATE");
                    OnROOT_SOURCE_DATEChanged();
                }
            }
        }
        private global::System.DateTime _ROOT_SOURCE_DATE;
        partial void OnROOT_SOURCE_DATEChanging(global::System.DateTime value);
        partial void OnROOT_SOURCE_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PERIOD_TYPE
        {
            get
            {
                return _PERIOD_TYPE;
            }
            set
            {
                if (_PERIOD_TYPE != value)
                {
                    OnPERIOD_TYPEChanging(value);
                    ReportPropertyChanging("PERIOD_TYPE");
                    _PERIOD_TYPE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PERIOD_TYPE");
                    OnPERIOD_TYPEChanged();
                }
            }
        }
        private global::System.String _PERIOD_TYPE;
        partial void OnPERIOD_TYPEChanging(global::System.String value);
        partial void OnPERIOD_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PERIOD_YEAR
        {
            get
            {
                return _PERIOD_YEAR;
            }
            set
            {
                if (_PERIOD_YEAR != value)
                {
                    OnPERIOD_YEARChanging(value);
                    ReportPropertyChanging("PERIOD_YEAR");
                    _PERIOD_YEAR = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PERIOD_YEAR");
                    OnPERIOD_YEARChanged();
                }
            }
        }
        private global::System.Int32 _PERIOD_YEAR;
        partial void OnPERIOD_YEARChanging(global::System.Int32 value);
        partial void OnPERIOD_YEARChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PERIOD_END_DATE
        {
            get
            {
                return _PERIOD_END_DATE;
            }
            set
            {
                if (_PERIOD_END_DATE != value)
                {
                    OnPERIOD_END_DATEChanging(value);
                    ReportPropertyChanging("PERIOD_END_DATE");
                    _PERIOD_END_DATE = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PERIOD_END_DATE");
                    OnPERIOD_END_DATEChanged();
                }
            }
        }
        private global::System.DateTime _PERIOD_END_DATE;
        partial void OnPERIOD_END_DATEChanging(global::System.DateTime value);
        partial void OnPERIOD_END_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FISCAL_TYPE
        {
            get
            {
                return _FISCAL_TYPE;
            }
            set
            {
                if (_FISCAL_TYPE != value)
                {
                    OnFISCAL_TYPEChanging(value);
                    ReportPropertyChanging("FISCAL_TYPE");
                    _FISCAL_TYPE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("FISCAL_TYPE");
                    OnFISCAL_TYPEChanged();
                }
            }
        }
        private global::System.String _FISCAL_TYPE;
        partial void OnFISCAL_TYPEChanging(global::System.String value);
        partial void OnFISCAL_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CURRENCY
        {
            get
            {
                return _CURRENCY;
            }
            set
            {
                if (_CURRENCY != value)
                {
                    OnCURRENCYChanging(value);
                    ReportPropertyChanging("CURRENCY");
                    _CURRENCY = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CURRENCY");
                    OnCURRENCYChanged();
                }
            }
        }
        private global::System.String _CURRENCY;
        partial void OnCURRENCYChanging(global::System.String value);
        partial void OnCURRENCYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DATA_ID
        {
            get
            {
                return _DATA_ID;
            }
            set
            {
                if (_DATA_ID != value)
                {
                    OnDATA_IDChanging(value);
                    ReportPropertyChanging("DATA_ID");
                    _DATA_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DATA_ID");
                    OnDATA_IDChanged();
                }
            }
        }
        private global::System.Int32 _DATA_ID;
        partial void OnDATA_IDChanging(global::System.Int32 value);
        partial void OnDATA_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal AMOUNT
        {
            get
            {
                return _AMOUNT;
            }
            set
            {
                if (_AMOUNT != value)
                {
                    OnAMOUNTChanging(value);
                    ReportPropertyChanging("AMOUNT");
                    _AMOUNT = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AMOUNT");
                    OnAMOUNTChanged();
                }
            }
        }
        private global::System.Decimal _AMOUNT;
        partial void OnAMOUNTChanging(global::System.Decimal value);
        partial void OnAMOUNTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CALCULATION_DIAGRAM
        {
            get
            {
                return _CALCULATION_DIAGRAM;
            }
            set
            {
                OnCALCULATION_DIAGRAMChanging(value);
                ReportPropertyChanging("CALCULATION_DIAGRAM");
                _CALCULATION_DIAGRAM = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CALCULATION_DIAGRAM");
                OnCALCULATION_DIAGRAMChanged();
            }
        }
        private global::System.String _CALCULATION_DIAGRAM;
        partial void OnCALCULATION_DIAGRAMChanging(global::System.String value);
        partial void OnCALCULATION_DIAGRAMChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SOURCE_CURRENCY
        {
            get
            {
                return _SOURCE_CURRENCY;
            }
            set
            {
                if (_SOURCE_CURRENCY != value)
                {
                    OnSOURCE_CURRENCYChanging(value);
                    ReportPropertyChanging("SOURCE_CURRENCY");
                    _SOURCE_CURRENCY = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SOURCE_CURRENCY");
                    OnSOURCE_CURRENCYChanged();
                }
            }
        }
        private global::System.String _SOURCE_CURRENCY;
        partial void OnSOURCE_CURRENCYChanging(global::System.String value);
        partial void OnSOURCE_CURRENCYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AMOUNT_TYPE
        {
            get
            {
                return _AMOUNT_TYPE;
            }
            set
            {
                if (_AMOUNT_TYPE != value)
                {
                    OnAMOUNT_TYPEChanging(value);
                    ReportPropertyChanging("AMOUNT_TYPE");
                    _AMOUNT_TYPE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("AMOUNT_TYPE");
                    OnAMOUNT_TYPEChanged();
                }
            }
        }
        private global::System.String _AMOUNT_TYPE;
        partial void OnAMOUNT_TYPEChanging(global::System.String value);
        partial void OnAMOUNT_TYPEChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExternalResearchModel", Name="PERIOD_FINANCIALS_DISPLAY")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PERIOD_FINANCIALS_DISPLAY : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PERIOD_FINANCIALS_DISPLAY object.
        /// </summary>
        /// <param name="dATA_ID">Initial value of the DATA_ID property.</param>
        /// <param name="dATA_DESC">Initial value of the DATA_DESC property.</param>
        /// <param name="cOA_TYPE">Initial value of the COA_TYPE property.</param>
        /// <param name="sORT_ORDER">Initial value of the SORT_ORDER property.</param>
        /// <param name="gROUP_NAME">Initial value of the GROUP_NAME property.</param>
        /// <param name="bOLD_FONT">Initial value of the BOLD_FONT property.</param>
        /// <param name="dECIMALS">Initial value of the DECIMALS property.</param>
        /// <param name="mULTIPLIER">Initial value of the MULTIPLIER property.</param>
        public static PERIOD_FINANCIALS_DISPLAY CreatePERIOD_FINANCIALS_DISPLAY(global::System.Int32 dATA_ID, global::System.String dATA_DESC, global::System.String cOA_TYPE, global::System.Int32 sORT_ORDER, global::System.String gROUP_NAME, global::System.String bOLD_FONT, global::System.Int32 dECIMALS, global::System.Decimal mULTIPLIER)
        {
            PERIOD_FINANCIALS_DISPLAY pERIOD_FINANCIALS_DISPLAY = new PERIOD_FINANCIALS_DISPLAY();
            pERIOD_FINANCIALS_DISPLAY.DATA_ID = dATA_ID;
            pERIOD_FINANCIALS_DISPLAY.DATA_DESC = dATA_DESC;
            pERIOD_FINANCIALS_DISPLAY.COA_TYPE = cOA_TYPE;
            pERIOD_FINANCIALS_DISPLAY.SORT_ORDER = sORT_ORDER;
            pERIOD_FINANCIALS_DISPLAY.GROUP_NAME = gROUP_NAME;
            pERIOD_FINANCIALS_DISPLAY.BOLD_FONT = bOLD_FONT;
            pERIOD_FINANCIALS_DISPLAY.DECIMALS = dECIMALS;
            pERIOD_FINANCIALS_DISPLAY.MULTIPLIER = mULTIPLIER;
            return pERIOD_FINANCIALS_DISPLAY;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DATA_ID
        {
            get
            {
                return _DATA_ID;
            }
            set
            {
                if (_DATA_ID != value)
                {
                    OnDATA_IDChanging(value);
                    ReportPropertyChanging("DATA_ID");
                    _DATA_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DATA_ID");
                    OnDATA_IDChanged();
                }
            }
        }
        private global::System.Int32 _DATA_ID;
        partial void OnDATA_IDChanging(global::System.Int32 value);
        partial void OnDATA_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DATA_DESC
        {
            get
            {
                return _DATA_DESC;
            }
            set
            {
                if (_DATA_DESC != value)
                {
                    OnDATA_DESCChanging(value);
                    ReportPropertyChanging("DATA_DESC");
                    _DATA_DESC = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DATA_DESC");
                    OnDATA_DESCChanged();
                }
            }
        }
        private global::System.String _DATA_DESC;
        partial void OnDATA_DESCChanging(global::System.String value);
        partial void OnDATA_DESCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String STATEMENT_TYPE
        {
            get
            {
                return _STATEMENT_TYPE;
            }
            set
            {
                OnSTATEMENT_TYPEChanging(value);
                ReportPropertyChanging("STATEMENT_TYPE");
                _STATEMENT_TYPE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("STATEMENT_TYPE");
                OnSTATEMENT_TYPEChanged();
            }
        }
        private global::System.String _STATEMENT_TYPE;
        partial void OnSTATEMENT_TYPEChanging(global::System.String value);
        partial void OnSTATEMENT_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String COA_TYPE
        {
            get
            {
                return _COA_TYPE;
            }
            set
            {
                if (_COA_TYPE != value)
                {
                    OnCOA_TYPEChanging(value);
                    ReportPropertyChanging("COA_TYPE");
                    _COA_TYPE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("COA_TYPE");
                    OnCOA_TYPEChanged();
                }
            }
        }
        private global::System.String _COA_TYPE;
        partial void OnCOA_TYPEChanging(global::System.String value);
        partial void OnCOA_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SORT_ORDER
        {
            get
            {
                return _SORT_ORDER;
            }
            set
            {
                if (_SORT_ORDER != value)
                {
                    OnSORT_ORDERChanging(value);
                    ReportPropertyChanging("SORT_ORDER");
                    _SORT_ORDER = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SORT_ORDER");
                    OnSORT_ORDERChanged();
                }
            }
        }
        private global::System.Int32 _SORT_ORDER;
        partial void OnSORT_ORDERChanging(global::System.Int32 value);
        partial void OnSORT_ORDERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GROUP_NAME
        {
            get
            {
                return _GROUP_NAME;
            }
            set
            {
                if (_GROUP_NAME != value)
                {
                    OnGROUP_NAMEChanging(value);
                    ReportPropertyChanging("GROUP_NAME");
                    _GROUP_NAME = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("GROUP_NAME");
                    OnGROUP_NAMEChanged();
                }
            }
        }
        private global::System.String _GROUP_NAME;
        partial void OnGROUP_NAMEChanging(global::System.String value);
        partial void OnGROUP_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BOLD_FONT
        {
            get
            {
                return _BOLD_FONT;
            }
            set
            {
                if (_BOLD_FONT != value)
                {
                    OnBOLD_FONTChanging(value);
                    ReportPropertyChanging("BOLD_FONT");
                    _BOLD_FONT = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("BOLD_FONT");
                    OnBOLD_FONTChanged();
                }
            }
        }
        private global::System.String _BOLD_FONT;
        partial void OnBOLD_FONTChanging(global::System.String value);
        partial void OnBOLD_FONTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DECIMALS
        {
            get
            {
                return _DECIMALS;
            }
            set
            {
                if (_DECIMALS != value)
                {
                    OnDECIMALSChanging(value);
                    ReportPropertyChanging("DECIMALS");
                    _DECIMALS = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DECIMALS");
                    OnDECIMALSChanged();
                }
            }
        }
        private global::System.Int32 _DECIMALS;
        partial void OnDECIMALSChanging(global::System.Int32 value);
        partial void OnDECIMALSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal MULTIPLIER
        {
            get
            {
                return _MULTIPLIER;
            }
            set
            {
                if (_MULTIPLIER != value)
                {
                    OnMULTIPLIERChanging(value);
                    ReportPropertyChanging("MULTIPLIER");
                    _MULTIPLIER = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MULTIPLIER");
                    OnMULTIPLIERChanged();
                }
            }
        }
        private global::System.Decimal _MULTIPLIER;
        partial void OnMULTIPLIERChanging(global::System.Decimal value);
        partial void OnMULTIPLIERChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExternalResearchModel", Name="Portfolio_Security_Target_Baseview")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Portfolio_Security_Target_Baseview : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Portfolio_Security_Target_Baseview object.
        /// </summary>
        /// <param name="pORTFOLIO_ID">Initial value of the PORTFOLIO_ID property.</param>
        /// <param name="tARGET_PCT">Initial value of the TARGET_PCT property.</param>
        /// <param name="sECURITY_ID">Initial value of the SECURITY_ID property.</param>
        public static Portfolio_Security_Target_Baseview CreatePortfolio_Security_Target_Baseview(global::System.String pORTFOLIO_ID, global::System.Decimal tARGET_PCT, global::System.String sECURITY_ID)
        {
            Portfolio_Security_Target_Baseview portfolio_Security_Target_Baseview = new Portfolio_Security_Target_Baseview();
            portfolio_Security_Target_Baseview.PORTFOLIO_ID = pORTFOLIO_ID;
            portfolio_Security_Target_Baseview.TARGET_PCT = tARGET_PCT;
            portfolio_Security_Target_Baseview.SECURITY_ID = sECURITY_ID;
            return portfolio_Security_Target_Baseview;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PORTFOLIO_ID
        {
            get
            {
                return _PORTFOLIO_ID;
            }
            set
            {
                if (_PORTFOLIO_ID != value)
                {
                    OnPORTFOLIO_IDChanging(value);
                    ReportPropertyChanging("PORTFOLIO_ID");
                    _PORTFOLIO_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PORTFOLIO_ID");
                    OnPORTFOLIO_IDChanged();
                }
            }
        }
        private global::System.String _PORTFOLIO_ID;
        partial void OnPORTFOLIO_IDChanging(global::System.String value);
        partial void OnPORTFOLIO_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TARGET_PCT
        {
            get
            {
                return _TARGET_PCT;
            }
            set
            {
                if (_TARGET_PCT != value)
                {
                    OnTARGET_PCTChanging(value);
                    ReportPropertyChanging("TARGET_PCT");
                    _TARGET_PCT = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TARGET_PCT");
                    OnTARGET_PCTChanged();
                }
            }
        }
        private global::System.Decimal _TARGET_PCT;
        partial void OnTARGET_PCTChanging(global::System.Decimal value);
        partial void OnTARGET_PCTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SECURITY_ID
        {
            get
            {
                return _SECURITY_ID;
            }
            set
            {
                if (_SECURITY_ID != value)
                {
                    OnSECURITY_IDChanging(value);
                    ReportPropertyChanging("SECURITY_ID");
                    _SECURITY_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SECURITY_ID");
                    OnSECURITY_IDChanged();
                }
            }
        }
        private global::System.String _SECURITY_ID;
        partial void OnSECURITY_IDChanging(global::System.String value);
        partial void OnSECURITY_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ASEC_SEC_SHORT_NAME
        {
            get
            {
                return _ASEC_SEC_SHORT_NAME;
            }
            set
            {
                OnASEC_SEC_SHORT_NAMEChanging(value);
                ReportPropertyChanging("ASEC_SEC_SHORT_NAME");
                _ASEC_SEC_SHORT_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ASEC_SEC_SHORT_NAME");
                OnASEC_SEC_SHORT_NAMEChanged();
            }
        }
        private global::System.String _ASEC_SEC_SHORT_NAME;
        partial void OnASEC_SEC_SHORT_NAMEChanging(global::System.String value);
        partial void OnASEC_SEC_SHORT_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SECURITY_TYPE
        {
            get
            {
                return _SECURITY_TYPE;
            }
            set
            {
                OnSECURITY_TYPEChanging(value);
                ReportPropertyChanging("SECURITY_TYPE");
                _SECURITY_TYPE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SECURITY_TYPE");
                OnSECURITY_TYPEChanged();
            }
        }
        private global::System.String _SECURITY_TYPE;
        partial void OnSECURITY_TYPEChanging(global::System.String value);
        partial void OnSECURITY_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ASHEMM_PROPRIETARY_REGION_CODE
        {
            get
            {
                return _ASHEMM_PROPRIETARY_REGION_CODE;
            }
            set
            {
                OnASHEMM_PROPRIETARY_REGION_CODEChanging(value);
                ReportPropertyChanging("ASHEMM_PROPRIETARY_REGION_CODE");
                _ASHEMM_PROPRIETARY_REGION_CODE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ASHEMM_PROPRIETARY_REGION_CODE");
                OnASHEMM_PROPRIETARY_REGION_CODEChanged();
            }
        }
        private global::System.String _ASHEMM_PROPRIETARY_REGION_CODE;
        partial void OnASHEMM_PROPRIETARY_REGION_CODEChanging(global::System.String value);
        partial void OnASHEMM_PROPRIETARY_REGION_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ISO_COUNTRY_CODE
        {
            get
            {
                return _ISO_COUNTRY_CODE;
            }
            set
            {
                OnISO_COUNTRY_CODEChanging(value);
                ReportPropertyChanging("ISO_COUNTRY_CODE");
                _ISO_COUNTRY_CODE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ISO_COUNTRY_CODE");
                OnISO_COUNTRY_CODEChanged();
            }
        }
        private global::System.String _ISO_COUNTRY_CODE;
        partial void OnISO_COUNTRY_CODEChanging(global::System.String value);
        partial void OnISO_COUNTRY_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GICS_SECTOR
        {
            get
            {
                return _GICS_SECTOR;
            }
            set
            {
                OnGICS_SECTORChanging(value);
                ReportPropertyChanging("GICS_SECTOR");
                _GICS_SECTOR = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GICS_SECTOR");
                OnGICS_SECTORChanged();
            }
        }
        private global::System.String _GICS_SECTOR;
        partial void OnGICS_SECTORChanging(global::System.String value);
        partial void OnGICS_SECTORChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GICS_SECTOR_NAME
        {
            get
            {
                return _GICS_SECTOR_NAME;
            }
            set
            {
                OnGICS_SECTOR_NAMEChanging(value);
                ReportPropertyChanging("GICS_SECTOR_NAME");
                _GICS_SECTOR_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GICS_SECTOR_NAME");
                OnGICS_SECTOR_NAMEChanged();
            }
        }
        private global::System.String _GICS_SECTOR_NAME;
        partial void OnGICS_SECTOR_NAMEChanging(global::System.String value);
        partial void OnGICS_SECTOR_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GICS_INDUSTRY
        {
            get
            {
                return _GICS_INDUSTRY;
            }
            set
            {
                OnGICS_INDUSTRYChanging(value);
                ReportPropertyChanging("GICS_INDUSTRY");
                _GICS_INDUSTRY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GICS_INDUSTRY");
                OnGICS_INDUSTRYChanged();
            }
        }
        private global::System.String _GICS_INDUSTRY;
        partial void OnGICS_INDUSTRYChanging(global::System.String value);
        partial void OnGICS_INDUSTRYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GICS_INDUSTRY_NAME
        {
            get
            {
                return _GICS_INDUSTRY_NAME;
            }
            set
            {
                OnGICS_INDUSTRY_NAMEChanging(value);
                ReportPropertyChanging("GICS_INDUSTRY_NAME");
                _GICS_INDUSTRY_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GICS_INDUSTRY_NAME");
                OnGICS_INDUSTRY_NAMEChanged();
            }
        }
        private global::System.String _GICS_INDUSTRY_NAME;
        partial void OnGICS_INDUSTRY_NAMEChanging(global::System.String value);
        partial void OnGICS_INDUSTRY_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GICS_SUB_INDUSTRY
        {
            get
            {
                return _GICS_SUB_INDUSTRY;
            }
            set
            {
                OnGICS_SUB_INDUSTRYChanging(value);
                ReportPropertyChanging("GICS_SUB_INDUSTRY");
                _GICS_SUB_INDUSTRY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GICS_SUB_INDUSTRY");
                OnGICS_SUB_INDUSTRYChanged();
            }
        }
        private global::System.String _GICS_SUB_INDUSTRY;
        partial void OnGICS_SUB_INDUSTRYChanging(global::System.String value);
        partial void OnGICS_SUB_INDUSTRYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GICS_SUB_INDUSTRY_NAME
        {
            get
            {
                return _GICS_SUB_INDUSTRY_NAME;
            }
            set
            {
                OnGICS_SUB_INDUSTRY_NAMEChanging(value);
                ReportPropertyChanging("GICS_SUB_INDUSTRY_NAME");
                _GICS_SUB_INDUSTRY_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GICS_SUB_INDUSTRY_NAME");
                OnGICS_SUB_INDUSTRY_NAMEChanged();
            }
        }
        private global::System.String _GICS_SUB_INDUSTRY_NAME;
        partial void OnGICS_SUB_INDUSTRY_NAMEChanging(global::System.String value);
        partial void OnGICS_SUB_INDUSTRY_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LOOK_THRU_FUND
        {
            get
            {
                return _LOOK_THRU_FUND;
            }
            set
            {
                OnLOOK_THRU_FUNDChanging(value);
                ReportPropertyChanging("LOOK_THRU_FUND");
                _LOOK_THRU_FUND = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LOOK_THRU_FUND");
                OnLOOK_THRU_FUNDChanged();
            }
        }
        private global::System.String _LOOK_THRU_FUND;
        partial void OnLOOK_THRU_FUNDChanging(global::System.String value);
        partial void OnLOOK_THRU_FUNDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ISSUER_NAME
        {
            get
            {
                return _ISSUER_NAME;
            }
            set
            {
                OnISSUER_NAMEChanging(value);
                ReportPropertyChanging("ISSUER_NAME");
                _ISSUER_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ISSUER_NAME");
                OnISSUER_NAMEChanged();
            }
        }
        private global::System.String _ISSUER_NAME;
        partial void OnISSUER_NAMEChanging(global::System.String value);
        partial void OnISSUER_NAMEChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExternalResearchModel", Name="PORTFOLIO_SECURITY_TARGETS")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PORTFOLIO_SECURITY_TARGETS : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PORTFOLIO_SECURITY_TARGETS object.
        /// </summary>
        /// <param name="pORTFOLIO_ID">Initial value of the PORTFOLIO_ID property.</param>
        /// <param name="sECURITY_ID">Initial value of the SECURITY_ID property.</param>
        /// <param name="tARGET_PCT">Initial value of the TARGET_PCT property.</param>
        /// <param name="uPDATED">Initial value of the UPDATED property.</param>
        public static PORTFOLIO_SECURITY_TARGETS CreatePORTFOLIO_SECURITY_TARGETS(global::System.String pORTFOLIO_ID, global::System.String sECURITY_ID, global::System.Decimal tARGET_PCT, global::System.DateTime uPDATED)
        {
            PORTFOLIO_SECURITY_TARGETS pORTFOLIO_SECURITY_TARGETS = new PORTFOLIO_SECURITY_TARGETS();
            pORTFOLIO_SECURITY_TARGETS.PORTFOLIO_ID = pORTFOLIO_ID;
            pORTFOLIO_SECURITY_TARGETS.SECURITY_ID = sECURITY_ID;
            pORTFOLIO_SECURITY_TARGETS.TARGET_PCT = tARGET_PCT;
            pORTFOLIO_SECURITY_TARGETS.UPDATED = uPDATED;
            return pORTFOLIO_SECURITY_TARGETS;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PORTFOLIO_ID
        {
            get
            {
                return _PORTFOLIO_ID;
            }
            set
            {
                if (_PORTFOLIO_ID != value)
                {
                    OnPORTFOLIO_IDChanging(value);
                    ReportPropertyChanging("PORTFOLIO_ID");
                    _PORTFOLIO_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PORTFOLIO_ID");
                    OnPORTFOLIO_IDChanged();
                }
            }
        }
        private global::System.String _PORTFOLIO_ID;
        partial void OnPORTFOLIO_IDChanging(global::System.String value);
        partial void OnPORTFOLIO_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SECURITY_ID
        {
            get
            {
                return _SECURITY_ID;
            }
            set
            {
                if (_SECURITY_ID != value)
                {
                    OnSECURITY_IDChanging(value);
                    ReportPropertyChanging("SECURITY_ID");
                    _SECURITY_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SECURITY_ID");
                    OnSECURITY_IDChanged();
                }
            }
        }
        private global::System.String _SECURITY_ID;
        partial void OnSECURITY_IDChanging(global::System.String value);
        partial void OnSECURITY_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TARGET_PCT
        {
            get
            {
                return _TARGET_PCT;
            }
            set
            {
                if (_TARGET_PCT != value)
                {
                    OnTARGET_PCTChanging(value);
                    ReportPropertyChanging("TARGET_PCT");
                    _TARGET_PCT = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TARGET_PCT");
                    OnTARGET_PCTChanged();
                }
            }
        }
        private global::System.Decimal _TARGET_PCT;
        partial void OnTARGET_PCTChanging(global::System.Decimal value);
        partial void OnTARGET_PCTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UPDATED
        {
            get
            {
                return _UPDATED;
            }
            set
            {
                if (_UPDATED != value)
                {
                    OnUPDATEDChanging(value);
                    ReportPropertyChanging("UPDATED");
                    _UPDATED = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UPDATED");
                    OnUPDATEDChanged();
                }
            }
        }
        private global::System.DateTime _UPDATED;
        partial void OnUPDATEDChanging(global::System.DateTime value);
        partial void OnUPDATEDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExternalResearchModel", Name="Portfolio_Security_Targets_Union")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Portfolio_Security_Targets_Union : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Portfolio_Security_Targets_Union object.
        /// </summary>
        /// <param name="pORTFOLIO_ID">Initial value of the PORTFOLIO_ID property.</param>
        /// <param name="sECURITY_ID">Initial value of the SECURITY_ID property.</param>
        /// <param name="tARGET_PCT">Initial value of the TARGET_PCT property.</param>
        public static Portfolio_Security_Targets_Union CreatePortfolio_Security_Targets_Union(global::System.String pORTFOLIO_ID, global::System.String sECURITY_ID, global::System.Decimal tARGET_PCT)
        {
            Portfolio_Security_Targets_Union portfolio_Security_Targets_Union = new Portfolio_Security_Targets_Union();
            portfolio_Security_Targets_Union.PORTFOLIO_ID = pORTFOLIO_ID;
            portfolio_Security_Targets_Union.SECURITY_ID = sECURITY_ID;
            portfolio_Security_Targets_Union.TARGET_PCT = tARGET_PCT;
            return portfolio_Security_Targets_Union;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PORTFOLIO_ID
        {
            get
            {
                return _PORTFOLIO_ID;
            }
            set
            {
                if (_PORTFOLIO_ID != value)
                {
                    OnPORTFOLIO_IDChanging(value);
                    ReportPropertyChanging("PORTFOLIO_ID");
                    _PORTFOLIO_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PORTFOLIO_ID");
                    OnPORTFOLIO_IDChanged();
                }
            }
        }
        private global::System.String _PORTFOLIO_ID;
        partial void OnPORTFOLIO_IDChanging(global::System.String value);
        partial void OnPORTFOLIO_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SECURITY_ID
        {
            get
            {
                return _SECURITY_ID;
            }
            set
            {
                if (_SECURITY_ID != value)
                {
                    OnSECURITY_IDChanging(value);
                    ReportPropertyChanging("SECURITY_ID");
                    _SECURITY_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SECURITY_ID");
                    OnSECURITY_IDChanged();
                }
            }
        }
        private global::System.String _SECURITY_ID;
        partial void OnSECURITY_IDChanging(global::System.String value);
        partial void OnSECURITY_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TARGET_PCT
        {
            get
            {
                return _TARGET_PCT;
            }
            set
            {
                if (_TARGET_PCT != value)
                {
                    OnTARGET_PCTChanging(value);
                    ReportPropertyChanging("TARGET_PCT");
                    _TARGET_PCT = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TARGET_PCT");
                    OnTARGET_PCTChanged();
                }
            }
        }
        private global::System.Decimal _TARGET_PCT;
        partial void OnTARGET_PCTChanging(global::System.Decimal value);
        partial void OnTARGET_PCTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UPDATED
        {
            get
            {
                return _UPDATED;
            }
            set
            {
                OnUPDATEDChanging(value);
                ReportPropertyChanging("UPDATED");
                _UPDATED = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UPDATED");
                OnUPDATEDChanged();
            }
        }
        private Nullable<global::System.DateTime> _UPDATED;
        partial void OnUPDATEDChanging(Nullable<global::System.DateTime> value);
        partial void OnUPDATEDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExternalResearchModel", Name="PRICE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PRICE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PRICE object.
        /// </summary>
        /// <param name="sECURITY_ID">Initial value of the SECURITY_ID property.</param>
        /// <param name="pRICE_DATE">Initial value of the PRICE_DATE property.</param>
        /// <param name="pRICE1">Initial value of the PRICE1 property.</param>
        /// <param name="fX_RATE">Initial value of the FX_RATE property.</param>
        /// <param name="aDR_CONV">Initial value of the ADR_CONV property.</param>
        public static PRICE CreatePRICE(global::System.String sECURITY_ID, global::System.DateTime pRICE_DATE, global::System.Decimal pRICE1, global::System.Decimal fX_RATE, global::System.Decimal aDR_CONV)
        {
            PRICE pRICE = new PRICE();
            pRICE.SECURITY_ID = sECURITY_ID;
            pRICE.PRICE_DATE = pRICE_DATE;
            pRICE.PRICE1 = pRICE1;
            pRICE.FX_RATE = fX_RATE;
            pRICE.ADR_CONV = aDR_CONV;
            return pRICE;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SECURITY_ID
        {
            get
            {
                return _SECURITY_ID;
            }
            set
            {
                if (_SECURITY_ID != value)
                {
                    OnSECURITY_IDChanging(value);
                    ReportPropertyChanging("SECURITY_ID");
                    _SECURITY_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SECURITY_ID");
                    OnSECURITY_IDChanged();
                }
            }
        }
        private global::System.String _SECURITY_ID;
        partial void OnSECURITY_IDChanging(global::System.String value);
        partial void OnSECURITY_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PRICE_DATE
        {
            get
            {
                return _PRICE_DATE;
            }
            set
            {
                if (_PRICE_DATE != value)
                {
                    OnPRICE_DATEChanging(value);
                    ReportPropertyChanging("PRICE_DATE");
                    _PRICE_DATE = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PRICE_DATE");
                    OnPRICE_DATEChanged();
                }
            }
        }
        private global::System.DateTime _PRICE_DATE;
        partial void OnPRICE_DATEChanging(global::System.DateTime value);
        partial void OnPRICE_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal PRICE1
        {
            get
            {
                return _PRICE1;
            }
            set
            {
                if (_PRICE1 != value)
                {
                    OnPRICE1Changing(value);
                    ReportPropertyChanging("PRICE1");
                    _PRICE1 = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PRICE1");
                    OnPRICE1Changed();
                }
            }
        }
        private global::System.Decimal _PRICE1;
        partial void OnPRICE1Changing(global::System.Decimal value);
        partial void OnPRICE1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal FX_RATE
        {
            get
            {
                return _FX_RATE;
            }
            set
            {
                if (_FX_RATE != value)
                {
                    OnFX_RATEChanging(value);
                    ReportPropertyChanging("FX_RATE");
                    _FX_RATE = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FX_RATE");
                    OnFX_RATEChanged();
                }
            }
        }
        private global::System.Decimal _FX_RATE;
        partial void OnFX_RATEChanging(global::System.Decimal value);
        partial void OnFX_RATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ADR_CONV
        {
            get
            {
                return _ADR_CONV;
            }
            set
            {
                if (_ADR_CONV != value)
                {
                    OnADR_CONVChanging(value);
                    ReportPropertyChanging("ADR_CONV");
                    _ADR_CONV = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ADR_CONV");
                    OnADR_CONVChanged();
                }
            }
        }
        private global::System.Decimal _ADR_CONV;
        partial void OnADR_CONVChanging(global::System.Decimal value);
        partial void OnADR_CONVChanged();

        #endregion

    
    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ExternalResearchModel", Name="BrokerDetailData")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class BrokerDetailData : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BrokerDetailData object.
        /// </summary>
        /// <param name="estimateType">Initial value of the EstimateType property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="last_Update_Date">Initial value of the Last_Update_Date property.</param>
        public static BrokerDetailData CreateBrokerDetailData(global::System.String estimateType, global::System.DateTime startDate, global::System.DateTime last_Update_Date)
        {
            BrokerDetailData brokerDetailData = new BrokerDetailData();
            brokerDetailData.EstimateType = estimateType;
            brokerDetailData.StartDate = startDate;
            brokerDetailData.Last_Update_Date = last_Update_Date;
            return brokerDetailData;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String broker_name
        {
            get
            {
                return _broker_name;
            }
            set
            {
                Onbroker_nameChanging(value);
                ReportPropertyChanging("broker_name");
                _broker_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("broker_name");
                Onbroker_nameChanged();
            }
        }
        private global::System.String _broker_name;
        partial void Onbroker_nameChanging(global::System.String value);
        partial void Onbroker_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EstimateType
        {
            get
            {
                return _EstimateType;
            }
            set
            {
                OnEstimateTypeChanging(value);
                ReportPropertyChanging("EstimateType");
                _EstimateType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EstimateType");
                OnEstimateTypeChanged();
            }
        }
        private global::System.String _EstimateType;
        partial void OnEstimateTypeChanging(global::System.String value);
        partial void OnEstimateTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String fPeriodEnd
        {
            get
            {
                return _fPeriodEnd;
            }
            set
            {
                OnfPeriodEndChanging(value);
                ReportPropertyChanging("fPeriodEnd");
                _fPeriodEnd = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("fPeriodEnd");
                OnfPeriodEndChanged();
            }
        }
        private global::System.String _fPeriodEnd;
        partial void OnfPeriodEndChanging(global::System.String value);
        partial void OnfPeriodEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private Nullable<global::System.Single> _Amount;
        partial void OnAmountChanging(Nullable<global::System.Single> value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Last_Update_Date
        {
            get
            {
                return _Last_Update_Date;
            }
            set
            {
                OnLast_Update_DateChanging(value);
                ReportPropertyChanging("Last_Update_Date");
                _Last_Update_Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Last_Update_Date");
                OnLast_Update_DateChanged();
            }
        }
        private global::System.DateTime _Last_Update_Date;
        partial void OnLast_Update_DateChanging(global::System.DateTime value);
        partial void OnLast_Update_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Reported_Currency
        {
            get
            {
                return _Reported_Currency;
            }
            set
            {
                OnReported_CurrencyChanging(value);
                ReportPropertyChanging("Reported_Currency");
                _Reported_Currency = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Reported_Currency");
                OnReported_CurrencyChanged();
            }
        }
        private global::System.String _Reported_Currency;
        partial void OnReported_CurrencyChanging(global::System.String value);
        partial void OnReported_CurrencyChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ExternalResearchModel", Name="COASpecificData")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class COASpecificData : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new COASpecificData object.
        /// </summary>
        /// <param name="gridId">Initial value of the GridId property.</param>
        /// <param name="gridDesc">Initial value of the GridDesc property.</param>
        /// <param name="isPercentage">Initial value of the IsPercentage property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        /// <param name="multiplier">Initial value of the Multiplier property.</param>
        public static COASpecificData CreateCOASpecificData(global::System.Int32 gridId, global::System.String gridDesc, global::System.String isPercentage, global::System.Int32 sortOrder, global::System.Decimal multiplier)
        {
            COASpecificData cOASpecificData = new COASpecificData();
            cOASpecificData.GridId = gridId;
            cOASpecificData.GridDesc = gridDesc;
            cOASpecificData.IsPercentage = isPercentage;
            cOASpecificData.SortOrder = sortOrder;
            cOASpecificData.Multiplier = multiplier;
            return cOASpecificData;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GridId
        {
            get
            {
                return _GridId;
            }
            set
            {
                OnGridIdChanging(value);
                ReportPropertyChanging("GridId");
                _GridId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GridId");
                OnGridIdChanged();
            }
        }
        private global::System.Int32 _GridId;
        partial void OnGridIdChanging(global::System.Int32 value);
        partial void OnGridIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShowGrid
        {
            get
            {
                return _ShowGrid;
            }
            set
            {
                OnShowGridChanging(value);
                ReportPropertyChanging("ShowGrid");
                _ShowGrid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShowGrid");
                OnShowGridChanged();
            }
        }
        private global::System.String _ShowGrid;
        partial void OnShowGridChanging(global::System.String value);
        partial void OnShowGridChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GridDesc
        {
            get
            {
                return _GridDesc;
            }
            set
            {
                OnGridDescChanging(value);
                ReportPropertyChanging("GridDesc");
                _GridDesc = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("GridDesc");
                OnGridDescChanged();
            }
        }
        private global::System.String _GridDesc;
        partial void OnGridDescChanging(global::System.String value);
        partial void OnGridDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _Amount;
        partial void OnAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AmountType
        {
            get
            {
                return _AmountType;
            }
            set
            {
                OnAmountTypeChanging(value);
                ReportPropertyChanging("AmountType");
                _AmountType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AmountType");
                OnAmountTypeChanged();
            }
        }
        private global::System.String _AmountType;
        partial void OnAmountTypeChanging(global::System.String value);
        partial void OnAmountTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DataSource
        {
            get
            {
                return _DataSource;
            }
            set
            {
                OnDataSourceChanging(value);
                ReportPropertyChanging("DataSource");
                _DataSource = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DataSource");
                OnDataSourceChanged();
            }
        }
        private global::System.String _DataSource;
        partial void OnDataSourceChanging(global::System.String value);
        partial void OnDataSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Decimals
        {
            get
            {
                return _Decimals;
            }
            set
            {
                OnDecimalsChanging(value);
                ReportPropertyChanging("Decimals");
                _Decimals = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Decimals");
                OnDecimalsChanged();
            }
        }
        private Nullable<global::System.Int32> _Decimals;
        partial void OnDecimalsChanging(Nullable<global::System.Int32> value);
        partial void OnDecimalsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IsPercentage
        {
            get
            {
                return _IsPercentage;
            }
            set
            {
                OnIsPercentageChanging(value);
                ReportPropertyChanging("IsPercentage");
                _IsPercentage = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IsPercentage");
                OnIsPercentageChanged();
            }
        }
        private global::System.String _IsPercentage;
        partial void OnIsPercentageChanging(global::System.String value);
        partial void OnIsPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RootSource
        {
            get
            {
                return _RootSource;
            }
            set
            {
                OnRootSourceChanging(value);
                ReportPropertyChanging("RootSource");
                _RootSource = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RootSource");
                OnRootSourceChanged();
            }
        }
        private global::System.String _RootSource;
        partial void OnRootSourceChanging(global::System.String value);
        partial void OnRootSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Period_Type
        {
            get
            {
                return _Period_Type;
            }
            set
            {
                OnPeriod_TypeChanging(value);
                ReportPropertyChanging("Period_Type");
                _Period_Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Period_Type");
                OnPeriod_TypeChanged();
            }
        }
        private global::System.String _Period_Type;
        partial void OnPeriod_TypeChanging(global::System.String value);
        partial void OnPeriod_TypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PeriodYear
        {
            get
            {
                return _PeriodYear;
            }
            set
            {
                OnPeriodYearChanging(value);
                ReportPropertyChanging("PeriodYear");
                _PeriodYear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PeriodYear");
                OnPeriodYearChanged();
            }
        }
        private Nullable<global::System.Int32> _PeriodYear;
        partial void OnPeriodYearChanging(Nullable<global::System.Int32> value);
        partial void OnPeriodYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Multiplier
        {
            get
            {
                return _Multiplier;
            }
            set
            {
                OnMultiplierChanging(value);
                ReportPropertyChanging("Multiplier");
                _Multiplier = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Multiplier");
                OnMultiplierChanged();
            }
        }
        private global::System.Decimal _Multiplier;
        partial void OnMultiplierChanging(global::System.Decimal value);
        partial void OnMultiplierChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ExternalResearchModel", Name="ConsensusEstimateDetailData")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ConsensusEstimateDetailData : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ConsensusEstimateDetailData object.
        /// </summary>
        /// <param name="iSSUER_ID">Initial value of the ISSUER_ID property.</param>
        /// <param name="eSTIMATE_ID">Initial value of the ESTIMATE_ID property.</param>
        /// <param name="eSTIMATE_DESC">Initial value of the ESTIMATE_DESC property.</param>
        /// <param name="period">Initial value of the Period property.</param>
        /// <param name="aMOUNT_TYPE">Initial value of the AMOUNT_TYPE property.</param>
        /// <param name="pERIOD_YEAR">Initial value of the PERIOD_YEAR property.</param>
        /// <param name="pERIOD_TYPE">Initial value of the PERIOD_TYPE property.</param>
        /// <param name="aMOUNT">Initial value of the AMOUNT property.</param>
        /// <param name="nUMBER_OF_ESTIMATES">Initial value of the NUMBER_OF_ESTIMATES property.</param>
        /// <param name="hIGH">Initial value of the HIGH property.</param>
        /// <param name="lOW">Initial value of the LOW property.</param>
        /// <param name="sTANDARD_DEVIATION">Initial value of the STANDARD_DEVIATION property.</param>
        /// <param name="sOURCE_CURRENCY">Initial value of the SOURCE_CURRENCY property.</param>
        /// <param name="dATA_SOURCE">Initial value of the DATA_SOURCE property.</param>
        /// <param name="dATA_SOURCE_DATE">Initial value of the DATA_SOURCE_DATE property.</param>
        public static ConsensusEstimateDetailData CreateConsensusEstimateDetailData(global::System.String iSSUER_ID, global::System.Int32 eSTIMATE_ID, global::System.String eSTIMATE_DESC, global::System.String period, global::System.String aMOUNT_TYPE, global::System.Int32 pERIOD_YEAR, global::System.String pERIOD_TYPE, global::System.Decimal aMOUNT, global::System.Int32 nUMBER_OF_ESTIMATES, global::System.Decimal hIGH, global::System.Decimal lOW, global::System.Decimal sTANDARD_DEVIATION, global::System.String sOURCE_CURRENCY, global::System.String dATA_SOURCE, global::System.DateTime dATA_SOURCE_DATE)
        {
            ConsensusEstimateDetailData consensusEstimateDetailData = new ConsensusEstimateDetailData();
            consensusEstimateDetailData.ISSUER_ID = iSSUER_ID;
            consensusEstimateDetailData.ESTIMATE_ID = eSTIMATE_ID;
            consensusEstimateDetailData.ESTIMATE_DESC = eSTIMATE_DESC;
            consensusEstimateDetailData.Period = period;
            consensusEstimateDetailData.AMOUNT_TYPE = aMOUNT_TYPE;
            consensusEstimateDetailData.PERIOD_YEAR = pERIOD_YEAR;
            consensusEstimateDetailData.PERIOD_TYPE = pERIOD_TYPE;
            consensusEstimateDetailData.AMOUNT = aMOUNT;
            consensusEstimateDetailData.NUMBER_OF_ESTIMATES = nUMBER_OF_ESTIMATES;
            consensusEstimateDetailData.HIGH = hIGH;
            consensusEstimateDetailData.LOW = lOW;
            consensusEstimateDetailData.STANDARD_DEVIATION = sTANDARD_DEVIATION;
            consensusEstimateDetailData.SOURCE_CURRENCY = sOURCE_CURRENCY;
            consensusEstimateDetailData.DATA_SOURCE = dATA_SOURCE;
            consensusEstimateDetailData.DATA_SOURCE_DATE = dATA_SOURCE_DATE;
            return consensusEstimateDetailData;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ISSUER_ID
        {
            get
            {
                return _ISSUER_ID;
            }
            set
            {
                OnISSUER_IDChanging(value);
                ReportPropertyChanging("ISSUER_ID");
                _ISSUER_ID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ISSUER_ID");
                OnISSUER_IDChanged();
            }
        }
        private global::System.String _ISSUER_ID;
        partial void OnISSUER_IDChanging(global::System.String value);
        partial void OnISSUER_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ESTIMATE_ID
        {
            get
            {
                return _ESTIMATE_ID;
            }
            set
            {
                OnESTIMATE_IDChanging(value);
                ReportPropertyChanging("ESTIMATE_ID");
                _ESTIMATE_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ESTIMATE_ID");
                OnESTIMATE_IDChanged();
            }
        }
        private global::System.Int32 _ESTIMATE_ID;
        partial void OnESTIMATE_IDChanging(global::System.Int32 value);
        partial void OnESTIMATE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ESTIMATE_DESC
        {
            get
            {
                return _ESTIMATE_DESC;
            }
            set
            {
                OnESTIMATE_DESCChanging(value);
                ReportPropertyChanging("ESTIMATE_DESC");
                _ESTIMATE_DESC = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ESTIMATE_DESC");
                OnESTIMATE_DESCChanged();
            }
        }
        private global::System.String _ESTIMATE_DESC;
        partial void OnESTIMATE_DESCChanging(global::System.String value);
        partial void OnESTIMATE_DESCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Period
        {
            get
            {
                return _Period;
            }
            set
            {
                OnPeriodChanging(value);
                ReportPropertyChanging("Period");
                _Period = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Period");
                OnPeriodChanged();
            }
        }
        private global::System.String _Period;
        partial void OnPeriodChanging(global::System.String value);
        partial void OnPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AMOUNT_TYPE
        {
            get
            {
                return _AMOUNT_TYPE;
            }
            set
            {
                OnAMOUNT_TYPEChanging(value);
                ReportPropertyChanging("AMOUNT_TYPE");
                _AMOUNT_TYPE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AMOUNT_TYPE");
                OnAMOUNT_TYPEChanged();
            }
        }
        private global::System.String _AMOUNT_TYPE;
        partial void OnAMOUNT_TYPEChanging(global::System.String value);
        partial void OnAMOUNT_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PERIOD_YEAR
        {
            get
            {
                return _PERIOD_YEAR;
            }
            set
            {
                OnPERIOD_YEARChanging(value);
                ReportPropertyChanging("PERIOD_YEAR");
                _PERIOD_YEAR = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PERIOD_YEAR");
                OnPERIOD_YEARChanged();
            }
        }
        private global::System.Int32 _PERIOD_YEAR;
        partial void OnPERIOD_YEARChanging(global::System.Int32 value);
        partial void OnPERIOD_YEARChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PERIOD_TYPE
        {
            get
            {
                return _PERIOD_TYPE;
            }
            set
            {
                OnPERIOD_TYPEChanging(value);
                ReportPropertyChanging("PERIOD_TYPE");
                _PERIOD_TYPE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PERIOD_TYPE");
                OnPERIOD_TYPEChanged();
            }
        }
        private global::System.String _PERIOD_TYPE;
        partial void OnPERIOD_TYPEChanging(global::System.String value);
        partial void OnPERIOD_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal AMOUNT
        {
            get
            {
                return _AMOUNT;
            }
            set
            {
                OnAMOUNTChanging(value);
                ReportPropertyChanging("AMOUNT");
                _AMOUNT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AMOUNT");
                OnAMOUNTChanged();
            }
        }
        private global::System.Decimal _AMOUNT;
        partial void OnAMOUNTChanging(global::System.Decimal value);
        partial void OnAMOUNTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ASHMOREEMM_AMOUNT
        {
            get
            {
                return _ASHMOREEMM_AMOUNT;
            }
            set
            {
                OnASHMOREEMM_AMOUNTChanging(value);
                ReportPropertyChanging("ASHMOREEMM_AMOUNT");
                _ASHMOREEMM_AMOUNT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ASHMOREEMM_AMOUNT");
                OnASHMOREEMM_AMOUNTChanged();
            }
        }
        private Nullable<global::System.Decimal> _ASHMOREEMM_AMOUNT;
        partial void OnASHMOREEMM_AMOUNTChanging(Nullable<global::System.Decimal> value);
        partial void OnASHMOREEMM_AMOUNTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NUMBER_OF_ESTIMATES
        {
            get
            {
                return _NUMBER_OF_ESTIMATES;
            }
            set
            {
                OnNUMBER_OF_ESTIMATESChanging(value);
                ReportPropertyChanging("NUMBER_OF_ESTIMATES");
                _NUMBER_OF_ESTIMATES = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NUMBER_OF_ESTIMATES");
                OnNUMBER_OF_ESTIMATESChanged();
            }
        }
        private global::System.Int32 _NUMBER_OF_ESTIMATES;
        partial void OnNUMBER_OF_ESTIMATESChanging(global::System.Int32 value);
        partial void OnNUMBER_OF_ESTIMATESChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal HIGH
        {
            get
            {
                return _HIGH;
            }
            set
            {
                OnHIGHChanging(value);
                ReportPropertyChanging("HIGH");
                _HIGH = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HIGH");
                OnHIGHChanged();
            }
        }
        private global::System.Decimal _HIGH;
        partial void OnHIGHChanging(global::System.Decimal value);
        partial void OnHIGHChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal LOW
        {
            get
            {
                return _LOW;
            }
            set
            {
                OnLOWChanging(value);
                ReportPropertyChanging("LOW");
                _LOW = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LOW");
                OnLOWChanged();
            }
        }
        private global::System.Decimal _LOW;
        partial void OnLOWChanging(global::System.Decimal value);
        partial void OnLOWChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal STANDARD_DEVIATION
        {
            get
            {
                return _STANDARD_DEVIATION;
            }
            set
            {
                OnSTANDARD_DEVIATIONChanging(value);
                ReportPropertyChanging("STANDARD_DEVIATION");
                _STANDARD_DEVIATION = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("STANDARD_DEVIATION");
                OnSTANDARD_DEVIATIONChanged();
            }
        }
        private global::System.Decimal _STANDARD_DEVIATION;
        partial void OnSTANDARD_DEVIATIONChanging(global::System.Decimal value);
        partial void OnSTANDARD_DEVIATIONChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SOURCE_CURRENCY
        {
            get
            {
                return _SOURCE_CURRENCY;
            }
            set
            {
                OnSOURCE_CURRENCYChanging(value);
                ReportPropertyChanging("SOURCE_CURRENCY");
                _SOURCE_CURRENCY = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SOURCE_CURRENCY");
                OnSOURCE_CURRENCYChanged();
            }
        }
        private global::System.String _SOURCE_CURRENCY;
        partial void OnSOURCE_CURRENCYChanging(global::System.String value);
        partial void OnSOURCE_CURRENCYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DATA_SOURCE
        {
            get
            {
                return _DATA_SOURCE;
            }
            set
            {
                OnDATA_SOURCEChanging(value);
                ReportPropertyChanging("DATA_SOURCE");
                _DATA_SOURCE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DATA_SOURCE");
                OnDATA_SOURCEChanged();
            }
        }
        private global::System.String _DATA_SOURCE;
        partial void OnDATA_SOURCEChanging(global::System.String value);
        partial void OnDATA_SOURCEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DATA_SOURCE_DATE
        {
            get
            {
                return _DATA_SOURCE_DATE;
            }
            set
            {
                OnDATA_SOURCE_DATEChanging(value);
                ReportPropertyChanging("DATA_SOURCE_DATE");
                _DATA_SOURCE_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATA_SOURCE_DATE");
                OnDATA_SOURCE_DATEChanged();
            }
        }
        private global::System.DateTime _DATA_SOURCE_DATE;
        partial void OnDATA_SOURCE_DATEChanging(global::System.DateTime value);
        partial void OnDATA_SOURCE_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ACTUAL
        {
            get
            {
                return _ACTUAL;
            }
            set
            {
                OnACTUALChanging(value);
                ReportPropertyChanging("ACTUAL");
                _ACTUAL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ACTUAL");
                OnACTUALChanged();
            }
        }
        private Nullable<global::System.Decimal> _ACTUAL;
        partial void OnACTUALChanging(Nullable<global::System.Decimal> value);
        partial void OnACTUALChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ExternalResearchModel", Name="ConsensusEstimateMedianData")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ConsensusEstimateMedianData : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ConsensusEstimateMedianData object.
        /// </summary>
        /// <param name="iSSUER_ID">Initial value of the ISSUER_ID property.</param>
        /// <param name="eSTIMATE_ID">Initial value of the ESTIMATE_ID property.</param>
        /// <param name="eSTIMATE_DESC">Initial value of the ESTIMATE_DESC property.</param>
        /// <param name="period">Initial value of the Period property.</param>
        /// <param name="aMOUNT_TYPE">Initial value of the AMOUNT_TYPE property.</param>
        /// <param name="pERIOD_YEAR">Initial value of the PERIOD_YEAR property.</param>
        /// <param name="pERIOD_TYPE">Initial value of the PERIOD_TYPE property.</param>
        /// <param name="aMOUNT">Initial value of the AMOUNT property.</param>
        /// <param name="nUMBER_OF_ESTIMATES">Initial value of the NUMBER_OF_ESTIMATES property.</param>
        /// <param name="hIGH">Initial value of the HIGH property.</param>
        /// <param name="lOW">Initial value of the LOW property.</param>
        /// <param name="sTANDARD_DEVIATION">Initial value of the STANDARD_DEVIATION property.</param>
        /// <param name="sOURCE_CURRENCY">Initial value of the SOURCE_CURRENCY property.</param>
        /// <param name="dATA_SOURCE">Initial value of the DATA_SOURCE property.</param>
        /// <param name="dATA_SOURCE_DATE">Initial value of the DATA_SOURCE_DATE property.</param>
        public static ConsensusEstimateMedianData CreateConsensusEstimateMedianData(global::System.String iSSUER_ID, global::System.Int32 eSTIMATE_ID, global::System.String eSTIMATE_DESC, global::System.String period, global::System.String aMOUNT_TYPE, global::System.Int32 pERIOD_YEAR, global::System.String pERIOD_TYPE, global::System.Decimal aMOUNT, global::System.Int32 nUMBER_OF_ESTIMATES, global::System.Decimal hIGH, global::System.Decimal lOW, global::System.Decimal sTANDARD_DEVIATION, global::System.String sOURCE_CURRENCY, global::System.String dATA_SOURCE, global::System.DateTime dATA_SOURCE_DATE)
        {
            ConsensusEstimateMedianData consensusEstimateMedianData = new ConsensusEstimateMedianData();
            consensusEstimateMedianData.ISSUER_ID = iSSUER_ID;
            consensusEstimateMedianData.ESTIMATE_ID = eSTIMATE_ID;
            consensusEstimateMedianData.ESTIMATE_DESC = eSTIMATE_DESC;
            consensusEstimateMedianData.Period = period;
            consensusEstimateMedianData.AMOUNT_TYPE = aMOUNT_TYPE;
            consensusEstimateMedianData.PERIOD_YEAR = pERIOD_YEAR;
            consensusEstimateMedianData.PERIOD_TYPE = pERIOD_TYPE;
            consensusEstimateMedianData.AMOUNT = aMOUNT;
            consensusEstimateMedianData.NUMBER_OF_ESTIMATES = nUMBER_OF_ESTIMATES;
            consensusEstimateMedianData.HIGH = hIGH;
            consensusEstimateMedianData.LOW = lOW;
            consensusEstimateMedianData.STANDARD_DEVIATION = sTANDARD_DEVIATION;
            consensusEstimateMedianData.SOURCE_CURRENCY = sOURCE_CURRENCY;
            consensusEstimateMedianData.DATA_SOURCE = dATA_SOURCE;
            consensusEstimateMedianData.DATA_SOURCE_DATE = dATA_SOURCE_DATE;
            return consensusEstimateMedianData;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ISSUER_ID
        {
            get
            {
                return _ISSUER_ID;
            }
            set
            {
                OnISSUER_IDChanging(value);
                ReportPropertyChanging("ISSUER_ID");
                _ISSUER_ID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ISSUER_ID");
                OnISSUER_IDChanged();
            }
        }
        private global::System.String _ISSUER_ID;
        partial void OnISSUER_IDChanging(global::System.String value);
        partial void OnISSUER_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ESTIMATE_ID
        {
            get
            {
                return _ESTIMATE_ID;
            }
            set
            {
                OnESTIMATE_IDChanging(value);
                ReportPropertyChanging("ESTIMATE_ID");
                _ESTIMATE_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ESTIMATE_ID");
                OnESTIMATE_IDChanged();
            }
        }
        private global::System.Int32 _ESTIMATE_ID;
        partial void OnESTIMATE_IDChanging(global::System.Int32 value);
        partial void OnESTIMATE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ESTIMATE_DESC
        {
            get
            {
                return _ESTIMATE_DESC;
            }
            set
            {
                OnESTIMATE_DESCChanging(value);
                ReportPropertyChanging("ESTIMATE_DESC");
                _ESTIMATE_DESC = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ESTIMATE_DESC");
                OnESTIMATE_DESCChanged();
            }
        }
        private global::System.String _ESTIMATE_DESC;
        partial void OnESTIMATE_DESCChanging(global::System.String value);
        partial void OnESTIMATE_DESCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Period
        {
            get
            {
                return _Period;
            }
            set
            {
                OnPeriodChanging(value);
                ReportPropertyChanging("Period");
                _Period = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Period");
                OnPeriodChanged();
            }
        }
        private global::System.String _Period;
        partial void OnPeriodChanging(global::System.String value);
        partial void OnPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AMOUNT_TYPE
        {
            get
            {
                return _AMOUNT_TYPE;
            }
            set
            {
                OnAMOUNT_TYPEChanging(value);
                ReportPropertyChanging("AMOUNT_TYPE");
                _AMOUNT_TYPE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AMOUNT_TYPE");
                OnAMOUNT_TYPEChanged();
            }
        }
        private global::System.String _AMOUNT_TYPE;
        partial void OnAMOUNT_TYPEChanging(global::System.String value);
        partial void OnAMOUNT_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PERIOD_YEAR
        {
            get
            {
                return _PERIOD_YEAR;
            }
            set
            {
                OnPERIOD_YEARChanging(value);
                ReportPropertyChanging("PERIOD_YEAR");
                _PERIOD_YEAR = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PERIOD_YEAR");
                OnPERIOD_YEARChanged();
            }
        }
        private global::System.Int32 _PERIOD_YEAR;
        partial void OnPERIOD_YEARChanging(global::System.Int32 value);
        partial void OnPERIOD_YEARChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PERIOD_TYPE
        {
            get
            {
                return _PERIOD_TYPE;
            }
            set
            {
                OnPERIOD_TYPEChanging(value);
                ReportPropertyChanging("PERIOD_TYPE");
                _PERIOD_TYPE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PERIOD_TYPE");
                OnPERIOD_TYPEChanged();
            }
        }
        private global::System.String _PERIOD_TYPE;
        partial void OnPERIOD_TYPEChanging(global::System.String value);
        partial void OnPERIOD_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal AMOUNT
        {
            get
            {
                return _AMOUNT;
            }
            set
            {
                OnAMOUNTChanging(value);
                ReportPropertyChanging("AMOUNT");
                _AMOUNT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AMOUNT");
                OnAMOUNTChanged();
            }
        }
        private global::System.Decimal _AMOUNT;
        partial void OnAMOUNTChanging(global::System.Decimal value);
        partial void OnAMOUNTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ASHMOREEMM_AMOUNT
        {
            get
            {
                return _ASHMOREEMM_AMOUNT;
            }
            set
            {
                OnASHMOREEMM_AMOUNTChanging(value);
                ReportPropertyChanging("ASHMOREEMM_AMOUNT");
                _ASHMOREEMM_AMOUNT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ASHMOREEMM_AMOUNT");
                OnASHMOREEMM_AMOUNTChanged();
            }
        }
        private Nullable<global::System.Decimal> _ASHMOREEMM_AMOUNT;
        partial void OnASHMOREEMM_AMOUNTChanging(Nullable<global::System.Decimal> value);
        partial void OnASHMOREEMM_AMOUNTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NUMBER_OF_ESTIMATES
        {
            get
            {
                return _NUMBER_OF_ESTIMATES;
            }
            set
            {
                OnNUMBER_OF_ESTIMATESChanging(value);
                ReportPropertyChanging("NUMBER_OF_ESTIMATES");
                _NUMBER_OF_ESTIMATES = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NUMBER_OF_ESTIMATES");
                OnNUMBER_OF_ESTIMATESChanged();
            }
        }
        private global::System.Int32 _NUMBER_OF_ESTIMATES;
        partial void OnNUMBER_OF_ESTIMATESChanging(global::System.Int32 value);
        partial void OnNUMBER_OF_ESTIMATESChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal HIGH
        {
            get
            {
                return _HIGH;
            }
            set
            {
                OnHIGHChanging(value);
                ReportPropertyChanging("HIGH");
                _HIGH = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HIGH");
                OnHIGHChanged();
            }
        }
        private global::System.Decimal _HIGH;
        partial void OnHIGHChanging(global::System.Decimal value);
        partial void OnHIGHChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal LOW
        {
            get
            {
                return _LOW;
            }
            set
            {
                OnLOWChanging(value);
                ReportPropertyChanging("LOW");
                _LOW = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LOW");
                OnLOWChanged();
            }
        }
        private global::System.Decimal _LOW;
        partial void OnLOWChanging(global::System.Decimal value);
        partial void OnLOWChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal STANDARD_DEVIATION
        {
            get
            {
                return _STANDARD_DEVIATION;
            }
            set
            {
                OnSTANDARD_DEVIATIONChanging(value);
                ReportPropertyChanging("STANDARD_DEVIATION");
                _STANDARD_DEVIATION = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("STANDARD_DEVIATION");
                OnSTANDARD_DEVIATIONChanged();
            }
        }
        private global::System.Decimal _STANDARD_DEVIATION;
        partial void OnSTANDARD_DEVIATIONChanging(global::System.Decimal value);
        partial void OnSTANDARD_DEVIATIONChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SOURCE_CURRENCY
        {
            get
            {
                return _SOURCE_CURRENCY;
            }
            set
            {
                OnSOURCE_CURRENCYChanging(value);
                ReportPropertyChanging("SOURCE_CURRENCY");
                _SOURCE_CURRENCY = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SOURCE_CURRENCY");
                OnSOURCE_CURRENCYChanged();
            }
        }
        private global::System.String _SOURCE_CURRENCY;
        partial void OnSOURCE_CURRENCYChanging(global::System.String value);
        partial void OnSOURCE_CURRENCYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DATA_SOURCE
        {
            get
            {
                return _DATA_SOURCE;
            }
            set
            {
                OnDATA_SOURCEChanging(value);
                ReportPropertyChanging("DATA_SOURCE");
                _DATA_SOURCE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DATA_SOURCE");
                OnDATA_SOURCEChanged();
            }
        }
        private global::System.String _DATA_SOURCE;
        partial void OnDATA_SOURCEChanging(global::System.String value);
        partial void OnDATA_SOURCEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DATA_SOURCE_DATE
        {
            get
            {
                return _DATA_SOURCE_DATE;
            }
            set
            {
                OnDATA_SOURCE_DATEChanging(value);
                ReportPropertyChanging("DATA_SOURCE_DATE");
                _DATA_SOURCE_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATA_SOURCE_DATE");
                OnDATA_SOURCE_DATEChanged();
            }
        }
        private global::System.DateTime _DATA_SOURCE_DATE;
        partial void OnDATA_SOURCE_DATEChanging(global::System.DateTime value);
        partial void OnDATA_SOURCE_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ACTUAL
        {
            get
            {
                return _ACTUAL;
            }
            set
            {
                OnACTUALChanging(value);
                ReportPropertyChanging("ACTUAL");
                _ACTUAL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ACTUAL");
                OnACTUALChanged();
            }
        }
        private Nullable<global::System.Decimal> _ACTUAL;
        partial void OnACTUALChanging(Nullable<global::System.Decimal> value);
        partial void OnACTUALChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ExternalResearchModel", Name="ConsensusEstimatesSummaryData")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ConsensusEstimatesSummaryData : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ConsensusEstimatesSummaryData object.
        /// </summary>
        /// <param name="currency">Initial value of the currency property.</param>
        public static ConsensusEstimatesSummaryData CreateConsensusEstimatesSummaryData(global::System.String currency)
        {
            ConsensusEstimatesSummaryData consensusEstimatesSummaryData = new ConsensusEstimatesSummaryData();
            consensusEstimatesSummaryData.currency = currency;
            return consensusEstimatesSummaryData;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NetIncome
        {
            get
            {
                return _NetIncome;
            }
            set
            {
                OnNetIncomeChanging(value);
                ReportPropertyChanging("NetIncome");
                _NetIncome = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NetIncome");
                OnNetIncomeChanged();
            }
        }
        private global::System.String _NetIncome;
        partial void OnNetIncomeChanging(global::System.String value);
        partial void OnNetIncomeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String YEAR1
        {
            get
            {
                return _YEAR1;
            }
            set
            {
                OnYEAR1Changing(value);
                ReportPropertyChanging("YEAR1");
                _YEAR1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("YEAR1");
                OnYEAR1Changed();
            }
        }
        private global::System.String _YEAR1;
        partial void OnYEAR1Changing(global::System.String value);
        partial void OnYEAR1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String YEAR2
        {
            get
            {
                return _YEAR2;
            }
            set
            {
                OnYEAR2Changing(value);
                ReportPropertyChanging("YEAR2");
                _YEAR2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("YEAR2");
                OnYEAR2Changed();
            }
        }
        private global::System.String _YEAR2;
        partial void OnYEAR2Changing(global::System.String value);
        partial void OnYEAR2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String YEAR3
        {
            get
            {
                return _YEAR3;
            }
            set
            {
                OnYEAR3Changing(value);
                ReportPropertyChanging("YEAR3");
                _YEAR3 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("YEAR3");
                OnYEAR3Changed();
            }
        }
        private global::System.String _YEAR3;
        partial void OnYEAR3Changing(global::System.String value);
        partial void OnYEAR3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String YEAR4
        {
            get
            {
                return _YEAR4;
            }
            set
            {
                OnYEAR4Changing(value);
                ReportPropertyChanging("YEAR4");
                _YEAR4 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("YEAR4");
                OnYEAR4Changed();
            }
        }
        private global::System.String _YEAR4;
        partial void OnYEAR4Changing(global::System.String value);
        partial void OnYEAR4Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String YEAR5
        {
            get
            {
                return _YEAR5;
            }
            set
            {
                OnYEAR5Changing(value);
                ReportPropertyChanging("YEAR5");
                _YEAR5 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("YEAR5");
                OnYEAR5Changed();
            }
        }
        private global::System.String _YEAR5;
        partial void OnYEAR5Changing(global::System.String value);
        partial void OnYEAR5Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String currency
        {
            get
            {
                return _currency;
            }
            set
            {
                OncurrencyChanging(value);
                ReportPropertyChanging("currency");
                _currency = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("currency");
                OncurrencyChanged();
            }
        }
        private global::System.String _currency;
        partial void OncurrencyChanging(global::System.String value);
        partial void OncurrencyChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ExternalResearchModel", Name="ConsensusEstimateValuation")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ConsensusEstimateValuation : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ConsensusEstimateValuation object.
        /// </summary>
        /// <param name="iSSUER_ID">Initial value of the ISSUER_ID property.</param>
        /// <param name="eSTIMATE_ID">Initial value of the ESTIMATE_ID property.</param>
        /// <param name="eSTIMATE_DESC">Initial value of the ESTIMATE_DESC property.</param>
        /// <param name="period">Initial value of the Period property.</param>
        /// <param name="aMOUNT_TYPE">Initial value of the AMOUNT_TYPE property.</param>
        /// <param name="pERIOD_YEAR">Initial value of the PERIOD_YEAR property.</param>
        /// <param name="pERIOD_TYPE">Initial value of the PERIOD_TYPE property.</param>
        public static ConsensusEstimateValuation CreateConsensusEstimateValuation(global::System.String iSSUER_ID, global::System.Int32 eSTIMATE_ID, global::System.String eSTIMATE_DESC, global::System.String period, global::System.String aMOUNT_TYPE, global::System.Int32 pERIOD_YEAR, global::System.String pERIOD_TYPE)
        {
            ConsensusEstimateValuation consensusEstimateValuation = new ConsensusEstimateValuation();
            consensusEstimateValuation.ISSUER_ID = iSSUER_ID;
            consensusEstimateValuation.ESTIMATE_ID = eSTIMATE_ID;
            consensusEstimateValuation.ESTIMATE_DESC = eSTIMATE_DESC;
            consensusEstimateValuation.Period = period;
            consensusEstimateValuation.AMOUNT_TYPE = aMOUNT_TYPE;
            consensusEstimateValuation.PERIOD_YEAR = pERIOD_YEAR;
            consensusEstimateValuation.PERIOD_TYPE = pERIOD_TYPE;
            return consensusEstimateValuation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ISSUER_ID
        {
            get
            {
                return _ISSUER_ID;
            }
            set
            {
                OnISSUER_IDChanging(value);
                ReportPropertyChanging("ISSUER_ID");
                _ISSUER_ID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ISSUER_ID");
                OnISSUER_IDChanged();
            }
        }
        private global::System.String _ISSUER_ID;
        partial void OnISSUER_IDChanging(global::System.String value);
        partial void OnISSUER_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ESTIMATE_ID
        {
            get
            {
                return _ESTIMATE_ID;
            }
            set
            {
                OnESTIMATE_IDChanging(value);
                ReportPropertyChanging("ESTIMATE_ID");
                _ESTIMATE_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ESTIMATE_ID");
                OnESTIMATE_IDChanged();
            }
        }
        private global::System.Int32 _ESTIMATE_ID;
        partial void OnESTIMATE_IDChanging(global::System.Int32 value);
        partial void OnESTIMATE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ESTIMATE_DESC
        {
            get
            {
                return _ESTIMATE_DESC;
            }
            set
            {
                OnESTIMATE_DESCChanging(value);
                ReportPropertyChanging("ESTIMATE_DESC");
                _ESTIMATE_DESC = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ESTIMATE_DESC");
                OnESTIMATE_DESCChanged();
            }
        }
        private global::System.String _ESTIMATE_DESC;
        partial void OnESTIMATE_DESCChanging(global::System.String value);
        partial void OnESTIMATE_DESCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Period
        {
            get
            {
                return _Period;
            }
            set
            {
                OnPeriodChanging(value);
                ReportPropertyChanging("Period");
                _Period = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Period");
                OnPeriodChanged();
            }
        }
        private global::System.String _Period;
        partial void OnPeriodChanging(global::System.String value);
        partial void OnPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AMOUNT_TYPE
        {
            get
            {
                return _AMOUNT_TYPE;
            }
            set
            {
                OnAMOUNT_TYPEChanging(value);
                ReportPropertyChanging("AMOUNT_TYPE");
                _AMOUNT_TYPE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AMOUNT_TYPE");
                OnAMOUNT_TYPEChanged();
            }
        }
        private global::System.String _AMOUNT_TYPE;
        partial void OnAMOUNT_TYPEChanging(global::System.String value);
        partial void OnAMOUNT_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PERIOD_YEAR
        {
            get
            {
                return _PERIOD_YEAR;
            }
            set
            {
                OnPERIOD_YEARChanging(value);
                ReportPropertyChanging("PERIOD_YEAR");
                _PERIOD_YEAR = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PERIOD_YEAR");
                OnPERIOD_YEARChanged();
            }
        }
        private global::System.Int32 _PERIOD_YEAR;
        partial void OnPERIOD_YEARChanging(global::System.Int32 value);
        partial void OnPERIOD_YEARChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PERIOD_TYPE
        {
            get
            {
                return _PERIOD_TYPE;
            }
            set
            {
                OnPERIOD_TYPEChanging(value);
                ReportPropertyChanging("PERIOD_TYPE");
                _PERIOD_TYPE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PERIOD_TYPE");
                OnPERIOD_TYPEChanged();
            }
        }
        private global::System.String _PERIOD_TYPE;
        partial void OnPERIOD_TYPEChanging(global::System.String value);
        partial void OnPERIOD_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> AMOUNT
        {
            get
            {
                return _AMOUNT;
            }
            set
            {
                OnAMOUNTChanging(value);
                ReportPropertyChanging("AMOUNT");
                _AMOUNT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AMOUNT");
                OnAMOUNTChanged();
            }
        }
        private Nullable<global::System.Decimal> _AMOUNT;
        partial void OnAMOUNTChanging(Nullable<global::System.Decimal> value);
        partial void OnAMOUNTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ASHMOREEMM_AMOUNT
        {
            get
            {
                return _ASHMOREEMM_AMOUNT;
            }
            set
            {
                OnASHMOREEMM_AMOUNTChanging(value);
                ReportPropertyChanging("ASHMOREEMM_AMOUNT");
                _ASHMOREEMM_AMOUNT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ASHMOREEMM_AMOUNT");
                OnASHMOREEMM_AMOUNTChanged();
            }
        }
        private Nullable<global::System.Decimal> _ASHMOREEMM_AMOUNT;
        partial void OnASHMOREEMM_AMOUNTChanging(Nullable<global::System.Decimal> value);
        partial void OnASHMOREEMM_AMOUNTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NUMBER_OF_ESTIMATES
        {
            get
            {
                return _NUMBER_OF_ESTIMATES;
            }
            set
            {
                OnNUMBER_OF_ESTIMATESChanging(value);
                ReportPropertyChanging("NUMBER_OF_ESTIMATES");
                _NUMBER_OF_ESTIMATES = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NUMBER_OF_ESTIMATES");
                OnNUMBER_OF_ESTIMATESChanged();
            }
        }
        private Nullable<global::System.Int32> _NUMBER_OF_ESTIMATES;
        partial void OnNUMBER_OF_ESTIMATESChanging(Nullable<global::System.Int32> value);
        partial void OnNUMBER_OF_ESTIMATESChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> HIGH
        {
            get
            {
                return _HIGH;
            }
            set
            {
                OnHIGHChanging(value);
                ReportPropertyChanging("HIGH");
                _HIGH = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HIGH");
                OnHIGHChanged();
            }
        }
        private Nullable<global::System.Decimal> _HIGH;
        partial void OnHIGHChanging(Nullable<global::System.Decimal> value);
        partial void OnHIGHChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LOW
        {
            get
            {
                return _LOW;
            }
            set
            {
                OnLOWChanging(value);
                ReportPropertyChanging("LOW");
                _LOW = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LOW");
                OnLOWChanged();
            }
        }
        private Nullable<global::System.Decimal> _LOW;
        partial void OnLOWChanging(Nullable<global::System.Decimal> value);
        partial void OnLOWChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> STANDARD_DEVIATION
        {
            get
            {
                return _STANDARD_DEVIATION;
            }
            set
            {
                OnSTANDARD_DEVIATIONChanging(value);
                ReportPropertyChanging("STANDARD_DEVIATION");
                _STANDARD_DEVIATION = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("STANDARD_DEVIATION");
                OnSTANDARD_DEVIATIONChanged();
            }
        }
        private Nullable<global::System.Decimal> _STANDARD_DEVIATION;
        partial void OnSTANDARD_DEVIATIONChanging(Nullable<global::System.Decimal> value);
        partial void OnSTANDARD_DEVIATIONChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SOURCE_CURRENCY
        {
            get
            {
                return _SOURCE_CURRENCY;
            }
            set
            {
                OnSOURCE_CURRENCYChanging(value);
                ReportPropertyChanging("SOURCE_CURRENCY");
                _SOURCE_CURRENCY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SOURCE_CURRENCY");
                OnSOURCE_CURRENCYChanged();
            }
        }
        private global::System.String _SOURCE_CURRENCY;
        partial void OnSOURCE_CURRENCYChanging(global::System.String value);
        partial void OnSOURCE_CURRENCYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DATA_SOURCE
        {
            get
            {
                return _DATA_SOURCE;
            }
            set
            {
                OnDATA_SOURCEChanging(value);
                ReportPropertyChanging("DATA_SOURCE");
                _DATA_SOURCE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DATA_SOURCE");
                OnDATA_SOURCEChanged();
            }
        }
        private global::System.String _DATA_SOURCE;
        partial void OnDATA_SOURCEChanging(global::System.String value);
        partial void OnDATA_SOURCEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DATA_SOURCE_DATE
        {
            get
            {
                return _DATA_SOURCE_DATE;
            }
            set
            {
                OnDATA_SOURCE_DATEChanging(value);
                ReportPropertyChanging("DATA_SOURCE_DATE");
                _DATA_SOURCE_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATA_SOURCE_DATE");
                OnDATA_SOURCE_DATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _DATA_SOURCE_DATE;
        partial void OnDATA_SOURCE_DATEChanging(Nullable<global::System.DateTime> value);
        partial void OnDATA_SOURCE_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ACTUAL
        {
            get
            {
                return _ACTUAL;
            }
            set
            {
                OnACTUALChanging(value);
                ReportPropertyChanging("ACTUAL");
                _ACTUAL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ACTUAL");
                OnACTUALChanged();
            }
        }
        private Nullable<global::System.Decimal> _ACTUAL;
        partial void OnACTUALChanging(Nullable<global::System.Decimal> value);
        partial void OnACTUALChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ExternalResearchModel", Name="CurrenciesList")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class CurrenciesList : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CurrenciesList object.
        /// </summary>
        /// <param name="currency">Initial value of the Currency property.</param>
        public static CurrenciesList CreateCurrenciesList(global::System.String currency)
        {
            CurrenciesList currenciesList = new CurrenciesList();
            currenciesList.Currency = currency;
            return currenciesList;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Currency
        {
            get
            {
                return _Currency;
            }
            set
            {
                OnCurrencyChanging(value);
                ReportPropertyChanging("Currency");
                _Currency = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Currency");
                OnCurrencyChanged();
            }
        }
        private global::System.String _Currency;
        partial void OnCurrencyChanging(global::System.String value);
        partial void OnCurrencyChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ExternalResearchModel", Name="DataPointsModelUploadData")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class DataPointsModelUploadData : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DataPointsModelUploadData object.
        /// </summary>
        /// <param name="sORT_ORDER">Initial value of the SORT_ORDER property.</param>
        /// <param name="dATA_DESCRIPTION">Initial value of the DATA_DESCRIPTION property.</param>
        public static DataPointsModelUploadData CreateDataPointsModelUploadData(global::System.Int32 sORT_ORDER, global::System.String dATA_DESCRIPTION)
        {
            DataPointsModelUploadData dataPointsModelUploadData = new DataPointsModelUploadData();
            dataPointsModelUploadData.SORT_ORDER = sORT_ORDER;
            dataPointsModelUploadData.DATA_DESCRIPTION = dATA_DESCRIPTION;
            return dataPointsModelUploadData;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String COA
        {
            get
            {
                return _COA;
            }
            set
            {
                OnCOAChanging(value);
                ReportPropertyChanging("COA");
                _COA = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("COA");
                OnCOAChanged();
            }
        }
        private global::System.String _COA;
        partial void OnCOAChanging(global::System.String value);
        partial void OnCOAChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SORT_ORDER
        {
            get
            {
                return _SORT_ORDER;
            }
            set
            {
                OnSORT_ORDERChanging(value);
                ReportPropertyChanging("SORT_ORDER");
                _SORT_ORDER = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SORT_ORDER");
                OnSORT_ORDERChanged();
            }
        }
        private global::System.Int32 _SORT_ORDER;
        partial void OnSORT_ORDERChanging(global::System.Int32 value);
        partial void OnSORT_ORDERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DATA_DESCRIPTION
        {
            get
            {
                return _DATA_DESCRIPTION;
            }
            set
            {
                OnDATA_DESCRIPTIONChanging(value);
                ReportPropertyChanging("DATA_DESCRIPTION");
                _DATA_DESCRIPTION = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DATA_DESCRIPTION");
                OnDATA_DESCRIPTIONChanged();
            }
        }
        private global::System.String _DATA_DESCRIPTION;
        partial void OnDATA_DESCRIPTIONChanging(global::System.String value);
        partial void OnDATA_DESCRIPTIONChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CONVERT_FLAG
        {
            get
            {
                return _CONVERT_FLAG;
            }
            set
            {
                OnCONVERT_FLAGChanging(value);
                ReportPropertyChanging("CONVERT_FLAG");
                _CONVERT_FLAG = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CONVERT_FLAG");
                OnCONVERT_FLAGChanged();
            }
        }
        private global::System.String _CONVERT_FLAG;
        partial void OnCONVERT_FLAGChanging(global::System.String value);
        partial void OnCONVERT_FLAGChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ExternalResearchModel", Name="DCF_ROICResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class DCF_ROICResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DCF_ROICResult object.
        /// </summary>
        /// <param name="aMOUNT">Initial value of the AMOUNT property.</param>
        /// <param name="dATA_ID">Initial value of the DATA_ID property.</param>
        /// <param name="fISCAL">Initial value of the FISCAL property.</param>
        public static DCF_ROICResult CreateDCF_ROICResult(global::System.Decimal aMOUNT, global::System.Int32 dATA_ID, global::System.String fISCAL)
        {
            DCF_ROICResult dCF_ROICResult = new DCF_ROICResult();
            dCF_ROICResult.AMOUNT = aMOUNT;
            dCF_ROICResult.DATA_ID = dATA_ID;
            dCF_ROICResult.FISCAL = fISCAL;
            return dCF_ROICResult;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal AMOUNT
        {
            get
            {
                return _AMOUNT;
            }
            set
            {
                OnAMOUNTChanging(value);
                ReportPropertyChanging("AMOUNT");
                _AMOUNT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AMOUNT");
                OnAMOUNTChanged();
            }
        }
        private global::System.Decimal _AMOUNT;
        partial void OnAMOUNTChanging(global::System.Decimal value);
        partial void OnAMOUNTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DATA_ID
        {
            get
            {
                return _DATA_ID;
            }
            set
            {
                OnDATA_IDChanging(value);
                ReportPropertyChanging("DATA_ID");
                _DATA_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATA_ID");
                OnDATA_IDChanged();
            }
        }
        private global::System.Int32 _DATA_ID;
        partial void OnDATA_IDChanging(global::System.Int32 value);
        partial void OnDATA_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FISCAL
        {
            get
            {
                return _FISCAL;
            }
            set
            {
                OnFISCALChanging(value);
                ReportPropertyChanging("FISCAL");
                _FISCAL = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FISCAL");
                OnFISCALChanged();
            }
        }
        private global::System.String _FISCAL;
        partial void OnFISCALChanging(global::System.String value);
        partial void OnFISCALChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ExternalResearchModel", Name="DCFAnalysisSummaryData_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class DCFAnalysisSummaryData_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DCFAnalysisSummaryData_Result object.
        /// </summary>
        /// <param name="iSSUER_ID">Initial value of the ISSUER_ID property.</param>
        /// <param name="sECURITY_ID">Initial value of the SECURITY_ID property.</param>
        /// <param name="cOA_TYPE">Initial value of the COA_TYPE property.</param>
        /// <param name="dATA_SOURCE">Initial value of the DATA_SOURCE property.</param>
        /// <param name="rOOT_SOURCE">Initial value of the ROOT_SOURCE property.</param>
        /// <param name="rOOT_SOURCE_DATE">Initial value of the ROOT_SOURCE_DATE property.</param>
        /// <param name="pERIOD_TYPE">Initial value of the PERIOD_TYPE property.</param>
        /// <param name="pERIOD_YEAR">Initial value of the PERIOD_YEAR property.</param>
        /// <param name="pERIOD_END_DATE">Initial value of the PERIOD_END_DATE property.</param>
        /// <param name="fISCAL_TYPE">Initial value of the FISCAL_TYPE property.</param>
        /// <param name="cURRENCY">Initial value of the CURRENCY property.</param>
        /// <param name="dATA_ID">Initial value of the DATA_ID property.</param>
        /// <param name="aMOUNT">Initial value of the AMOUNT property.</param>
        /// <param name="sOURCE_CURRENCY">Initial value of the SOURCE_CURRENCY property.</param>
        /// <param name="aMOUNT_TYPE">Initial value of the AMOUNT_TYPE property.</param>
        public static DCFAnalysisSummaryData_Result CreateDCFAnalysisSummaryData_Result(global::System.String iSSUER_ID, global::System.String sECURITY_ID, global::System.String cOA_TYPE, global::System.String dATA_SOURCE, global::System.String rOOT_SOURCE, global::System.DateTime rOOT_SOURCE_DATE, global::System.String pERIOD_TYPE, global::System.Int32 pERIOD_YEAR, global::System.DateTime pERIOD_END_DATE, global::System.String fISCAL_TYPE, global::System.String cURRENCY, global::System.Int32 dATA_ID, global::System.Decimal aMOUNT, global::System.String sOURCE_CURRENCY, global::System.String aMOUNT_TYPE)
        {
            DCFAnalysisSummaryData_Result dCFAnalysisSummaryData_Result = new DCFAnalysisSummaryData_Result();
            dCFAnalysisSummaryData_Result.ISSUER_ID = iSSUER_ID;
            dCFAnalysisSummaryData_Result.SECURITY_ID = sECURITY_ID;
            dCFAnalysisSummaryData_Result.COA_TYPE = cOA_TYPE;
            dCFAnalysisSummaryData_Result.DATA_SOURCE = dATA_SOURCE;
            dCFAnalysisSummaryData_Result.ROOT_SOURCE = rOOT_SOURCE;
            dCFAnalysisSummaryData_Result.ROOT_SOURCE_DATE = rOOT_SOURCE_DATE;
            dCFAnalysisSummaryData_Result.PERIOD_TYPE = pERIOD_TYPE;
            dCFAnalysisSummaryData_Result.PERIOD_YEAR = pERIOD_YEAR;
            dCFAnalysisSummaryData_Result.PERIOD_END_DATE = pERIOD_END_DATE;
            dCFAnalysisSummaryData_Result.FISCAL_TYPE = fISCAL_TYPE;
            dCFAnalysisSummaryData_Result.CURRENCY = cURRENCY;
            dCFAnalysisSummaryData_Result.DATA_ID = dATA_ID;
            dCFAnalysisSummaryData_Result.AMOUNT = aMOUNT;
            dCFAnalysisSummaryData_Result.SOURCE_CURRENCY = sOURCE_CURRENCY;
            dCFAnalysisSummaryData_Result.AMOUNT_TYPE = aMOUNT_TYPE;
            return dCFAnalysisSummaryData_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ISSUER_ID
        {
            get
            {
                return _ISSUER_ID;
            }
            set
            {
                OnISSUER_IDChanging(value);
                ReportPropertyChanging("ISSUER_ID");
                _ISSUER_ID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ISSUER_ID");
                OnISSUER_IDChanged();
            }
        }
        private global::System.String _ISSUER_ID;
        partial void OnISSUER_IDChanging(global::System.String value);
        partial void OnISSUER_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SECURITY_ID
        {
            get
            {
                return _SECURITY_ID;
            }
            set
            {
                OnSECURITY_IDChanging(value);
                ReportPropertyChanging("SECURITY_ID");
                _SECURITY_ID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SECURITY_ID");
                OnSECURITY_IDChanged();
            }
        }
        private global::System.String _SECURITY_ID;
        partial void OnSECURITY_IDChanging(global::System.String value);
        partial void OnSECURITY_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String COA_TYPE
        {
            get
            {
                return _COA_TYPE;
            }
            set
            {
                OnCOA_TYPEChanging(value);
                ReportPropertyChanging("COA_TYPE");
                _COA_TYPE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("COA_TYPE");
                OnCOA_TYPEChanged();
            }
        }
        private global::System.String _COA_TYPE;
        partial void OnCOA_TYPEChanging(global::System.String value);
        partial void OnCOA_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DATA_SOURCE
        {
            get
            {
                return _DATA_SOURCE;
            }
            set
            {
                OnDATA_SOURCEChanging(value);
                ReportPropertyChanging("DATA_SOURCE");
                _DATA_SOURCE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DATA_SOURCE");
                OnDATA_SOURCEChanged();
            }
        }
        private global::System.String _DATA_SOURCE;
        partial void OnDATA_SOURCEChanging(global::System.String value);
        partial void OnDATA_SOURCEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ROOT_SOURCE
        {
            get
            {
                return _ROOT_SOURCE;
            }
            set
            {
                OnROOT_SOURCEChanging(value);
                ReportPropertyChanging("ROOT_SOURCE");
                _ROOT_SOURCE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ROOT_SOURCE");
                OnROOT_SOURCEChanged();
            }
        }
        private global::System.String _ROOT_SOURCE;
        partial void OnROOT_SOURCEChanging(global::System.String value);
        partial void OnROOT_SOURCEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ROOT_SOURCE_DATE
        {
            get
            {
                return _ROOT_SOURCE_DATE;
            }
            set
            {
                OnROOT_SOURCE_DATEChanging(value);
                ReportPropertyChanging("ROOT_SOURCE_DATE");
                _ROOT_SOURCE_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ROOT_SOURCE_DATE");
                OnROOT_SOURCE_DATEChanged();
            }
        }
        private global::System.DateTime _ROOT_SOURCE_DATE;
        partial void OnROOT_SOURCE_DATEChanging(global::System.DateTime value);
        partial void OnROOT_SOURCE_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PERIOD_TYPE
        {
            get
            {
                return _PERIOD_TYPE;
            }
            set
            {
                OnPERIOD_TYPEChanging(value);
                ReportPropertyChanging("PERIOD_TYPE");
                _PERIOD_TYPE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PERIOD_TYPE");
                OnPERIOD_TYPEChanged();
            }
        }
        private global::System.String _PERIOD_TYPE;
        partial void OnPERIOD_TYPEChanging(global::System.String value);
        partial void OnPERIOD_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PERIOD_YEAR
        {
            get
            {
                return _PERIOD_YEAR;
            }
            set
            {
                OnPERIOD_YEARChanging(value);
                ReportPropertyChanging("PERIOD_YEAR");
                _PERIOD_YEAR = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PERIOD_YEAR");
                OnPERIOD_YEARChanged();
            }
        }
        private global::System.Int32 _PERIOD_YEAR;
        partial void OnPERIOD_YEARChanging(global::System.Int32 value);
        partial void OnPERIOD_YEARChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PERIOD_END_DATE
        {
            get
            {
                return _PERIOD_END_DATE;
            }
            set
            {
                OnPERIOD_END_DATEChanging(value);
                ReportPropertyChanging("PERIOD_END_DATE");
                _PERIOD_END_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PERIOD_END_DATE");
                OnPERIOD_END_DATEChanged();
            }
        }
        private global::System.DateTime _PERIOD_END_DATE;
        partial void OnPERIOD_END_DATEChanging(global::System.DateTime value);
        partial void OnPERIOD_END_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FISCAL_TYPE
        {
            get
            {
                return _FISCAL_TYPE;
            }
            set
            {
                OnFISCAL_TYPEChanging(value);
                ReportPropertyChanging("FISCAL_TYPE");
                _FISCAL_TYPE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FISCAL_TYPE");
                OnFISCAL_TYPEChanged();
            }
        }
        private global::System.String _FISCAL_TYPE;
        partial void OnFISCAL_TYPEChanging(global::System.String value);
        partial void OnFISCAL_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CURRENCY
        {
            get
            {
                return _CURRENCY;
            }
            set
            {
                OnCURRENCYChanging(value);
                ReportPropertyChanging("CURRENCY");
                _CURRENCY = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CURRENCY");
                OnCURRENCYChanged();
            }
        }
        private global::System.String _CURRENCY;
        partial void OnCURRENCYChanging(global::System.String value);
        partial void OnCURRENCYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DATA_ID
        {
            get
            {
                return _DATA_ID;
            }
            set
            {
                OnDATA_IDChanging(value);
                ReportPropertyChanging("DATA_ID");
                _DATA_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATA_ID");
                OnDATA_IDChanged();
            }
        }
        private global::System.Int32 _DATA_ID;
        partial void OnDATA_IDChanging(global::System.Int32 value);
        partial void OnDATA_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal AMOUNT
        {
            get
            {
                return _AMOUNT;
            }
            set
            {
                OnAMOUNTChanging(value);
                ReportPropertyChanging("AMOUNT");
                _AMOUNT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AMOUNT");
                OnAMOUNTChanged();
            }
        }
        private global::System.Decimal _AMOUNT;
        partial void OnAMOUNTChanging(global::System.Decimal value);
        partial void OnAMOUNTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CALCULATION_DIAGRAM
        {
            get
            {
                return _CALCULATION_DIAGRAM;
            }
            set
            {
                OnCALCULATION_DIAGRAMChanging(value);
                ReportPropertyChanging("CALCULATION_DIAGRAM");
                _CALCULATION_DIAGRAM = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CALCULATION_DIAGRAM");
                OnCALCULATION_DIAGRAMChanged();
            }
        }
        private global::System.String _CALCULATION_DIAGRAM;
        partial void OnCALCULATION_DIAGRAMChanging(global::System.String value);
        partial void OnCALCULATION_DIAGRAMChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SOURCE_CURRENCY
        {
            get
            {
                return _SOURCE_CURRENCY;
            }
            set
            {
                OnSOURCE_CURRENCYChanging(value);
                ReportPropertyChanging("SOURCE_CURRENCY");
                _SOURCE_CURRENCY = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SOURCE_CURRENCY");
                OnSOURCE_CURRENCYChanged();
            }
        }
        private global::System.String _SOURCE_CURRENCY;
        partial void OnSOURCE_CURRENCYChanging(global::System.String value);
        partial void OnSOURCE_CURRENCYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AMOUNT_TYPE
        {
            get
            {
                return _AMOUNT_TYPE;
            }
            set
            {
                OnAMOUNT_TYPEChanging(value);
                ReportPropertyChanging("AMOUNT_TYPE");
                _AMOUNT_TYPE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AMOUNT_TYPE");
                OnAMOUNT_TYPEChanged();
            }
        }
        private global::System.String _AMOUNT_TYPE;
        partial void OnAMOUNT_TYPEChanging(global::System.String value);
        partial void OnAMOUNT_TYPEChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ExternalResearchModel", Name="DCFCashFlowData")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class DCFCashFlowData : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DCFCashFlowData object.
        /// </summary>
        /// <param name="aMOUNT">Initial value of the AMOUNT property.</param>
        /// <param name="pERIOD_YEAR">Initial value of the PERIOD_YEAR property.</param>
        /// <param name="dISCOUNTING_FACTOR">Initial value of the DISCOUNTING_FACTOR property.</param>
        /// <param name="fREE_CASH_FLOW">Initial value of the FREE_CASH_FLOW property.</param>
        public static DCFCashFlowData CreateDCFCashFlowData(global::System.Decimal aMOUNT, global::System.Int32 pERIOD_YEAR, global::System.Decimal dISCOUNTING_FACTOR, global::System.Decimal fREE_CASH_FLOW)
        {
            DCFCashFlowData dCFCashFlowData = new DCFCashFlowData();
            dCFCashFlowData.AMOUNT = aMOUNT;
            dCFCashFlowData.PERIOD_YEAR = pERIOD_YEAR;
            dCFCashFlowData.DISCOUNTING_FACTOR = dISCOUNTING_FACTOR;
            dCFCashFlowData.FREE_CASH_FLOW = fREE_CASH_FLOW;
            return dCFCashFlowData;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal AMOUNT
        {
            get
            {
                return _AMOUNT;
            }
            set
            {
                OnAMOUNTChanging(value);
                ReportPropertyChanging("AMOUNT");
                _AMOUNT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AMOUNT");
                OnAMOUNTChanged();
            }
        }
        private global::System.Decimal _AMOUNT;
        partial void OnAMOUNTChanging(global::System.Decimal value);
        partial void OnAMOUNTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PERIOD_YEAR
        {
            get
            {
                return _PERIOD_YEAR;
            }
            set
            {
                OnPERIOD_YEARChanging(value);
                ReportPropertyChanging("PERIOD_YEAR");
                _PERIOD_YEAR = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PERIOD_YEAR");
                OnPERIOD_YEARChanged();
            }
        }
        private global::System.Int32 _PERIOD_YEAR;
        partial void OnPERIOD_YEARChanging(global::System.Int32 value);
        partial void OnPERIOD_YEARChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal DISCOUNTING_FACTOR
        {
            get
            {
                return _DISCOUNTING_FACTOR;
            }
            set
            {
                OnDISCOUNTING_FACTORChanging(value);
                ReportPropertyChanging("DISCOUNTING_FACTOR");
                _DISCOUNTING_FACTOR = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DISCOUNTING_FACTOR");
                OnDISCOUNTING_FACTORChanged();
            }
        }
        private global::System.Decimal _DISCOUNTING_FACTOR;
        partial void OnDISCOUNTING_FACTORChanging(global::System.Decimal value);
        partial void OnDISCOUNTING_FACTORChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal FREE_CASH_FLOW
        {
            get
            {
                return _FREE_CASH_FLOW;
            }
            set
            {
                OnFREE_CASH_FLOWChanging(value);
                ReportPropertyChanging("FREE_CASH_FLOW");
                _FREE_CASH_FLOW = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FREE_CASH_FLOW");
                OnFREE_CASH_FLOWChanged();
            }
        }
        private global::System.Decimal _FREE_CASH_FLOW;
        partial void OnFREE_CASH_FLOWChanging(global::System.Decimal value);
        partial void OnFREE_CASH_FLOWChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ExternalResearchModel", Name="DCFSummaryDBData")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class DCFSummaryDBData : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DCFSummaryDBData object.
        /// </summary>
        /// <param name="aMOUNT">Initial value of the AMOUNT property.</param>
        /// <param name="dATA_ID">Initial value of the DATA_ID property.</param>
        public static DCFSummaryDBData CreateDCFSummaryDBData(global::System.Decimal aMOUNT, global::System.Int32 dATA_ID)
        {
            DCFSummaryDBData dCFSummaryDBData = new DCFSummaryDBData();
            dCFSummaryDBData.AMOUNT = aMOUNT;
            dCFSummaryDBData.DATA_ID = dATA_ID;
            return dCFSummaryDBData;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal AMOUNT
        {
            get
            {
                return _AMOUNT;
            }
            set
            {
                OnAMOUNTChanging(value);
                ReportPropertyChanging("AMOUNT");
                _AMOUNT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AMOUNT");
                OnAMOUNTChanged();
            }
        }
        private global::System.Decimal _AMOUNT;
        partial void OnAMOUNTChanging(global::System.Decimal value);
        partial void OnAMOUNTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DATA_ID
        {
            get
            {
                return _DATA_ID;
            }
            set
            {
                OnDATA_IDChanging(value);
                ReportPropertyChanging("DATA_ID");
                _DATA_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATA_ID");
                OnDATA_IDChanged();
            }
        }
        private global::System.Int32 _DATA_ID;
        partial void OnDATA_IDChanging(global::System.Int32 value);
        partial void OnDATA_IDChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ExternalResearchModel", Name="EMData")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class EMData : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EMData object.
        /// </summary>
        /// <param name="issuerId">Initial value of the IssuerId property.</param>
        /// <param name="securityId">Initial value of the SecurityId property.</param>
        /// <param name="dataSource">Initial value of the DataSource property.</param>
        /// <param name="dataId">Initial value of the DataId property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="dataYear">Initial value of the DataYear property.</param>
        /// <param name="dataType">Initial value of the DataType property.</param>
        public static EMData CreateEMData(global::System.String issuerId, global::System.String securityId, global::System.String dataSource, global::System.Int32 dataId, global::System.Decimal amount, global::System.Int32 dataYear, global::System.String dataType)
        {
            EMData eMData = new EMData();
            eMData.IssuerId = issuerId;
            eMData.SecurityId = securityId;
            eMData.DataSource = dataSource;
            eMData.DataId = dataId;
            eMData.Amount = amount;
            eMData.DataYear = dataYear;
            eMData.DataType = dataType;
            return eMData;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IssuerId
        {
            get
            {
                return _IssuerId;
            }
            set
            {
                OnIssuerIdChanging(value);
                ReportPropertyChanging("IssuerId");
                _IssuerId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IssuerId");
                OnIssuerIdChanged();
            }
        }
        private global::System.String _IssuerId;
        partial void OnIssuerIdChanging(global::System.String value);
        partial void OnIssuerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SecurityId
        {
            get
            {
                return _SecurityId;
            }
            set
            {
                OnSecurityIdChanging(value);
                ReportPropertyChanging("SecurityId");
                _SecurityId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SecurityId");
                OnSecurityIdChanged();
            }
        }
        private global::System.String _SecurityId;
        partial void OnSecurityIdChanging(global::System.String value);
        partial void OnSecurityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DataSource
        {
            get
            {
                return _DataSource;
            }
            set
            {
                OnDataSourceChanging(value);
                ReportPropertyChanging("DataSource");
                _DataSource = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DataSource");
                OnDataSourceChanged();
            }
        }
        private global::System.String _DataSource;
        partial void OnDataSourceChanging(global::System.String value);
        partial void OnDataSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DataId
        {
            get
            {
                return _DataId;
            }
            set
            {
                OnDataIdChanging(value);
                ReportPropertyChanging("DataId");
                _DataId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DataId");
                OnDataIdChanged();
            }
        }
        private global::System.Int32 _DataId;
        partial void OnDataIdChanging(global::System.Int32 value);
        partial void OnDataIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DataYear
        {
            get
            {
                return _DataYear;
            }
            set
            {
                OnDataYearChanging(value);
                ReportPropertyChanging("DataYear");
                _DataYear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DataYear");
                OnDataYearChanged();
            }
        }
        private global::System.Int32 _DataYear;
        partial void OnDataYearChanging(global::System.Int32 value);
        partial void OnDataYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DataType
        {
            get
            {
                return _DataType;
            }
            set
            {
                OnDataTypeChanging(value);
                ReportPropertyChanging("DataType");
                _DataType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DataType");
                OnDataTypeChanged();
            }
        }
        private global::System.String _DataType;
        partial void OnDataTypeChanging(global::System.String value);
        partial void OnDataTypeChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ExternalResearchModel", Name="EMSumCountryData")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class EMSumCountryData : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EMSumCountryData object.
        /// </summary>
        /// <param name="countryCode">Initial value of the CountryCode property.</param>
        /// <param name="countryName">Initial value of the CountryName property.</param>
        /// <param name="regionName">Initial value of the RegionName property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        public static EMSumCountryData CreateEMSumCountryData(global::System.String countryCode, global::System.String countryName, global::System.String regionName, global::System.String type)
        {
            EMSumCountryData eMSumCountryData = new EMSumCountryData();
            eMSumCountryData.CountryCode = countryCode;
            eMSumCountryData.CountryName = countryName;
            eMSumCountryData.RegionName = regionName;
            eMSumCountryData.Type = type;
            return eMSumCountryData;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CountryCode
        {
            get
            {
                return _CountryCode;
            }
            set
            {
                OnCountryCodeChanging(value);
                ReportPropertyChanging("CountryCode");
                _CountryCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CountryCode");
                OnCountryCodeChanged();
            }
        }
        private global::System.String _CountryCode;
        partial void OnCountryCodeChanging(global::System.String value);
        partial void OnCountryCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CountryName
        {
            get
            {
                return _CountryName;
            }
            set
            {
                OnCountryNameChanging(value);
                ReportPropertyChanging("CountryName");
                _CountryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CountryName");
                OnCountryNameChanged();
            }
        }
        private global::System.String _CountryName;
        partial void OnCountryNameChanging(global::System.String value);
        partial void OnCountryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RegionName
        {
            get
            {
                return _RegionName;
            }
            set
            {
                OnRegionNameChanging(value);
                ReportPropertyChanging("RegionName");
                _RegionName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RegionName");
                OnRegionNameChanged();
            }
        }
        private global::System.String _RegionName;
        partial void OnRegionNameChanging(global::System.String value);
        partial void OnRegionNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ExternalResearchModel", Name="FinancialStatementData")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class FinancialStatementData : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FinancialStatementData object.
        /// </summary>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="periodType">Initial value of the PeriodType property.</param>
        /// <param name="periodYear">Initial value of the PeriodYear property.</param>
        /// <param name="isConsensus">Initial value of the IsConsensus property.</param>
        public static FinancialStatementData CreateFinancialStatementData(global::System.Int32 sortOrder, global::System.String description, global::System.String periodType, global::System.Int32 periodYear, global::System.String isConsensus)
        {
            FinancialStatementData financialStatementData = new FinancialStatementData();
            financialStatementData.SortOrder = sortOrder;
            financialStatementData.Description = description;
            financialStatementData.PeriodType = periodType;
            financialStatementData.PeriodYear = periodYear;
            financialStatementData.IsConsensus = isConsensus;
            return financialStatementData;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AmountType
        {
            get
            {
                return _AmountType;
            }
            set
            {
                OnAmountTypeChanging(value);
                ReportPropertyChanging("AmountType");
                _AmountType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AmountType");
                OnAmountTypeChanged();
            }
        }
        private global::System.String _AmountType;
        partial void OnAmountTypeChanging(global::System.String value);
        partial void OnAmountTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PeriodType
        {
            get
            {
                return _PeriodType;
            }
            set
            {
                OnPeriodTypeChanging(value);
                ReportPropertyChanging("PeriodType");
                _PeriodType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PeriodType");
                OnPeriodTypeChanged();
            }
        }
        private global::System.String _PeriodType;
        partial void OnPeriodTypeChanging(global::System.String value);
        partial void OnPeriodTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _Amount;
        partial void OnAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PeriodYear
        {
            get
            {
                return _PeriodYear;
            }
            set
            {
                OnPeriodYearChanging(value);
                ReportPropertyChanging("PeriodYear");
                _PeriodYear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PeriodYear");
                OnPeriodYearChanged();
            }
        }
        private global::System.Int32 _PeriodYear;
        partial void OnPeriodYearChanging(global::System.Int32 value);
        partial void OnPeriodYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IsConsensus
        {
            get
            {
                return _IsConsensus;
            }
            set
            {
                OnIsConsensusChanging(value);
                ReportPropertyChanging("IsConsensus");
                _IsConsensus = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IsConsensus");
                OnIsConsensusChanged();
            }
        }
        private global::System.String _IsConsensus;
        partial void OnIsConsensusChanging(global::System.String value);
        partial void OnIsConsensusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DataId
        {
            get
            {
                return _DataId;
            }
            set
            {
                OnDataIdChanging(value);
                ReportPropertyChanging("DataId");
                _DataId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DataId");
                OnDataIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DataId;
        partial void OnDataIdChanging(Nullable<global::System.Int32> value);
        partial void OnDataIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GroupName
        {
            get
            {
                return _GroupName;
            }
            set
            {
                OnGroupNameChanging(value);
                ReportPropertyChanging("GroupName");
                _GroupName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GroupName");
                OnGroupNameChanged();
            }
        }
        private global::System.String _GroupName;
        partial void OnGroupNameChanging(global::System.String value);
        partial void OnGroupNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BoldFont
        {
            get
            {
                return _BoldFont;
            }
            set
            {
                OnBoldFontChanging(value);
                ReportPropertyChanging("BoldFont");
                _BoldFont = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BoldFont");
                OnBoldFontChanged();
            }
        }
        private global::System.String _BoldFont;
        partial void OnBoldFontChanging(global::System.String value);
        partial void OnBoldFontChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Decimals
        {
            get
            {
                return _Decimals;
            }
            set
            {
                OnDecimalsChanging(value);
                ReportPropertyChanging("Decimals");
                _Decimals = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Decimals");
                OnDecimalsChanged();
            }
        }
        private Nullable<global::System.Int32> _Decimals;
        partial void OnDecimalsChanging(Nullable<global::System.Int32> value);
        partial void OnDecimalsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RootSource
        {
            get
            {
                return _RootSource;
            }
            set
            {
                OnRootSourceChanging(value);
                ReportPropertyChanging("RootSource");
                _RootSource = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RootSource");
                OnRootSourceChanged();
            }
        }
        private global::System.String _RootSource;
        partial void OnRootSourceChanging(global::System.String value);
        partial void OnRootSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RootSourceDate
        {
            get
            {
                return _RootSourceDate;
            }
            set
            {
                OnRootSourceDateChanging(value);
                ReportPropertyChanging("RootSourceDate");
                _RootSourceDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RootSourceDate");
                OnRootSourceDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _RootSourceDate;
        partial void OnRootSourceDateChanging(Nullable<global::System.DateTime> value);
        partial void OnRootSourceDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CalculationDiagram
        {
            get
            {
                return _CalculationDiagram;
            }
            set
            {
                OnCalculationDiagramChanging(value);
                ReportPropertyChanging("CalculationDiagram");
                _CalculationDiagram = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CalculationDiagram");
                OnCalculationDiagramChanged();
            }
        }
        private global::System.String _CalculationDiagram;
        partial void OnCalculationDiagramChanging(global::System.String value);
        partial void OnCalculationDiagramChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ExternalResearchModel", Name="FinancialStatementDataModels")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class FinancialStatementDataModels : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FinancialStatementDataModels object.
        /// </summary>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="periodType">Initial value of the PeriodType property.</param>
        /// <param name="isConsensus">Initial value of the IsConsensus property.</param>
        public static FinancialStatementDataModels CreateFinancialStatementDataModels(global::System.Int32 sortOrder, global::System.String description, global::System.String periodType, global::System.String isConsensus)
        {
            FinancialStatementDataModels financialStatementDataModels = new FinancialStatementDataModels();
            financialStatementDataModels.SortOrder = sortOrder;
            financialStatementDataModels.Description = description;
            financialStatementDataModels.PeriodType = periodType;
            financialStatementDataModels.IsConsensus = isConsensus;
            return financialStatementDataModels;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AmountType
        {
            get
            {
                return _AmountType;
            }
            set
            {
                OnAmountTypeChanging(value);
                ReportPropertyChanging("AmountType");
                _AmountType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AmountType");
                OnAmountTypeChanged();
            }
        }
        private global::System.String _AmountType;
        partial void OnAmountTypeChanging(global::System.String value);
        partial void OnAmountTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PeriodType
        {
            get
            {
                return _PeriodType;
            }
            set
            {
                OnPeriodTypeChanging(value);
                ReportPropertyChanging("PeriodType");
                _PeriodType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PeriodType");
                OnPeriodTypeChanged();
            }
        }
        private global::System.String _PeriodType;
        partial void OnPeriodTypeChanging(global::System.String value);
        partial void OnPeriodTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _Amount;
        partial void OnAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PeriodYear
        {
            get
            {
                return _PeriodYear;
            }
            set
            {
                OnPeriodYearChanging(value);
                ReportPropertyChanging("PeriodYear");
                _PeriodYear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PeriodYear");
                OnPeriodYearChanged();
            }
        }
        private Nullable<global::System.Int32> _PeriodYear;
        partial void OnPeriodYearChanging(Nullable<global::System.Int32> value);
        partial void OnPeriodYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IsConsensus
        {
            get
            {
                return _IsConsensus;
            }
            set
            {
                OnIsConsensusChanging(value);
                ReportPropertyChanging("IsConsensus");
                _IsConsensus = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IsConsensus");
                OnIsConsensusChanged();
            }
        }
        private global::System.String _IsConsensus;
        partial void OnIsConsensusChanging(global::System.String value);
        partial void OnIsConsensusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DataId
        {
            get
            {
                return _DataId;
            }
            set
            {
                OnDataIdChanging(value);
                ReportPropertyChanging("DataId");
                _DataId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DataId");
                OnDataIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DataId;
        partial void OnDataIdChanging(Nullable<global::System.Int32> value);
        partial void OnDataIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GroupName
        {
            get
            {
                return _GroupName;
            }
            set
            {
                OnGroupNameChanging(value);
                ReportPropertyChanging("GroupName");
                _GroupName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GroupName");
                OnGroupNameChanged();
            }
        }
        private global::System.String _GroupName;
        partial void OnGroupNameChanging(global::System.String value);
        partial void OnGroupNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BoldFont
        {
            get
            {
                return _BoldFont;
            }
            set
            {
                OnBoldFontChanging(value);
                ReportPropertyChanging("BoldFont");
                _BoldFont = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BoldFont");
                OnBoldFontChanged();
            }
        }
        private global::System.String _BoldFont;
        partial void OnBoldFontChanging(global::System.String value);
        partial void OnBoldFontChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Decimals
        {
            get
            {
                return _Decimals;
            }
            set
            {
                OnDecimalsChanging(value);
                ReportPropertyChanging("Decimals");
                _Decimals = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Decimals");
                OnDecimalsChanged();
            }
        }
        private Nullable<global::System.Int32> _Decimals;
        partial void OnDecimalsChanging(Nullable<global::System.Int32> value);
        partial void OnDecimalsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RootSource
        {
            get
            {
                return _RootSource;
            }
            set
            {
                OnRootSourceChanging(value);
                ReportPropertyChanging("RootSource");
                _RootSource = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RootSource");
                OnRootSourceChanged();
            }
        }
        private global::System.String _RootSource;
        partial void OnRootSourceChanging(global::System.String value);
        partial void OnRootSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RootSourceDate
        {
            get
            {
                return _RootSourceDate;
            }
            set
            {
                OnRootSourceDateChanging(value);
                ReportPropertyChanging("RootSourceDate");
                _RootSourceDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RootSourceDate");
                OnRootSourceDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _RootSourceDate;
        partial void OnRootSourceDateChanging(Nullable<global::System.DateTime> value);
        partial void OnRootSourceDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CalculationDiagram
        {
            get
            {
                return _CalculationDiagram;
            }
            set
            {
                OnCalculationDiagramChanging(value);
                ReportPropertyChanging("CalculationDiagram");
                _CalculationDiagram = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CalculationDiagram");
                OnCalculationDiagramChanged();
            }
        }
        private global::System.String _CalculationDiagram;
        partial void OnCalculationDiagramChanging(global::System.String value);
        partial void OnCalculationDiagramChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ExternalResearchModel", Name="FinstatDetail")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class FinstatDetail : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FinstatDetail object.
        /// </summary>
        /// <param name="pERIOD_YEAR">Initial value of the PERIOD_YEAR property.</param>
        /// <param name="mULTIPLIER">Initial value of the MULTIPLIER property.</param>
        /// <param name="dECIMALS">Initial value of the DECIMALS property.</param>
        /// <param name="pERCENTAGE">Initial value of the PERCENTAGE property.</param>
        /// <param name="bOLD_FONT">Initial value of the BOLD_FONT property.</param>
        /// <param name="gROUP_NAME">Initial value of the GROUP_NAME property.</param>
        /// <param name="sORT_ORDER">Initial value of the SORT_ORDER property.</param>
        /// <param name="hARMONIC">Initial value of the HARMONIC property.</param>
        /// <param name="dATA_DESC">Initial value of the DATA_DESC property.</param>
        public static FinstatDetail CreateFinstatDetail(global::System.Int32 pERIOD_YEAR, global::System.Decimal mULTIPLIER, global::System.Int32 dECIMALS, global::System.String pERCENTAGE, global::System.String bOLD_FONT, global::System.String gROUP_NAME, global::System.Int32 sORT_ORDER, global::System.String hARMONIC, global::System.String dATA_DESC)
        {
            FinstatDetail finstatDetail = new FinstatDetail();
            finstatDetail.PERIOD_YEAR = pERIOD_YEAR;
            finstatDetail.MULTIPLIER = mULTIPLIER;
            finstatDetail.DECIMALS = dECIMALS;
            finstatDetail.PERCENTAGE = pERCENTAGE;
            finstatDetail.BOLD_FONT = bOLD_FONT;
            finstatDetail.GROUP_NAME = gROUP_NAME;
            finstatDetail.SORT_ORDER = sORT_ORDER;
            finstatDetail.HARMONIC = hARMONIC;
            finstatDetail.DATA_DESC = dATA_DESC;
            return finstatDetail;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DATA_SOURCE
        {
            get
            {
                return _DATA_SOURCE;
            }
            set
            {
                OnDATA_SOURCEChanging(value);
                ReportPropertyChanging("DATA_SOURCE");
                _DATA_SOURCE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DATA_SOURCE");
                OnDATA_SOURCEChanged();
            }
        }
        private global::System.String _DATA_SOURCE;
        partial void OnDATA_SOURCEChanging(global::System.String value);
        partial void OnDATA_SOURCEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ROOT_SOURCE
        {
            get
            {
                return _ROOT_SOURCE;
            }
            set
            {
                OnROOT_SOURCEChanging(value);
                ReportPropertyChanging("ROOT_SOURCE");
                _ROOT_SOURCE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ROOT_SOURCE");
                OnROOT_SOURCEChanged();
            }
        }
        private global::System.String _ROOT_SOURCE;
        partial void OnROOT_SOURCEChanging(global::System.String value);
        partial void OnROOT_SOURCEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ROOT_SOURCE_DATE
        {
            get
            {
                return _ROOT_SOURCE_DATE;
            }
            set
            {
                OnROOT_SOURCE_DATEChanging(value);
                ReportPropertyChanging("ROOT_SOURCE_DATE");
                _ROOT_SOURCE_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ROOT_SOURCE_DATE");
                OnROOT_SOURCE_DATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _ROOT_SOURCE_DATE;
        partial void OnROOT_SOURCE_DATEChanging(Nullable<global::System.DateTime> value);
        partial void OnROOT_SOURCE_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ESTIMATE_ID
        {
            get
            {
                return _ESTIMATE_ID;
            }
            set
            {
                OnESTIMATE_IDChanging(value);
                ReportPropertyChanging("ESTIMATE_ID");
                _ESTIMATE_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ESTIMATE_ID");
                OnESTIMATE_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _ESTIMATE_ID;
        partial void OnESTIMATE_IDChanging(Nullable<global::System.Int32> value);
        partial void OnESTIMATE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PERIOD_YEAR
        {
            get
            {
                return _PERIOD_YEAR;
            }
            set
            {
                OnPERIOD_YEARChanging(value);
                ReportPropertyChanging("PERIOD_YEAR");
                _PERIOD_YEAR = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PERIOD_YEAR");
                OnPERIOD_YEARChanged();
            }
        }
        private global::System.Int32 _PERIOD_YEAR;
        partial void OnPERIOD_YEARChanging(global::System.Int32 value);
        partial void OnPERIOD_YEARChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DATA_ID
        {
            get
            {
                return _DATA_ID;
            }
            set
            {
                OnDATA_IDChanging(value);
                ReportPropertyChanging("DATA_ID");
                _DATA_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATA_ID");
                OnDATA_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _DATA_ID;
        partial void OnDATA_IDChanging(Nullable<global::System.Int32> value);
        partial void OnDATA_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> AMOUNT
        {
            get
            {
                return _AMOUNT;
            }
            set
            {
                OnAMOUNTChanging(value);
                ReportPropertyChanging("AMOUNT");
                _AMOUNT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AMOUNT");
                OnAMOUNTChanged();
            }
        }
        private Nullable<global::System.Decimal> _AMOUNT;
        partial void OnAMOUNTChanging(Nullable<global::System.Decimal> value);
        partial void OnAMOUNTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal MULTIPLIER
        {
            get
            {
                return _MULTIPLIER;
            }
            set
            {
                OnMULTIPLIERChanging(value);
                ReportPropertyChanging("MULTIPLIER");
                _MULTIPLIER = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MULTIPLIER");
                OnMULTIPLIERChanged();
            }
        }
        private global::System.Decimal _MULTIPLIER;
        partial void OnMULTIPLIERChanging(global::System.Decimal value);
        partial void OnMULTIPLIERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DECIMALS
        {
            get
            {
                return _DECIMALS;
            }
            set
            {
                OnDECIMALSChanging(value);
                ReportPropertyChanging("DECIMALS");
                _DECIMALS = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DECIMALS");
                OnDECIMALSChanged();
            }
        }
        private global::System.Int32 _DECIMALS;
        partial void OnDECIMALSChanging(global::System.Int32 value);
        partial void OnDECIMALSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PERCENTAGE
        {
            get
            {
                return _PERCENTAGE;
            }
            set
            {
                OnPERCENTAGEChanging(value);
                ReportPropertyChanging("PERCENTAGE");
                _PERCENTAGE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PERCENTAGE");
                OnPERCENTAGEChanged();
            }
        }
        private global::System.String _PERCENTAGE;
        partial void OnPERCENTAGEChanging(global::System.String value);
        partial void OnPERCENTAGEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BOLD_FONT
        {
            get
            {
                return _BOLD_FONT;
            }
            set
            {
                OnBOLD_FONTChanging(value);
                ReportPropertyChanging("BOLD_FONT");
                _BOLD_FONT = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BOLD_FONT");
                OnBOLD_FONTChanged();
            }
        }
        private global::System.String _BOLD_FONT;
        partial void OnBOLD_FONTChanging(global::System.String value);
        partial void OnBOLD_FONTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GROUP_NAME
        {
            get
            {
                return _GROUP_NAME;
            }
            set
            {
                OnGROUP_NAMEChanging(value);
                ReportPropertyChanging("GROUP_NAME");
                _GROUP_NAME = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("GROUP_NAME");
                OnGROUP_NAMEChanged();
            }
        }
        private global::System.String _GROUP_NAME;
        partial void OnGROUP_NAMEChanging(global::System.String value);
        partial void OnGROUP_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SORT_ORDER
        {
            get
            {
                return _SORT_ORDER;
            }
            set
            {
                OnSORT_ORDERChanging(value);
                ReportPropertyChanging("SORT_ORDER");
                _SORT_ORDER = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SORT_ORDER");
                OnSORT_ORDERChanged();
            }
        }
        private global::System.Int32 _SORT_ORDER;
        partial void OnSORT_ORDERChanging(global::System.Int32 value);
        partial void OnSORT_ORDERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HARMONIC
        {
            get
            {
                return _HARMONIC;
            }
            set
            {
                OnHARMONICChanging(value);
                ReportPropertyChanging("HARMONIC");
                _HARMONIC = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HARMONIC");
                OnHARMONICChanged();
            }
        }
        private global::System.String _HARMONIC;
        partial void OnHARMONICChanging(global::System.String value);
        partial void OnHARMONICChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DATA_DESC
        {
            get
            {
                return _DATA_DESC;
            }
            set
            {
                OnDATA_DESCChanging(value);
                ReportPropertyChanging("DATA_DESC");
                _DATA_DESC = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DATA_DESC");
                OnDATA_DESCChanged();
            }
        }
        private global::System.String _DATA_DESC;
        partial void OnDATA_DESCChanging(global::System.String value);
        partial void OnDATA_DESCChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ExternalResearchModel", Name="FinstatEconomicMarketData")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class FinstatEconomicMarketData : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FinstatEconomicMarketData object.
        /// </summary>
        /// <param name="fX_RATE">Initial value of the FX_RATE property.</param>
        /// <param name="aVG12MonthRATE">Initial value of the AVG12MonthRATE property.</param>
        /// <param name="pERIOD_YEAR">Initial value of the PERIOD_YEAR property.</param>
        public static FinstatEconomicMarketData CreateFinstatEconomicMarketData(global::System.Decimal fX_RATE, global::System.Decimal aVG12MonthRATE, global::System.String pERIOD_YEAR)
        {
            FinstatEconomicMarketData finstatEconomicMarketData = new FinstatEconomicMarketData();
            finstatEconomicMarketData.FX_RATE = fX_RATE;
            finstatEconomicMarketData.AVG12MonthRATE = aVG12MonthRATE;
            finstatEconomicMarketData.PERIOD_YEAR = pERIOD_YEAR;
            return finstatEconomicMarketData;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal FX_RATE
        {
            get
            {
                return _FX_RATE;
            }
            set
            {
                OnFX_RATEChanging(value);
                ReportPropertyChanging("FX_RATE");
                _FX_RATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FX_RATE");
                OnFX_RATEChanged();
            }
        }
        private global::System.Decimal _FX_RATE;
        partial void OnFX_RATEChanging(global::System.Decimal value);
        partial void OnFX_RATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal AVG12MonthRATE
        {
            get
            {
                return _AVG12MonthRATE;
            }
            set
            {
                OnAVG12MonthRATEChanging(value);
                ReportPropertyChanging("AVG12MonthRATE");
                _AVG12MonthRATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AVG12MonthRATE");
                OnAVG12MonthRATEChanged();
            }
        }
        private global::System.Decimal _AVG12MonthRATE;
        partial void OnAVG12MonthRATEChanging(global::System.Decimal value);
        partial void OnAVG12MonthRATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PERIOD_YEAR
        {
            get
            {
                return _PERIOD_YEAR;
            }
            set
            {
                OnPERIOD_YEARChanging(value);
                ReportPropertyChanging("PERIOD_YEAR");
                _PERIOD_YEAR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PERIOD_YEAR");
                OnPERIOD_YEARChanged();
            }
        }
        private global::System.String _PERIOD_YEAR;
        partial void OnPERIOD_YEARChanging(global::System.String value);
        partial void OnPERIOD_YEARChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FIELD
        {
            get
            {
                return _FIELD;
            }
            set
            {
                OnFIELDChanging(value);
                ReportPropertyChanging("FIELD");
                _FIELD = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FIELD");
                OnFIELDChanged();
            }
        }
        private global::System.String _FIELD;
        partial void OnFIELDChanging(global::System.String value);
        partial void OnFIELDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> YEAR1
        {
            get
            {
                return _YEAR1;
            }
            set
            {
                OnYEAR1Changing(value);
                ReportPropertyChanging("YEAR1");
                _YEAR1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YEAR1");
                OnYEAR1Changed();
            }
        }
        private Nullable<global::System.Int32> _YEAR1;
        partial void OnYEAR1Changing(Nullable<global::System.Int32> value);
        partial void OnYEAR1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> VALUE
        {
            get
            {
                return _VALUE;
            }
            set
            {
                OnVALUEChanging(value);
                ReportPropertyChanging("VALUE");
                _VALUE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VALUE");
                OnVALUEChanged();
            }
        }
        private Nullable<global::System.Decimal> _VALUE;
        partial void OnVALUEChanging(Nullable<global::System.Decimal> value);
        partial void OnVALUEChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ExternalResearchModel", Name="FinstatRelativeAnalysisData")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class FinstatRelativeAnalysisData : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FinstatRelativeAnalysisData object.
        /// </summary>
        /// <param name="dATA_ID">Initial value of the DATA_ID property.</param>
        /// <param name="pERIOD_YEAR">Initial value of the PERIOD_YEAR property.</param>
        /// <param name="aMOUNT">Initial value of the AMOUNT property.</param>
        /// <param name="dECIMALS">Initial value of the DECIMALS property.</param>
        /// <param name="mULTIPLIER">Initial value of the MULTIPLIER property.</param>
        /// <param name="pERCENTAGE">Initial value of the PERCENTAGE property.</param>
        /// <param name="vALUE">Initial value of the VALUE property.</param>
        public static FinstatRelativeAnalysisData CreateFinstatRelativeAnalysisData(global::System.Int32 dATA_ID, global::System.Int32 pERIOD_YEAR, global::System.Decimal aMOUNT, global::System.Int32 dECIMALS, global::System.Decimal mULTIPLIER, global::System.String pERCENTAGE, global::System.String vALUE)
        {
            FinstatRelativeAnalysisData finstatRelativeAnalysisData = new FinstatRelativeAnalysisData();
            finstatRelativeAnalysisData.DATA_ID = dATA_ID;
            finstatRelativeAnalysisData.PERIOD_YEAR = pERIOD_YEAR;
            finstatRelativeAnalysisData.AMOUNT = aMOUNT;
            finstatRelativeAnalysisData.DECIMALS = dECIMALS;
            finstatRelativeAnalysisData.MULTIPLIER = mULTIPLIER;
            finstatRelativeAnalysisData.PERCENTAGE = pERCENTAGE;
            finstatRelativeAnalysisData.VALUE = vALUE;
            return finstatRelativeAnalysisData;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DATA_ID
        {
            get
            {
                return _DATA_ID;
            }
            set
            {
                OnDATA_IDChanging(value);
                ReportPropertyChanging("DATA_ID");
                _DATA_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATA_ID");
                OnDATA_IDChanged();
            }
        }
        private global::System.Int32 _DATA_ID;
        partial void OnDATA_IDChanging(global::System.Int32 value);
        partial void OnDATA_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PERIOD_YEAR
        {
            get
            {
                return _PERIOD_YEAR;
            }
            set
            {
                OnPERIOD_YEARChanging(value);
                ReportPropertyChanging("PERIOD_YEAR");
                _PERIOD_YEAR = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PERIOD_YEAR");
                OnPERIOD_YEARChanged();
            }
        }
        private global::System.Int32 _PERIOD_YEAR;
        partial void OnPERIOD_YEARChanging(global::System.Int32 value);
        partial void OnPERIOD_YEARChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal AMOUNT
        {
            get
            {
                return _AMOUNT;
            }
            set
            {
                OnAMOUNTChanging(value);
                ReportPropertyChanging("AMOUNT");
                _AMOUNT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AMOUNT");
                OnAMOUNTChanged();
            }
        }
        private global::System.Decimal _AMOUNT;
        partial void OnAMOUNTChanging(global::System.Decimal value);
        partial void OnAMOUNTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DECIMALS
        {
            get
            {
                return _DECIMALS;
            }
            set
            {
                OnDECIMALSChanging(value);
                ReportPropertyChanging("DECIMALS");
                _DECIMALS = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DECIMALS");
                OnDECIMALSChanged();
            }
        }
        private global::System.Int32 _DECIMALS;
        partial void OnDECIMALSChanging(global::System.Int32 value);
        partial void OnDECIMALSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal MULTIPLIER
        {
            get
            {
                return _MULTIPLIER;
            }
            set
            {
                OnMULTIPLIERChanging(value);
                ReportPropertyChanging("MULTIPLIER");
                _MULTIPLIER = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MULTIPLIER");
                OnMULTIPLIERChanged();
            }
        }
        private global::System.Decimal _MULTIPLIER;
        partial void OnMULTIPLIERChanging(global::System.Decimal value);
        partial void OnMULTIPLIERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PERCENTAGE
        {
            get
            {
                return _PERCENTAGE;
            }
            set
            {
                OnPERCENTAGEChanging(value);
                ReportPropertyChanging("PERCENTAGE");
                _PERCENTAGE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PERCENTAGE");
                OnPERCENTAGEChanged();
            }
        }
        private global::System.String _PERCENTAGE;
        partial void OnPERCENTAGEChanging(global::System.String value);
        partial void OnPERCENTAGEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String VALUE
        {
            get
            {
                return _VALUE;
            }
            set
            {
                OnVALUEChanging(value);
                ReportPropertyChanging("VALUE");
                _VALUE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("VALUE");
                OnVALUEChanged();
            }
        }
        private global::System.String _VALUE;
        partial void OnVALUEChanging(global::System.String value);
        partial void OnVALUEChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ExternalResearchModel", Name="FXData")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class FXData : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FXData object.
        /// </summary>
        /// <param name="cOUNTRY_CODE">Initial value of the COUNTRY_CODE property.</param>
        /// <param name="cURRENCY">Initial value of the CURRENCY property.</param>
        /// <param name="fX_DATE">Initial value of the FX_DATE property.</param>
        /// <param name="fX_RATE">Initial value of the FX_RATE property.</param>
        public static FXData CreateFXData(global::System.String cOUNTRY_CODE, global::System.String cURRENCY, global::System.DateTime fX_DATE, global::System.Decimal fX_RATE)
        {
            FXData fXData = new FXData();
            fXData.COUNTRY_CODE = cOUNTRY_CODE;
            fXData.CURRENCY = cURRENCY;
            fXData.FX_DATE = fX_DATE;
            fXData.FX_RATE = fX_RATE;
            return fXData;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String COUNTRY_CODE
        {
            get
            {
                return _COUNTRY_CODE;
            }
            set
            {
                OnCOUNTRY_CODEChanging(value);
                ReportPropertyChanging("COUNTRY_CODE");
                _COUNTRY_CODE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("COUNTRY_CODE");
                OnCOUNTRY_CODEChanged();
            }
        }
        private global::System.String _COUNTRY_CODE;
        partial void OnCOUNTRY_CODEChanging(global::System.String value);
        partial void OnCOUNTRY_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CURRENCY
        {
            get
            {
                return _CURRENCY;
            }
            set
            {
                OnCURRENCYChanging(value);
                ReportPropertyChanging("CURRENCY");
                _CURRENCY = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CURRENCY");
                OnCURRENCYChanged();
            }
        }
        private global::System.String _CURRENCY;
        partial void OnCURRENCYChanging(global::System.String value);
        partial void OnCURRENCYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FX_DATE
        {
            get
            {
                return _FX_DATE;
            }
            set
            {
                OnFX_DATEChanging(value);
                ReportPropertyChanging("FX_DATE");
                _FX_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FX_DATE");
                OnFX_DATEChanged();
            }
        }
        private global::System.DateTime _FX_DATE;
        partial void OnFX_DATEChanging(global::System.DateTime value);
        partial void OnFX_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal FX_RATE
        {
            get
            {
                return _FX_RATE;
            }
            set
            {
                OnFX_RATEChanging(value);
                ReportPropertyChanging("FX_RATE");
                _FX_RATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FX_RATE");
                OnFX_RATEChanged();
            }
        }
        private global::System.Decimal _FX_RATE;
        partial void OnFX_RATEChanging(global::System.Decimal value);
        partial void OnFX_RATEChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ExternalResearchModel", Name="GetBasicData_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetBasicData_Result : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> MARKET_CAPITALIZATION
        {
            get
            {
                return _MARKET_CAPITALIZATION;
            }
            set
            {
                OnMARKET_CAPITALIZATIONChanging(value);
                ReportPropertyChanging("MARKET_CAPITALIZATION");
                _MARKET_CAPITALIZATION = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MARKET_CAPITALIZATION");
                OnMARKET_CAPITALIZATIONChanged();
            }
        }
        private Nullable<global::System.Decimal> _MARKET_CAPITALIZATION;
        partial void OnMARKET_CAPITALIZATIONChanging(Nullable<global::System.Decimal> value);
        partial void OnMARKET_CAPITALIZATIONChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ENTERPRISE_VALUE
        {
            get
            {
                return _ENTERPRISE_VALUE;
            }
            set
            {
                OnENTERPRISE_VALUEChanging(value);
                ReportPropertyChanging("ENTERPRISE_VALUE");
                _ENTERPRISE_VALUE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ENTERPRISE_VALUE");
                OnENTERPRISE_VALUEChanged();
            }
        }
        private Nullable<global::System.Decimal> _ENTERPRISE_VALUE;
        partial void OnENTERPRISE_VALUEChanging(Nullable<global::System.Decimal> value);
        partial void OnENTERPRISE_VALUEChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ExternalResearchModel", Name="GetEV_EBITDAData_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetEV_EBITDAData_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetEV_EBITDAData_Result object.
        /// </summary>
        /// <param name="periodLabel">Initial value of the PeriodLabel property.</param>
        /// <param name="period_End_Date">Initial value of the Period_End_Date property.</param>
        public static GetEV_EBITDAData_Result CreateGetEV_EBITDAData_Result(global::System.String periodLabel, global::System.DateTime period_End_Date)
        {
            GetEV_EBITDAData_Result getEV_EBITDAData_Result = new GetEV_EBITDAData_Result();
            getEV_EBITDAData_Result.PeriodLabel = periodLabel;
            getEV_EBITDAData_Result.Period_End_Date = period_End_Date;
            return getEV_EBITDAData_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PeriodLabel
        {
            get
            {
                return _PeriodLabel;
            }
            set
            {
                OnPeriodLabelChanging(value);
                ReportPropertyChanging("PeriodLabel");
                _PeriodLabel = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PeriodLabel");
                OnPeriodLabelChanged();
            }
        }
        private global::System.String _PeriodLabel;
        partial void OnPeriodLabelChanging(global::System.String value);
        partial void OnPeriodLabelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Period_End_Date
        {
            get
            {
                return _Period_End_Date;
            }
            set
            {
                OnPeriod_End_DateChanging(value);
                ReportPropertyChanging("Period_End_Date");
                _Period_End_Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period_End_Date");
                OnPeriod_End_DateChanged();
            }
        }
        private global::System.DateTime _Period_End_Date;
        partial void OnPeriod_End_DateChanging(global::System.DateTime value);
        partial void OnPeriod_End_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> EBITDA
        {
            get
            {
                return _EBITDA;
            }
            set
            {
                OnEBITDAChanging(value);
                ReportPropertyChanging("EBITDA");
                _EBITDA = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EBITDA");
                OnEBITDAChanged();
            }
        }
        private Nullable<global::System.Decimal> _EBITDA;
        partial void OnEBITDAChanging(Nullable<global::System.Decimal> value);
        partial void OnEBITDAChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> NetDebt
        {
            get
            {
                return _NetDebt;
            }
            set
            {
                OnNetDebtChanging(value);
                ReportPropertyChanging("NetDebt");
                _NetDebt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetDebt");
                OnNetDebtChanged();
            }
        }
        private Nullable<global::System.Decimal> _NetDebt;
        partial void OnNetDebtChanging(Nullable<global::System.Decimal> value);
        partial void OnNetDebtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> USDPrice
        {
            get
            {
                return _USDPrice;
            }
            set
            {
                OnUSDPriceChanging(value);
                ReportPropertyChanging("USDPrice");
                _USDPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("USDPrice");
                OnUSDPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _USDPrice;
        partial void OnUSDPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnUSDPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Shares_Outstanding
        {
            get
            {
                return _Shares_Outstanding;
            }
            set
            {
                OnShares_OutstandingChanging(value);
                ReportPropertyChanging("Shares_Outstanding");
                _Shares_Outstanding = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Shares_Outstanding");
                OnShares_OutstandingChanged();
            }
        }
        private Nullable<global::System.Decimal> _Shares_Outstanding;
        partial void OnShares_OutstandingChanging(Nullable<global::System.Decimal> value);
        partial void OnShares_OutstandingChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ExternalResearchModel", Name="GetFairValueComposition_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetFairValueComposition_Result : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SOURCE
        {
            get
            {
                return _SOURCE;
            }
            set
            {
                OnSOURCEChanging(value);
                ReportPropertyChanging("SOURCE");
                _SOURCE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SOURCE");
                OnSOURCEChanged();
            }
        }
        private global::System.String _SOURCE;
        partial void OnSOURCEChanging(global::System.String value);
        partial void OnSOURCEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MEASURE
        {
            get
            {
                return _MEASURE;
            }
            set
            {
                OnMEASUREChanging(value);
                ReportPropertyChanging("MEASURE");
                _MEASURE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MEASURE");
                OnMEASUREChanged();
            }
        }
        private global::System.String _MEASURE;
        partial void OnMEASUREChanging(global::System.String value);
        partial void OnMEASUREChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> BUY
        {
            get
            {
                return _BUY;
            }
            set
            {
                OnBUYChanging(value);
                ReportPropertyChanging("BUY");
                _BUY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BUY");
                OnBUYChanged();
            }
        }
        private Nullable<global::System.Decimal> _BUY;
        partial void OnBUYChanging(Nullable<global::System.Decimal> value);
        partial void OnBUYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> SELL
        {
            get
            {
                return _SELL;
            }
            set
            {
                OnSELLChanging(value);
                ReportPropertyChanging("SELL");
                _SELL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SELL");
                OnSELLChanged();
            }
        }
        private Nullable<global::System.Decimal> _SELL;
        partial void OnSELLChanging(Nullable<global::System.Decimal> value);
        partial void OnSELLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> UPSIDE
        {
            get
            {
                return _UPSIDE;
            }
            set
            {
                OnUPSIDEChanging(value);
                ReportPropertyChanging("UPSIDE");
                _UPSIDE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UPSIDE");
                OnUPSIDEChanged();
            }
        }
        private Nullable<global::System.Decimal> _UPSIDE;
        partial void OnUPSIDEChanging(Nullable<global::System.Decimal> value);
        partial void OnUPSIDEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DATE
        {
            get
            {
                return _DATE;
            }
            set
            {
                OnDATEChanging(value);
                ReportPropertyChanging("DATE");
                _DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATE");
                OnDATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _DATE;
        partial void OnDATEChanging(Nullable<global::System.DateTime> value);
        partial void OnDATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DATA_ID
        {
            get
            {
                return _DATA_ID;
            }
            set
            {
                OnDATA_IDChanging(value);
                ReportPropertyChanging("DATA_ID");
                _DATA_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATA_ID");
                OnDATA_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _DATA_ID;
        partial void OnDATA_IDChanging(Nullable<global::System.Int32> value);
        partial void OnDATA_IDChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ExternalResearchModel", Name="GetFreeCashFlows_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetFreeCashFlows_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetFreeCashFlows_Result object.
        /// </summary>
        /// <param name="dATA_ID">Initial value of the DATA_ID property.</param>
        /// <param name="pERIOD_YEAR">Initial value of the PERIOD_YEAR property.</param>
        public static GetFreeCashFlows_Result CreateGetFreeCashFlows_Result(global::System.Int32 dATA_ID, global::System.Int32 pERIOD_YEAR)
        {
            GetFreeCashFlows_Result getFreeCashFlows_Result = new GetFreeCashFlows_Result();
            getFreeCashFlows_Result.DATA_ID = dATA_ID;
            getFreeCashFlows_Result.PERIOD_YEAR = pERIOD_YEAR;
            return getFreeCashFlows_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FIELD_NAME
        {
            get
            {
                return _FIELD_NAME;
            }
            set
            {
                OnFIELD_NAMEChanging(value);
                ReportPropertyChanging("FIELD_NAME");
                _FIELD_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FIELD_NAME");
                OnFIELD_NAMEChanged();
            }
        }
        private global::System.String _FIELD_NAME;
        partial void OnFIELD_NAMEChanging(global::System.String value);
        partial void OnFIELD_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DATA_ID
        {
            get
            {
                return _DATA_ID;
            }
            set
            {
                OnDATA_IDChanging(value);
                ReportPropertyChanging("DATA_ID");
                _DATA_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATA_ID");
                OnDATA_IDChanged();
            }
        }
        private global::System.Int32 _DATA_ID;
        partial void OnDATA_IDChanging(global::System.Int32 value);
        partial void OnDATA_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> AMOUNT
        {
            get
            {
                return _AMOUNT;
            }
            set
            {
                OnAMOUNTChanging(value);
                ReportPropertyChanging("AMOUNT");
                _AMOUNT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AMOUNT");
                OnAMOUNTChanged();
            }
        }
        private Nullable<global::System.Decimal> _AMOUNT;
        partial void OnAMOUNTChanging(Nullable<global::System.Decimal> value);
        partial void OnAMOUNTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PERIOD_YEAR
        {
            get
            {
                return _PERIOD_YEAR;
            }
            set
            {
                OnPERIOD_YEARChanging(value);
                ReportPropertyChanging("PERIOD_YEAR");
                _PERIOD_YEAR = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PERIOD_YEAR");
                OnPERIOD_YEARChanged();
            }
        }
        private global::System.Int32 _PERIOD_YEAR;
        partial void OnPERIOD_YEARChanging(global::System.Int32 value);
        partial void OnPERIOD_YEARChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ExternalResearchModel", Name="getInvestmentContext_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class getInvestmentContext_Result : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.String _issuer_id;
        partial void Onissuer_idChanging(global::System.String value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String iso_country_code
        {
            get
            {
                return _iso_country_code;
            }
            set
            {
                Oniso_country_codeChanging(value);
                ReportPropertyChanging("iso_country_code");
                _iso_country_code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("iso_country_code");
                Oniso_country_codeChanged();
            }
        }
        private global::System.String _iso_country_code;
        partial void Oniso_country_codeChanging(global::System.String value);
        partial void Oniso_country_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String gics_sector
        {
            get
            {
                return _gics_sector;
            }
            set
            {
                Ongics_sectorChanging(value);
                ReportPropertyChanging("gics_sector");
                _gics_sector = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("gics_sector");
                Ongics_sectorChanged();
            }
        }
        private global::System.String _gics_sector;
        partial void Ongics_sectorChanging(global::System.String value);
        partial void Ongics_sectorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String gics_sector_name
        {
            get
            {
                return _gics_sector_name;
            }
            set
            {
                Ongics_sector_nameChanging(value);
                ReportPropertyChanging("gics_sector_name");
                _gics_sector_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("gics_sector_name");
                Ongics_sector_nameChanged();
            }
        }
        private global::System.String _gics_sector_name;
        partial void Ongics_sector_nameChanging(global::System.String value);
        partial void Ongics_sector_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String gics_industry
        {
            get
            {
                return _gics_industry;
            }
            set
            {
                Ongics_industryChanging(value);
                ReportPropertyChanging("gics_industry");
                _gics_industry = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("gics_industry");
                Ongics_industryChanged();
            }
        }
        private global::System.String _gics_industry;
        partial void Ongics_industryChanging(global::System.String value);
        partial void Ongics_industryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String gics_industry_name
        {
            get
            {
                return _gics_industry_name;
            }
            set
            {
                Ongics_industry_nameChanging(value);
                ReportPropertyChanging("gics_industry_name");
                _gics_industry_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("gics_industry_name");
                Ongics_industry_nameChanged();
            }
        }
        private global::System.String _gics_industry_name;
        partial void Ongics_industry_nameChanging(global::System.String value);
        partial void Ongics_industry_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> mktVal
        {
            get
            {
                return _mktVal;
            }
            set
            {
                OnmktValChanging(value);
                ReportPropertyChanging("mktVal");
                _mktVal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("mktVal");
                OnmktValChanged();
            }
        }
        private Nullable<global::System.Decimal> _mktVal;
        partial void OnmktValChanging(Nullable<global::System.Decimal> value);
        partial void OnmktValChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> mktcap
        {
            get
            {
                return _mktcap;
            }
            set
            {
                OnmktcapChanging(value);
                ReportPropertyChanging("mktcap");
                _mktcap = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("mktcap");
                OnmktcapChanged();
            }
        }
        private Nullable<global::System.Decimal> _mktcap;
        partial void OnmktcapChanging(Nullable<global::System.Decimal> value);
        partial void OnmktcapChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> fwd_pe
        {
            get
            {
                return _fwd_pe;
            }
            set
            {
                Onfwd_peChanging(value);
                ReportPropertyChanging("fwd_pe");
                _fwd_pe = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("fwd_pe");
                Onfwd_peChanged();
            }
        }
        private Nullable<global::System.Decimal> _fwd_pe;
        partial void Onfwd_peChanging(Nullable<global::System.Decimal> value);
        partial void Onfwd_peChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> fwd_pb
        {
            get
            {
                return _fwd_pb;
            }
            set
            {
                Onfwd_pbChanging(value);
                ReportPropertyChanging("fwd_pb");
                _fwd_pb = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("fwd_pb");
                Onfwd_pbChanged();
            }
        }
        private Nullable<global::System.Decimal> _fwd_pb;
        partial void Onfwd_pbChanging(Nullable<global::System.Decimal> value);
        partial void Onfwd_pbChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> pe_curryear
        {
            get
            {
                return _pe_curryear;
            }
            set
            {
                Onpe_curryearChanging(value);
                ReportPropertyChanging("pe_curryear");
                _pe_curryear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("pe_curryear");
                Onpe_curryearChanged();
            }
        }
        private Nullable<global::System.Decimal> _pe_curryear;
        partial void Onpe_curryearChanging(Nullable<global::System.Decimal> value);
        partial void Onpe_curryearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> pe_nextyear
        {
            get
            {
                return _pe_nextyear;
            }
            set
            {
                Onpe_nextyearChanging(value);
                ReportPropertyChanging("pe_nextyear");
                _pe_nextyear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("pe_nextyear");
                Onpe_nextyearChanged();
            }
        }
        private Nullable<global::System.Decimal> _pe_nextyear;
        partial void Onpe_nextyearChanging(Nullable<global::System.Decimal> value);
        partial void Onpe_nextyearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> pb_curryear
        {
            get
            {
                return _pb_curryear;
            }
            set
            {
                Onpb_curryearChanging(value);
                ReportPropertyChanging("pb_curryear");
                _pb_curryear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("pb_curryear");
                Onpb_curryearChanged();
            }
        }
        private Nullable<global::System.Decimal> _pb_curryear;
        partial void Onpb_curryearChanging(Nullable<global::System.Decimal> value);
        partial void Onpb_curryearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> pb_nextyear
        {
            get
            {
                return _pb_nextyear;
            }
            set
            {
                Onpb_nextyearChanging(value);
                ReportPropertyChanging("pb_nextyear");
                _pb_nextyear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("pb_nextyear");
                Onpb_nextyearChanged();
            }
        }
        private Nullable<global::System.Decimal> _pb_nextyear;
        partial void Onpb_nextyearChanging(Nullable<global::System.Decimal> value);
        partial void Onpb_nextyearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ev_ebitda_curryear
        {
            get
            {
                return _ev_ebitda_curryear;
            }
            set
            {
                Onev_ebitda_curryearChanging(value);
                ReportPropertyChanging("ev_ebitda_curryear");
                _ev_ebitda_curryear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ev_ebitda_curryear");
                Onev_ebitda_curryearChanged();
            }
        }
        private Nullable<global::System.Decimal> _ev_ebitda_curryear;
        partial void Onev_ebitda_curryearChanging(Nullable<global::System.Decimal> value);
        partial void Onev_ebitda_curryearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ev_ebitda_nextyear
        {
            get
            {
                return _ev_ebitda_nextyear;
            }
            set
            {
                Onev_ebitda_nextyearChanging(value);
                ReportPropertyChanging("ev_ebitda_nextyear");
                _ev_ebitda_nextyear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ev_ebitda_nextyear");
                Onev_ebitda_nextyearChanged();
            }
        }
        private Nullable<global::System.Decimal> _ev_ebitda_nextyear;
        partial void Onev_ebitda_nextyearChanging(Nullable<global::System.Decimal> value);
        partial void Onev_ebitda_nextyearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> dy
        {
            get
            {
                return _dy;
            }
            set
            {
                OndyChanging(value);
                ReportPropertyChanging("dy");
                _dy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dy");
                OndyChanged();
            }
        }
        private Nullable<global::System.Decimal> _dy;
        partial void OndyChanging(Nullable<global::System.Decimal> value);
        partial void OndyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> roe
        {
            get
            {
                return _roe;
            }
            set
            {
                OnroeChanging(value);
                ReportPropertyChanging("roe");
                _roe = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("roe");
                OnroeChanged();
            }
        }
        private Nullable<global::System.Decimal> _roe;
        partial void OnroeChanging(Nullable<global::System.Decimal> value);
        partial void OnroeChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ExternalResearchModel", Name="GetPRevenueData_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetPRevenueData_Result : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PeriodLabel
        {
            get
            {
                return _PeriodLabel;
            }
            set
            {
                OnPeriodLabelChanging(value);
                ReportPropertyChanging("PeriodLabel");
                _PeriodLabel = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PeriodLabel");
                OnPeriodLabelChanged();
            }
        }
        private global::System.String _PeriodLabel;
        partial void OnPeriodLabelChanging(global::System.String value);
        partial void OnPeriodLabelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Period_End_Date
        {
            get
            {
                return _Period_End_Date;
            }
            set
            {
                OnPeriod_End_DateChanging(value);
                ReportPropertyChanging("Period_End_Date");
                _Period_End_Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period_End_Date");
                OnPeriod_End_DateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Period_End_Date;
        partial void OnPeriod_End_DateChanging(Nullable<global::System.DateTime> value);
        partial void OnPeriod_End_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _Amount;
        partial void OnAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Period_Type
        {
            get
            {
                return _Period_Type;
            }
            set
            {
                OnPeriod_TypeChanging(value);
                ReportPropertyChanging("Period_Type");
                _Period_Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Period_Type");
                OnPeriod_TypeChanged();
            }
        }
        private global::System.String _Period_Type;
        partial void OnPeriod_TypeChanging(global::System.String value);
        partial void OnPeriod_TypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Period_Year
        {
            get
            {
                return _Period_Year;
            }
            set
            {
                OnPeriod_YearChanging(value);
                ReportPropertyChanging("Period_Year");
                _Period_Year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period_Year");
                OnPeriod_YearChanged();
            }
        }
        private Nullable<global::System.Int32> _Period_Year;
        partial void OnPeriod_YearChanging(Nullable<global::System.Int32> value);
        partial void OnPeriod_YearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> USDPrice
        {
            get
            {
                return _USDPrice;
            }
            set
            {
                OnUSDPriceChanging(value);
                ReportPropertyChanging("USDPrice");
                _USDPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("USDPrice");
                OnUSDPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _USDPrice;
        partial void OnUSDPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnUSDPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Shares_Outstanding
        {
            get
            {
                return _Shares_Outstanding;
            }
            set
            {
                OnShares_OutstandingChanging(value);
                ReportPropertyChanging("Shares_Outstanding");
                _Shares_Outstanding = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Shares_Outstanding");
                OnShares_OutstandingChanged();
            }
        }
        private Nullable<global::System.Decimal> _Shares_Outstanding;
        partial void OnShares_OutstandingChanging(Nullable<global::System.Decimal> value);
        partial void OnShares_OutstandingChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ExternalResearchModel", Name="GetTargetPrice_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetTargetPrice_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetTargetPrice_Result object.
        /// </summary>
        /// <param name="xref">Initial value of the Xref property.</param>
        public static GetTargetPrice_Result CreateGetTargetPrice_Result(global::System.String xref)
        {
            GetTargetPrice_Result getTargetPrice_Result = new GetTargetPrice_Result();
            getTargetPrice_Result.Xref = xref;
            return getTargetPrice_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Xref
        {
            get
            {
                return _Xref;
            }
            set
            {
                OnXrefChanging(value);
                ReportPropertyChanging("Xref");
                _Xref = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Xref");
                OnXrefChanged();
            }
        }
        private global::System.String _Xref;
        partial void OnXrefChanging(global::System.String value);
        partial void OnXrefChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Ticker
        {
            get
            {
                return _Ticker;
            }
            set
            {
                OnTickerChanging(value);
                ReportPropertyChanging("Ticker");
                _Ticker = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Ticker");
                OnTickerChanged();
            }
        }
        private global::System.String _Ticker;
        partial void OnTickerChanging(global::System.String value);
        partial void OnTickerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> CurrentPrice
        {
            get
            {
                return _CurrentPrice;
            }
            set
            {
                OnCurrentPriceChanging(value);
                ReportPropertyChanging("CurrentPrice");
                _CurrentPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentPrice");
                OnCurrentPriceChanged();
            }
        }
        private Nullable<global::System.Single> _CurrentPrice;
        partial void OnCurrentPriceChanging(Nullable<global::System.Single> value);
        partial void OnCurrentPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CurrentPriceDate
        {
            get
            {
                return _CurrentPriceDate;
            }
            set
            {
                OnCurrentPriceDateChanging(value);
                ReportPropertyChanging("CurrentPriceDate");
                _CurrentPriceDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentPriceDate");
                OnCurrentPriceDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CurrentPriceDate;
        partial void OnCurrentPriceDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCurrentPriceDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Currency
        {
            get
            {
                return _Currency;
            }
            set
            {
                OnCurrencyChanging(value);
                ReportPropertyChanging("Currency");
                _Currency = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Currency");
                OnCurrencyChanged();
            }
        }
        private global::System.String _Currency;
        partial void OnCurrencyChanging(global::System.String value);
        partial void OnCurrencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> Median
        {
            get
            {
                return _Median;
            }
            set
            {
                OnMedianChanging(value);
                ReportPropertyChanging("Median");
                _Median = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Median");
                OnMedianChanged();
            }
        }
        private Nullable<global::System.Single> _Median;
        partial void OnMedianChanging(Nullable<global::System.Single> value);
        partial void OnMedianChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TargetCurrency
        {
            get
            {
                return _TargetCurrency;
            }
            set
            {
                OnTargetCurrencyChanging(value);
                ReportPropertyChanging("TargetCurrency");
                _TargetCurrency = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TargetCurrency");
                OnTargetCurrencyChanged();
            }
        }
        private global::System.String _TargetCurrency;
        partial void OnTargetCurrencyChanging(global::System.String value);
        partial void OnTargetCurrencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NumOfEsts
        {
            get
            {
                return _NumOfEsts;
            }
            set
            {
                OnNumOfEstsChanging(value);
                ReportPropertyChanging("NumOfEsts");
                _NumOfEsts = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumOfEsts");
                OnNumOfEstsChanged();
            }
        }
        private Nullable<global::System.Int32> _NumOfEsts;
        partial void OnNumOfEstsChanging(Nullable<global::System.Int32> value);
        partial void OnNumOfEstsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> High
        {
            get
            {
                return _High;
            }
            set
            {
                OnHighChanging(value);
                ReportPropertyChanging("High");
                _High = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("High");
                OnHighChanged();
            }
        }
        private Nullable<global::System.Single> _High;
        partial void OnHighChanging(Nullable<global::System.Single> value);
        partial void OnHighChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> Low
        {
            get
            {
                return _Low;
            }
            set
            {
                OnLowChanging(value);
                ReportPropertyChanging("Low");
                _Low = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Low");
                OnLowChanged();
            }
        }
        private Nullable<global::System.Single> _Low;
        partial void OnLowChanging(Nullable<global::System.Single> value);
        partial void OnLowChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> StdDev
        {
            get
            {
                return _StdDev;
            }
            set
            {
                OnStdDevChanging(value);
                ReportPropertyChanging("StdDev");
                _StdDev = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StdDev");
                OnStdDevChanged();
            }
        }
        private Nullable<global::System.Single> _StdDev;
        partial void OnStdDevChanging(Nullable<global::System.Single> value);
        partial void OnStdDevChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MeanLabel
        {
            get
            {
                return _MeanLabel;
            }
            set
            {
                OnMeanLabelChanging(value);
                ReportPropertyChanging("MeanLabel");
                _MeanLabel = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MeanLabel");
                OnMeanLabelChanged();
            }
        }
        private global::System.String _MeanLabel;
        partial void OnMeanLabelChanging(global::System.String value);
        partial void OnMeanLabelChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ExternalResearchModel", Name="INTERNAL_COA_CHANGES")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class INTERNAL_COA_CHANGES : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new INTERNAL_COA_CHANGES object.
        /// </summary>
        /// <param name="iSSUER_ID">Initial value of the ISSUER_ID property.</param>
        /// <param name="rOOT_SOURCE">Initial value of the ROOT_SOURCE property.</param>
        /// <param name="lOAD_ID">Initial value of the LOAD_ID property.</param>
        /// <param name="cURRENCY">Initial value of the CURRENCY property.</param>
        /// <param name="cOA">Initial value of the COA property.</param>
        /// <param name="pERIOD_YEAR">Initial value of the PERIOD_YEAR property.</param>
        /// <param name="pERIOD_END_DATE">Initial value of the PERIOD_END_DATE property.</param>
        /// <param name="sTART_DATE">Initial value of the START_DATE property.</param>
        /// <param name="aMOUNT">Initial value of the AMOUNT property.</param>
        /// <param name="uNITS">Initial value of the UNITS property.</param>
        public static INTERNAL_COA_CHANGES CreateINTERNAL_COA_CHANGES(global::System.String iSSUER_ID, global::System.String rOOT_SOURCE, global::System.Int64 lOAD_ID, global::System.String cURRENCY, global::System.String cOA, global::System.Int32 pERIOD_YEAR, global::System.DateTime pERIOD_END_DATE, global::System.DateTime sTART_DATE, global::System.Decimal aMOUNT, global::System.String uNITS)
        {
            INTERNAL_COA_CHANGES iNTERNAL_COA_CHANGES = new INTERNAL_COA_CHANGES();
            iNTERNAL_COA_CHANGES.ISSUER_ID = iSSUER_ID;
            iNTERNAL_COA_CHANGES.ROOT_SOURCE = rOOT_SOURCE;
            iNTERNAL_COA_CHANGES.LOAD_ID = lOAD_ID;
            iNTERNAL_COA_CHANGES.CURRENCY = cURRENCY;
            iNTERNAL_COA_CHANGES.COA = cOA;
            iNTERNAL_COA_CHANGES.PERIOD_YEAR = pERIOD_YEAR;
            iNTERNAL_COA_CHANGES.PERIOD_END_DATE = pERIOD_END_DATE;
            iNTERNAL_COA_CHANGES.START_DATE = sTART_DATE;
            iNTERNAL_COA_CHANGES.AMOUNT = aMOUNT;
            iNTERNAL_COA_CHANGES.UNITS = uNITS;
            return iNTERNAL_COA_CHANGES;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ISSUER_ID
        {
            get
            {
                return _ISSUER_ID;
            }
            set
            {
                OnISSUER_IDChanging(value);
                ReportPropertyChanging("ISSUER_ID");
                _ISSUER_ID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ISSUER_ID");
                OnISSUER_IDChanged();
            }
        }
        private global::System.String _ISSUER_ID;
        partial void OnISSUER_IDChanging(global::System.String value);
        partial void OnISSUER_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ROOT_SOURCE
        {
            get
            {
                return _ROOT_SOURCE;
            }
            set
            {
                OnROOT_SOURCEChanging(value);
                ReportPropertyChanging("ROOT_SOURCE");
                _ROOT_SOURCE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ROOT_SOURCE");
                OnROOT_SOURCEChanged();
            }
        }
        private global::System.String _ROOT_SOURCE;
        partial void OnROOT_SOURCEChanging(global::System.String value);
        partial void OnROOT_SOURCEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 LOAD_ID
        {
            get
            {
                return _LOAD_ID;
            }
            set
            {
                OnLOAD_IDChanging(value);
                ReportPropertyChanging("LOAD_ID");
                _LOAD_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LOAD_ID");
                OnLOAD_IDChanged();
            }
        }
        private global::System.Int64 _LOAD_ID;
        partial void OnLOAD_IDChanging(global::System.Int64 value);
        partial void OnLOAD_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CURRENCY
        {
            get
            {
                return _CURRENCY;
            }
            set
            {
                OnCURRENCYChanging(value);
                ReportPropertyChanging("CURRENCY");
                _CURRENCY = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CURRENCY");
                OnCURRENCYChanged();
            }
        }
        private global::System.String _CURRENCY;
        partial void OnCURRENCYChanging(global::System.String value);
        partial void OnCURRENCYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String COA
        {
            get
            {
                return _COA;
            }
            set
            {
                OnCOAChanging(value);
                ReportPropertyChanging("COA");
                _COA = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("COA");
                OnCOAChanged();
            }
        }
        private global::System.String _COA;
        partial void OnCOAChanging(global::System.String value);
        partial void OnCOAChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PERIOD_YEAR
        {
            get
            {
                return _PERIOD_YEAR;
            }
            set
            {
                OnPERIOD_YEARChanging(value);
                ReportPropertyChanging("PERIOD_YEAR");
                _PERIOD_YEAR = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PERIOD_YEAR");
                OnPERIOD_YEARChanged();
            }
        }
        private global::System.Int32 _PERIOD_YEAR;
        partial void OnPERIOD_YEARChanging(global::System.Int32 value);
        partial void OnPERIOD_YEARChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PERIOD_END_DATE
        {
            get
            {
                return _PERIOD_END_DATE;
            }
            set
            {
                OnPERIOD_END_DATEChanging(value);
                ReportPropertyChanging("PERIOD_END_DATE");
                _PERIOD_END_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PERIOD_END_DATE");
                OnPERIOD_END_DATEChanged();
            }
        }
        private global::System.DateTime _PERIOD_END_DATE;
        partial void OnPERIOD_END_DATEChanging(global::System.DateTime value);
        partial void OnPERIOD_END_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime START_DATE
        {
            get
            {
                return _START_DATE;
            }
            set
            {
                OnSTART_DATEChanging(value);
                ReportPropertyChanging("START_DATE");
                _START_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("START_DATE");
                OnSTART_DATEChanged();
            }
        }
        private global::System.DateTime _START_DATE;
        partial void OnSTART_DATEChanging(global::System.DateTime value);
        partial void OnSTART_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> END_DATE
        {
            get
            {
                return _END_DATE;
            }
            set
            {
                OnEND_DATEChanging(value);
                ReportPropertyChanging("END_DATE");
                _END_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("END_DATE");
                OnEND_DATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _END_DATE;
        partial void OnEND_DATEChanging(Nullable<global::System.DateTime> value);
        partial void OnEND_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal AMOUNT
        {
            get
            {
                return _AMOUNT;
            }
            set
            {
                OnAMOUNTChanging(value);
                ReportPropertyChanging("AMOUNT");
                _AMOUNT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AMOUNT");
                OnAMOUNTChanged();
            }
        }
        private global::System.Decimal _AMOUNT;
        partial void OnAMOUNTChanging(global::System.Decimal value);
        partial void OnAMOUNTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UNITS
        {
            get
            {
                return _UNITS;
            }
            set
            {
                OnUNITSChanging(value);
                ReportPropertyChanging("UNITS");
                _UNITS = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UNITS");
                OnUNITSChanged();
            }
        }
        private global::System.String _UNITS;
        partial void OnUNITSChanging(global::System.String value);
        partial void OnUNITSChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ExternalResearchModel", Name="Internal_Model_Load")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class Internal_Model_Load : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Internal_Model_Load object.
        /// </summary>
        /// <param name="lOAD_ID">Initial value of the LOAD_ID property.</param>
        /// <param name="iSSUER_ID">Initial value of the ISSUER_ID property.</param>
        /// <param name="rOOT_SOURCE">Initial value of the ROOT_SOURCE property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="lOAD_TIME">Initial value of the LOAD_TIME property.</param>
        /// <param name="dOCUMENT_ID">Initial value of the DOCUMENT_ID property.</param>
        public static Internal_Model_Load CreateInternal_Model_Load(global::System.Int32 lOAD_ID, global::System.String iSSUER_ID, global::System.String rOOT_SOURCE, global::System.String userName, global::System.DateTime lOAD_TIME, global::System.Int64 dOCUMENT_ID)
        {
            Internal_Model_Load internal_Model_Load = new Internal_Model_Load();
            internal_Model_Load.LOAD_ID = lOAD_ID;
            internal_Model_Load.ISSUER_ID = iSSUER_ID;
            internal_Model_Load.ROOT_SOURCE = rOOT_SOURCE;
            internal_Model_Load.UserName = userName;
            internal_Model_Load.LOAD_TIME = lOAD_TIME;
            internal_Model_Load.DOCUMENT_ID = dOCUMENT_ID;
            return internal_Model_Load;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LOAD_ID
        {
            get
            {
                return _LOAD_ID;
            }
            set
            {
                OnLOAD_IDChanging(value);
                ReportPropertyChanging("LOAD_ID");
                _LOAD_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LOAD_ID");
                OnLOAD_IDChanged();
            }
        }
        private global::System.Int32 _LOAD_ID;
        partial void OnLOAD_IDChanging(global::System.Int32 value);
        partial void OnLOAD_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ISSUER_ID
        {
            get
            {
                return _ISSUER_ID;
            }
            set
            {
                OnISSUER_IDChanging(value);
                ReportPropertyChanging("ISSUER_ID");
                _ISSUER_ID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ISSUER_ID");
                OnISSUER_IDChanged();
            }
        }
        private global::System.String _ISSUER_ID;
        partial void OnISSUER_IDChanging(global::System.String value);
        partial void OnISSUER_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ROOT_SOURCE
        {
            get
            {
                return _ROOT_SOURCE;
            }
            set
            {
                OnROOT_SOURCEChanging(value);
                ReportPropertyChanging("ROOT_SOURCE");
                _ROOT_SOURCE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ROOT_SOURCE");
                OnROOT_SOURCEChanged();
            }
        }
        private global::System.String _ROOT_SOURCE;
        partial void OnROOT_SOURCEChanging(global::System.String value);
        partial void OnROOT_SOURCEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LOAD_TIME
        {
            get
            {
                return _LOAD_TIME;
            }
            set
            {
                OnLOAD_TIMEChanging(value);
                ReportPropertyChanging("LOAD_TIME");
                _LOAD_TIME = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LOAD_TIME");
                OnLOAD_TIMEChanged();
            }
        }
        private global::System.DateTime _LOAD_TIME;
        partial void OnLOAD_TIMEChanging(global::System.DateTime value);
        partial void OnLOAD_TIMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DOCUMENT_ID
        {
            get
            {
                return _DOCUMENT_ID;
            }
            set
            {
                OnDOCUMENT_IDChanging(value);
                ReportPropertyChanging("DOCUMENT_ID");
                _DOCUMENT_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DOCUMENT_ID");
                OnDOCUMENT_IDChanged();
            }
        }
        private global::System.Int64 _DOCUMENT_ID;
        partial void OnDOCUMENT_IDChanging(global::System.Int64 value);
        partial void OnDOCUMENT_IDChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ExternalResearchModel", Name="InvestmentContextData")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class InvestmentContextData : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String issuer_id
        {
            get
            {
                return _issuer_id;
            }
            set
            {
                Onissuer_idChanging(value);
                ReportPropertyChanging("issuer_id");
                _issuer_id = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("issuer_id");
                Onissuer_idChanged();
            }
        }
        private global::System.String _issuer_id;
        partial void Onissuer_idChanging(global::System.String value);
        partial void Onissuer_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String iso_country_code
        {
            get
            {
                return _iso_country_code;
            }
            set
            {
                Oniso_country_codeChanging(value);
                ReportPropertyChanging("iso_country_code");
                _iso_country_code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("iso_country_code");
                Oniso_country_codeChanged();
            }
        }
        private global::System.String _iso_country_code;
        partial void Oniso_country_codeChanging(global::System.String value);
        partial void Oniso_country_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String gics_sector
        {
            get
            {
                return _gics_sector;
            }
            set
            {
                Ongics_sectorChanging(value);
                ReportPropertyChanging("gics_sector");
                _gics_sector = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("gics_sector");
                Ongics_sectorChanged();
            }
        }
        private global::System.String _gics_sector;
        partial void Ongics_sectorChanging(global::System.String value);
        partial void Ongics_sectorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String gics_sector_name
        {
            get
            {
                return _gics_sector_name;
            }
            set
            {
                Ongics_sector_nameChanging(value);
                ReportPropertyChanging("gics_sector_name");
                _gics_sector_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("gics_sector_name");
                Ongics_sector_nameChanged();
            }
        }
        private global::System.String _gics_sector_name;
        partial void Ongics_sector_nameChanging(global::System.String value);
        partial void Ongics_sector_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String gics_industry
        {
            get
            {
                return _gics_industry;
            }
            set
            {
                Ongics_industryChanging(value);
                ReportPropertyChanging("gics_industry");
                _gics_industry = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("gics_industry");
                Ongics_industryChanged();
            }
        }
        private global::System.String _gics_industry;
        partial void Ongics_industryChanging(global::System.String value);
        partial void Ongics_industryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String gics_industry_name
        {
            get
            {
                return _gics_industry_name;
            }
            set
            {
                Ongics_industry_nameChanging(value);
                ReportPropertyChanging("gics_industry_name");
                _gics_industry_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("gics_industry_name");
                Ongics_industry_nameChanged();
            }
        }
        private global::System.String _gics_industry_name;
        partial void Ongics_industry_nameChanging(global::System.String value);
        partial void Ongics_industry_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String issuer_name
        {
            get
            {
                return _issuer_name;
            }
            set
            {
                Onissuer_nameChanging(value);
                ReportPropertyChanging("issuer_name");
                _issuer_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("issuer_name");
                Onissuer_nameChanged();
            }
        }
        private global::System.String _issuer_name;
        partial void Onissuer_nameChanging(global::System.String value);
        partial void Onissuer_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityId
        {
            get
            {
                return _SecurityId;
            }
            set
            {
                OnSecurityIdChanging(value);
                ReportPropertyChanging("SecurityId");
                _SecurityId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityId");
                OnSecurityIdChanged();
            }
        }
        private global::System.String _SecurityId;
        partial void OnSecurityIdChanging(global::System.String value);
        partial void OnSecurityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DataId
        {
            get
            {
                return _DataId;
            }
            set
            {
                OnDataIdChanging(value);
                ReportPropertyChanging("DataId");
                _DataId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DataId");
                OnDataIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DataId;
        partial void OnDataIdChanging(Nullable<global::System.Int32> value);
        partial void OnDataIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> value
        {
            get
            {
                return _value;
            }
            set
            {
                OnvalueChanging(value);
                ReportPropertyChanging("value");
                _value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("value");
                OnvalueChanged();
            }
        }
        private Nullable<global::System.Decimal> _value;
        partial void OnvalueChanging(Nullable<global::System.Decimal> value);
        partial void OnvalueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> period_year
        {
            get
            {
                return _period_year;
            }
            set
            {
                Onperiod_yearChanging(value);
                ReportPropertyChanging("period_year");
                _period_year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("period_year");
                Onperiod_yearChanged();
            }
        }
        private Nullable<global::System.Int32> _period_year;
        partial void Onperiod_yearChanging(Nullable<global::System.Int32> value);
        partial void Onperiod_yearChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ExternalResearchModel", Name="MacroEMData")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class MacroEMData : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MacroEMData object.
        /// </summary>
        /// <param name="countryCode">Initial value of the CountryCode property.</param>
        /// <param name="field">Initial value of the Field property.</param>
        /// <param name="year1">Initial value of the Year1 property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static MacroEMData CreateMacroEMData(global::System.String countryCode, global::System.String field, global::System.Int32 year1, global::System.Decimal value)
        {
            MacroEMData macroEMData = new MacroEMData();
            macroEMData.CountryCode = countryCode;
            macroEMData.Field = field;
            macroEMData.Year1 = year1;
            macroEMData.Value = value;
            return macroEMData;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CountryCode
        {
            get
            {
                return _CountryCode;
            }
            set
            {
                OnCountryCodeChanging(value);
                ReportPropertyChanging("CountryCode");
                _CountryCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CountryCode");
                OnCountryCodeChanged();
            }
        }
        private global::System.String _CountryCode;
        partial void OnCountryCodeChanging(global::System.String value);
        partial void OnCountryCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Field
        {
            get
            {
                return _Field;
            }
            set
            {
                OnFieldChanging(value);
                ReportPropertyChanging("Field");
                _Field = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Field");
                OnFieldChanged();
            }
        }
        private global::System.String _Field;
        partial void OnFieldChanging(global::System.String value);
        partial void OnFieldChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Year1
        {
            get
            {
                return _Year1;
            }
            set
            {
                OnYear1Changing(value);
                ReportPropertyChanging("Year1");
                _Year1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Year1");
                OnYear1Changed();
            }
        }
        private global::System.Int32 _Year1;
        partial void OnYear1Changing(global::System.Int32 value);
        partial void OnYear1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Decimal _Value;
        partial void OnValueChanging(global::System.Decimal value);
        partial void OnValueChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ExternalResearchModel", Name="ModelConsensusEstimatesData")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ModelConsensusEstimatesData : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ModelConsensusEstimatesData object.
        /// </summary>
        /// <param name="iSSUER_ID">Initial value of the ISSUER_ID property.</param>
        /// <param name="eSTIMATE_ID">Initial value of the ESTIMATE_ID property.</param>
        /// <param name="eSTIMATE_DESC">Initial value of the ESTIMATE_DESC property.</param>
        /// <param name="aMOUNT_TYPE">Initial value of the AMOUNT_TYPE property.</param>
        /// <param name="pERIOD_YEAR">Initial value of the PERIOD_YEAR property.</param>
        /// <param name="pERIOD_TYPE">Initial value of the PERIOD_TYPE property.</param>
        /// <param name="aMOUNT">Initial value of the AMOUNT property.</param>
        /// <param name="nUMBER_OF_ESTIMATES">Initial value of the NUMBER_OF_ESTIMATES property.</param>
        /// <param name="hIGH">Initial value of the HIGH property.</param>
        /// <param name="lOW">Initial value of the LOW property.</param>
        /// <param name="sTANDARD_DEVIATION">Initial value of the STANDARD_DEVIATION property.</param>
        /// <param name="sOURCE_CURRENCY">Initial value of the SOURCE_CURRENCY property.</param>
        /// <param name="dATA_SOURCE">Initial value of the DATA_SOURCE property.</param>
        /// <param name="dATA_SOURCE_DATE">Initial value of the DATA_SOURCE_DATE property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        public static ModelConsensusEstimatesData CreateModelConsensusEstimatesData(global::System.String iSSUER_ID, global::System.Int32 eSTIMATE_ID, global::System.String eSTIMATE_DESC, global::System.String aMOUNT_TYPE, global::System.Int32 pERIOD_YEAR, global::System.String pERIOD_TYPE, global::System.Decimal aMOUNT, global::System.Int32 nUMBER_OF_ESTIMATES, global::System.Decimal hIGH, global::System.Decimal lOW, global::System.Decimal sTANDARD_DEVIATION, global::System.String sOURCE_CURRENCY, global::System.String dATA_SOURCE, global::System.DateTime dATA_SOURCE_DATE, global::System.Int32 sortOrder)
        {
            ModelConsensusEstimatesData modelConsensusEstimatesData = new ModelConsensusEstimatesData();
            modelConsensusEstimatesData.ISSUER_ID = iSSUER_ID;
            modelConsensusEstimatesData.ESTIMATE_ID = eSTIMATE_ID;
            modelConsensusEstimatesData.ESTIMATE_DESC = eSTIMATE_DESC;
            modelConsensusEstimatesData.AMOUNT_TYPE = aMOUNT_TYPE;
            modelConsensusEstimatesData.PERIOD_YEAR = pERIOD_YEAR;
            modelConsensusEstimatesData.PERIOD_TYPE = pERIOD_TYPE;
            modelConsensusEstimatesData.AMOUNT = aMOUNT;
            modelConsensusEstimatesData.NUMBER_OF_ESTIMATES = nUMBER_OF_ESTIMATES;
            modelConsensusEstimatesData.HIGH = hIGH;
            modelConsensusEstimatesData.LOW = lOW;
            modelConsensusEstimatesData.STANDARD_DEVIATION = sTANDARD_DEVIATION;
            modelConsensusEstimatesData.SOURCE_CURRENCY = sOURCE_CURRENCY;
            modelConsensusEstimatesData.DATA_SOURCE = dATA_SOURCE;
            modelConsensusEstimatesData.DATA_SOURCE_DATE = dATA_SOURCE_DATE;
            modelConsensusEstimatesData.SortOrder = sortOrder;
            return modelConsensusEstimatesData;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ISSUER_ID
        {
            get
            {
                return _ISSUER_ID;
            }
            set
            {
                OnISSUER_IDChanging(value);
                ReportPropertyChanging("ISSUER_ID");
                _ISSUER_ID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ISSUER_ID");
                OnISSUER_IDChanged();
            }
        }
        private global::System.String _ISSUER_ID;
        partial void OnISSUER_IDChanging(global::System.String value);
        partial void OnISSUER_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ESTIMATE_ID
        {
            get
            {
                return _ESTIMATE_ID;
            }
            set
            {
                OnESTIMATE_IDChanging(value);
                ReportPropertyChanging("ESTIMATE_ID");
                _ESTIMATE_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ESTIMATE_ID");
                OnESTIMATE_IDChanged();
            }
        }
        private global::System.Int32 _ESTIMATE_ID;
        partial void OnESTIMATE_IDChanging(global::System.Int32 value);
        partial void OnESTIMATE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ESTIMATE_DESC
        {
            get
            {
                return _ESTIMATE_DESC;
            }
            set
            {
                OnESTIMATE_DESCChanging(value);
                ReportPropertyChanging("ESTIMATE_DESC");
                _ESTIMATE_DESC = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ESTIMATE_DESC");
                OnESTIMATE_DESCChanged();
            }
        }
        private global::System.String _ESTIMATE_DESC;
        partial void OnESTIMATE_DESCChanging(global::System.String value);
        partial void OnESTIMATE_DESCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Period
        {
            get
            {
                return _Period;
            }
            set
            {
                OnPeriodChanging(value);
                ReportPropertyChanging("Period");
                _Period = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Period");
                OnPeriodChanged();
            }
        }
        private global::System.String _Period;
        partial void OnPeriodChanging(global::System.String value);
        partial void OnPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AMOUNT_TYPE
        {
            get
            {
                return _AMOUNT_TYPE;
            }
            set
            {
                OnAMOUNT_TYPEChanging(value);
                ReportPropertyChanging("AMOUNT_TYPE");
                _AMOUNT_TYPE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AMOUNT_TYPE");
                OnAMOUNT_TYPEChanged();
            }
        }
        private global::System.String _AMOUNT_TYPE;
        partial void OnAMOUNT_TYPEChanging(global::System.String value);
        partial void OnAMOUNT_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PERIOD_YEAR
        {
            get
            {
                return _PERIOD_YEAR;
            }
            set
            {
                OnPERIOD_YEARChanging(value);
                ReportPropertyChanging("PERIOD_YEAR");
                _PERIOD_YEAR = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PERIOD_YEAR");
                OnPERIOD_YEARChanged();
            }
        }
        private global::System.Int32 _PERIOD_YEAR;
        partial void OnPERIOD_YEARChanging(global::System.Int32 value);
        partial void OnPERIOD_YEARChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PERIOD_TYPE
        {
            get
            {
                return _PERIOD_TYPE;
            }
            set
            {
                OnPERIOD_TYPEChanging(value);
                ReportPropertyChanging("PERIOD_TYPE");
                _PERIOD_TYPE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PERIOD_TYPE");
                OnPERIOD_TYPEChanged();
            }
        }
        private global::System.String _PERIOD_TYPE;
        partial void OnPERIOD_TYPEChanging(global::System.String value);
        partial void OnPERIOD_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal AMOUNT
        {
            get
            {
                return _AMOUNT;
            }
            set
            {
                OnAMOUNTChanging(value);
                ReportPropertyChanging("AMOUNT");
                _AMOUNT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AMOUNT");
                OnAMOUNTChanged();
            }
        }
        private global::System.Decimal _AMOUNT;
        partial void OnAMOUNTChanging(global::System.Decimal value);
        partial void OnAMOUNTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NUMBER_OF_ESTIMATES
        {
            get
            {
                return _NUMBER_OF_ESTIMATES;
            }
            set
            {
                OnNUMBER_OF_ESTIMATESChanging(value);
                ReportPropertyChanging("NUMBER_OF_ESTIMATES");
                _NUMBER_OF_ESTIMATES = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NUMBER_OF_ESTIMATES");
                OnNUMBER_OF_ESTIMATESChanged();
            }
        }
        private global::System.Int32 _NUMBER_OF_ESTIMATES;
        partial void OnNUMBER_OF_ESTIMATESChanging(global::System.Int32 value);
        partial void OnNUMBER_OF_ESTIMATESChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal HIGH
        {
            get
            {
                return _HIGH;
            }
            set
            {
                OnHIGHChanging(value);
                ReportPropertyChanging("HIGH");
                _HIGH = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HIGH");
                OnHIGHChanged();
            }
        }
        private global::System.Decimal _HIGH;
        partial void OnHIGHChanging(global::System.Decimal value);
        partial void OnHIGHChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal LOW
        {
            get
            {
                return _LOW;
            }
            set
            {
                OnLOWChanging(value);
                ReportPropertyChanging("LOW");
                _LOW = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LOW");
                OnLOWChanged();
            }
        }
        private global::System.Decimal _LOW;
        partial void OnLOWChanging(global::System.Decimal value);
        partial void OnLOWChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal STANDARD_DEVIATION
        {
            get
            {
                return _STANDARD_DEVIATION;
            }
            set
            {
                OnSTANDARD_DEVIATIONChanging(value);
                ReportPropertyChanging("STANDARD_DEVIATION");
                _STANDARD_DEVIATION = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("STANDARD_DEVIATION");
                OnSTANDARD_DEVIATIONChanged();
            }
        }
        private global::System.Decimal _STANDARD_DEVIATION;
        partial void OnSTANDARD_DEVIATIONChanging(global::System.Decimal value);
        partial void OnSTANDARD_DEVIATIONChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SOURCE_CURRENCY
        {
            get
            {
                return _SOURCE_CURRENCY;
            }
            set
            {
                OnSOURCE_CURRENCYChanging(value);
                ReportPropertyChanging("SOURCE_CURRENCY");
                _SOURCE_CURRENCY = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SOURCE_CURRENCY");
                OnSOURCE_CURRENCYChanged();
            }
        }
        private global::System.String _SOURCE_CURRENCY;
        partial void OnSOURCE_CURRENCYChanging(global::System.String value);
        partial void OnSOURCE_CURRENCYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DATA_SOURCE
        {
            get
            {
                return _DATA_SOURCE;
            }
            set
            {
                OnDATA_SOURCEChanging(value);
                ReportPropertyChanging("DATA_SOURCE");
                _DATA_SOURCE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DATA_SOURCE");
                OnDATA_SOURCEChanged();
            }
        }
        private global::System.String _DATA_SOURCE;
        partial void OnDATA_SOURCEChanging(global::System.String value);
        partial void OnDATA_SOURCEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DATA_SOURCE_DATE
        {
            get
            {
                return _DATA_SOURCE_DATE;
            }
            set
            {
                OnDATA_SOURCE_DATEChanging(value);
                ReportPropertyChanging("DATA_SOURCE_DATE");
                _DATA_SOURCE_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATA_SOURCE_DATE");
                OnDATA_SOURCE_DATEChanged();
            }
        }
        private global::System.DateTime _DATA_SOURCE_DATE;
        partial void OnDATA_SOURCE_DATEChanging(global::System.DateTime value);
        partial void OnDATA_SOURCE_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ExternalResearchModel", Name="NewICPresentationSecurityData")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class NewICPresentationSecurityData : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NewICPresentationSecurityData object.
        /// </summary>
        /// <param name="aMOUNT">Initial value of the AMOUNT property.</param>
        public static NewICPresentationSecurityData CreateNewICPresentationSecurityData(global::System.Decimal aMOUNT)
        {
            NewICPresentationSecurityData newICPresentationSecurityData = new NewICPresentationSecurityData();
            newICPresentationSecurityData.AMOUNT = aMOUNT;
            return newICPresentationSecurityData;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal AMOUNT
        {
            get
            {
                return _AMOUNT;
            }
            set
            {
                OnAMOUNTChanging(value);
                ReportPropertyChanging("AMOUNT");
                _AMOUNT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AMOUNT");
                OnAMOUNTChanged();
            }
        }
        private global::System.Decimal _AMOUNT;
        partial void OnAMOUNTChanging(global::System.Decimal value);
        partial void OnAMOUNTChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ExternalResearchModel", Name="PortfolioDetailsExternalData")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class PortfolioDetailsExternalData : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IssuerId
        {
            get
            {
                return _IssuerId;
            }
            set
            {
                OnIssuerIdChanging(value);
                ReportPropertyChanging("IssuerId");
                _IssuerId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IssuerId");
                OnIssuerIdChanged();
            }
        }
        private global::System.String _IssuerId;
        partial void OnIssuerIdChanging(global::System.String value);
        partial void OnIssuerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityId
        {
            get
            {
                return _SecurityId;
            }
            set
            {
                OnSecurityIdChanging(value);
                ReportPropertyChanging("SecurityId");
                _SecurityId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityId");
                OnSecurityIdChanged();
            }
        }
        private global::System.String _SecurityId;
        partial void OnSecurityIdChanging(global::System.String value);
        partial void OnSecurityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DataSource
        {
            get
            {
                return _DataSource;
            }
            set
            {
                OnDataSourceChanging(value);
                ReportPropertyChanging("DataSource");
                _DataSource = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DataSource");
                OnDataSourceChanged();
            }
        }
        private global::System.String _DataSource;
        partial void OnDataSourceChanging(global::System.String value);
        partial void OnDataSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PeriodType
        {
            get
            {
                return _PeriodType;
            }
            set
            {
                OnPeriodTypeChanging(value);
                ReportPropertyChanging("PeriodType");
                _PeriodType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PeriodType");
                OnPeriodTypeChanged();
            }
        }
        private global::System.String _PeriodType;
        partial void OnPeriodTypeChanging(global::System.String value);
        partial void OnPeriodTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Currency
        {
            get
            {
                return _Currency;
            }
            set
            {
                OnCurrencyChanging(value);
                ReportPropertyChanging("Currency");
                _Currency = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Currency");
                OnCurrencyChanged();
            }
        }
        private global::System.String _Currency;
        partial void OnCurrencyChanging(global::System.String value);
        partial void OnCurrencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DataId
        {
            get
            {
                return _DataId;
            }
            set
            {
                OnDataIdChanging(value);
                ReportPropertyChanging("DataId");
                _DataId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DataId");
                OnDataIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DataId;
        partial void OnDataIdChanging(Nullable<global::System.Int32> value);
        partial void OnDataIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _Amount;
        partial void OnAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PeriodYear
        {
            get
            {
                return _PeriodYear;
            }
            set
            {
                OnPeriodYearChanging(value);
                ReportPropertyChanging("PeriodYear");
                _PeriodYear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PeriodYear");
                OnPeriodYearChanged();
            }
        }
        private Nullable<global::System.Int32> _PeriodYear;
        partial void OnPeriodYearChanging(Nullable<global::System.Int32> value);
        partial void OnPeriodYearChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ExternalResearchModel", Name="QuarterlyResults")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class QuarterlyResults : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ISSUER_ID
        {
            get
            {
                return _ISSUER_ID;
            }
            set
            {
                OnISSUER_IDChanging(value);
                ReportPropertyChanging("ISSUER_ID");
                _ISSUER_ID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ISSUER_ID");
                OnISSUER_IDChanged();
            }
        }
        private global::System.String _ISSUER_ID;
        partial void OnISSUER_IDChanging(global::System.String value);
        partial void OnISSUER_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IssuerName
        {
            get
            {
                return _IssuerName;
            }
            set
            {
                OnIssuerNameChanging(value);
                ReportPropertyChanging("IssuerName");
                _IssuerName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IssuerName");
                OnIssuerNameChanged();
            }
        }
        private global::System.String _IssuerName;
        partial void OnIssuerNameChanging(global::System.String value);
        partial void OnIssuerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Region
        {
            get
            {
                return _Region;
            }
            set
            {
                OnRegionChanging(value);
                ReportPropertyChanging("Region");
                _Region = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Region");
                OnRegionChanged();
            }
        }
        private global::System.String _Region;
        partial void OnRegionChanging(global::System.String value);
        partial void OnRegionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Sector
        {
            get
            {
                return _Sector;
            }
            set
            {
                OnSectorChanging(value);
                ReportPropertyChanging("Sector");
                _Sector = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Sector");
                OnSectorChanged();
            }
        }
        private global::System.String _Sector;
        partial void OnSectorChanging(global::System.String value);
        partial void OnSectorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Industry
        {
            get
            {
                return _Industry;
            }
            set
            {
                OnIndustryChanging(value);
                ReportPropertyChanging("Industry");
                _Industry = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Industry");
                OnIndustryChanged();
            }
        }
        private global::System.String _Industry;
        partial void OnIndustryChanging(global::System.String value);
        partial void OnIndustryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Currency
        {
            get
            {
                return _Currency;
            }
            set
            {
                OnCurrencyChanging(value);
                ReportPropertyChanging("Currency");
                _Currency = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Currency");
                OnCurrencyChanged();
            }
        }
        private global::System.String _Currency;
        partial void OnCurrencyChanging(global::System.String value);
        partial void OnCurrencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdate
        {
            get
            {
                return _LastUpdate;
            }
            set
            {
                OnLastUpdateChanging(value);
                ReportPropertyChanging("LastUpdate");
                _LastUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdate");
                OnLastUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdate;
        partial void OnLastUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Q1
        {
            get
            {
                return _Q1;
            }
            set
            {
                OnQ1Changing(value);
                ReportPropertyChanging("Q1");
                _Q1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Q1");
                OnQ1Changed();
            }
        }
        private Nullable<global::System.Decimal> _Q1;
        partial void OnQ1Changing(Nullable<global::System.Decimal> value);
        partial void OnQ1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Q2
        {
            get
            {
                return _Q2;
            }
            set
            {
                OnQ2Changing(value);
                ReportPropertyChanging("Q2");
                _Q2 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Q2");
                OnQ2Changed();
            }
        }
        private Nullable<global::System.Decimal> _Q2;
        partial void OnQ2Changing(Nullable<global::System.Decimal> value);
        partial void OnQ2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Q3
        {
            get
            {
                return _Q3;
            }
            set
            {
                OnQ3Changing(value);
                ReportPropertyChanging("Q3");
                _Q3 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Q3");
                OnQ3Changed();
            }
        }
        private Nullable<global::System.Decimal> _Q3;
        partial void OnQ3Changing(Nullable<global::System.Decimal> value);
        partial void OnQ3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Q4
        {
            get
            {
                return _Q4;
            }
            set
            {
                OnQ4Changing(value);
                ReportPropertyChanging("Q4");
                _Q4 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Q4");
                OnQ4Changed();
            }
        }
        private Nullable<global::System.Decimal> _Q4;
        partial void OnQ4Changing(Nullable<global::System.Decimal> value);
        partial void OnQ4Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Annual
        {
            get
            {
                return _Annual;
            }
            set
            {
                OnAnnualChanging(value);
                ReportPropertyChanging("Annual");
                _Annual = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Annual");
                OnAnnualChanged();
            }
        }
        private Nullable<global::System.Decimal> _Annual;
        partial void OnAnnualChanging(Nullable<global::System.Decimal> value);
        partial void OnAnnualChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> QuarterlySum
        {
            get
            {
                return _QuarterlySum;
            }
            set
            {
                OnQuarterlySumChanging(value);
                ReportPropertyChanging("QuarterlySum");
                _QuarterlySum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QuarterlySum");
                OnQuarterlySumChanged();
            }
        }
        private Nullable<global::System.DateTime> _QuarterlySum;
        partial void OnQuarterlySumChanging(Nullable<global::System.DateTime> value);
        partial void OnQuarterlySumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> QuarterlySumPercentage
        {
            get
            {
                return _QuarterlySumPercentage;
            }
            set
            {
                OnQuarterlySumPercentageChanging(value);
                ReportPropertyChanging("QuarterlySumPercentage");
                _QuarterlySumPercentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QuarterlySumPercentage");
                OnQuarterlySumPercentageChanged();
            }
        }
        private Nullable<global::System.Decimal> _QuarterlySumPercentage;
        partial void OnQuarterlySumPercentageChanging(Nullable<global::System.Decimal> value);
        partial void OnQuarterlySumPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Consensus
        {
            get
            {
                return _Consensus;
            }
            set
            {
                OnConsensusChanging(value);
                ReportPropertyChanging("Consensus");
                _Consensus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Consensus");
                OnConsensusChanged();
            }
        }
        private Nullable<global::System.Decimal> _Consensus;
        partial void OnConsensusChanging(Nullable<global::System.Decimal> value);
        partial void OnConsensusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ConsensusPercentage
        {
            get
            {
                return _ConsensusPercentage;
            }
            set
            {
                OnConsensusPercentageChanging(value);
                ReportPropertyChanging("ConsensusPercentage");
                _ConsensusPercentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ConsensusPercentage");
                OnConsensusPercentageChanged();
            }
        }
        private Nullable<global::System.Decimal> _ConsensusPercentage;
        partial void OnConsensusPercentageChanging(Nullable<global::System.Decimal> value);
        partial void OnConsensusPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> High
        {
            get
            {
                return _High;
            }
            set
            {
                OnHighChanging(value);
                ReportPropertyChanging("High");
                _High = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("High");
                OnHighChanged();
            }
        }
        private Nullable<global::System.Decimal> _High;
        partial void OnHighChanging(Nullable<global::System.Decimal> value);
        partial void OnHighChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Low
        {
            get
            {
                return _Low;
            }
            set
            {
                OnLowChanging(value);
                ReportPropertyChanging("Low");
                _Low = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Low");
                OnLowChanged();
            }
        }
        private Nullable<global::System.Decimal> _Low;
        partial void OnLowChanging(Nullable<global::System.Decimal> value);
        partial void OnLowChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Brokers
        {
            get
            {
                return _Brokers;
            }
            set
            {
                OnBrokersChanging(value);
                ReportPropertyChanging("Brokers");
                _Brokers = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Brokers");
                OnBrokersChanged();
            }
        }
        private Nullable<global::System.Int32> _Brokers;
        partial void OnBrokersChanging(Nullable<global::System.Int32> value);
        partial void OnBrokersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EstimateId
        {
            get
            {
                return _EstimateId;
            }
            set
            {
                OnEstimateIdChanging(value);
                ReportPropertyChanging("EstimateId");
                _EstimateId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstimateId");
                OnEstimateIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EstimateId;
        partial void OnEstimateIdChanging(Nullable<global::System.Int32> value);
        partial void OnEstimateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ConsensusUpdate
        {
            get
            {
                return _ConsensusUpdate;
            }
            set
            {
                OnConsensusUpdateChanging(value);
                ReportPropertyChanging("ConsensusUpdate");
                _ConsensusUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ConsensusUpdate");
                OnConsensusUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ConsensusUpdate;
        partial void OnConsensusUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnConsensusUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> XREF
        {
            get
            {
                return _XREF;
            }
            set
            {
                OnXREFChanging(value);
                ReportPropertyChanging("XREF");
                _XREF = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("XREF");
                OnXREFChanged();
            }
        }
        private Nullable<global::System.Double> _XREF;
        partial void OnXREFChanging(Nullable<global::System.Double> value);
        partial void OnXREFChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ExternalResearchModel", Name="RatioComparisonData")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class RatioComparisonData : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SECURITY_ID
        {
            get
            {
                return _SECURITY_ID;
            }
            set
            {
                OnSECURITY_IDChanging(value);
                ReportPropertyChanging("SECURITY_ID");
                _SECURITY_ID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SECURITY_ID");
                OnSECURITY_IDChanged();
            }
        }
        private global::System.String _SECURITY_ID;
        partial void OnSECURITY_IDChanging(global::System.String value);
        partial void OnSECURITY_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ISSUER_ID
        {
            get
            {
                return _ISSUER_ID;
            }
            set
            {
                OnISSUER_IDChanging(value);
                ReportPropertyChanging("ISSUER_ID");
                _ISSUER_ID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ISSUER_ID");
                OnISSUER_IDChanged();
            }
        }
        private global::System.String _ISSUER_ID;
        partial void OnISSUER_IDChanging(global::System.String value);
        partial void OnISSUER_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ISSUE_NAME
        {
            get
            {
                return _ISSUE_NAME;
            }
            set
            {
                OnISSUE_NAMEChanging(value);
                ReportPropertyChanging("ISSUE_NAME");
                _ISSUE_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ISSUE_NAME");
                OnISSUE_NAMEChanged();
            }
        }
        private global::System.String _ISSUE_NAME;
        partial void OnISSUE_NAMEChanging(global::System.String value);
        partial void OnISSUE_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> FINANCIAL
        {
            get
            {
                return _FINANCIAL;
            }
            set
            {
                OnFINANCIALChanging(value);
                ReportPropertyChanging("FINANCIAL");
                _FINANCIAL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FINANCIAL");
                OnFINANCIALChanged();
            }
        }
        private Nullable<global::System.Decimal> _FINANCIAL;
        partial void OnFINANCIALChanging(Nullable<global::System.Decimal> value);
        partial void OnFINANCIALChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> VALUATION
        {
            get
            {
                return _VALUATION;
            }
            set
            {
                OnVALUATIONChanging(value);
                ReportPropertyChanging("VALUATION");
                _VALUATION = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VALUATION");
                OnVALUATIONChanged();
            }
        }
        private Nullable<global::System.Decimal> _VALUATION;
        partial void OnVALUATIONChanging(Nullable<global::System.Decimal> value);
        partial void OnVALUATIONChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ExternalResearchModel", Name="TrackedCOA")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class TrackedCOA : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TrackedCOA object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="cOA">Initial value of the COA property.</param>
        public static TrackedCOA CreateTrackedCOA(global::System.Int32 id, global::System.String cOA)
        {
            TrackedCOA trackedCOA = new TrackedCOA();
            trackedCOA.Id = id;
            trackedCOA.COA = cOA;
            return trackedCOA;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                OnIdChanging(value);
                ReportPropertyChanging("Id");
                _Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id");
                OnIdChanged();
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String COA
        {
            get
            {
                return _COA;
            }
            set
            {
                OnCOAChanging(value);
                ReportPropertyChanging("COA");
                _COA = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("COA");
                OnCOAChanged();
            }
        }
        private global::System.String _COA;
        partial void OnCOAChanging(global::System.String value);
        partial void OnCOAChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ExternalResearchModel", Name="ValuationQualityGrowthData")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ValuationQualityGrowthData : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ValuationQualityGrowthData object.
        /// </summary>
        /// <param name="issuerId">Initial value of the IssuerId property.</param>
        /// <param name="securityId">Initial value of the SecurityId property.</param>
        /// <param name="dataSource">Initial value of the DataSource property.</param>
        /// <param name="periodType">Initial value of the PeriodType property.</param>
        /// <param name="currency">Initial value of the Currency property.</param>
        /// <param name="dataId">Initial value of the DataId property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="amountType">Initial value of the AmountType property.</param>
        public static ValuationQualityGrowthData CreateValuationQualityGrowthData(global::System.String issuerId, global::System.String securityId, global::System.String dataSource, global::System.String periodType, global::System.String currency, global::System.Int32 dataId, global::System.Decimal amount, global::System.String amountType)
        {
            ValuationQualityGrowthData valuationQualityGrowthData = new ValuationQualityGrowthData();
            valuationQualityGrowthData.IssuerId = issuerId;
            valuationQualityGrowthData.SecurityId = securityId;
            valuationQualityGrowthData.DataSource = dataSource;
            valuationQualityGrowthData.PeriodType = periodType;
            valuationQualityGrowthData.Currency = currency;
            valuationQualityGrowthData.DataId = dataId;
            valuationQualityGrowthData.Amount = amount;
            valuationQualityGrowthData.AmountType = amountType;
            return valuationQualityGrowthData;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IssuerId
        {
            get
            {
                return _IssuerId;
            }
            set
            {
                OnIssuerIdChanging(value);
                ReportPropertyChanging("IssuerId");
                _IssuerId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IssuerId");
                OnIssuerIdChanged();
            }
        }
        private global::System.String _IssuerId;
        partial void OnIssuerIdChanging(global::System.String value);
        partial void OnIssuerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SecurityId
        {
            get
            {
                return _SecurityId;
            }
            set
            {
                OnSecurityIdChanging(value);
                ReportPropertyChanging("SecurityId");
                _SecurityId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SecurityId");
                OnSecurityIdChanged();
            }
        }
        private global::System.String _SecurityId;
        partial void OnSecurityIdChanging(global::System.String value);
        partial void OnSecurityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DataSource
        {
            get
            {
                return _DataSource;
            }
            set
            {
                OnDataSourceChanging(value);
                ReportPropertyChanging("DataSource");
                _DataSource = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DataSource");
                OnDataSourceChanged();
            }
        }
        private global::System.String _DataSource;
        partial void OnDataSourceChanging(global::System.String value);
        partial void OnDataSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PeriodType
        {
            get
            {
                return _PeriodType;
            }
            set
            {
                OnPeriodTypeChanging(value);
                ReportPropertyChanging("PeriodType");
                _PeriodType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PeriodType");
                OnPeriodTypeChanged();
            }
        }
        private global::System.String _PeriodType;
        partial void OnPeriodTypeChanging(global::System.String value);
        partial void OnPeriodTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Currency
        {
            get
            {
                return _Currency;
            }
            set
            {
                OnCurrencyChanging(value);
                ReportPropertyChanging("Currency");
                _Currency = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Currency");
                OnCurrencyChanged();
            }
        }
        private global::System.String _Currency;
        partial void OnCurrencyChanging(global::System.String value);
        partial void OnCurrencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DataId
        {
            get
            {
                return _DataId;
            }
            set
            {
                OnDataIdChanging(value);
                ReportPropertyChanging("DataId");
                _DataId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DataId");
                OnDataIdChanged();
            }
        }
        private global::System.Int32 _DataId;
        partial void OnDataIdChanging(global::System.Int32 value);
        partial void OnDataIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AmountType
        {
            get
            {
                return _AmountType;
            }
            set
            {
                OnAmountTypeChanging(value);
                ReportPropertyChanging("AmountType");
                _AmountType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AmountType");
                OnAmountTypeChanged();
            }
        }
        private global::System.String _AmountType;
        partial void OnAmountTypeChanging(global::System.String value);
        partial void OnAmountTypeChanged();

        #endregion

    }

    #endregion

    
}
