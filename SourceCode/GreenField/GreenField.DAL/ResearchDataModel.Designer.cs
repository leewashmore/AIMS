//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ResearchModel", "FK_tblMarketSnapshotGroupPreference_tblMarketSnapshotPreference", "tblMarketSnapshotPreference", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GreenField.DAL.tblMarketSnapshotPreference), "tblMarketSnapshotGroupPreference", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GreenField.DAL.tblMarketSnapshotGroupPreference), true)]
[assembly: EdmRelationshipAttribute("ResearchModel", "FK_tblMarketSnapshotEntityPreference_tblMarketSnapshotGroupPreference", "tblMarketSnapshotGroupPreference", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GreenField.DAL.tblMarketSnapshotGroupPreference), "tblMarketSnapshotEntityPreference", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GreenField.DAL.tblMarketSnapshotEntityPreference), true)]

#endregion

namespace GreenField.DAL
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ResearchEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ResearchEntities object using the connection string found in the 'ResearchEntities' section of the application configuration file.
        /// </summary>
        public ResearchEntities() : base("name=ResearchEntities", "ResearchEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ResearchEntities object.
        /// </summary>
        public ResearchEntities(string connectionString) : base(connectionString, "ResearchEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ResearchEntities object.
        /// </summary>
        public ResearchEntities(EntityConnection connection) : base(connection, "ResearchEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserDashboardPreferance> UserDashboardPreferances
        {
            get
            {
                if ((_UserDashboardPreferances == null))
                {
                    _UserDashboardPreferances = base.CreateObjectSet<UserDashboardPreferance>("UserDashboardPreferances");
                }
                return _UserDashboardPreferances;
            }
        }
        private ObjectSet<UserDashboardPreferance> _UserDashboardPreferances;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<tblDashboardPreference> tblDashboardPreferences
        {
            get
            {
                if ((_tblDashboardPreferences == null))
                {
                    _tblDashboardPreferences = base.CreateObjectSet<tblDashboardPreference>("tblDashboardPreferences");
                }
                return _tblDashboardPreferences;
            }
        }
        private ObjectSet<tblDashboardPreference> _tblDashboardPreferences;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<tblMarketSnapshotGroupPreference> tblMarketSnapshotGroupPreferences
        {
            get
            {
                if ((_tblMarketSnapshotGroupPreferences == null))
                {
                    _tblMarketSnapshotGroupPreferences = base.CreateObjectSet<tblMarketSnapshotGroupPreference>("tblMarketSnapshotGroupPreferences");
                }
                return _tblMarketSnapshotGroupPreferences;
            }
        }
        private ObjectSet<tblMarketSnapshotGroupPreference> _tblMarketSnapshotGroupPreferences;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<tblMarketSnapshotPreference> tblMarketSnapshotPreferences
        {
            get
            {
                if ((_tblMarketSnapshotPreferences == null))
                {
                    _tblMarketSnapshotPreferences = base.CreateObjectSet<tblMarketSnapshotPreference>("tblMarketSnapshotPreferences");
                }
                return _tblMarketSnapshotPreferences;
            }
        }
        private ObjectSet<tblMarketSnapshotPreference> _tblMarketSnapshotPreferences;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Country_Master> Country_Master
        {
            get
            {
                if ((_Country_Master == null))
                {
                    _Country_Master = base.CreateObjectSet<Country_Master>("Country_Master");
                }
                return _Country_Master;
            }
        }
        private ObjectSet<Country_Master> _Country_Master;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<COMMODITY_FORECASTS> COMMODITY_FORECASTS
        {
            get
            {
                if ((_COMMODITY_FORECASTS == null))
                {
                    _COMMODITY_FORECASTS = base.CreateObjectSet<COMMODITY_FORECASTS>("COMMODITY_FORECASTS");
                }
                return _COMMODITY_FORECASTS;
            }
        }
        private ObjectSet<COMMODITY_FORECASTS> _COMMODITY_FORECASTS;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<tblMarketSnapshotEntityPreference> tblMarketSnapshotEntityPreference
        {
            get
            {
                if ((_tblMarketSnapshotEntityPreference == null))
                {
                    _tblMarketSnapshotEntityPreference = base.CreateObjectSet<tblMarketSnapshotEntityPreference>("tblMarketSnapshotEntityPreference");
                }
                return _tblMarketSnapshotEntityPreference;
            }
        }
        private ObjectSet<tblMarketSnapshotEntityPreference> _tblMarketSnapshotEntityPreference;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserDashboardPreferances EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserDashboardPreferances(UserDashboardPreferance userDashboardPreferance)
        {
            base.AddObject("UserDashboardPreferances", userDashboardPreferance);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the tblDashboardPreferences EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTotblDashboardPreferences(tblDashboardPreference tblDashboardPreference)
        {
            base.AddObject("tblDashboardPreferences", tblDashboardPreference);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the tblMarketSnapshotGroupPreferences EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTotblMarketSnapshotGroupPreferences(tblMarketSnapshotGroupPreference tblMarketSnapshotGroupPreference)
        {
            base.AddObject("tblMarketSnapshotGroupPreferences", tblMarketSnapshotGroupPreference);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the tblMarketSnapshotPreferences EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTotblMarketSnapshotPreferences(tblMarketSnapshotPreference tblMarketSnapshotPreference)
        {
            base.AddObject("tblMarketSnapshotPreferences", tblMarketSnapshotPreference);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Country_Master EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountry_Master(Country_Master country_Master)
        {
            base.AddObject("Country_Master", country_Master);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the COMMODITY_FORECASTS EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCOMMODITY_FORECASTS(COMMODITY_FORECASTS cOMMODITY_FORECASTS)
        {
            base.AddObject("COMMODITY_FORECASTS", cOMMODITY_FORECASTS);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the tblMarketSnapshotEntityPreference EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTotblMarketSnapshotEntityPreference(tblMarketSnapshotEntityPreference tblMarketSnapshotEntityPreference)
        {
            base.AddObject("tblMarketSnapshotEntityPreference", tblMarketSnapshotEntityPreference);
        }

        #endregion
        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="xref">No Metadata Documentation available.</param>
        /// <param name="name">No Metadata Documentation available.</param>
        /// <param name="periodType">No Metadata Documentation available.</param>
        public ObjectResult<ConsensusEstimates_Result> ConsensusEstimates(global::System.String xref, global::System.String name, global::System.String periodType)
        {
            ObjectParameter xrefParameter;
            if (xref != null)
            {
                xrefParameter = new ObjectParameter("Xref", xref);
            }
            else
            {
                xrefParameter = new ObjectParameter("Xref", typeof(global::System.String));
            }
    
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("Name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("Name", typeof(global::System.String));
            }
    
            ObjectParameter periodTypeParameter;
            if (periodType != null)
            {
                periodTypeParameter = new ObjectParameter("PeriodType", periodType);
            }
            else
            {
                periodTypeParameter = new ObjectParameter("PeriodType", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<ConsensusEstimates_Result>("ConsensusEstimates", xrefParameter, nameParameter, periodTypeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="xref">No Metadata Documentation available.</param>
        /// <param name="name">No Metadata Documentation available.</param>
        /// <param name="periodType">No Metadata Documentation available.</param>
        /// <param name="estimateType">No Metadata Documentation available.</param>
        public ObjectResult<DetailedEstimates_Result> DetailedEstimates(global::System.String xref, global::System.String name, global::System.String periodType, global::System.String estimateType)
        {
            ObjectParameter xrefParameter;
            if (xref != null)
            {
                xrefParameter = new ObjectParameter("Xref", xref);
            }
            else
            {
                xrefParameter = new ObjectParameter("Xref", typeof(global::System.String));
            }
    
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("Name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("Name", typeof(global::System.String));
            }
    
            ObjectParameter periodTypeParameter;
            if (periodType != null)
            {
                periodTypeParameter = new ObjectParameter("PeriodType", periodType);
            }
            else
            {
                periodTypeParameter = new ObjectParameter("PeriodType", typeof(global::System.String));
            }
    
            ObjectParameter estimateTypeParameter;
            if (estimateType != null)
            {
                estimateTypeParameter = new ObjectParameter("EstimateType", estimateType);
            }
            else
            {
                estimateTypeParameter = new ObjectParameter("EstimateType", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<DetailedEstimates_Result>("DetailedEstimates", xrefParameter, nameParameter, periodTypeParameter, estimateTypeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="country">No Metadata Documentation available.</param>
        /// <param name="currency">No Metadata Documentation available.</param>
        public ObjectResult<GetCompanies_Result> GetCompanies(global::System.String country, global::System.String currency)
        {
            ObjectParameter countryParameter;
            if (country != null)
            {
                countryParameter = new ObjectParameter("Country", country);
            }
            else
            {
                countryParameter = new ObjectParameter("Country", typeof(global::System.String));
            }
    
            ObjectParameter currencyParameter;
            if (currency != null)
            {
                currencyParameter = new ObjectParameter("Currency", currency);
            }
            else
            {
                currencyParameter = new ObjectParameter("Currency", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<GetCompanies_Result>("GetCompanies", countryParameter, currencyParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="sEC_SECSHORT_List">No Metadata Documentation available.</param>
        public ObjectResult<A_PROC_Result> A_PROC(global::System.String sEC_SECSHORT_List)
        {
            ObjectParameter sEC_SECSHORT_ListParameter;
            if (sEC_SECSHORT_List != null)
            {
                sEC_SECSHORT_ListParameter = new ObjectParameter("SEC_SECSHORT_List", sEC_SECSHORT_List);
            }
            else
            {
                sEC_SECSHORT_ListParameter = new ObjectParameter("SEC_SECSHORT_List", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<A_PROC_Result>("A_PROC", sEC_SECSHORT_ListParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userId">No Metadata Documentation available.</param>
        /// <param name="storedValue">No Metadata Documentation available.</param>
        public int StoreDashboardInfo(global::System.String userId, global::System.String storedValue)
        {
            ObjectParameter userIdParameter;
            if (userId != null)
            {
                userIdParameter = new ObjectParameter("UserId", userId);
            }
            else
            {
                userIdParameter = new ObjectParameter("UserId", typeof(global::System.String));
            }
    
            ObjectParameter storedValueParameter;
            if (storedValue != null)
            {
                storedValueParameter = new ObjectParameter("StoredValue", storedValue);
            }
            else
            {
                storedValueParameter = new ObjectParameter("StoredValue", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("StoreDashboardInfo", userIdParameter, storedValueParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userName">No Metadata Documentation available.</param>
        public ObjectResult<tblDashboardPreference> GetDashBoardPreferenceByUserName(global::System.String userName)
        {
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<tblDashboardPreference>("GetDashBoardPreferenceByUserName", userNameParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="userName">No Metadata Documentation available.</param>
        public ObjectResult<tblDashboardPreference> GetDashBoardPreferenceByUserName(global::System.String userName, MergeOption mergeOption)
        {
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<tblDashboardPreference>("GetDashBoardPreferenceByUserName", mergeOption, userNameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="gadgetViewClassName">No Metadata Documentation available.</param>
        /// <param name="gadgetViewModelClassName">No Metadata Documentation available.</param>
        /// <param name="gadgetName">No Metadata Documentation available.</param>
        /// <param name="gadgetState">No Metadata Documentation available.</param>
        /// <param name="preferenceGroupID">No Metadata Documentation available.</param>
        /// <param name="gadgetPosition">No Metadata Documentation available.</param>
        public int SetDashBoardPreference(global::System.String userName, global::System.String gadgetViewClassName, global::System.String gadgetViewModelClassName, global::System.String gadgetName, global::System.String gadgetState, global::System.String preferenceGroupID, Nullable<global::System.Int32> gadgetPosition)
        {
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter gadgetViewClassNameParameter;
            if (gadgetViewClassName != null)
            {
                gadgetViewClassNameParameter = new ObjectParameter("GadgetViewClassName", gadgetViewClassName);
            }
            else
            {
                gadgetViewClassNameParameter = new ObjectParameter("GadgetViewClassName", typeof(global::System.String));
            }
    
            ObjectParameter gadgetViewModelClassNameParameter;
            if (gadgetViewModelClassName != null)
            {
                gadgetViewModelClassNameParameter = new ObjectParameter("GadgetViewModelClassName", gadgetViewModelClassName);
            }
            else
            {
                gadgetViewModelClassNameParameter = new ObjectParameter("GadgetViewModelClassName", typeof(global::System.String));
            }
    
            ObjectParameter gadgetNameParameter;
            if (gadgetName != null)
            {
                gadgetNameParameter = new ObjectParameter("GadgetName", gadgetName);
            }
            else
            {
                gadgetNameParameter = new ObjectParameter("GadgetName", typeof(global::System.String));
            }
    
            ObjectParameter gadgetStateParameter;
            if (gadgetState != null)
            {
                gadgetStateParameter = new ObjectParameter("GadgetState", gadgetState);
            }
            else
            {
                gadgetStateParameter = new ObjectParameter("GadgetState", typeof(global::System.String));
            }
    
            ObjectParameter preferenceGroupIDParameter;
            if (preferenceGroupID != null)
            {
                preferenceGroupIDParameter = new ObjectParameter("PreferenceGroupID", preferenceGroupID);
            }
            else
            {
                preferenceGroupIDParameter = new ObjectParameter("PreferenceGroupID", typeof(global::System.String));
            }
    
            ObjectParameter gadgetPositionParameter;
            if (gadgetPosition.HasValue)
            {
                gadgetPositionParameter = new ObjectParameter("GadgetPosition", gadgetPosition);
            }
            else
            {
                gadgetPositionParameter = new ObjectParameter("GadgetPosition", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("SetDashBoardPreference", userNameParameter, gadgetViewClassNameParameter, gadgetViewModelClassNameParameter, gadgetNameParameter, gadgetStateParameter, preferenceGroupIDParameter, gadgetPositionParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="entitypreferenceid">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> DeleteMarketSnapshotEntityPreference(Nullable<global::System.Int32> entitypreferenceid)
        {
            ObjectParameter entitypreferenceidParameter;
            if (entitypreferenceid.HasValue)
            {
                entitypreferenceidParameter = new ObjectParameter("entitypreferenceid", entitypreferenceid);
            }
            else
            {
                entitypreferenceidParameter = new ObjectParameter("entitypreferenceid", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("DeleteMarketSnapshotEntityPreference", entitypreferenceidParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="grouppreferenceid">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> DeleteMarketSnapshotGroupPreference(Nullable<global::System.Int32> grouppreferenceid)
        {
            ObjectParameter grouppreferenceidParameter;
            if (grouppreferenceid.HasValue)
            {
                grouppreferenceidParameter = new ObjectParameter("grouppreferenceid", grouppreferenceid);
            }
            else
            {
                grouppreferenceidParameter = new ObjectParameter("grouppreferenceid", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("DeleteMarketSnapshotGroupPreference", grouppreferenceidParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userId">No Metadata Documentation available.</param>
        /// <param name="snapshotname">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> DeleteMarketSnapshotPreference(global::System.String userId, global::System.String snapshotname)
        {
            ObjectParameter userIdParameter;
            if (userId != null)
            {
                userIdParameter = new ObjectParameter("userId", userId);
            }
            else
            {
                userIdParameter = new ObjectParameter("userId", typeof(global::System.String));
            }
    
            ObjectParameter snapshotnameParameter;
            if (snapshotname != null)
            {
                snapshotnameParameter = new ObjectParameter("snapshotname", snapshotname);
            }
            else
            {
                snapshotnameParameter = new ObjectParameter("snapshotname", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("DeleteMarketSnapshotPreference", userIdParameter, snapshotnameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="grouppreferenceid">No Metadata Documentation available.</param>
        /// <param name="entitypreferenceid">No Metadata Documentation available.</param>
        /// <param name="entityOrder">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> UpdateMarketSnapshotEntityPreference(Nullable<global::System.Int32> grouppreferenceid, Nullable<global::System.Int32> entitypreferenceid, Nullable<global::System.Int32> entityOrder)
        {
            ObjectParameter grouppreferenceidParameter;
            if (grouppreferenceid.HasValue)
            {
                grouppreferenceidParameter = new ObjectParameter("grouppreferenceid", grouppreferenceid);
            }
            else
            {
                grouppreferenceidParameter = new ObjectParameter("grouppreferenceid", typeof(global::System.Int32));
            }
    
            ObjectParameter entitypreferenceidParameter;
            if (entitypreferenceid.HasValue)
            {
                entitypreferenceidParameter = new ObjectParameter("entitypreferenceid", entitypreferenceid);
            }
            else
            {
                entitypreferenceidParameter = new ObjectParameter("entitypreferenceid", typeof(global::System.Int32));
            }
    
            ObjectParameter entityOrderParameter;
            if (entityOrder.HasValue)
            {
                entityOrderParameter = new ObjectParameter("entityOrder", entityOrder);
            }
            else
            {
                entityOrderParameter = new ObjectParameter("entityOrder", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("UpdateMarketSnapshotEntityPreference", grouppreferenceidParameter, entitypreferenceidParameter, entityOrderParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userId">No Metadata Documentation available.</param>
        /// <param name="snapshotname">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Decimal>> SetMarketSnapshotPreference(global::System.String userId, global::System.String snapshotname)
        {
            ObjectParameter userIdParameter;
            if (userId != null)
            {
                userIdParameter = new ObjectParameter("userId", userId);
            }
            else
            {
                userIdParameter = new ObjectParameter("userId", typeof(global::System.String));
            }
    
            ObjectParameter snapshotnameParameter;
            if (snapshotname != null)
            {
                snapshotnameParameter = new ObjectParameter("snapshotname", snapshotname);
            }
            else
            {
                snapshotnameParameter = new ObjectParameter("snapshotname", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Decimal>>("SetMarketSnapshotPreference", userIdParameter, snapshotnameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="snapshotpreferenceId">No Metadata Documentation available.</param>
        /// <param name="groupname">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Decimal>> SetMarketSnapshotGroupPreference(Nullable<global::System.Int32> snapshotpreferenceId, global::System.String groupname)
        {
            ObjectParameter snapshotpreferenceIdParameter;
            if (snapshotpreferenceId.HasValue)
            {
                snapshotpreferenceIdParameter = new ObjectParameter("snapshotpreferenceId", snapshotpreferenceId);
            }
            else
            {
                snapshotpreferenceIdParameter = new ObjectParameter("snapshotpreferenceId", typeof(global::System.Int32));
            }
    
            ObjectParameter groupnameParameter;
            if (groupname != null)
            {
                groupnameParameter = new ObjectParameter("groupname", groupname);
            }
            else
            {
                groupnameParameter = new ObjectParameter("groupname", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Decimal>>("SetMarketSnapshotGroupPreference", snapshotpreferenceIdParameter, groupnameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="grouppreferenceid">No Metadata Documentation available.</param>
        /// <param name="entityName">No Metadata Documentation available.</param>
        /// <param name="entityReturnType">No Metadata Documentation available.</param>
        /// <param name="entityType">No Metadata Documentation available.</param>
        /// <param name="entityOrder">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Decimal>> SetMarketSnapshotEntityPreference(Nullable<global::System.Int32> grouppreferenceid, global::System.String entityName, global::System.String entityReturnType, global::System.String entityType, Nullable<global::System.Int32> entityOrder)
        {
            ObjectParameter grouppreferenceidParameter;
            if (grouppreferenceid.HasValue)
            {
                grouppreferenceidParameter = new ObjectParameter("grouppreferenceid", grouppreferenceid);
            }
            else
            {
                grouppreferenceidParameter = new ObjectParameter("grouppreferenceid", typeof(global::System.Int32));
            }
    
            ObjectParameter entityNameParameter;
            if (entityName != null)
            {
                entityNameParameter = new ObjectParameter("entityName", entityName);
            }
            else
            {
                entityNameParameter = new ObjectParameter("entityName", typeof(global::System.String));
            }
    
            ObjectParameter entityReturnTypeParameter;
            if (entityReturnType != null)
            {
                entityReturnTypeParameter = new ObjectParameter("entityReturnType", entityReturnType);
            }
            else
            {
                entityReturnTypeParameter = new ObjectParameter("entityReturnType", typeof(global::System.String));
            }
    
            ObjectParameter entityTypeParameter;
            if (entityType != null)
            {
                entityTypeParameter = new ObjectParameter("entityType", entityType);
            }
            else
            {
                entityTypeParameter = new ObjectParameter("entityType", typeof(global::System.String));
            }
    
            ObjectParameter entityOrderParameter;
            if (entityOrder.HasValue)
            {
                entityOrderParameter = new ObjectParameter("entityOrder", entityOrder);
            }
            else
            {
                entityOrderParameter = new ObjectParameter("entityOrder", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Decimal>>("SetMarketSnapshotEntityPreference", grouppreferenceidParameter, entityNameParameter, entityReturnTypeParameter, entityTypeParameter, entityOrderParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userId">No Metadata Documentation available.</param>
        public ObjectResult<MarketSnapshotSelectionData> GetMarketSnapshotSelectionData(global::System.String userId)
        {
            ObjectParameter userIdParameter;
            if (userId != null)
            {
                userIdParameter = new ObjectParameter("userId", userId);
            }
            else
            {
                userIdParameter = new ObjectParameter("userId", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<MarketSnapshotSelectionData>("GetMarketSnapshotSelectionData", userIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="country">No Metadata Documentation available.</param>
        public ObjectResult<MacroDataCTY_Result> RetrieveCTYSUMMARYDataReport(global::System.String country)
        {
            ObjectParameter countryParameter;
            if (country != null)
            {
                countryParameter = new ObjectParameter("country", country);
            }
            else
            {
                countryParameter = new ObjectParameter("country", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<MacroDataCTY_Result>("RetrieveCTYSUMMARYDataReport", countryParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="commodityID">No Metadata Documentation available.</param>
        public ObjectResult<CommodityResult> GetCOMMODITY_FORECASTS(global::System.String commodityID)
        {
            ObjectParameter commodityIDParameter;
            if (commodityID != null)
            {
                commodityIDParameter = new ObjectParameter("CommodityID", commodityID);
            }
            else
            {
                commodityIDParameter = new ObjectParameter("CommodityID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<CommodityResult>("GetCOMMODITY_FORECASTS", commodityIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="country">No Metadata Documentation available.</param>
        public ObjectResult<MacroDataCTY_Result> RetrieveEMSummaryDataReportCountry(global::System.String country)
        {
            ObjectParameter countryParameter;
            if (country != null)
            {
                countryParameter = new ObjectParameter("country", country);
            }
            else
            {
                countryParameter = new ObjectParameter("country", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<MacroDataCTY_Result>("RetrieveEMSummaryDataReportCountry", countryParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userId">No Metadata Documentation available.</param>
        /// <param name="snapshotname">No Metadata Documentation available.</param>
        /// <param name="snapshotpreferenceid">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> UpdateMarketSnapshotPreference(global::System.String userId, global::System.String snapshotname, Nullable<global::System.Int32> snapshotpreferenceid)
        {
            ObjectParameter userIdParameter;
            if (userId != null)
            {
                userIdParameter = new ObjectParameter("userId", userId);
            }
            else
            {
                userIdParameter = new ObjectParameter("userId", typeof(global::System.String));
            }
    
            ObjectParameter snapshotnameParameter;
            if (snapshotname != null)
            {
                snapshotnameParameter = new ObjectParameter("snapshotname", snapshotname);
            }
            else
            {
                snapshotnameParameter = new ObjectParameter("snapshotname", typeof(global::System.String));
            }
    
            ObjectParameter snapshotpreferenceidParameter;
            if (snapshotpreferenceid.HasValue)
            {
                snapshotpreferenceidParameter = new ObjectParameter("snapshotpreferenceid", snapshotpreferenceid);
            }
            else
            {
                snapshotpreferenceidParameter = new ObjectParameter("snapshotpreferenceid", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("UpdateMarketSnapshotPreference", userIdParameter, snapshotnameParameter, snapshotpreferenceidParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="updateXML">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> UpdateMarketPerformanceSnapshot(global::System.String updateXML)
        {
            ObjectParameter updateXMLParameter;
            if (updateXML != null)
            {
                updateXMLParameter = new ObjectParameter("updateXML", updateXML);
            }
            else
            {
                updateXMLParameter = new ObjectParameter("updateXML", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("UpdateMarketPerformanceSnapshot", updateXMLParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="snapshotPreferenceId">No Metadata Documentation available.</param>
        public ObjectResult<MarketSnapshotPreference> GetMarketSnapshotPreference(Nullable<global::System.Int32> snapshotPreferenceId)
        {
            ObjectParameter snapshotPreferenceIdParameter;
            if (snapshotPreferenceId.HasValue)
            {
                snapshotPreferenceIdParameter = new ObjectParameter("SnapshotPreferenceId", snapshotPreferenceId);
            }
            else
            {
                snapshotPreferenceIdParameter = new ObjectParameter("SnapshotPreferenceId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<MarketSnapshotPreference>("GetMarketSnapshotPreference", snapshotPreferenceIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="presentationID">No Metadata Documentation available.</param>
        /// <param name="fileName">No Metadata Documentation available.</param>
        /// <param name="fileData">No Metadata Documentation available.</param>
        /// <param name="createdBy">No Metadata Documentation available.</param>
        /// <param name="createdOn">No Metadata Documentation available.</param>
        /// <param name="modifiedBy">No Metadata Documentation available.</param>
        /// <param name="modifiedOn">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int64>> InsertFileInfo(Nullable<global::System.Int64> presentationID, global::System.String fileName, global::System.String fileData, global::System.String createdBy, Nullable<global::System.DateTime> createdOn, global::System.String modifiedBy, Nullable<global::System.DateTime> modifiedOn)
        {
            ObjectParameter presentationIDParameter;
            if (presentationID.HasValue)
            {
                presentationIDParameter = new ObjectParameter("presentationID", presentationID);
            }
            else
            {
                presentationIDParameter = new ObjectParameter("presentationID", typeof(global::System.Int64));
            }
    
            ObjectParameter fileNameParameter;
            if (fileName != null)
            {
                fileNameParameter = new ObjectParameter("fileName", fileName);
            }
            else
            {
                fileNameParameter = new ObjectParameter("fileName", typeof(global::System.String));
            }
    
            ObjectParameter fileDataParameter;
            if (fileData != null)
            {
                fileDataParameter = new ObjectParameter("fileData", fileData);
            }
            else
            {
                fileDataParameter = new ObjectParameter("fileData", typeof(global::System.String));
            }
    
            ObjectParameter createdByParameter;
            if (createdBy != null)
            {
                createdByParameter = new ObjectParameter("createdBy", createdBy);
            }
            else
            {
                createdByParameter = new ObjectParameter("createdBy", typeof(global::System.String));
            }
    
            ObjectParameter createdOnParameter;
            if (createdOn.HasValue)
            {
                createdOnParameter = new ObjectParameter("createdOn", createdOn);
            }
            else
            {
                createdOnParameter = new ObjectParameter("createdOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter modifiedByParameter;
            if (modifiedBy != null)
            {
                modifiedByParameter = new ObjectParameter("modifiedBy", modifiedBy);
            }
            else
            {
                modifiedByParameter = new ObjectParameter("modifiedBy", typeof(global::System.String));
            }
    
            ObjectParameter modifiedOnParameter;
            if (modifiedOn.HasValue)
            {
                modifiedOnParameter = new ObjectParameter("modifiedOn", modifiedOn);
            }
            else
            {
                modifiedOnParameter = new ObjectParameter("modifiedOn", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int64>>("InsertFileInfo", presentationIDParameter, fileNameParameter, fileDataParameter, createdByParameter, createdOnParameter, modifiedByParameter, modifiedOnParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="meetingDateTime">No Metadata Documentation available.</param>
        /// <param name="meetingClosedDateTime">No Metadata Documentation available.</param>
        /// <param name="description">No Metadata Documentation available.</param>
        /// <param name="createdBy">No Metadata Documentation available.</param>
        /// <param name="createdOn">No Metadata Documentation available.</param>
        /// <param name="modifiedBy">No Metadata Documentation available.</param>
        /// <param name="modifiedOn">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.DateTime>> InsertMeetingInformation(Nullable<global::System.DateTime> meetingDateTime, Nullable<global::System.DateTime> meetingClosedDateTime, global::System.String description, global::System.String createdBy, Nullable<global::System.DateTime> createdOn, global::System.String modifiedBy, Nullable<global::System.DateTime> modifiedOn)
        {
            ObjectParameter meetingDateTimeParameter;
            if (meetingDateTime.HasValue)
            {
                meetingDateTimeParameter = new ObjectParameter("meetingDateTime", meetingDateTime);
            }
            else
            {
                meetingDateTimeParameter = new ObjectParameter("meetingDateTime", typeof(global::System.DateTime));
            }
    
            ObjectParameter meetingClosedDateTimeParameter;
            if (meetingClosedDateTime.HasValue)
            {
                meetingClosedDateTimeParameter = new ObjectParameter("meetingClosedDateTime", meetingClosedDateTime);
            }
            else
            {
                meetingClosedDateTimeParameter = new ObjectParameter("meetingClosedDateTime", typeof(global::System.DateTime));
            }
    
            ObjectParameter descriptionParameter;
            if (description != null)
            {
                descriptionParameter = new ObjectParameter("description", description);
            }
            else
            {
                descriptionParameter = new ObjectParameter("description", typeof(global::System.String));
            }
    
            ObjectParameter createdByParameter;
            if (createdBy != null)
            {
                createdByParameter = new ObjectParameter("createdBy", createdBy);
            }
            else
            {
                createdByParameter = new ObjectParameter("createdBy", typeof(global::System.String));
            }
    
            ObjectParameter createdOnParameter;
            if (createdOn.HasValue)
            {
                createdOnParameter = new ObjectParameter("createdOn", createdOn);
            }
            else
            {
                createdOnParameter = new ObjectParameter("createdOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter modifiedByParameter;
            if (modifiedBy != null)
            {
                modifiedByParameter = new ObjectParameter("modifiedBy", modifiedBy);
            }
            else
            {
                modifiedByParameter = new ObjectParameter("modifiedBy", typeof(global::System.String));
            }
    
            ObjectParameter modifiedOnParameter;
            if (modifiedOn.HasValue)
            {
                modifiedOnParameter = new ObjectParameter("modifiedOn", modifiedOn);
            }
            else
            {
                modifiedOnParameter = new ObjectParameter("modifiedOn", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction<Nullable<global::System.DateTime>>("InsertMeetingInformation", meetingDateTimeParameter, meetingClosedDateTimeParameter, descriptionParameter, createdByParameter, createdOnParameter, modifiedByParameter, modifiedOnParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="meetingID">No Metadata Documentation available.</param>
        /// <param name="presentationID">No Metadata Documentation available.</param>
        /// <param name="createdBy">No Metadata Documentation available.</param>
        /// <param name="createdOn">No Metadata Documentation available.</param>
        /// <param name="modifiedBy">No Metadata Documentation available.</param>
        /// <param name="modifiedOn">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int64>> InsertMeetingPresentationMappingInfo(Nullable<global::System.Int64> meetingID, Nullable<global::System.Int64> presentationID, global::System.String createdBy, Nullable<global::System.DateTime> createdOn, global::System.String modifiedBy, Nullable<global::System.DateTime> modifiedOn)
        {
            ObjectParameter meetingIDParameter;
            if (meetingID.HasValue)
            {
                meetingIDParameter = new ObjectParameter("meetingID", meetingID);
            }
            else
            {
                meetingIDParameter = new ObjectParameter("meetingID", typeof(global::System.Int64));
            }
    
            ObjectParameter presentationIDParameter;
            if (presentationID.HasValue)
            {
                presentationIDParameter = new ObjectParameter("presentationID", presentationID);
            }
            else
            {
                presentationIDParameter = new ObjectParameter("presentationID", typeof(global::System.Int64));
            }
    
            ObjectParameter createdByParameter;
            if (createdBy != null)
            {
                createdByParameter = new ObjectParameter("createdBy", createdBy);
            }
            else
            {
                createdByParameter = new ObjectParameter("createdBy", typeof(global::System.String));
            }
    
            ObjectParameter createdOnParameter;
            if (createdOn.HasValue)
            {
                createdOnParameter = new ObjectParameter("createdOn", createdOn);
            }
            else
            {
                createdOnParameter = new ObjectParameter("createdOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter modifiedByParameter;
            if (modifiedBy != null)
            {
                modifiedByParameter = new ObjectParameter("modifiedBy", modifiedBy);
            }
            else
            {
                modifiedByParameter = new ObjectParameter("modifiedBy", typeof(global::System.String));
            }
    
            ObjectParameter modifiedOnParameter;
            if (modifiedOn.HasValue)
            {
                modifiedOnParameter = new ObjectParameter("modifiedOn", modifiedOn);
            }
            else
            {
                modifiedOnParameter = new ObjectParameter("modifiedOn", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int64>>("InsertMeetingPresentationMappingInfo", meetingIDParameter, presentationIDParameter, createdByParameter, createdOnParameter, modifiedByParameter, modifiedOnParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="presenter">No Metadata Documentation available.</param>
        /// <param name="statusTypeID">No Metadata Documentation available.</param>
        /// <param name="securityTicker">No Metadata Documentation available.</param>
        /// <param name="securityName">No Metadata Documentation available.</param>
        /// <param name="securityCountry">No Metadata Documentation available.</param>
        /// <param name="securityCountryCode">No Metadata Documentation available.</param>
        /// <param name="securityIndustry">No Metadata Documentation available.</param>
        /// <param name="securityCashPosition">No Metadata Documentation available.</param>
        /// <param name="securityPosition">No Metadata Documentation available.</param>
        /// <param name="securityMSCIStdWeight">No Metadata Documentation available.</param>
        /// <param name="securityMSCIIMIWeight">No Metadata Documentation available.</param>
        /// <param name="securityGlobalActiveWeight">No Metadata Documentation available.</param>
        /// <param name="securityLastClosingPrice">No Metadata Documentation available.</param>
        /// <param name="securityMarketCapitalization">No Metadata Documentation available.</param>
        /// <param name="securityPFVMeasure">No Metadata Documentation available.</param>
        /// <param name="securityBuyRange">No Metadata Documentation available.</param>
        /// <param name="securitySellRange">No Metadata Documentation available.</param>
        /// <param name="securityRecommendation">No Metadata Documentation available.</param>
        /// <param name="investmentThesis">No Metadata Documentation available.</param>
        /// <param name="background">No Metadata Documentation available.</param>
        /// <param name="valuations">No Metadata Documentation available.</param>
        /// <param name="earningsOutlook">No Metadata Documentation available.</param>
        /// <param name="competitiveAdvantage">No Metadata Documentation available.</param>
        /// <param name="competitiveDisadvantage">No Metadata Documentation available.</param>
        /// <param name="committeePFVMeasure">No Metadata Documentation available.</param>
        /// <param name="committeeBuyRange">No Metadata Documentation available.</param>
        /// <param name="committeeSellRange">No Metadata Documentation available.</param>
        /// <param name="committeeRecommendation">No Metadata Documentation available.</param>
        /// <param name="committeeRangeEffectiveThrough">No Metadata Documentation available.</param>
        /// <param name="acceptWithoutDiscussionFlag">No Metadata Documentation available.</param>
        /// <param name="adminNotes">No Metadata Documentation available.</param>
        /// <param name="createdBy">No Metadata Documentation available.</param>
        /// <param name="createdOn">No Metadata Documentation available.</param>
        /// <param name="modifiedBy">No Metadata Documentation available.</param>
        /// <param name="modifiedOn">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int64>> InsertPresentationInfo(global::System.String presenter, Nullable<global::System.Int64> statusTypeID, global::System.String securityTicker, global::System.String securityName, global::System.String securityCountry, global::System.String securityCountryCode, global::System.String securityIndustry, Nullable<global::System.Single> securityCashPosition, Nullable<global::System.Int64> securityPosition, Nullable<global::System.Single> securityMSCIStdWeight, Nullable<global::System.Single> securityMSCIIMIWeight, Nullable<global::System.Single> securityGlobalActiveWeight, Nullable<global::System.Single> securityLastClosingPrice, Nullable<global::System.Single> securityMarketCapitalization, global::System.String securityPFVMeasure, Nullable<global::System.Single> securityBuyRange, Nullable<global::System.Single> securitySellRange, global::System.String securityRecommendation, global::System.String investmentThesis, global::System.String background, global::System.String valuations, global::System.String earningsOutlook, global::System.String competitiveAdvantage, global::System.String competitiveDisadvantage, global::System.String committeePFVMeasure, Nullable<global::System.Single> committeeBuyRange, Nullable<global::System.Single> committeeSellRange, global::System.String committeeRecommendation, Nullable<global::System.DateTime> committeeRangeEffectiveThrough, Nullable<global::System.Boolean> acceptWithoutDiscussionFlag, global::System.String adminNotes, global::System.String createdBy, Nullable<global::System.DateTime> createdOn, global::System.String modifiedBy, Nullable<global::System.DateTime> modifiedOn)
        {
            ObjectParameter presenterParameter;
            if (presenter != null)
            {
                presenterParameter = new ObjectParameter("presenter", presenter);
            }
            else
            {
                presenterParameter = new ObjectParameter("presenter", typeof(global::System.String));
            }
    
            ObjectParameter statusTypeIDParameter;
            if (statusTypeID.HasValue)
            {
                statusTypeIDParameter = new ObjectParameter("statusTypeID", statusTypeID);
            }
            else
            {
                statusTypeIDParameter = new ObjectParameter("statusTypeID", typeof(global::System.Int64));
            }
    
            ObjectParameter securityTickerParameter;
            if (securityTicker != null)
            {
                securityTickerParameter = new ObjectParameter("securityTicker", securityTicker);
            }
            else
            {
                securityTickerParameter = new ObjectParameter("securityTicker", typeof(global::System.String));
            }
    
            ObjectParameter securityNameParameter;
            if (securityName != null)
            {
                securityNameParameter = new ObjectParameter("securityName", securityName);
            }
            else
            {
                securityNameParameter = new ObjectParameter("securityName", typeof(global::System.String));
            }
    
            ObjectParameter securityCountryParameter;
            if (securityCountry != null)
            {
                securityCountryParameter = new ObjectParameter("securityCountry", securityCountry);
            }
            else
            {
                securityCountryParameter = new ObjectParameter("securityCountry", typeof(global::System.String));
            }
    
            ObjectParameter securityCountryCodeParameter;
            if (securityCountryCode != null)
            {
                securityCountryCodeParameter = new ObjectParameter("securityCountryCode", securityCountryCode);
            }
            else
            {
                securityCountryCodeParameter = new ObjectParameter("securityCountryCode", typeof(global::System.String));
            }
    
            ObjectParameter securityIndustryParameter;
            if (securityIndustry != null)
            {
                securityIndustryParameter = new ObjectParameter("securityIndustry", securityIndustry);
            }
            else
            {
                securityIndustryParameter = new ObjectParameter("securityIndustry", typeof(global::System.String));
            }
    
            ObjectParameter securityCashPositionParameter;
            if (securityCashPosition.HasValue)
            {
                securityCashPositionParameter = new ObjectParameter("securityCashPosition", securityCashPosition);
            }
            else
            {
                securityCashPositionParameter = new ObjectParameter("securityCashPosition", typeof(global::System.Single));
            }
    
            ObjectParameter securityPositionParameter;
            if (securityPosition.HasValue)
            {
                securityPositionParameter = new ObjectParameter("securityPosition", securityPosition);
            }
            else
            {
                securityPositionParameter = new ObjectParameter("securityPosition", typeof(global::System.Int64));
            }
    
            ObjectParameter securityMSCIStdWeightParameter;
            if (securityMSCIStdWeight.HasValue)
            {
                securityMSCIStdWeightParameter = new ObjectParameter("securityMSCIStdWeight", securityMSCIStdWeight);
            }
            else
            {
                securityMSCIStdWeightParameter = new ObjectParameter("securityMSCIStdWeight", typeof(global::System.Single));
            }
    
            ObjectParameter securityMSCIIMIWeightParameter;
            if (securityMSCIIMIWeight.HasValue)
            {
                securityMSCIIMIWeightParameter = new ObjectParameter("securityMSCIIMIWeight", securityMSCIIMIWeight);
            }
            else
            {
                securityMSCIIMIWeightParameter = new ObjectParameter("securityMSCIIMIWeight", typeof(global::System.Single));
            }
    
            ObjectParameter securityGlobalActiveWeightParameter;
            if (securityGlobalActiveWeight.HasValue)
            {
                securityGlobalActiveWeightParameter = new ObjectParameter("securityGlobalActiveWeight", securityGlobalActiveWeight);
            }
            else
            {
                securityGlobalActiveWeightParameter = new ObjectParameter("securityGlobalActiveWeight", typeof(global::System.Single));
            }
    
            ObjectParameter securityLastClosingPriceParameter;
            if (securityLastClosingPrice.HasValue)
            {
                securityLastClosingPriceParameter = new ObjectParameter("securityLastClosingPrice", securityLastClosingPrice);
            }
            else
            {
                securityLastClosingPriceParameter = new ObjectParameter("securityLastClosingPrice", typeof(global::System.Single));
            }
    
            ObjectParameter securityMarketCapitalizationParameter;
            if (securityMarketCapitalization.HasValue)
            {
                securityMarketCapitalizationParameter = new ObjectParameter("securityMarketCapitalization", securityMarketCapitalization);
            }
            else
            {
                securityMarketCapitalizationParameter = new ObjectParameter("securityMarketCapitalization", typeof(global::System.Single));
            }
    
            ObjectParameter securityPFVMeasureParameter;
            if (securityPFVMeasure != null)
            {
                securityPFVMeasureParameter = new ObjectParameter("securityPFVMeasure", securityPFVMeasure);
            }
            else
            {
                securityPFVMeasureParameter = new ObjectParameter("securityPFVMeasure", typeof(global::System.String));
            }
    
            ObjectParameter securityBuyRangeParameter;
            if (securityBuyRange.HasValue)
            {
                securityBuyRangeParameter = new ObjectParameter("securityBuyRange", securityBuyRange);
            }
            else
            {
                securityBuyRangeParameter = new ObjectParameter("securityBuyRange", typeof(global::System.Single));
            }
    
            ObjectParameter securitySellRangeParameter;
            if (securitySellRange.HasValue)
            {
                securitySellRangeParameter = new ObjectParameter("securitySellRange", securitySellRange);
            }
            else
            {
                securitySellRangeParameter = new ObjectParameter("securitySellRange", typeof(global::System.Single));
            }
    
            ObjectParameter securityRecommendationParameter;
            if (securityRecommendation != null)
            {
                securityRecommendationParameter = new ObjectParameter("securityRecommendation", securityRecommendation);
            }
            else
            {
                securityRecommendationParameter = new ObjectParameter("securityRecommendation", typeof(global::System.String));
            }
    
            ObjectParameter investmentThesisParameter;
            if (investmentThesis != null)
            {
                investmentThesisParameter = new ObjectParameter("investmentThesis", investmentThesis);
            }
            else
            {
                investmentThesisParameter = new ObjectParameter("investmentThesis", typeof(global::System.String));
            }
    
            ObjectParameter backgroundParameter;
            if (background != null)
            {
                backgroundParameter = new ObjectParameter("background", background);
            }
            else
            {
                backgroundParameter = new ObjectParameter("background", typeof(global::System.String));
            }
    
            ObjectParameter valuationsParameter;
            if (valuations != null)
            {
                valuationsParameter = new ObjectParameter("valuations", valuations);
            }
            else
            {
                valuationsParameter = new ObjectParameter("valuations", typeof(global::System.String));
            }
    
            ObjectParameter earningsOutlookParameter;
            if (earningsOutlook != null)
            {
                earningsOutlookParameter = new ObjectParameter("earningsOutlook", earningsOutlook);
            }
            else
            {
                earningsOutlookParameter = new ObjectParameter("earningsOutlook", typeof(global::System.String));
            }
    
            ObjectParameter competitiveAdvantageParameter;
            if (competitiveAdvantage != null)
            {
                competitiveAdvantageParameter = new ObjectParameter("competitiveAdvantage", competitiveAdvantage);
            }
            else
            {
                competitiveAdvantageParameter = new ObjectParameter("competitiveAdvantage", typeof(global::System.String));
            }
    
            ObjectParameter competitiveDisadvantageParameter;
            if (competitiveDisadvantage != null)
            {
                competitiveDisadvantageParameter = new ObjectParameter("competitiveDisadvantage", competitiveDisadvantage);
            }
            else
            {
                competitiveDisadvantageParameter = new ObjectParameter("competitiveDisadvantage", typeof(global::System.String));
            }
    
            ObjectParameter committeePFVMeasureParameter;
            if (committeePFVMeasure != null)
            {
                committeePFVMeasureParameter = new ObjectParameter("committeePFVMeasure", committeePFVMeasure);
            }
            else
            {
                committeePFVMeasureParameter = new ObjectParameter("committeePFVMeasure", typeof(global::System.String));
            }
    
            ObjectParameter committeeBuyRangeParameter;
            if (committeeBuyRange.HasValue)
            {
                committeeBuyRangeParameter = new ObjectParameter("committeeBuyRange", committeeBuyRange);
            }
            else
            {
                committeeBuyRangeParameter = new ObjectParameter("committeeBuyRange", typeof(global::System.Single));
            }
    
            ObjectParameter committeeSellRangeParameter;
            if (committeeSellRange.HasValue)
            {
                committeeSellRangeParameter = new ObjectParameter("committeeSellRange", committeeSellRange);
            }
            else
            {
                committeeSellRangeParameter = new ObjectParameter("committeeSellRange", typeof(global::System.Single));
            }
    
            ObjectParameter committeeRecommendationParameter;
            if (committeeRecommendation != null)
            {
                committeeRecommendationParameter = new ObjectParameter("committeeRecommendation", committeeRecommendation);
            }
            else
            {
                committeeRecommendationParameter = new ObjectParameter("committeeRecommendation", typeof(global::System.String));
            }
    
            ObjectParameter committeeRangeEffectiveThroughParameter;
            if (committeeRangeEffectiveThrough.HasValue)
            {
                committeeRangeEffectiveThroughParameter = new ObjectParameter("committeeRangeEffectiveThrough", committeeRangeEffectiveThrough);
            }
            else
            {
                committeeRangeEffectiveThroughParameter = new ObjectParameter("committeeRangeEffectiveThrough", typeof(global::System.DateTime));
            }
    
            ObjectParameter acceptWithoutDiscussionFlagParameter;
            if (acceptWithoutDiscussionFlag.HasValue)
            {
                acceptWithoutDiscussionFlagParameter = new ObjectParameter("acceptWithoutDiscussionFlag", acceptWithoutDiscussionFlag);
            }
            else
            {
                acceptWithoutDiscussionFlagParameter = new ObjectParameter("acceptWithoutDiscussionFlag", typeof(global::System.Boolean));
            }
    
            ObjectParameter adminNotesParameter;
            if (adminNotes != null)
            {
                adminNotesParameter = new ObjectParameter("adminNotes", adminNotes);
            }
            else
            {
                adminNotesParameter = new ObjectParameter("adminNotes", typeof(global::System.String));
            }
    
            ObjectParameter createdByParameter;
            if (createdBy != null)
            {
                createdByParameter = new ObjectParameter("createdBy", createdBy);
            }
            else
            {
                createdByParameter = new ObjectParameter("createdBy", typeof(global::System.String));
            }
    
            ObjectParameter createdOnParameter;
            if (createdOn.HasValue)
            {
                createdOnParameter = new ObjectParameter("createdOn", createdOn);
            }
            else
            {
                createdOnParameter = new ObjectParameter("createdOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter modifiedByParameter;
            if (modifiedBy != null)
            {
                modifiedByParameter = new ObjectParameter("modifiedBy", modifiedBy);
            }
            else
            {
                modifiedByParameter = new ObjectParameter("modifiedBy", typeof(global::System.String));
            }
    
            ObjectParameter modifiedOnParameter;
            if (modifiedOn.HasValue)
            {
                modifiedOnParameter = new ObjectParameter("modifiedOn", modifiedOn);
            }
            else
            {
                modifiedOnParameter = new ObjectParameter("modifiedOn", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int64>>("InsertPresentationInfo", presenterParameter, statusTypeIDParameter, securityTickerParameter, securityNameParameter, securityCountryParameter, securityCountryCodeParameter, securityIndustryParameter, securityCashPositionParameter, securityPositionParameter, securityMSCIStdWeightParameter, securityMSCIIMIWeightParameter, securityGlobalActiveWeightParameter, securityLastClosingPriceParameter, securityMarketCapitalizationParameter, securityPFVMeasureParameter, securityBuyRangeParameter, securitySellRangeParameter, securityRecommendationParameter, investmentThesisParameter, backgroundParameter, valuationsParameter, earningsOutlookParameter, competitiveAdvantageParameter, competitiveDisadvantageParameter, committeePFVMeasureParameter, committeeBuyRangeParameter, committeeSellRangeParameter, committeeRecommendationParameter, committeeRangeEffectiveThroughParameter, acceptWithoutDiscussionFlagParameter, adminNotesParameter, createdByParameter, createdOnParameter, modifiedByParameter, modifiedOnParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="presentationID">No Metadata Documentation available.</param>
        /// <param name="name">No Metadata Documentation available.</param>
        /// <param name="notes">No Metadata Documentation available.</param>
        /// <param name="voteTypeID">No Metadata Documentation available.</param>
        /// <param name="attendanceTypeID">No Metadata Documentation available.</param>
        /// <param name="postMeetingFlag">No Metadata Documentation available.</param>
        /// <param name="discussionFlag">No Metadata Documentation available.</param>
        /// <param name="voterPFVMeasure">No Metadata Documentation available.</param>
        /// <param name="voterBuyRange">No Metadata Documentation available.</param>
        /// <param name="voterSellRange">No Metadata Documentation available.</param>
        /// <param name="voterRecommendation">No Metadata Documentation available.</param>
        /// <param name="createdBy">No Metadata Documentation available.</param>
        /// <param name="createdOn">No Metadata Documentation available.</param>
        /// <param name="modifiedBy">No Metadata Documentation available.</param>
        /// <param name="modifiedOn">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int64>> InsertVoterInfo(Nullable<global::System.Int64> presentationID, global::System.String name, global::System.String notes, Nullable<global::System.Int64> voteTypeID, Nullable<global::System.Int64> attendanceTypeID, Nullable<global::System.Boolean> postMeetingFlag, Nullable<global::System.Boolean> discussionFlag, global::System.String voterPFVMeasure, Nullable<global::System.Single> voterBuyRange, Nullable<global::System.Single> voterSellRange, global::System.String voterRecommendation, global::System.String createdBy, Nullable<global::System.DateTime> createdOn, global::System.String modifiedBy, Nullable<global::System.DateTime> modifiedOn)
        {
            ObjectParameter presentationIDParameter;
            if (presentationID.HasValue)
            {
                presentationIDParameter = new ObjectParameter("presentationID", presentationID);
            }
            else
            {
                presentationIDParameter = new ObjectParameter("presentationID", typeof(global::System.Int64));
            }
    
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("name", typeof(global::System.String));
            }
    
            ObjectParameter notesParameter;
            if (notes != null)
            {
                notesParameter = new ObjectParameter("notes", notes);
            }
            else
            {
                notesParameter = new ObjectParameter("notes", typeof(global::System.String));
            }
    
            ObjectParameter voteTypeIDParameter;
            if (voteTypeID.HasValue)
            {
                voteTypeIDParameter = new ObjectParameter("voteTypeID", voteTypeID);
            }
            else
            {
                voteTypeIDParameter = new ObjectParameter("voteTypeID", typeof(global::System.Int64));
            }
    
            ObjectParameter attendanceTypeIDParameter;
            if (attendanceTypeID.HasValue)
            {
                attendanceTypeIDParameter = new ObjectParameter("attendanceTypeID", attendanceTypeID);
            }
            else
            {
                attendanceTypeIDParameter = new ObjectParameter("attendanceTypeID", typeof(global::System.Int64));
            }
    
            ObjectParameter postMeetingFlagParameter;
            if (postMeetingFlag.HasValue)
            {
                postMeetingFlagParameter = new ObjectParameter("postMeetingFlag", postMeetingFlag);
            }
            else
            {
                postMeetingFlagParameter = new ObjectParameter("postMeetingFlag", typeof(global::System.Boolean));
            }
    
            ObjectParameter discussionFlagParameter;
            if (discussionFlag.HasValue)
            {
                discussionFlagParameter = new ObjectParameter("discussionFlag", discussionFlag);
            }
            else
            {
                discussionFlagParameter = new ObjectParameter("discussionFlag", typeof(global::System.Boolean));
            }
    
            ObjectParameter voterPFVMeasureParameter;
            if (voterPFVMeasure != null)
            {
                voterPFVMeasureParameter = new ObjectParameter("voterPFVMeasure", voterPFVMeasure);
            }
            else
            {
                voterPFVMeasureParameter = new ObjectParameter("voterPFVMeasure", typeof(global::System.String));
            }
    
            ObjectParameter voterBuyRangeParameter;
            if (voterBuyRange.HasValue)
            {
                voterBuyRangeParameter = new ObjectParameter("voterBuyRange", voterBuyRange);
            }
            else
            {
                voterBuyRangeParameter = new ObjectParameter("voterBuyRange", typeof(global::System.Single));
            }
    
            ObjectParameter voterSellRangeParameter;
            if (voterSellRange.HasValue)
            {
                voterSellRangeParameter = new ObjectParameter("voterSellRange", voterSellRange);
            }
            else
            {
                voterSellRangeParameter = new ObjectParameter("voterSellRange", typeof(global::System.Single));
            }
    
            ObjectParameter voterRecommendationParameter;
            if (voterRecommendation != null)
            {
                voterRecommendationParameter = new ObjectParameter("voterRecommendation", voterRecommendation);
            }
            else
            {
                voterRecommendationParameter = new ObjectParameter("voterRecommendation", typeof(global::System.String));
            }
    
            ObjectParameter createdByParameter;
            if (createdBy != null)
            {
                createdByParameter = new ObjectParameter("createdBy", createdBy);
            }
            else
            {
                createdByParameter = new ObjectParameter("createdBy", typeof(global::System.String));
            }
    
            ObjectParameter createdOnParameter;
            if (createdOn.HasValue)
            {
                createdOnParameter = new ObjectParameter("createdOn", createdOn);
            }
            else
            {
                createdOnParameter = new ObjectParameter("createdOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter modifiedByParameter;
            if (modifiedBy != null)
            {
                modifiedByParameter = new ObjectParameter("modifiedBy", modifiedBy);
            }
            else
            {
                modifiedByParameter = new ObjectParameter("modifiedBy", typeof(global::System.String));
            }
    
            ObjectParameter modifiedOnParameter;
            if (modifiedOn.HasValue)
            {
                modifiedOnParameter = new ObjectParameter("modifiedOn", modifiedOn);
            }
            else
            {
                modifiedOnParameter = new ObjectParameter("modifiedOn", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int64>>("InsertVoterInfo", presentationIDParameter, nameParameter, notesParameter, voteTypeIDParameter, attendanceTypeIDParameter, postMeetingFlagParameter, discussionFlagParameter, voterPFVMeasureParameter, voterBuyRangeParameter, voterSellRangeParameter, voterRecommendationParameter, createdByParameter, createdOnParameter, modifiedByParameter, modifiedOnParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<Nullable<global::System.DateTime>> GetMeetingInfoDistinctMeetingDates()
        {
            return base.ExecuteFunction<Nullable<global::System.DateTime>>("GetMeetingInfoDistinctMeetingDates");
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ResearchModel", Name="COMMODITY_FORECASTS")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class COMMODITY_FORECASTS : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new COMMODITY_FORECASTS object.
        /// </summary>
        /// <param name="cOMMODITY_ID">Initial value of the COMMODITY_ID property.</param>
        public static COMMODITY_FORECASTS CreateCOMMODITY_FORECASTS(global::System.String cOMMODITY_ID)
        {
            COMMODITY_FORECASTS cOMMODITY_FORECASTS = new COMMODITY_FORECASTS();
            cOMMODITY_FORECASTS.COMMODITY_ID = cOMMODITY_ID;
            return cOMMODITY_FORECASTS;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String COMMODITY_ID
        {
            get
            {
                return _COMMODITY_ID;
            }
            set
            {
                if (_COMMODITY_ID != value)
                {
                    OnCOMMODITY_IDChanging(value);
                    ReportPropertyChanging("COMMODITY_ID");
                    _COMMODITY_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("COMMODITY_ID");
                    OnCOMMODITY_IDChanged();
                }
            }
        }
        private global::System.String _COMMODITY_ID;
        partial void OnCOMMODITY_IDChanging(global::System.String value);
        partial void OnCOMMODITY_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> CURRENT_YEAR_END
        {
            get
            {
                return _CURRENT_YEAR_END;
            }
            set
            {
                OnCURRENT_YEAR_ENDChanging(value);
                ReportPropertyChanging("CURRENT_YEAR_END");
                _CURRENT_YEAR_END = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CURRENT_YEAR_END");
                OnCURRENT_YEAR_ENDChanged();
            }
        }
        private Nullable<global::System.Single> _CURRENT_YEAR_END;
        partial void OnCURRENT_YEAR_ENDChanging(Nullable<global::System.Single> value);
        partial void OnCURRENT_YEAR_ENDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> NEXT_YEAR_END
        {
            get
            {
                return _NEXT_YEAR_END;
            }
            set
            {
                OnNEXT_YEAR_ENDChanging(value);
                ReportPropertyChanging("NEXT_YEAR_END");
                _NEXT_YEAR_END = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NEXT_YEAR_END");
                OnNEXT_YEAR_ENDChanged();
            }
        }
        private Nullable<global::System.Single> _NEXT_YEAR_END;
        partial void OnNEXT_YEAR_ENDChanging(Nullable<global::System.Single> value);
        partial void OnNEXT_YEAR_ENDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> LONG_TERM
        {
            get
            {
                return _LONG_TERM;
            }
            set
            {
                OnLONG_TERMChanging(value);
                ReportPropertyChanging("LONG_TERM");
                _LONG_TERM = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LONG_TERM");
                OnLONG_TERMChanged();
            }
        }
        private Nullable<global::System.Single> _LONG_TERM;
        partial void OnLONG_TERMChanging(Nullable<global::System.Single> value);
        partial void OnLONG_TERMChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LASTUPDATE
        {
            get
            {
                return _LASTUPDATE;
            }
            set
            {
                OnLASTUPDATEChanging(value);
                ReportPropertyChanging("LASTUPDATE");
                _LASTUPDATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LASTUPDATE");
                OnLASTUPDATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _LASTUPDATE;
        partial void OnLASTUPDATEChanging(Nullable<global::System.DateTime> value);
        partial void OnLASTUPDATEChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ResearchModel", Name="Country_Master")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Country_Master : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Country_Master object.
        /// </summary>
        /// <param name="cOUNTRY_CODE">Initial value of the COUNTRY_CODE property.</param>
        /// <param name="cOUNTRY_NAME">Initial value of the COUNTRY_NAME property.</param>
        /// <param name="cURRENCY_CODE">Initial value of the CURRENCY_CODE property.</param>
        /// <param name="cURRENCY_NAME">Initial value of the CURRENCY_NAME property.</param>
        /// <param name="mACRO_ECON_DATA_CURRENT">Initial value of the MACRO_ECON_DATA_CURRENT property.</param>
        public static Country_Master CreateCountry_Master(global::System.String cOUNTRY_CODE, global::System.String cOUNTRY_NAME, global::System.String cURRENCY_CODE, global::System.String cURRENCY_NAME, global::System.String mACRO_ECON_DATA_CURRENT)
        {
            Country_Master country_Master = new Country_Master();
            country_Master.COUNTRY_CODE = cOUNTRY_CODE;
            country_Master.COUNTRY_NAME = cOUNTRY_NAME;
            country_Master.CURRENCY_CODE = cURRENCY_CODE;
            country_Master.CURRENCY_NAME = cURRENCY_NAME;
            country_Master.MACRO_ECON_DATA_CURRENT = mACRO_ECON_DATA_CURRENT;
            return country_Master;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String COUNTRY_CODE
        {
            get
            {
                return _COUNTRY_CODE;
            }
            set
            {
                if (_COUNTRY_CODE != value)
                {
                    OnCOUNTRY_CODEChanging(value);
                    ReportPropertyChanging("COUNTRY_CODE");
                    _COUNTRY_CODE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("COUNTRY_CODE");
                    OnCOUNTRY_CODEChanged();
                }
            }
        }
        private global::System.String _COUNTRY_CODE;
        partial void OnCOUNTRY_CODEChanging(global::System.String value);
        partial void OnCOUNTRY_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String COUNTRY_NAME
        {
            get
            {
                return _COUNTRY_NAME;
            }
            set
            {
                if (_COUNTRY_NAME != value)
                {
                    OnCOUNTRY_NAMEChanging(value);
                    ReportPropertyChanging("COUNTRY_NAME");
                    _COUNTRY_NAME = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("COUNTRY_NAME");
                    OnCOUNTRY_NAMEChanged();
                }
            }
        }
        private global::System.String _COUNTRY_NAME;
        partial void OnCOUNTRY_NAMEChanging(global::System.String value);
        partial void OnCOUNTRY_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CURRENCY_CODE
        {
            get
            {
                return _CURRENCY_CODE;
            }
            set
            {
                if (_CURRENCY_CODE != value)
                {
                    OnCURRENCY_CODEChanging(value);
                    ReportPropertyChanging("CURRENCY_CODE");
                    _CURRENCY_CODE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CURRENCY_CODE");
                    OnCURRENCY_CODEChanged();
                }
            }
        }
        private global::System.String _CURRENCY_CODE;
        partial void OnCURRENCY_CODEChanging(global::System.String value);
        partial void OnCURRENCY_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CURRENCY_NAME
        {
            get
            {
                return _CURRENCY_NAME;
            }
            set
            {
                if (_CURRENCY_NAME != value)
                {
                    OnCURRENCY_NAMEChanging(value);
                    ReportPropertyChanging("CURRENCY_NAME");
                    _CURRENCY_NAME = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CURRENCY_NAME");
                    OnCURRENCY_NAMEChanged();
                }
            }
        }
        private global::System.String _CURRENCY_NAME;
        partial void OnCURRENCY_NAMEChanging(global::System.String value);
        partial void OnCURRENCY_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MACRO_ECON_DATA_CURRENT
        {
            get
            {
                return _MACRO_ECON_DATA_CURRENT;
            }
            set
            {
                if (_MACRO_ECON_DATA_CURRENT != value)
                {
                    OnMACRO_ECON_DATA_CURRENTChanging(value);
                    ReportPropertyChanging("MACRO_ECON_DATA_CURRENT");
                    _MACRO_ECON_DATA_CURRENT = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MACRO_ECON_DATA_CURRENT");
                    OnMACRO_ECON_DATA_CURRENTChanged();
                }
            }
        }
        private global::System.String _MACRO_ECON_DATA_CURRENT;
        partial void OnMACRO_ECON_DATA_CURRENTChanging(global::System.String value);
        partial void OnMACRO_ECON_DATA_CURRENTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ASHEMM_PROPRIETARY_REGION_NAME
        {
            get
            {
                return _ASHEMM_PROPRIETARY_REGION_NAME;
            }
            set
            {
                OnASHEMM_PROPRIETARY_REGION_NAMEChanging(value);
                ReportPropertyChanging("ASHEMM_PROPRIETARY_REGION_NAME");
                _ASHEMM_PROPRIETARY_REGION_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ASHEMM_PROPRIETARY_REGION_NAME");
                OnASHEMM_PROPRIETARY_REGION_NAMEChanged();
            }
        }
        private global::System.String _ASHEMM_PROPRIETARY_REGION_NAME;
        partial void OnASHEMM_PROPRIETARY_REGION_NAMEChanging(global::System.String value);
        partial void OnASHEMM_PROPRIETARY_REGION_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ASHEMM_PROPRIETARY_REGION_CODE
        {
            get
            {
                return _ASHEMM_PROPRIETARY_REGION_CODE;
            }
            set
            {
                OnASHEMM_PROPRIETARY_REGION_CODEChanging(value);
                ReportPropertyChanging("ASHEMM_PROPRIETARY_REGION_CODE");
                _ASHEMM_PROPRIETARY_REGION_CODE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ASHEMM_PROPRIETARY_REGION_CODE");
                OnASHEMM_PROPRIETARY_REGION_CODEChanged();
            }
        }
        private global::System.String _ASHEMM_PROPRIETARY_REGION_CODE;
        partial void OnASHEMM_PROPRIETARY_REGION_CODEChanging(global::System.String value);
        partial void OnASHEMM_PROPRIETARY_REGION_CODEChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ResearchModel", Name="tblDashboardPreference")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tblDashboardPreference : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new tblDashboardPreference object.
        /// </summary>
        /// <param name="preferenceID">Initial value of the PreferenceID property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="gadgetViewClassName">Initial value of the GadgetViewClassName property.</param>
        /// <param name="gadgetViewModelClassName">Initial value of the GadgetViewModelClassName property.</param>
        /// <param name="gadgetName">Initial value of the GadgetName property.</param>
        /// <param name="gadgetState">Initial value of the GadgetState property.</param>
        /// <param name="gadgetPosition">Initial value of the GadgetPosition property.</param>
        /// <param name="preferenceGroupID">Initial value of the PreferenceGroupID property.</param>
        public static tblDashboardPreference CreatetblDashboardPreference(global::System.Int32 preferenceID, global::System.String userName, global::System.String gadgetViewClassName, global::System.String gadgetViewModelClassName, global::System.String gadgetName, global::System.String gadgetState, global::System.Int32 gadgetPosition, global::System.String preferenceGroupID)
        {
            tblDashboardPreference tblDashboardPreference = new tblDashboardPreference();
            tblDashboardPreference.PreferenceID = preferenceID;
            tblDashboardPreference.UserName = userName;
            tblDashboardPreference.GadgetViewClassName = gadgetViewClassName;
            tblDashboardPreference.GadgetViewModelClassName = gadgetViewModelClassName;
            tblDashboardPreference.GadgetName = gadgetName;
            tblDashboardPreference.GadgetState = gadgetState;
            tblDashboardPreference.GadgetPosition = gadgetPosition;
            tblDashboardPreference.PreferenceGroupID = preferenceGroupID;
            return tblDashboardPreference;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PreferenceID
        {
            get
            {
                return _PreferenceID;
            }
            set
            {
                if (_PreferenceID != value)
                {
                    OnPreferenceIDChanging(value);
                    ReportPropertyChanging("PreferenceID");
                    _PreferenceID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PreferenceID");
                    OnPreferenceIDChanged();
                }
            }
        }
        private global::System.Int32 _PreferenceID;
        partial void OnPreferenceIDChanging(global::System.Int32 value);
        partial void OnPreferenceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GadgetViewClassName
        {
            get
            {
                return _GadgetViewClassName;
            }
            set
            {
                OnGadgetViewClassNameChanging(value);
                ReportPropertyChanging("GadgetViewClassName");
                _GadgetViewClassName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("GadgetViewClassName");
                OnGadgetViewClassNameChanged();
            }
        }
        private global::System.String _GadgetViewClassName;
        partial void OnGadgetViewClassNameChanging(global::System.String value);
        partial void OnGadgetViewClassNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GadgetViewModelClassName
        {
            get
            {
                return _GadgetViewModelClassName;
            }
            set
            {
                OnGadgetViewModelClassNameChanging(value);
                ReportPropertyChanging("GadgetViewModelClassName");
                _GadgetViewModelClassName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("GadgetViewModelClassName");
                OnGadgetViewModelClassNameChanged();
            }
        }
        private global::System.String _GadgetViewModelClassName;
        partial void OnGadgetViewModelClassNameChanging(global::System.String value);
        partial void OnGadgetViewModelClassNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GadgetName
        {
            get
            {
                return _GadgetName;
            }
            set
            {
                OnGadgetNameChanging(value);
                ReportPropertyChanging("GadgetName");
                _GadgetName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("GadgetName");
                OnGadgetNameChanged();
            }
        }
        private global::System.String _GadgetName;
        partial void OnGadgetNameChanging(global::System.String value);
        partial void OnGadgetNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GadgetState
        {
            get
            {
                return _GadgetState;
            }
            set
            {
                OnGadgetStateChanging(value);
                ReportPropertyChanging("GadgetState");
                _GadgetState = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("GadgetState");
                OnGadgetStateChanged();
            }
        }
        private global::System.String _GadgetState;
        partial void OnGadgetStateChanging(global::System.String value);
        partial void OnGadgetStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GadgetPosition
        {
            get
            {
                return _GadgetPosition;
            }
            set
            {
                OnGadgetPositionChanging(value);
                ReportPropertyChanging("GadgetPosition");
                _GadgetPosition = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GadgetPosition");
                OnGadgetPositionChanged();
            }
        }
        private global::System.Int32 _GadgetPosition;
        partial void OnGadgetPositionChanging(global::System.Int32 value);
        partial void OnGadgetPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PreferenceGroupID
        {
            get
            {
                return _PreferenceGroupID;
            }
            set
            {
                OnPreferenceGroupIDChanging(value);
                ReportPropertyChanging("PreferenceGroupID");
                _PreferenceGroupID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PreferenceGroupID");
                OnPreferenceGroupIDChanged();
            }
        }
        private global::System.String _PreferenceGroupID;
        partial void OnPreferenceGroupIDChanging(global::System.String value);
        partial void OnPreferenceGroupIDChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ResearchModel", Name="tblMarketSnapshotEntityPreference")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tblMarketSnapshotEntityPreference : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new tblMarketSnapshotEntityPreference object.
        /// </summary>
        /// <param name="entityPreferenceId">Initial value of the EntityPreferenceId property.</param>
        /// <param name="groupPreferenceId">Initial value of the GroupPreferenceId property.</param>
        /// <param name="entityName">Initial value of the EntityName property.</param>
        /// <param name="entityOrder">Initial value of the EntityOrder property.</param>
        /// <param name="entityType">Initial value of the EntityType property.</param>
        /// <param name="entityId">Initial value of the EntityId property.</param>
        public static tblMarketSnapshotEntityPreference CreatetblMarketSnapshotEntityPreference(global::System.Int32 entityPreferenceId, global::System.Int32 groupPreferenceId, global::System.String entityName, global::System.Int32 entityOrder, global::System.String entityType, global::System.String entityId)
        {
            tblMarketSnapshotEntityPreference tblMarketSnapshotEntityPreference = new tblMarketSnapshotEntityPreference();
            tblMarketSnapshotEntityPreference.EntityPreferenceId = entityPreferenceId;
            tblMarketSnapshotEntityPreference.GroupPreferenceId = groupPreferenceId;
            tblMarketSnapshotEntityPreference.EntityName = entityName;
            tblMarketSnapshotEntityPreference.EntityOrder = entityOrder;
            tblMarketSnapshotEntityPreference.EntityType = entityType;
            tblMarketSnapshotEntityPreference.EntityId = entityId;
            return tblMarketSnapshotEntityPreference;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityPreferenceId
        {
            get
            {
                return _EntityPreferenceId;
            }
            set
            {
                if (_EntityPreferenceId != value)
                {
                    OnEntityPreferenceIdChanging(value);
                    ReportPropertyChanging("EntityPreferenceId");
                    _EntityPreferenceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EntityPreferenceId");
                    OnEntityPreferenceIdChanged();
                }
            }
        }
        private global::System.Int32 _EntityPreferenceId;
        partial void OnEntityPreferenceIdChanging(global::System.Int32 value);
        partial void OnEntityPreferenceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupPreferenceId
        {
            get
            {
                return _GroupPreferenceId;
            }
            set
            {
                OnGroupPreferenceIdChanging(value);
                ReportPropertyChanging("GroupPreferenceId");
                _GroupPreferenceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupPreferenceId");
                OnGroupPreferenceIdChanged();
            }
        }
        private global::System.Int32 _GroupPreferenceId;
        partial void OnGroupPreferenceIdChanging(global::System.Int32 value);
        partial void OnGroupPreferenceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EntityName
        {
            get
            {
                return _EntityName;
            }
            set
            {
                OnEntityNameChanging(value);
                ReportPropertyChanging("EntityName");
                _EntityName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EntityName");
                OnEntityNameChanged();
            }
        }
        private global::System.String _EntityName;
        partial void OnEntityNameChanging(global::System.String value);
        partial void OnEntityNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EntityReturnType
        {
            get
            {
                return _EntityReturnType;
            }
            set
            {
                OnEntityReturnTypeChanging(value);
                ReportPropertyChanging("EntityReturnType");
                _EntityReturnType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EntityReturnType");
                OnEntityReturnTypeChanged();
            }
        }
        private global::System.String _EntityReturnType;
        partial void OnEntityReturnTypeChanging(global::System.String value);
        partial void OnEntityReturnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityOrder
        {
            get
            {
                return _EntityOrder;
            }
            set
            {
                OnEntityOrderChanging(value);
                ReportPropertyChanging("EntityOrder");
                _EntityOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityOrder");
                OnEntityOrderChanged();
            }
        }
        private global::System.Int32 _EntityOrder;
        partial void OnEntityOrderChanging(global::System.Int32 value);
        partial void OnEntityOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EntityType
        {
            get
            {
                return _EntityType;
            }
            set
            {
                OnEntityTypeChanging(value);
                ReportPropertyChanging("EntityType");
                _EntityType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EntityType");
                OnEntityTypeChanged();
            }
        }
        private global::System.String _EntityType;
        partial void OnEntityTypeChanging(global::System.String value);
        partial void OnEntityTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EntityId
        {
            get
            {
                return _EntityId;
            }
            set
            {
                OnEntityIdChanging(value);
                ReportPropertyChanging("EntityId");
                _EntityId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EntityId");
                OnEntityIdChanged();
            }
        }
        private global::System.String _EntityId;
        partial void OnEntityIdChanging(global::System.String value);
        partial void OnEntityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EntityNodeType
        {
            get
            {
                return _EntityNodeType;
            }
            set
            {
                OnEntityNodeTypeChanging(value);
                ReportPropertyChanging("EntityNodeType");
                _EntityNodeType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EntityNodeType");
                OnEntityNodeTypeChanged();
            }
        }
        private global::System.String _EntityNodeType;
        partial void OnEntityNodeTypeChanging(global::System.String value);
        partial void OnEntityNodeTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EntityNodeValueCode
        {
            get
            {
                return _EntityNodeValueCode;
            }
            set
            {
                OnEntityNodeValueCodeChanging(value);
                ReportPropertyChanging("EntityNodeValueCode");
                _EntityNodeValueCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EntityNodeValueCode");
                OnEntityNodeValueCodeChanged();
            }
        }
        private global::System.String _EntityNodeValueCode;
        partial void OnEntityNodeValueCodeChanging(global::System.String value);
        partial void OnEntityNodeValueCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EntityNodeValueName
        {
            get
            {
                return _EntityNodeValueName;
            }
            set
            {
                OnEntityNodeValueNameChanging(value);
                ReportPropertyChanging("EntityNodeValueName");
                _EntityNodeValueName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EntityNodeValueName");
                OnEntityNodeValueNameChanged();
            }
        }
        private global::System.String _EntityNodeValueName;
        partial void OnEntityNodeValueNameChanging(global::System.String value);
        partial void OnEntityNodeValueNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ResearchModel", "FK_tblMarketSnapshotEntityPreference_tblMarketSnapshotGroupPreference", "tblMarketSnapshotGroupPreference")]
        public tblMarketSnapshotGroupPreference tblMarketSnapshotGroupPreference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tblMarketSnapshotGroupPreference>("ResearchModel.FK_tblMarketSnapshotEntityPreference_tblMarketSnapshotGroupPreference", "tblMarketSnapshotGroupPreference").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tblMarketSnapshotGroupPreference>("ResearchModel.FK_tblMarketSnapshotEntityPreference_tblMarketSnapshotGroupPreference", "tblMarketSnapshotGroupPreference").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<tblMarketSnapshotGroupPreference> tblMarketSnapshotGroupPreferenceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tblMarketSnapshotGroupPreference>("ResearchModel.FK_tblMarketSnapshotEntityPreference_tblMarketSnapshotGroupPreference", "tblMarketSnapshotGroupPreference");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<tblMarketSnapshotGroupPreference>("ResearchModel.FK_tblMarketSnapshotEntityPreference_tblMarketSnapshotGroupPreference", "tblMarketSnapshotGroupPreference", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ResearchModel", Name="tblMarketSnapshotGroupPreference")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tblMarketSnapshotGroupPreference : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new tblMarketSnapshotGroupPreference object.
        /// </summary>
        /// <param name="groupPreferenceId">Initial value of the GroupPreferenceId property.</param>
        /// <param name="snapshotPreferenceId">Initial value of the SnapshotPreferenceId property.</param>
        /// <param name="groupName">Initial value of the GroupName property.</param>
        public static tblMarketSnapshotGroupPreference CreatetblMarketSnapshotGroupPreference(global::System.Int32 groupPreferenceId, global::System.Int32 snapshotPreferenceId, global::System.String groupName)
        {
            tblMarketSnapshotGroupPreference tblMarketSnapshotGroupPreference = new tblMarketSnapshotGroupPreference();
            tblMarketSnapshotGroupPreference.GroupPreferenceId = groupPreferenceId;
            tblMarketSnapshotGroupPreference.SnapshotPreferenceId = snapshotPreferenceId;
            tblMarketSnapshotGroupPreference.GroupName = groupName;
            return tblMarketSnapshotGroupPreference;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupPreferenceId
        {
            get
            {
                return _GroupPreferenceId;
            }
            set
            {
                if (_GroupPreferenceId != value)
                {
                    OnGroupPreferenceIdChanging(value);
                    ReportPropertyChanging("GroupPreferenceId");
                    _GroupPreferenceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GroupPreferenceId");
                    OnGroupPreferenceIdChanged();
                }
            }
        }
        private global::System.Int32 _GroupPreferenceId;
        partial void OnGroupPreferenceIdChanging(global::System.Int32 value);
        partial void OnGroupPreferenceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SnapshotPreferenceId
        {
            get
            {
                return _SnapshotPreferenceId;
            }
            set
            {
                OnSnapshotPreferenceIdChanging(value);
                ReportPropertyChanging("SnapshotPreferenceId");
                _SnapshotPreferenceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SnapshotPreferenceId");
                OnSnapshotPreferenceIdChanged();
            }
        }
        private global::System.Int32 _SnapshotPreferenceId;
        partial void OnSnapshotPreferenceIdChanging(global::System.Int32 value);
        partial void OnSnapshotPreferenceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GroupName
        {
            get
            {
                return _GroupName;
            }
            set
            {
                OnGroupNameChanging(value);
                ReportPropertyChanging("GroupName");
                _GroupName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("GroupName");
                OnGroupNameChanged();
            }
        }
        private global::System.String _GroupName;
        partial void OnGroupNameChanging(global::System.String value);
        partial void OnGroupNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ResearchModel", "FK_tblMarketSnapshotGroupPreference_tblMarketSnapshotPreference", "tblMarketSnapshotPreference")]
        public tblMarketSnapshotPreference tblMarketSnapshotPreference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tblMarketSnapshotPreference>("ResearchModel.FK_tblMarketSnapshotGroupPreference_tblMarketSnapshotPreference", "tblMarketSnapshotPreference").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tblMarketSnapshotPreference>("ResearchModel.FK_tblMarketSnapshotGroupPreference_tblMarketSnapshotPreference", "tblMarketSnapshotPreference").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<tblMarketSnapshotPreference> tblMarketSnapshotPreferenceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tblMarketSnapshotPreference>("ResearchModel.FK_tblMarketSnapshotGroupPreference_tblMarketSnapshotPreference", "tblMarketSnapshotPreference");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<tblMarketSnapshotPreference>("ResearchModel.FK_tblMarketSnapshotGroupPreference_tblMarketSnapshotPreference", "tblMarketSnapshotPreference", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ResearchModel", "FK_tblMarketSnapshotEntityPreference_tblMarketSnapshotGroupPreference", "tblMarketSnapshotEntityPreference")]
        public EntityCollection<tblMarketSnapshotEntityPreference> tblMarketSnapshotEntityPreference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<tblMarketSnapshotEntityPreference>("ResearchModel.FK_tblMarketSnapshotEntityPreference_tblMarketSnapshotGroupPreference", "tblMarketSnapshotEntityPreference");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<tblMarketSnapshotEntityPreference>("ResearchModel.FK_tblMarketSnapshotEntityPreference_tblMarketSnapshotGroupPreference", "tblMarketSnapshotEntityPreference", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ResearchModel", Name="tblMarketSnapshotPreference")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tblMarketSnapshotPreference : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new tblMarketSnapshotPreference object.
        /// </summary>
        /// <param name="snapshotPreferenceId">Initial value of the SnapshotPreferenceId property.</param>
        /// <param name="snapshotName">Initial value of the SnapshotName property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static tblMarketSnapshotPreference CreatetblMarketSnapshotPreference(global::System.Int32 snapshotPreferenceId, global::System.String snapshotName, global::System.String userId)
        {
            tblMarketSnapshotPreference tblMarketSnapshotPreference = new tblMarketSnapshotPreference();
            tblMarketSnapshotPreference.SnapshotPreferenceId = snapshotPreferenceId;
            tblMarketSnapshotPreference.SnapshotName = snapshotName;
            tblMarketSnapshotPreference.UserId = userId;
            return tblMarketSnapshotPreference;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SnapshotPreferenceId
        {
            get
            {
                return _SnapshotPreferenceId;
            }
            set
            {
                if (_SnapshotPreferenceId != value)
                {
                    OnSnapshotPreferenceIdChanging(value);
                    ReportPropertyChanging("SnapshotPreferenceId");
                    _SnapshotPreferenceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SnapshotPreferenceId");
                    OnSnapshotPreferenceIdChanged();
                }
            }
        }
        private global::System.Int32 _SnapshotPreferenceId;
        partial void OnSnapshotPreferenceIdChanging(global::System.Int32 value);
        partial void OnSnapshotPreferenceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SnapshotName
        {
            get
            {
                return _SnapshotName;
            }
            set
            {
                OnSnapshotNameChanging(value);
                ReportPropertyChanging("SnapshotName");
                _SnapshotName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SnapshotName");
                OnSnapshotNameChanged();
            }
        }
        private global::System.String _SnapshotName;
        partial void OnSnapshotNameChanging(global::System.String value);
        partial void OnSnapshotNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.String _UserId;
        partial void OnUserIdChanging(global::System.String value);
        partial void OnUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ResearchModel", "FK_tblMarketSnapshotGroupPreference_tblMarketSnapshotPreference", "tblMarketSnapshotGroupPreference")]
        public EntityCollection<tblMarketSnapshotGroupPreference> tblMarketSnapshotGroupPreferences
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<tblMarketSnapshotGroupPreference>("ResearchModel.FK_tblMarketSnapshotGroupPreference_tblMarketSnapshotPreference", "tblMarketSnapshotGroupPreference");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<tblMarketSnapshotGroupPreference>("ResearchModel.FK_tblMarketSnapshotGroupPreference_tblMarketSnapshotPreference", "tblMarketSnapshotGroupPreference", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ResearchModel", Name="UserDashboardPreferance")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserDashboardPreferance : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserDashboardPreferance object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static UserDashboardPreferance CreateUserDashboardPreferance(global::System.Int32 id, global::System.String userId)
        {
            UserDashboardPreferance userDashboardPreferance = new UserDashboardPreferance();
            userDashboardPreferance.Id = id;
            userDashboardPreferance.UserId = userId;
            return userDashboardPreferance;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.String _UserId;
        partial void OnUserIdChanging(global::System.String value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserPref
        {
            get
            {
                return _UserPref;
            }
            set
            {
                OnUserPrefChanging(value);
                ReportPropertyChanging("UserPref");
                _UserPref = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserPref");
                OnUserPrefChanged();
            }
        }
        private global::System.String _UserPref;
        partial void OnUserPrefChanging(global::System.String value);
        partial void OnUserPrefChanged();

        #endregion
    
    }

    #endregion
    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ResearchModel", Name="A_PROC_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class A_PROC_Result : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String XREF
        {
            get
            {
                return _XREF;
            }
            set
            {
                OnXREFChanging(value);
                ReportPropertyChanging("XREF");
                _XREF = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("XREF");
                OnXREFChanged();
            }
        }
        private global::System.String _XREF;
        partial void OnXREFChanging(global::System.String value);
        partial void OnXREFChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> YEAR2009
        {
            get
            {
                return _YEAR2009;
            }
            set
            {
                OnYEAR2009Changing(value);
                ReportPropertyChanging("YEAR2009");
                _YEAR2009 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YEAR2009");
                OnYEAR2009Changed();
            }
        }
        private Nullable<global::System.Single> _YEAR2009;
        partial void OnYEAR2009Changing(Nullable<global::System.Single> value);
        partial void OnYEAR2009Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> YEAR2010
        {
            get
            {
                return _YEAR2010;
            }
            set
            {
                OnYEAR2010Changing(value);
                ReportPropertyChanging("YEAR2010");
                _YEAR2010 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YEAR2010");
                OnYEAR2010Changed();
            }
        }
        private Nullable<global::System.Single> _YEAR2010;
        partial void OnYEAR2010Changing(Nullable<global::System.Single> value);
        partial void OnYEAR2010Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> YEAR2011
        {
            get
            {
                return _YEAR2011;
            }
            set
            {
                OnYEAR2011Changing(value);
                ReportPropertyChanging("YEAR2011");
                _YEAR2011 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YEAR2011");
                OnYEAR2011Changed();
            }
        }
        private Nullable<global::System.Single> _YEAR2011;
        partial void OnYEAR2011Changing(Nullable<global::System.Single> value);
        partial void OnYEAR2011Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> YEAR2012
        {
            get
            {
                return _YEAR2012;
            }
            set
            {
                OnYEAR2012Changing(value);
                ReportPropertyChanging("YEAR2012");
                _YEAR2012 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YEAR2012");
                OnYEAR2012Changed();
            }
        }
        private Nullable<global::System.Single> _YEAR2012;
        partial void OnYEAR2012Changing(Nullable<global::System.Single> value);
        partial void OnYEAR2012Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> YEAR2013
        {
            get
            {
                return _YEAR2013;
            }
            set
            {
                OnYEAR2013Changing(value);
                ReportPropertyChanging("YEAR2013");
                _YEAR2013 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YEAR2013");
                OnYEAR2013Changed();
            }
        }
        private Nullable<global::System.Single> _YEAR2013;
        partial void OnYEAR2013Changing(Nullable<global::System.Single> value);
        partial void OnYEAR2013Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SEC_SECSHORT
        {
            get
            {
                return _SEC_SECSHORT;
            }
            set
            {
                OnSEC_SECSHORTChanging(value);
                ReportPropertyChanging("SEC_SECSHORT");
                _SEC_SECSHORT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SEC_SECSHORT");
                OnSEC_SECSHORTChanged();
            }
        }
        private global::System.String _SEC_SECSHORT;
        partial void OnSEC_SECSHORTChanging(global::System.String value);
        partial void OnSEC_SECSHORTChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ResearchModel", Name="CommodityResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class CommodityResult : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String COMMODITY_ID
        {
            get
            {
                return _COMMODITY_ID;
            }
            set
            {
                OnCOMMODITY_IDChanging(value);
                ReportPropertyChanging("COMMODITY_ID");
                _COMMODITY_ID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("COMMODITY_ID");
                OnCOMMODITY_IDChanged();
            }
        }
        private global::System.String _COMMODITY_ID;
        partial void OnCOMMODITY_IDChanging(global::System.String value);
        partial void OnCOMMODITY_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> CURRENT_YEAR_END
        {
            get
            {
                return _CURRENT_YEAR_END;
            }
            set
            {
                OnCURRENT_YEAR_ENDChanging(value);
                ReportPropertyChanging("CURRENT_YEAR_END");
                _CURRENT_YEAR_END = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CURRENT_YEAR_END");
                OnCURRENT_YEAR_ENDChanged();
            }
        }
        private Nullable<global::System.Single> _CURRENT_YEAR_END;
        partial void OnCURRENT_YEAR_ENDChanging(Nullable<global::System.Single> value);
        partial void OnCURRENT_YEAR_ENDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> NEXT_YEAR_END
        {
            get
            {
                return _NEXT_YEAR_END;
            }
            set
            {
                OnNEXT_YEAR_ENDChanging(value);
                ReportPropertyChanging("NEXT_YEAR_END");
                _NEXT_YEAR_END = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NEXT_YEAR_END");
                OnNEXT_YEAR_ENDChanged();
            }
        }
        private Nullable<global::System.Single> _NEXT_YEAR_END;
        partial void OnNEXT_YEAR_ENDChanging(Nullable<global::System.Single> value);
        partial void OnNEXT_YEAR_ENDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> LONG_TERM
        {
            get
            {
                return _LONG_TERM;
            }
            set
            {
                OnLONG_TERMChanging(value);
                ReportPropertyChanging("LONG_TERM");
                _LONG_TERM = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LONG_TERM");
                OnLONG_TERMChanged();
            }
        }
        private Nullable<global::System.Single> _LONG_TERM;
        partial void OnLONG_TERMChanging(Nullable<global::System.Single> value);
        partial void OnLONG_TERMChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LASTUPDATE
        {
            get
            {
                return _LASTUPDATE;
            }
            set
            {
                OnLASTUPDATEChanging(value);
                ReportPropertyChanging("LASTUPDATE");
                _LASTUPDATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LASTUPDATE");
                OnLASTUPDATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _LASTUPDATE;
        partial void OnLASTUPDATEChanging(Nullable<global::System.DateTime> value);
        partial void OnLASTUPDATEChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ResearchModel", Name="ConsensusEstimates_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ConsensusEstimates_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ConsensusEstimates_Result object.
        /// </summary>
        /// <param name="estimateType">Initial value of the EstimateType property.</param>
        /// <param name="srt">Initial value of the srt property.</param>
        /// <param name="amtType">Initial value of the AmtType property.</param>
        public static ConsensusEstimates_Result CreateConsensusEstimates_Result(global::System.String estimateType, global::System.String srt, global::System.String amtType)
        {
            ConsensusEstimates_Result consensusEstimates_Result = new ConsensusEstimates_Result();
            consensusEstimates_Result.EstimateType = estimateType;
            consensusEstimates_Result.srt = srt;
            consensusEstimates_Result.AmtType = amtType;
            return consensusEstimates_Result;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Xref
        {
            get
            {
                return _Xref;
            }
            set
            {
                OnXrefChanging(value);
                ReportPropertyChanging("Xref");
                _Xref = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Xref");
                OnXrefChanged();
            }
        }
        private global::System.String _Xref;
        partial void OnXrefChanging(global::System.String value);
        partial void OnXrefChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EstimateType
        {
            get
            {
                return _EstimateType;
            }
            set
            {
                OnEstimateTypeChanging(value);
                ReportPropertyChanging("EstimateType");
                _EstimateType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EstimateType");
                OnEstimateTypeChanged();
            }
        }
        private global::System.String _EstimateType;
        partial void OnEstimateTypeChanging(global::System.String value);
        partial void OnEstimateTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String srt
        {
            get
            {
                return _srt;
            }
            set
            {
                OnsrtChanging(value);
                ReportPropertyChanging("srt");
                _srt = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("srt");
                OnsrtChanged();
            }
        }
        private global::System.String _srt;
        partial void OnsrtChanging(global::System.String value);
        partial void OnsrtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AmtType
        {
            get
            {
                return _AmtType;
            }
            set
            {
                OnAmtTypeChanging(value);
                ReportPropertyChanging("AmtType");
                _AmtType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AmtType");
                OnAmtTypeChanged();
            }
        }
        private global::System.String _AmtType;
        partial void OnAmtTypeChanging(global::System.String value);
        partial void OnAmtTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Actual_Dec_2009
        {
            get
            {
                return _Actual_Dec_2009;
            }
            set
            {
                OnActual_Dec_2009Changing(value);
                ReportPropertyChanging("Actual_Dec_2009");
                _Actual_Dec_2009 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Actual_Dec_2009");
                OnActual_Dec_2009Changed();
            }
        }
        private global::System.String _Actual_Dec_2009;
        partial void OnActual_Dec_2009Changing(global::System.String value);
        partial void OnActual_Dec_2009Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Actual_Dec_2010
        {
            get
            {
                return _Actual_Dec_2010;
            }
            set
            {
                OnActual_Dec_2010Changing(value);
                ReportPropertyChanging("Actual_Dec_2010");
                _Actual_Dec_2010 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Actual_Dec_2010");
                OnActual_Dec_2010Changed();
            }
        }
        private global::System.String _Actual_Dec_2010;
        partial void OnActual_Dec_2010Changing(global::System.String value);
        partial void OnActual_Dec_2010Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Estimated_Dec_2009
        {
            get
            {
                return _Estimated_Dec_2009;
            }
            set
            {
                OnEstimated_Dec_2009Changing(value);
                ReportPropertyChanging("Estimated_Dec_2009");
                _Estimated_Dec_2009 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Estimated_Dec_2009");
                OnEstimated_Dec_2009Changed();
            }
        }
        private global::System.String _Estimated_Dec_2009;
        partial void OnEstimated_Dec_2009Changing(global::System.String value);
        partial void OnEstimated_Dec_2009Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Estimated_Dec_2010
        {
            get
            {
                return _Estimated_Dec_2010;
            }
            set
            {
                OnEstimated_Dec_2010Changing(value);
                ReportPropertyChanging("Estimated_Dec_2010");
                _Estimated_Dec_2010 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Estimated_Dec_2010");
                OnEstimated_Dec_2010Changed();
            }
        }
        private global::System.String _Estimated_Dec_2010;
        partial void OnEstimated_Dec_2010Changing(global::System.String value);
        partial void OnEstimated_Dec_2010Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Estimated_Dec_2011
        {
            get
            {
                return _Estimated_Dec_2011;
            }
            set
            {
                OnEstimated_Dec_2011Changing(value);
                ReportPropertyChanging("Estimated_Dec_2011");
                _Estimated_Dec_2011 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Estimated_Dec_2011");
                OnEstimated_Dec_2011Changed();
            }
        }
        private global::System.String _Estimated_Dec_2011;
        partial void OnEstimated_Dec_2011Changing(global::System.String value);
        partial void OnEstimated_Dec_2011Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Estimated_Dec_2012
        {
            get
            {
                return _Estimated_Dec_2012;
            }
            set
            {
                OnEstimated_Dec_2012Changing(value);
                ReportPropertyChanging("Estimated_Dec_2012");
                _Estimated_Dec_2012 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Estimated_Dec_2012");
                OnEstimated_Dec_2012Changed();
            }
        }
        private global::System.String _Estimated_Dec_2012;
        partial void OnEstimated_Dec_2012Changing(global::System.String value);
        partial void OnEstimated_Dec_2012Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Estimated_Dec_2013
        {
            get
            {
                return _Estimated_Dec_2013;
            }
            set
            {
                OnEstimated_Dec_2013Changing(value);
                ReportPropertyChanging("Estimated_Dec_2013");
                _Estimated_Dec_2013 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Estimated_Dec_2013");
                OnEstimated_Dec_2013Changed();
            }
        }
        private global::System.String _Estimated_Dec_2013;
        partial void OnEstimated_Dec_2013Changing(global::System.String value);
        partial void OnEstimated_Dec_2013Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Estimated_Dec_2014
        {
            get
            {
                return _Estimated_Dec_2014;
            }
            set
            {
                OnEstimated_Dec_2014Changing(value);
                ReportPropertyChanging("Estimated_Dec_2014");
                _Estimated_Dec_2014 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Estimated_Dec_2014");
                OnEstimated_Dec_2014Changed();
            }
        }
        private global::System.String _Estimated_Dec_2014;
        partial void OnEstimated_Dec_2014Changing(global::System.String value);
        partial void OnEstimated_Dec_2014Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Estimated_Dec_2015
        {
            get
            {
                return _Estimated_Dec_2015;
            }
            set
            {
                OnEstimated_Dec_2015Changing(value);
                ReportPropertyChanging("Estimated_Dec_2015");
                _Estimated_Dec_2015 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Estimated_Dec_2015");
                OnEstimated_Dec_2015Changed();
            }
        }
        private global::System.String _Estimated_Dec_2015;
        partial void OnEstimated_Dec_2015Changing(global::System.String value);
        partial void OnEstimated_Dec_2015Changed();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ResearchModel", Name="DetailedEstimates_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class DetailedEstimates_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DetailedEstimates_Result object.
        /// </summary>
        /// <param name="estimateType">Initial value of the EstimateType property.</param>
        /// <param name="srt">Initial value of the srt property.</param>
        /// <param name="amtType">Initial value of the AmtType property.</param>
        public static DetailedEstimates_Result CreateDetailedEstimates_Result(global::System.String estimateType, global::System.Int32 srt, global::System.String amtType)
        {
            DetailedEstimates_Result detailedEstimates_Result = new DetailedEstimates_Result();
            detailedEstimates_Result.EstimateType = estimateType;
            detailedEstimates_Result.srt = srt;
            detailedEstimates_Result.AmtType = amtType;
            return detailedEstimates_Result;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EstimateType
        {
            get
            {
                return _EstimateType;
            }
            set
            {
                OnEstimateTypeChanging(value);
                ReportPropertyChanging("EstimateType");
                _EstimateType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EstimateType");
                OnEstimateTypeChanged();
            }
        }
        private global::System.String _EstimateType;
        partial void OnEstimateTypeChanging(global::System.String value);
        partial void OnEstimateTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 srt
        {
            get
            {
                return _srt;
            }
            set
            {
                OnsrtChanging(value);
                ReportPropertyChanging("srt");
                _srt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("srt");
                OnsrtChanged();
            }
        }
        private global::System.Int32 _srt;
        partial void OnsrtChanging(global::System.Int32 value);
        partial void OnsrtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AmtType
        {
            get
            {
                return _AmtType;
            }
            set
            {
                OnAmtTypeChanging(value);
                ReportPropertyChanging("AmtType");
                _AmtType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AmtType");
                OnAmtTypeChanged();
            }
        }
        private global::System.String _AmtType;
        partial void OnAmtTypeChanging(global::System.String value);
        partial void OnAmtTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> FY2009
        {
            get
            {
                return _FY2009;
            }
            set
            {
                OnFY2009Changing(value);
                ReportPropertyChanging("FY2009");
                _FY2009 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FY2009");
                OnFY2009Changed();
            }
        }
        private Nullable<global::System.Single> _FY2009;
        partial void OnFY2009Changing(Nullable<global::System.Single> value);
        partial void OnFY2009Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> FY2010
        {
            get
            {
                return _FY2010;
            }
            set
            {
                OnFY2010Changing(value);
                ReportPropertyChanging("FY2010");
                _FY2010 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FY2010");
                OnFY2010Changed();
            }
        }
        private Nullable<global::System.Single> _FY2010;
        partial void OnFY2010Changing(Nullable<global::System.Single> value);
        partial void OnFY2010Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> FY2011
        {
            get
            {
                return _FY2011;
            }
            set
            {
                OnFY2011Changing(value);
                ReportPropertyChanging("FY2011");
                _FY2011 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FY2011");
                OnFY2011Changed();
            }
        }
        private Nullable<global::System.Single> _FY2011;
        partial void OnFY2011Changing(Nullable<global::System.Single> value);
        partial void OnFY2011Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> FY2012
        {
            get
            {
                return _FY2012;
            }
            set
            {
                OnFY2012Changing(value);
                ReportPropertyChanging("FY2012");
                _FY2012 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FY2012");
                OnFY2012Changed();
            }
        }
        private Nullable<global::System.Single> _FY2012;
        partial void OnFY2012Changing(Nullable<global::System.Single> value);
        partial void OnFY2012Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> FY2013
        {
            get
            {
                return _FY2013;
            }
            set
            {
                OnFY2013Changing(value);
                ReportPropertyChanging("FY2013");
                _FY2013 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FY2013");
                OnFY2013Changed();
            }
        }
        private Nullable<global::System.Single> _FY2013;
        partial void OnFY2013Changing(Nullable<global::System.Single> value);
        partial void OnFY2013Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> FY2014
        {
            get
            {
                return _FY2014;
            }
            set
            {
                OnFY2014Changing(value);
                ReportPropertyChanging("FY2014");
                _FY2014 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FY2014");
                OnFY2014Changed();
            }
        }
        private Nullable<global::System.Single> _FY2014;
        partial void OnFY2014Changing(Nullable<global::System.Single> value);
        partial void OnFY2014Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> FY2015
        {
            get
            {
                return _FY2015;
            }
            set
            {
                OnFY2015Changing(value);
                ReportPropertyChanging("FY2015");
                _FY2015 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FY2015");
                OnFY2015Changed();
            }
        }
        private Nullable<global::System.Single> _FY2015;
        partial void OnFY2015Changing(Nullable<global::System.Single> value);
        partial void OnFY2015Changed();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ResearchModel", Name="GetCompanies_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetCompanies_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetCompanies_Result object.
        /// </summary>
        /// <param name="xRef">Initial value of the XRef property.</param>
        public static GetCompanies_Result CreateGetCompanies_Result(global::System.String xRef)
        {
            GetCompanies_Result getCompanies_Result = new GetCompanies_Result();
            getCompanies_Result.XRef = xRef;
            return getCompanies_Result;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String XRef
        {
            get
            {
                return _XRef;
            }
            set
            {
                OnXRefChanging(value);
                ReportPropertyChanging("XRef");
                _XRef = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("XRef");
                OnXRefChanged();
            }
        }
        private global::System.String _XRef;
        partial void OnXRefChanging(global::System.String value);
        partial void OnXRefChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReportNumber
        {
            get
            {
                return _ReportNumber;
            }
            set
            {
                OnReportNumberChanging(value);
                ReportPropertyChanging("ReportNumber");
                _ReportNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ReportNumber");
                OnReportNumberChanged();
            }
        }
        private global::System.String _ReportNumber;
        partial void OnReportNumberChanging(global::System.String value);
        partial void OnReportNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Currency
        {
            get
            {
                return _Currency;
            }
            set
            {
                OnCurrencyChanging(value);
                ReportPropertyChanging("Currency");
                _Currency = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Currency");
                OnCurrencyChanged();
            }
        }
        private global::System.String _Currency;
        partial void OnCurrencyChanging(global::System.String value);
        partial void OnCurrencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CurrentPeriod
        {
            get
            {
                return _CurrentPeriod;
            }
            set
            {
                OnCurrentPeriodChanging(value);
                ReportPropertyChanging("CurrentPeriod");
                _CurrentPeriod = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CurrentPeriod");
                OnCurrentPeriodChanged();
            }
        }
        private global::System.String _CurrentPeriod;
        partial void OnCurrentPeriodChanging(global::System.String value);
        partial void OnCurrentPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Earnings
        {
            get
            {
                return _Earnings;
            }
            set
            {
                OnEarningsChanging(value);
                ReportPropertyChanging("Earnings");
                _Earnings = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Earnings");
                OnEarningsChanged();
            }
        }
        private global::System.String _Earnings;
        partial void OnEarningsChanging(global::System.String value);
        partial void OnEarningsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _Active;
        partial void OnActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CodeIndustry
        {
            get
            {
                return _CodeIndustry;
            }
            set
            {
                OnCodeIndustryChanging(value);
                ReportPropertyChanging("CodeIndustry");
                _CodeIndustry = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CodeIndustry");
                OnCodeIndustryChanged();
            }
        }
        private global::System.String _CodeIndustry;
        partial void OnCodeIndustryChanging(global::System.String value);
        partial void OnCodeIndustryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CodeSector
        {
            get
            {
                return _CodeSector;
            }
            set
            {
                OnCodeSectorChanging(value);
                ReportPropertyChanging("CodeSector");
                _CodeSector = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CodeSector");
                OnCodeSectorChanged();
            }
        }
        private global::System.String _CodeSector;
        partial void OnCodeSectorChanging(global::System.String value);
        partial void OnCodeSectorChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ResearchModel", Name="MacroDataCTY_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class MacroDataCTY_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MacroDataCTY_Result object.
        /// </summary>
        /// <param name="cOUNTRY_NAME">Initial value of the COUNTRY_NAME property.</param>
        /// <param name="cATEGORY_NAME">Initial value of the CATEGORY_NAME property.</param>
        /// <param name="dISPLAY_TYPE">Initial value of the DISPLAY_TYPE property.</param>
        /// <param name="dESCRIPTION">Initial value of the DESCRIPTION property.</param>
        /// <param name="sORT_ORDER">Initial value of the SORT_ORDER property.</param>
        public static MacroDataCTY_Result CreateMacroDataCTY_Result(global::System.String cOUNTRY_NAME, global::System.String cATEGORY_NAME, global::System.String dISPLAY_TYPE, global::System.String dESCRIPTION, global::System.Int16 sORT_ORDER)
        {
            MacroDataCTY_Result macroDataCTY_Result = new MacroDataCTY_Result();
            macroDataCTY_Result.COUNTRY_NAME = cOUNTRY_NAME;
            macroDataCTY_Result.CATEGORY_NAME = cATEGORY_NAME;
            macroDataCTY_Result.DISPLAY_TYPE = dISPLAY_TYPE;
            macroDataCTY_Result.DESCRIPTION = dESCRIPTION;
            macroDataCTY_Result.SORT_ORDER = sORT_ORDER;
            return macroDataCTY_Result;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String COUNTRY_NAME
        {
            get
            {
                return _COUNTRY_NAME;
            }
            set
            {
                OnCOUNTRY_NAMEChanging(value);
                ReportPropertyChanging("COUNTRY_NAME");
                _COUNTRY_NAME = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("COUNTRY_NAME");
                OnCOUNTRY_NAMEChanged();
            }
        }
        private global::System.String _COUNTRY_NAME;
        partial void OnCOUNTRY_NAMEChanging(global::System.String value);
        partial void OnCOUNTRY_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CATEGORY_NAME
        {
            get
            {
                return _CATEGORY_NAME;
            }
            set
            {
                OnCATEGORY_NAMEChanging(value);
                ReportPropertyChanging("CATEGORY_NAME");
                _CATEGORY_NAME = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CATEGORY_NAME");
                OnCATEGORY_NAMEChanged();
            }
        }
        private global::System.String _CATEGORY_NAME;
        partial void OnCATEGORY_NAMEChanging(global::System.String value);
        partial void OnCATEGORY_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DISPLAY_TYPE
        {
            get
            {
                return _DISPLAY_TYPE;
            }
            set
            {
                OnDISPLAY_TYPEChanging(value);
                ReportPropertyChanging("DISPLAY_TYPE");
                _DISPLAY_TYPE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DISPLAY_TYPE");
                OnDISPLAY_TYPEChanged();
            }
        }
        private global::System.String _DISPLAY_TYPE;
        partial void OnDISPLAY_TYPEChanging(global::System.String value);
        partial void OnDISPLAY_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DESCRIPTION
        {
            get
            {
                return _DESCRIPTION;
            }
            set
            {
                OnDESCRIPTIONChanging(value);
                ReportPropertyChanging("DESCRIPTION");
                _DESCRIPTION = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DESCRIPTION");
                OnDESCRIPTIONChanged();
            }
        }
        private global::System.String _DESCRIPTION;
        partial void OnDESCRIPTIONChanging(global::System.String value);
        partial void OnDESCRIPTIONChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 SORT_ORDER
        {
            get
            {
                return _SORT_ORDER;
            }
            set
            {
                OnSORT_ORDERChanging(value);
                ReportPropertyChanging("SORT_ORDER");
                _SORT_ORDER = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SORT_ORDER");
                OnSORT_ORDERChanged();
            }
        }
        private global::System.Int16 _SORT_ORDER;
        partial void OnSORT_ORDERChanging(global::System.Int16 value);
        partial void OnSORT_ORDERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> YEAR_1988
        {
            get
            {
                return _YEAR_1988;
            }
            set
            {
                OnYEAR_1988Changing(value);
                ReportPropertyChanging("YEAR_1988");
                _YEAR_1988 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YEAR_1988");
                OnYEAR_1988Changed();
            }
        }
        private Nullable<global::System.Decimal> _YEAR_1988;
        partial void OnYEAR_1988Changing(Nullable<global::System.Decimal> value);
        partial void OnYEAR_1988Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> YEAR_1989
        {
            get
            {
                return _YEAR_1989;
            }
            set
            {
                OnYEAR_1989Changing(value);
                ReportPropertyChanging("YEAR_1989");
                _YEAR_1989 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YEAR_1989");
                OnYEAR_1989Changed();
            }
        }
        private Nullable<global::System.Decimal> _YEAR_1989;
        partial void OnYEAR_1989Changing(Nullable<global::System.Decimal> value);
        partial void OnYEAR_1989Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> YEAR_1990
        {
            get
            {
                return _YEAR_1990;
            }
            set
            {
                OnYEAR_1990Changing(value);
                ReportPropertyChanging("YEAR_1990");
                _YEAR_1990 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YEAR_1990");
                OnYEAR_1990Changed();
            }
        }
        private Nullable<global::System.Decimal> _YEAR_1990;
        partial void OnYEAR_1990Changing(Nullable<global::System.Decimal> value);
        partial void OnYEAR_1990Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> YEAR_1991
        {
            get
            {
                return _YEAR_1991;
            }
            set
            {
                OnYEAR_1991Changing(value);
                ReportPropertyChanging("YEAR_1991");
                _YEAR_1991 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YEAR_1991");
                OnYEAR_1991Changed();
            }
        }
        private Nullable<global::System.Decimal> _YEAR_1991;
        partial void OnYEAR_1991Changing(Nullable<global::System.Decimal> value);
        partial void OnYEAR_1991Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> YEAR_1992
        {
            get
            {
                return _YEAR_1992;
            }
            set
            {
                OnYEAR_1992Changing(value);
                ReportPropertyChanging("YEAR_1992");
                _YEAR_1992 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YEAR_1992");
                OnYEAR_1992Changed();
            }
        }
        private Nullable<global::System.Decimal> _YEAR_1992;
        partial void OnYEAR_1992Changing(Nullable<global::System.Decimal> value);
        partial void OnYEAR_1992Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> YEAR_1993
        {
            get
            {
                return _YEAR_1993;
            }
            set
            {
                OnYEAR_1993Changing(value);
                ReportPropertyChanging("YEAR_1993");
                _YEAR_1993 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YEAR_1993");
                OnYEAR_1993Changed();
            }
        }
        private Nullable<global::System.Decimal> _YEAR_1993;
        partial void OnYEAR_1993Changing(Nullable<global::System.Decimal> value);
        partial void OnYEAR_1993Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> YEAR_1994
        {
            get
            {
                return _YEAR_1994;
            }
            set
            {
                OnYEAR_1994Changing(value);
                ReportPropertyChanging("YEAR_1994");
                _YEAR_1994 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YEAR_1994");
                OnYEAR_1994Changed();
            }
        }
        private Nullable<global::System.Decimal> _YEAR_1994;
        partial void OnYEAR_1994Changing(Nullable<global::System.Decimal> value);
        partial void OnYEAR_1994Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> YEAR_1995
        {
            get
            {
                return _YEAR_1995;
            }
            set
            {
                OnYEAR_1995Changing(value);
                ReportPropertyChanging("YEAR_1995");
                _YEAR_1995 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YEAR_1995");
                OnYEAR_1995Changed();
            }
        }
        private Nullable<global::System.Decimal> _YEAR_1995;
        partial void OnYEAR_1995Changing(Nullable<global::System.Decimal> value);
        partial void OnYEAR_1995Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> YEAR_1996
        {
            get
            {
                return _YEAR_1996;
            }
            set
            {
                OnYEAR_1996Changing(value);
                ReportPropertyChanging("YEAR_1996");
                _YEAR_1996 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YEAR_1996");
                OnYEAR_1996Changed();
            }
        }
        private Nullable<global::System.Decimal> _YEAR_1996;
        partial void OnYEAR_1996Changing(Nullable<global::System.Decimal> value);
        partial void OnYEAR_1996Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> YEAR_1997
        {
            get
            {
                return _YEAR_1997;
            }
            set
            {
                OnYEAR_1997Changing(value);
                ReportPropertyChanging("YEAR_1997");
                _YEAR_1997 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YEAR_1997");
                OnYEAR_1997Changed();
            }
        }
        private Nullable<global::System.Decimal> _YEAR_1997;
        partial void OnYEAR_1997Changing(Nullable<global::System.Decimal> value);
        partial void OnYEAR_1997Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> YEAR_1998
        {
            get
            {
                return _YEAR_1998;
            }
            set
            {
                OnYEAR_1998Changing(value);
                ReportPropertyChanging("YEAR_1998");
                _YEAR_1998 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YEAR_1998");
                OnYEAR_1998Changed();
            }
        }
        private Nullable<global::System.Decimal> _YEAR_1998;
        partial void OnYEAR_1998Changing(Nullable<global::System.Decimal> value);
        partial void OnYEAR_1998Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> YEAR_1999
        {
            get
            {
                return _YEAR_1999;
            }
            set
            {
                OnYEAR_1999Changing(value);
                ReportPropertyChanging("YEAR_1999");
                _YEAR_1999 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YEAR_1999");
                OnYEAR_1999Changed();
            }
        }
        private Nullable<global::System.Decimal> _YEAR_1999;
        partial void OnYEAR_1999Changing(Nullable<global::System.Decimal> value);
        partial void OnYEAR_1999Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> YEAR_2000
        {
            get
            {
                return _YEAR_2000;
            }
            set
            {
                OnYEAR_2000Changing(value);
                ReportPropertyChanging("YEAR_2000");
                _YEAR_2000 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YEAR_2000");
                OnYEAR_2000Changed();
            }
        }
        private Nullable<global::System.Decimal> _YEAR_2000;
        partial void OnYEAR_2000Changing(Nullable<global::System.Decimal> value);
        partial void OnYEAR_2000Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> YEAR_2001
        {
            get
            {
                return _YEAR_2001;
            }
            set
            {
                OnYEAR_2001Changing(value);
                ReportPropertyChanging("YEAR_2001");
                _YEAR_2001 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YEAR_2001");
                OnYEAR_2001Changed();
            }
        }
        private Nullable<global::System.Decimal> _YEAR_2001;
        partial void OnYEAR_2001Changing(Nullable<global::System.Decimal> value);
        partial void OnYEAR_2001Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> YEAR_2002
        {
            get
            {
                return _YEAR_2002;
            }
            set
            {
                OnYEAR_2002Changing(value);
                ReportPropertyChanging("YEAR_2002");
                _YEAR_2002 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YEAR_2002");
                OnYEAR_2002Changed();
            }
        }
        private Nullable<global::System.Decimal> _YEAR_2002;
        partial void OnYEAR_2002Changing(Nullable<global::System.Decimal> value);
        partial void OnYEAR_2002Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> YEAR_2003
        {
            get
            {
                return _YEAR_2003;
            }
            set
            {
                OnYEAR_2003Changing(value);
                ReportPropertyChanging("YEAR_2003");
                _YEAR_2003 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YEAR_2003");
                OnYEAR_2003Changed();
            }
        }
        private Nullable<global::System.Decimal> _YEAR_2003;
        partial void OnYEAR_2003Changing(Nullable<global::System.Decimal> value);
        partial void OnYEAR_2003Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> YEAR_2004
        {
            get
            {
                return _YEAR_2004;
            }
            set
            {
                OnYEAR_2004Changing(value);
                ReportPropertyChanging("YEAR_2004");
                _YEAR_2004 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YEAR_2004");
                OnYEAR_2004Changed();
            }
        }
        private Nullable<global::System.Decimal> _YEAR_2004;
        partial void OnYEAR_2004Changing(Nullable<global::System.Decimal> value);
        partial void OnYEAR_2004Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> YEAR_2005
        {
            get
            {
                return _YEAR_2005;
            }
            set
            {
                OnYEAR_2005Changing(value);
                ReportPropertyChanging("YEAR_2005");
                _YEAR_2005 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YEAR_2005");
                OnYEAR_2005Changed();
            }
        }
        private Nullable<global::System.Decimal> _YEAR_2005;
        partial void OnYEAR_2005Changing(Nullable<global::System.Decimal> value);
        partial void OnYEAR_2005Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> YEAR_2006
        {
            get
            {
                return _YEAR_2006;
            }
            set
            {
                OnYEAR_2006Changing(value);
                ReportPropertyChanging("YEAR_2006");
                _YEAR_2006 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YEAR_2006");
                OnYEAR_2006Changed();
            }
        }
        private Nullable<global::System.Decimal> _YEAR_2006;
        partial void OnYEAR_2006Changing(Nullable<global::System.Decimal> value);
        partial void OnYEAR_2006Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> YEAR_2007
        {
            get
            {
                return _YEAR_2007;
            }
            set
            {
                OnYEAR_2007Changing(value);
                ReportPropertyChanging("YEAR_2007");
                _YEAR_2007 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YEAR_2007");
                OnYEAR_2007Changed();
            }
        }
        private Nullable<global::System.Decimal> _YEAR_2007;
        partial void OnYEAR_2007Changing(Nullable<global::System.Decimal> value);
        partial void OnYEAR_2007Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> YEAR_2008
        {
            get
            {
                return _YEAR_2008;
            }
            set
            {
                OnYEAR_2008Changing(value);
                ReportPropertyChanging("YEAR_2008");
                _YEAR_2008 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YEAR_2008");
                OnYEAR_2008Changed();
            }
        }
        private Nullable<global::System.Decimal> _YEAR_2008;
        partial void OnYEAR_2008Changing(Nullable<global::System.Decimal> value);
        partial void OnYEAR_2008Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> YEAR_2009
        {
            get
            {
                return _YEAR_2009;
            }
            set
            {
                OnYEAR_2009Changing(value);
                ReportPropertyChanging("YEAR_2009");
                _YEAR_2009 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YEAR_2009");
                OnYEAR_2009Changed();
            }
        }
        private Nullable<global::System.Decimal> _YEAR_2009;
        partial void OnYEAR_2009Changing(Nullable<global::System.Decimal> value);
        partial void OnYEAR_2009Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> YEAR_2010
        {
            get
            {
                return _YEAR_2010;
            }
            set
            {
                OnYEAR_2010Changing(value);
                ReportPropertyChanging("YEAR_2010");
                _YEAR_2010 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YEAR_2010");
                OnYEAR_2010Changed();
            }
        }
        private Nullable<global::System.Decimal> _YEAR_2010;
        partial void OnYEAR_2010Changing(Nullable<global::System.Decimal> value);
        partial void OnYEAR_2010Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> YEAR_2011
        {
            get
            {
                return _YEAR_2011;
            }
            set
            {
                OnYEAR_2011Changing(value);
                ReportPropertyChanging("YEAR_2011");
                _YEAR_2011 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YEAR_2011");
                OnYEAR_2011Changed();
            }
        }
        private Nullable<global::System.Decimal> _YEAR_2011;
        partial void OnYEAR_2011Changing(Nullable<global::System.Decimal> value);
        partial void OnYEAR_2011Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> YEAR_2012
        {
            get
            {
                return _YEAR_2012;
            }
            set
            {
                OnYEAR_2012Changing(value);
                ReportPropertyChanging("YEAR_2012");
                _YEAR_2012 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YEAR_2012");
                OnYEAR_2012Changed();
            }
        }
        private Nullable<global::System.Decimal> _YEAR_2012;
        partial void OnYEAR_2012Changing(Nullable<global::System.Decimal> value);
        partial void OnYEAR_2012Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> YEAR_2013
        {
            get
            {
                return _YEAR_2013;
            }
            set
            {
                OnYEAR_2013Changing(value);
                ReportPropertyChanging("YEAR_2013");
                _YEAR_2013 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YEAR_2013");
                OnYEAR_2013Changed();
            }
        }
        private Nullable<global::System.Decimal> _YEAR_2013;
        partial void OnYEAR_2013Changing(Nullable<global::System.Decimal> value);
        partial void OnYEAR_2013Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> YEAR_2014
        {
            get
            {
                return _YEAR_2014;
            }
            set
            {
                OnYEAR_2014Changing(value);
                ReportPropertyChanging("YEAR_2014");
                _YEAR_2014 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YEAR_2014");
                OnYEAR_2014Changed();
            }
        }
        private Nullable<global::System.Decimal> _YEAR_2014;
        partial void OnYEAR_2014Changing(Nullable<global::System.Decimal> value);
        partial void OnYEAR_2014Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> YEAR_2015
        {
            get
            {
                return _YEAR_2015;
            }
            set
            {
                OnYEAR_2015Changing(value);
                ReportPropertyChanging("YEAR_2015");
                _YEAR_2015 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YEAR_2015");
                OnYEAR_2015Changed();
            }
        }
        private Nullable<global::System.Decimal> _YEAR_2015;
        partial void OnYEAR_2015Changing(Nullable<global::System.Decimal> value);
        partial void OnYEAR_2015Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> YEAR_2016
        {
            get
            {
                return _YEAR_2016;
            }
            set
            {
                OnYEAR_2016Changing(value);
                ReportPropertyChanging("YEAR_2016");
                _YEAR_2016 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YEAR_2016");
                OnYEAR_2016Changed();
            }
        }
        private Nullable<global::System.Decimal> _YEAR_2016;
        partial void OnYEAR_2016Changing(Nullable<global::System.Decimal> value);
        partial void OnYEAR_2016Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> YEAR_2017
        {
            get
            {
                return _YEAR_2017;
            }
            set
            {
                OnYEAR_2017Changing(value);
                ReportPropertyChanging("YEAR_2017");
                _YEAR_2017 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YEAR_2017");
                OnYEAR_2017Changed();
            }
        }
        private Nullable<global::System.Decimal> _YEAR_2017;
        partial void OnYEAR_2017Changing(Nullable<global::System.Decimal> value);
        partial void OnYEAR_2017Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> YEAR_2018
        {
            get
            {
                return _YEAR_2018;
            }
            set
            {
                OnYEAR_2018Changing(value);
                ReportPropertyChanging("YEAR_2018");
                _YEAR_2018 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YEAR_2018");
                OnYEAR_2018Changed();
            }
        }
        private Nullable<global::System.Decimal> _YEAR_2018;
        partial void OnYEAR_2018Changing(Nullable<global::System.Decimal> value);
        partial void OnYEAR_2018Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> YEAR_2019
        {
            get
            {
                return _YEAR_2019;
            }
            set
            {
                OnYEAR_2019Changing(value);
                ReportPropertyChanging("YEAR_2019");
                _YEAR_2019 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YEAR_2019");
                OnYEAR_2019Changed();
            }
        }
        private Nullable<global::System.Decimal> _YEAR_2019;
        partial void OnYEAR_2019Changing(Nullable<global::System.Decimal> value);
        partial void OnYEAR_2019Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> YEAR_2020
        {
            get
            {
                return _YEAR_2020;
            }
            set
            {
                OnYEAR_2020Changing(value);
                ReportPropertyChanging("YEAR_2020");
                _YEAR_2020 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YEAR_2020");
                OnYEAR_2020Changed();
            }
        }
        private Nullable<global::System.Decimal> _YEAR_2020;
        partial void OnYEAR_2020Changing(Nullable<global::System.Decimal> value);
        partial void OnYEAR_2020Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> YEAR_2021
        {
            get
            {
                return _YEAR_2021;
            }
            set
            {
                OnYEAR_2021Changing(value);
                ReportPropertyChanging("YEAR_2021");
                _YEAR_2021 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YEAR_2021");
                OnYEAR_2021Changed();
            }
        }
        private Nullable<global::System.Decimal> _YEAR_2021;
        partial void OnYEAR_2021Changing(Nullable<global::System.Decimal> value);
        partial void OnYEAR_2021Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> YEAR_2022
        {
            get
            {
                return _YEAR_2022;
            }
            set
            {
                OnYEAR_2022Changing(value);
                ReportPropertyChanging("YEAR_2022");
                _YEAR_2022 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YEAR_2022");
                OnYEAR_2022Changed();
            }
        }
        private Nullable<global::System.Decimal> _YEAR_2022;
        partial void OnYEAR_2022Changing(Nullable<global::System.Decimal> value);
        partial void OnYEAR_2022Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> YEAR_2023
        {
            get
            {
                return _YEAR_2023;
            }
            set
            {
                OnYEAR_2023Changing(value);
                ReportPropertyChanging("YEAR_2023");
                _YEAR_2023 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YEAR_2023");
                OnYEAR_2023Changed();
            }
        }
        private Nullable<global::System.Decimal> _YEAR_2023;
        partial void OnYEAR_2023Changing(Nullable<global::System.Decimal> value);
        partial void OnYEAR_2023Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> YEAR_2024
        {
            get
            {
                return _YEAR_2024;
            }
            set
            {
                OnYEAR_2024Changing(value);
                ReportPropertyChanging("YEAR_2024");
                _YEAR_2024 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YEAR_2024");
                OnYEAR_2024Changed();
            }
        }
        private Nullable<global::System.Decimal> _YEAR_2024;
        partial void OnYEAR_2024Changing(Nullable<global::System.Decimal> value);
        partial void OnYEAR_2024Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> YEAR_2025
        {
            get
            {
                return _YEAR_2025;
            }
            set
            {
                OnYEAR_2025Changing(value);
                ReportPropertyChanging("YEAR_2025");
                _YEAR_2025 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YEAR_2025");
                OnYEAR_2025Changed();
            }
        }
        private Nullable<global::System.Decimal> _YEAR_2025;
        partial void OnYEAR_2025Changing(Nullable<global::System.Decimal> value);
        partial void OnYEAR_2025Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> FIVE_YEAR_AVG
        {
            get
            {
                return _FIVE_YEAR_AVG;
            }
            set
            {
                OnFIVE_YEAR_AVGChanging(value);
                ReportPropertyChanging("FIVE_YEAR_AVG");
                _FIVE_YEAR_AVG = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FIVE_YEAR_AVG");
                OnFIVE_YEAR_AVGChanged();
            }
        }
        private Nullable<global::System.Decimal> _FIVE_YEAR_AVG;
        partial void OnFIVE_YEAR_AVGChanging(Nullable<global::System.Decimal> value);
        partial void OnFIVE_YEAR_AVGChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> YEAR_1987
        {
            get
            {
                return _YEAR_1987;
            }
            set
            {
                OnYEAR_1987Changing(value);
                ReportPropertyChanging("YEAR_1987");
                _YEAR_1987 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YEAR_1987");
                OnYEAR_1987Changed();
            }
        }
        private Nullable<global::System.Decimal> _YEAR_1987;
        partial void OnYEAR_1987Changing(Nullable<global::System.Decimal> value);
        partial void OnYEAR_1987Changed();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ResearchModel", Name="MarketSnapshotPreference")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class MarketSnapshotPreference : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MarketSnapshotPreference object.
        /// </summary>
        /// <param name="groupName">Initial value of the GroupName property.</param>
        /// <param name="groupPreferenceID">Initial value of the GroupPreferenceID property.</param>
        public static MarketSnapshotPreference CreateMarketSnapshotPreference(global::System.String groupName, global::System.Int32 groupPreferenceID)
        {
            MarketSnapshotPreference marketSnapshotPreference = new MarketSnapshotPreference();
            marketSnapshotPreference.GroupName = groupName;
            marketSnapshotPreference.GroupPreferenceID = groupPreferenceID;
            return marketSnapshotPreference;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GroupName
        {
            get
            {
                return _GroupName;
            }
            set
            {
                OnGroupNameChanging(value);
                ReportPropertyChanging("GroupName");
                _GroupName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("GroupName");
                OnGroupNameChanged();
            }
        }
        private global::System.String _GroupName;
        partial void OnGroupNameChanging(global::System.String value);
        partial void OnGroupNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupPreferenceID
        {
            get
            {
                return _GroupPreferenceID;
            }
            set
            {
                OnGroupPreferenceIDChanging(value);
                ReportPropertyChanging("GroupPreferenceID");
                _GroupPreferenceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupPreferenceID");
                OnGroupPreferenceIDChanged();
            }
        }
        private global::System.Int32 _GroupPreferenceID;
        partial void OnGroupPreferenceIDChanging(global::System.Int32 value);
        partial void OnGroupPreferenceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EntityPreferenceId
        {
            get
            {
                return _EntityPreferenceId;
            }
            set
            {
                OnEntityPreferenceIdChanging(value);
                ReportPropertyChanging("EntityPreferenceId");
                _EntityPreferenceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityPreferenceId");
                OnEntityPreferenceIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EntityPreferenceId;
        partial void OnEntityPreferenceIdChanging(Nullable<global::System.Int32> value);
        partial void OnEntityPreferenceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EntityName
        {
            get
            {
                return _EntityName;
            }
            set
            {
                OnEntityNameChanging(value);
                ReportPropertyChanging("EntityName");
                _EntityName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EntityName");
                OnEntityNameChanged();
            }
        }
        private global::System.String _EntityName;
        partial void OnEntityNameChanging(global::System.String value);
        partial void OnEntityNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EntityOrder
        {
            get
            {
                return _EntityOrder;
            }
            set
            {
                OnEntityOrderChanging(value);
                ReportPropertyChanging("EntityOrder");
                _EntityOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityOrder");
                OnEntityOrderChanged();
            }
        }
        private Nullable<global::System.Int32> _EntityOrder;
        partial void OnEntityOrderChanging(Nullable<global::System.Int32> value);
        partial void OnEntityOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EntityReturnType
        {
            get
            {
                return _EntityReturnType;
            }
            set
            {
                OnEntityReturnTypeChanging(value);
                ReportPropertyChanging("EntityReturnType");
                _EntityReturnType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EntityReturnType");
                OnEntityReturnTypeChanged();
            }
        }
        private global::System.String _EntityReturnType;
        partial void OnEntityReturnTypeChanging(global::System.String value);
        partial void OnEntityReturnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EntityType
        {
            get
            {
                return _EntityType;
            }
            set
            {
                OnEntityTypeChanging(value);
                ReportPropertyChanging("EntityType");
                _EntityType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EntityType");
                OnEntityTypeChanged();
            }
        }
        private global::System.String _EntityType;
        partial void OnEntityTypeChanging(global::System.String value);
        partial void OnEntityTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EntityId
        {
            get
            {
                return _EntityId;
            }
            set
            {
                OnEntityIdChanging(value);
                ReportPropertyChanging("EntityId");
                _EntityId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EntityId");
                OnEntityIdChanged();
            }
        }
        private global::System.String _EntityId;
        partial void OnEntityIdChanging(global::System.String value);
        partial void OnEntityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EntityNodeType
        {
            get
            {
                return _EntityNodeType;
            }
            set
            {
                OnEntityNodeTypeChanging(value);
                ReportPropertyChanging("EntityNodeType");
                _EntityNodeType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EntityNodeType");
                OnEntityNodeTypeChanged();
            }
        }
        private global::System.String _EntityNodeType;
        partial void OnEntityNodeTypeChanging(global::System.String value);
        partial void OnEntityNodeTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EntityNodeValueCode
        {
            get
            {
                return _EntityNodeValueCode;
            }
            set
            {
                OnEntityNodeValueCodeChanging(value);
                ReportPropertyChanging("EntityNodeValueCode");
                _EntityNodeValueCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EntityNodeValueCode");
                OnEntityNodeValueCodeChanged();
            }
        }
        private global::System.String _EntityNodeValueCode;
        partial void OnEntityNodeValueCodeChanging(global::System.String value);
        partial void OnEntityNodeValueCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EntityNodeValueName
        {
            get
            {
                return _EntityNodeValueName;
            }
            set
            {
                OnEntityNodeValueNameChanging(value);
                ReportPropertyChanging("EntityNodeValueName");
                _EntityNodeValueName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EntityNodeValueName");
                OnEntityNodeValueNameChanged();
            }
        }
        private global::System.String _EntityNodeValueName;
        partial void OnEntityNodeValueNameChanging(global::System.String value);
        partial void OnEntityNodeValueNameChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ResearchModel", Name="MarketSnapshotSelectionData")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class MarketSnapshotSelectionData : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MarketSnapshotSelectionData object.
        /// </summary>
        /// <param name="snapshotPreferenceId">Initial value of the SnapshotPreferenceId property.</param>
        /// <param name="snapshotName">Initial value of the SnapshotName property.</param>
        public static MarketSnapshotSelectionData CreateMarketSnapshotSelectionData(global::System.Int32 snapshotPreferenceId, global::System.String snapshotName)
        {
            MarketSnapshotSelectionData marketSnapshotSelectionData = new MarketSnapshotSelectionData();
            marketSnapshotSelectionData.SnapshotPreferenceId = snapshotPreferenceId;
            marketSnapshotSelectionData.SnapshotName = snapshotName;
            return marketSnapshotSelectionData;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SnapshotPreferenceId
        {
            get
            {
                return _SnapshotPreferenceId;
            }
            set
            {
                OnSnapshotPreferenceIdChanging(value);
                ReportPropertyChanging("SnapshotPreferenceId");
                _SnapshotPreferenceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SnapshotPreferenceId");
                OnSnapshotPreferenceIdChanged();
            }
        }
        private global::System.Int32 _SnapshotPreferenceId;
        partial void OnSnapshotPreferenceIdChanging(global::System.Int32 value);
        partial void OnSnapshotPreferenceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SnapshotName
        {
            get
            {
                return _SnapshotName;
            }
            set
            {
                OnSnapshotNameChanging(value);
                ReportPropertyChanging("SnapshotName");
                _SnapshotName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SnapshotName");
                OnSnapshotNameChanged();
            }
        }
        private global::System.String _SnapshotName;
        partial void OnSnapshotNameChanging(global::System.String value);
        partial void OnSnapshotNameChanged();

        #endregion
    }

    #endregion
    
}
