//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ICPresentationModel", "FK_MeetingPresentationMappingInfo_MeetingInfo", "MeetingInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GreenField.DAL.MeetingInfo), "MeetingPresentationMappingInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GreenField.DAL.MeetingPresentationMappingInfo), true)]
[assembly: EdmRelationshipAttribute("ICPresentationModel", "FK_CommentInfo_FileMaster", "FileMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GreenField.DAL.FileMaster), "CommentInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GreenField.DAL.CommentInfo), true)]
[assembly: EdmRelationshipAttribute("ICPresentationModel", "FK_MeetingAttachedFileInfo_FileMaster", "FileMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GreenField.DAL.FileMaster), "MeetingAttachedFileInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GreenField.DAL.MeetingAttachedFileInfo), true)]
[assembly: EdmRelationshipAttribute("ICPresentationModel", "FK_PresentationAttachedFileInfo_FileMaster", "FileMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GreenField.DAL.FileMaster), "PresentationAttachedFileInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GreenField.DAL.PresentationAttachedFileInfo), true)]
[assembly: EdmRelationshipAttribute("ICPresentationModel", "FK_MeetingAttachedFileInfo_MeetingInfo", "MeetingInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GreenField.DAL.MeetingInfo), "MeetingAttachedFileInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GreenField.DAL.MeetingAttachedFileInfo), true)]
[assembly: EdmRelationshipAttribute("ICPresentationModel", "FK_CommentInfo_PresentationInfo", "PresentationInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GreenField.DAL.PresentationInfo), "CommentInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GreenField.DAL.CommentInfo), true)]
[assembly: EdmRelationshipAttribute("ICPresentationModel", "FK_MeetingPresentationMappingInfo_PresentationInfo", "PresentationInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GreenField.DAL.PresentationInfo), "MeetingPresentationMappingInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GreenField.DAL.MeetingPresentationMappingInfo), true)]
[assembly: EdmRelationshipAttribute("ICPresentationModel", "FK_AttachedFileInfo_PresentationInfo", "PresentationInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GreenField.DAL.PresentationInfo), "PresentationAttachedFileInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GreenField.DAL.PresentationAttachedFileInfo), true)]
[assembly: EdmRelationshipAttribute("ICPresentationModel", "FK_VoterInfo_PresentationInfo", "PresentationInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GreenField.DAL.PresentationInfo), "VoterInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GreenField.DAL.VoterInfo), true)]

#endregion

namespace GreenField.DAL
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ICPresentationEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ICPresentationEntities object using the connection string found in the 'ICPresentationEntities' section of the application configuration file.
        /// </summary>
        public ICPresentationEntities() : base("name=ICPresentationEntities", "ICPresentationEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ICPresentationEntities object.
        /// </summary>
        public ICPresentationEntities(string connectionString) : base(connectionString, "ICPresentationEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ICPresentationEntities object.
        /// </summary>
        public ICPresentationEntities(EntityConnection connection) : base(connection, "ICPresentationEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MeetingInfo> MeetingInfoes
        {
            get
            {
                if ((_MeetingInfoes == null))
                {
                    _MeetingInfoes = base.CreateObjectSet<MeetingInfo>("MeetingInfoes");
                }
                return _MeetingInfoes;
            }
        }
        private ObjectSet<MeetingInfo> _MeetingInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MeetingPresentationMappingInfo> MeetingPresentationMappingInfoes
        {
            get
            {
                if ((_MeetingPresentationMappingInfoes == null))
                {
                    _MeetingPresentationMappingInfoes = base.CreateObjectSet<MeetingPresentationMappingInfo>("MeetingPresentationMappingInfoes");
                }
                return _MeetingPresentationMappingInfoes;
            }
        }
        private ObjectSet<MeetingPresentationMappingInfo> _MeetingPresentationMappingInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VoterInfo> VoterInfoes
        {
            get
            {
                if ((_VoterInfoes == null))
                {
                    _VoterInfoes = base.CreateObjectSet<VoterInfo>("VoterInfoes");
                }
                return _VoterInfoes;
            }
        }
        private ObjectSet<VoterInfo> _VoterInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CommentInfo> CommentInfoes
        {
            get
            {
                if ((_CommentInfoes == null))
                {
                    _CommentInfoes = base.CreateObjectSet<CommentInfo>("CommentInfoes");
                }
                return _CommentInfoes;
            }
        }
        private ObjectSet<CommentInfo> _CommentInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FileMaster> FileMasters
        {
            get
            {
                if ((_FileMasters == null))
                {
                    _FileMasters = base.CreateObjectSet<FileMaster>("FileMasters");
                }
                return _FileMasters;
            }
        }
        private ObjectSet<FileMaster> _FileMasters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MeetingAttachedFileInfo> MeetingAttachedFileInfoes
        {
            get
            {
                if ((_MeetingAttachedFileInfoes == null))
                {
                    _MeetingAttachedFileInfoes = base.CreateObjectSet<MeetingAttachedFileInfo>("MeetingAttachedFileInfoes");
                }
                return _MeetingAttachedFileInfoes;
            }
        }
        private ObjectSet<MeetingAttachedFileInfo> _MeetingAttachedFileInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PresentationAttachedFileInfo> PresentationAttachedFileInfoes
        {
            get
            {
                if ((_PresentationAttachedFileInfoes == null))
                {
                    _PresentationAttachedFileInfoes = base.CreateObjectSet<PresentationAttachedFileInfo>("PresentationAttachedFileInfoes");
                }
                return _PresentationAttachedFileInfoes;
            }
        }
        private ObjectSet<PresentationAttachedFileInfo> _PresentationAttachedFileInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MeetingConfigurationSchedule> MeetingConfigurationSchedules
        {
            get
            {
                if ((_MeetingConfigurationSchedules == null))
                {
                    _MeetingConfigurationSchedules = base.CreateObjectSet<MeetingConfigurationSchedule>("MeetingConfigurationSchedules");
                }
                return _MeetingConfigurationSchedules;
            }
        }
        private ObjectSet<MeetingConfigurationSchedule> _MeetingConfigurationSchedules;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PresentationInfo> PresentationInfoes
        {
            get
            {
                if ((_PresentationInfoes == null))
                {
                    _PresentationInfoes = base.CreateObjectSet<PresentationInfo>("PresentationInfoes");
                }
                return _PresentationInfoes;
            }
        }
        private ObjectSet<PresentationInfo> _PresentationInfoes;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MeetingInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMeetingInfoes(MeetingInfo meetingInfo)
        {
            base.AddObject("MeetingInfoes", meetingInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MeetingPresentationMappingInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMeetingPresentationMappingInfoes(MeetingPresentationMappingInfo meetingPresentationMappingInfo)
        {
            base.AddObject("MeetingPresentationMappingInfoes", meetingPresentationMappingInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VoterInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVoterInfoes(VoterInfo voterInfo)
        {
            base.AddObject("VoterInfoes", voterInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CommentInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCommentInfoes(CommentInfo commentInfo)
        {
            base.AddObject("CommentInfoes", commentInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FileMasters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFileMasters(FileMaster fileMaster)
        {
            base.AddObject("FileMasters", fileMaster);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MeetingAttachedFileInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMeetingAttachedFileInfoes(MeetingAttachedFileInfo meetingAttachedFileInfo)
        {
            base.AddObject("MeetingAttachedFileInfoes", meetingAttachedFileInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PresentationAttachedFileInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPresentationAttachedFileInfoes(PresentationAttachedFileInfo presentationAttachedFileInfo)
        {
            base.AddObject("PresentationAttachedFileInfoes", presentationAttachedFileInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MeetingConfigurationSchedules EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMeetingConfigurationSchedules(MeetingConfigurationSchedule meetingConfigurationSchedule)
        {
            base.AddObject("MeetingConfigurationSchedules", meetingConfigurationSchedule);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PresentationInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPresentationInfoes(PresentationInfo presentationInfo)
        {
            base.AddObject("PresentationInfoes", presentationInfo);
        }

        #endregion
        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="meetingDateTime">No Metadata Documentation available.</param>
        /// <param name="meetingClosedDateTime">No Metadata Documentation available.</param>
        /// <param name="description">No Metadata Documentation available.</param>
        /// <param name="createdBy">No Metadata Documentation available.</param>
        /// <param name="createdOn">No Metadata Documentation available.</param>
        /// <param name="modifiedBy">No Metadata Documentation available.</param>
        /// <param name="modifiedOn">No Metadata Documentation available.</param>
        public int usp_InsertMeetingInformation(Nullable<global::System.DateTime> meetingDateTime, Nullable<global::System.DateTime> meetingClosedDateTime, global::System.String description, global::System.String createdBy, Nullable<global::System.DateTime> createdOn, global::System.String modifiedBy, Nullable<global::System.DateTime> modifiedOn)
        {
            ObjectParameter meetingDateTimeParameter;
            if (meetingDateTime.HasValue)
            {
                meetingDateTimeParameter = new ObjectParameter("meetingDateTime", meetingDateTime);
            }
            else
            {
                meetingDateTimeParameter = new ObjectParameter("meetingDateTime", typeof(global::System.DateTime));
            }
    
            ObjectParameter meetingClosedDateTimeParameter;
            if (meetingClosedDateTime.HasValue)
            {
                meetingClosedDateTimeParameter = new ObjectParameter("meetingClosedDateTime", meetingClosedDateTime);
            }
            else
            {
                meetingClosedDateTimeParameter = new ObjectParameter("meetingClosedDateTime", typeof(global::System.DateTime));
            }
    
            ObjectParameter descriptionParameter;
            if (description != null)
            {
                descriptionParameter = new ObjectParameter("description", description);
            }
            else
            {
                descriptionParameter = new ObjectParameter("description", typeof(global::System.String));
            }
    
            ObjectParameter createdByParameter;
            if (createdBy != null)
            {
                createdByParameter = new ObjectParameter("createdBy", createdBy);
            }
            else
            {
                createdByParameter = new ObjectParameter("createdBy", typeof(global::System.String));
            }
    
            ObjectParameter createdOnParameter;
            if (createdOn.HasValue)
            {
                createdOnParameter = new ObjectParameter("createdOn", createdOn);
            }
            else
            {
                createdOnParameter = new ObjectParameter("createdOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter modifiedByParameter;
            if (modifiedBy != null)
            {
                modifiedByParameter = new ObjectParameter("modifiedBy", modifiedBy);
            }
            else
            {
                modifiedByParameter = new ObjectParameter("modifiedBy", typeof(global::System.String));
            }
    
            ObjectParameter modifiedOnParameter;
            if (modifiedOn.HasValue)
            {
                modifiedOnParameter = new ObjectParameter("modifiedOn", modifiedOn);
            }
            else
            {
                modifiedOnParameter = new ObjectParameter("modifiedOn", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction("usp_InsertMeetingInformation", meetingDateTimeParameter, meetingClosedDateTimeParameter, descriptionParameter, createdByParameter, createdOnParameter, modifiedByParameter, modifiedOnParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="meetingID">No Metadata Documentation available.</param>
        /// <param name="presentationID">No Metadata Documentation available.</param>
        /// <param name="createdBy">No Metadata Documentation available.</param>
        /// <param name="createdOn">No Metadata Documentation available.</param>
        /// <param name="modifiedBy">No Metadata Documentation available.</param>
        /// <param name="modifiedOn">No Metadata Documentation available.</param>
        public int usp_InsertMeetingPresentationMappingInfo(Nullable<global::System.Int64> meetingID, Nullable<global::System.Int64> presentationID, global::System.String createdBy, Nullable<global::System.DateTime> createdOn, global::System.String modifiedBy, Nullable<global::System.DateTime> modifiedOn)
        {
            ObjectParameter meetingIDParameter;
            if (meetingID.HasValue)
            {
                meetingIDParameter = new ObjectParameter("meetingID", meetingID);
            }
            else
            {
                meetingIDParameter = new ObjectParameter("meetingID", typeof(global::System.Int64));
            }
    
            ObjectParameter presentationIDParameter;
            if (presentationID.HasValue)
            {
                presentationIDParameter = new ObjectParameter("presentationID", presentationID);
            }
            else
            {
                presentationIDParameter = new ObjectParameter("presentationID", typeof(global::System.Int64));
            }
    
            ObjectParameter createdByParameter;
            if (createdBy != null)
            {
                createdByParameter = new ObjectParameter("createdBy", createdBy);
            }
            else
            {
                createdByParameter = new ObjectParameter("createdBy", typeof(global::System.String));
            }
    
            ObjectParameter createdOnParameter;
            if (createdOn.HasValue)
            {
                createdOnParameter = new ObjectParameter("createdOn", createdOn);
            }
            else
            {
                createdOnParameter = new ObjectParameter("createdOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter modifiedByParameter;
            if (modifiedBy != null)
            {
                modifiedByParameter = new ObjectParameter("modifiedBy", modifiedBy);
            }
            else
            {
                modifiedByParameter = new ObjectParameter("modifiedBy", typeof(global::System.String));
            }
    
            ObjectParameter modifiedOnParameter;
            if (modifiedOn.HasValue)
            {
                modifiedOnParameter = new ObjectParameter("modifiedOn", modifiedOn);
            }
            else
            {
                modifiedOnParameter = new ObjectParameter("modifiedOn", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction("usp_InsertMeetingPresentationMappingInfo", meetingIDParameter, presentationIDParameter, createdByParameter, createdOnParameter, modifiedByParameter, modifiedOnParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="presentationID">No Metadata Documentation available.</param>
        /// <param name="name">No Metadata Documentation available.</param>
        /// <param name="notes">No Metadata Documentation available.</param>
        /// <param name="voteTypeID">No Metadata Documentation available.</param>
        /// <param name="attendanceTypeID">No Metadata Documentation available.</param>
        /// <param name="postMeetingFlag">No Metadata Documentation available.</param>
        /// <param name="discussionFlag">No Metadata Documentation available.</param>
        /// <param name="voterPFVMeasure">No Metadata Documentation available.</param>
        /// <param name="voterBuyRange">No Metadata Documentation available.</param>
        /// <param name="voterSellRange">No Metadata Documentation available.</param>
        /// <param name="voterRecommendation">No Metadata Documentation available.</param>
        /// <param name="createdBy">No Metadata Documentation available.</param>
        /// <param name="createdOn">No Metadata Documentation available.</param>
        /// <param name="modifiedBy">No Metadata Documentation available.</param>
        /// <param name="modifiedOn">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int64>> usp_InsertVoterInfo(Nullable<global::System.Int64> presentationID, global::System.String name, global::System.String notes, Nullable<global::System.Int64> voteTypeID, Nullable<global::System.Int64> attendanceTypeID, Nullable<global::System.Boolean> postMeetingFlag, Nullable<global::System.Boolean> discussionFlag, global::System.String voterPFVMeasure, Nullable<global::System.Single> voterBuyRange, Nullable<global::System.Single> voterSellRange, global::System.String voterRecommendation, global::System.String createdBy, Nullable<global::System.DateTime> createdOn, global::System.String modifiedBy, Nullable<global::System.DateTime> modifiedOn)
        {
            ObjectParameter presentationIDParameter;
            if (presentationID.HasValue)
            {
                presentationIDParameter = new ObjectParameter("presentationID", presentationID);
            }
            else
            {
                presentationIDParameter = new ObjectParameter("presentationID", typeof(global::System.Int64));
            }
    
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("name", typeof(global::System.String));
            }
    
            ObjectParameter notesParameter;
            if (notes != null)
            {
                notesParameter = new ObjectParameter("notes", notes);
            }
            else
            {
                notesParameter = new ObjectParameter("notes", typeof(global::System.String));
            }
    
            ObjectParameter voteTypeIDParameter;
            if (voteTypeID.HasValue)
            {
                voteTypeIDParameter = new ObjectParameter("voteTypeID", voteTypeID);
            }
            else
            {
                voteTypeIDParameter = new ObjectParameter("voteTypeID", typeof(global::System.Int64));
            }
    
            ObjectParameter attendanceTypeIDParameter;
            if (attendanceTypeID.HasValue)
            {
                attendanceTypeIDParameter = new ObjectParameter("attendanceTypeID", attendanceTypeID);
            }
            else
            {
                attendanceTypeIDParameter = new ObjectParameter("attendanceTypeID", typeof(global::System.Int64));
            }
    
            ObjectParameter postMeetingFlagParameter;
            if (postMeetingFlag.HasValue)
            {
                postMeetingFlagParameter = new ObjectParameter("postMeetingFlag", postMeetingFlag);
            }
            else
            {
                postMeetingFlagParameter = new ObjectParameter("postMeetingFlag", typeof(global::System.Boolean));
            }
    
            ObjectParameter discussionFlagParameter;
            if (discussionFlag.HasValue)
            {
                discussionFlagParameter = new ObjectParameter("discussionFlag", discussionFlag);
            }
            else
            {
                discussionFlagParameter = new ObjectParameter("discussionFlag", typeof(global::System.Boolean));
            }
    
            ObjectParameter voterPFVMeasureParameter;
            if (voterPFVMeasure != null)
            {
                voterPFVMeasureParameter = new ObjectParameter("voterPFVMeasure", voterPFVMeasure);
            }
            else
            {
                voterPFVMeasureParameter = new ObjectParameter("voterPFVMeasure", typeof(global::System.String));
            }
    
            ObjectParameter voterBuyRangeParameter;
            if (voterBuyRange.HasValue)
            {
                voterBuyRangeParameter = new ObjectParameter("voterBuyRange", voterBuyRange);
            }
            else
            {
                voterBuyRangeParameter = new ObjectParameter("voterBuyRange", typeof(global::System.Single));
            }
    
            ObjectParameter voterSellRangeParameter;
            if (voterSellRange.HasValue)
            {
                voterSellRangeParameter = new ObjectParameter("voterSellRange", voterSellRange);
            }
            else
            {
                voterSellRangeParameter = new ObjectParameter("voterSellRange", typeof(global::System.Single));
            }
    
            ObjectParameter voterRecommendationParameter;
            if (voterRecommendation != null)
            {
                voterRecommendationParameter = new ObjectParameter("voterRecommendation", voterRecommendation);
            }
            else
            {
                voterRecommendationParameter = new ObjectParameter("voterRecommendation", typeof(global::System.String));
            }
    
            ObjectParameter createdByParameter;
            if (createdBy != null)
            {
                createdByParameter = new ObjectParameter("createdBy", createdBy);
            }
            else
            {
                createdByParameter = new ObjectParameter("createdBy", typeof(global::System.String));
            }
    
            ObjectParameter createdOnParameter;
            if (createdOn.HasValue)
            {
                createdOnParameter = new ObjectParameter("createdOn", createdOn);
            }
            else
            {
                createdOnParameter = new ObjectParameter("createdOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter modifiedByParameter;
            if (modifiedBy != null)
            {
                modifiedByParameter = new ObjectParameter("modifiedBy", modifiedBy);
            }
            else
            {
                modifiedByParameter = new ObjectParameter("modifiedBy", typeof(global::System.String));
            }
    
            ObjectParameter modifiedOnParameter;
            if (modifiedOn.HasValue)
            {
                modifiedOnParameter = new ObjectParameter("modifiedOn", modifiedOn);
            }
            else
            {
                modifiedOnParameter = new ObjectParameter("modifiedOn", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int64>>("usp_InsertVoterInfo", presentationIDParameter, nameParameter, notesParameter, voteTypeIDParameter, attendanceTypeIDParameter, postMeetingFlagParameter, discussionFlagParameter, voterPFVMeasureParameter, voterBuyRangeParameter, voterSellRangeParameter, voterRecommendationParameter, createdByParameter, createdOnParameter, modifiedByParameter, modifiedOnParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="presentationID">No Metadata Documentation available.</param>
        /// <param name="fileName">No Metadata Documentation available.</param>
        /// <param name="fileData">No Metadata Documentation available.</param>
        /// <param name="createdBy">No Metadata Documentation available.</param>
        /// <param name="createdOn">No Metadata Documentation available.</param>
        /// <param name="modifiedBy">No Metadata Documentation available.</param>
        /// <param name="modifiedOn">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int64>> usp_InsertFileInfo(Nullable<global::System.Int64> presentationID, global::System.String fileName, global::System.String fileData, global::System.String createdBy, Nullable<global::System.DateTime> createdOn, global::System.String modifiedBy, Nullable<global::System.DateTime> modifiedOn)
        {
            ObjectParameter presentationIDParameter;
            if (presentationID.HasValue)
            {
                presentationIDParameter = new ObjectParameter("presentationID", presentationID);
            }
            else
            {
                presentationIDParameter = new ObjectParameter("presentationID", typeof(global::System.Int64));
            }
    
            ObjectParameter fileNameParameter;
            if (fileName != null)
            {
                fileNameParameter = new ObjectParameter("fileName", fileName);
            }
            else
            {
                fileNameParameter = new ObjectParameter("fileName", typeof(global::System.String));
            }
    
            ObjectParameter fileDataParameter;
            if (fileData != null)
            {
                fileDataParameter = new ObjectParameter("fileData", fileData);
            }
            else
            {
                fileDataParameter = new ObjectParameter("fileData", typeof(global::System.String));
            }
    
            ObjectParameter createdByParameter;
            if (createdBy != null)
            {
                createdByParameter = new ObjectParameter("createdBy", createdBy);
            }
            else
            {
                createdByParameter = new ObjectParameter("createdBy", typeof(global::System.String));
            }
    
            ObjectParameter createdOnParameter;
            if (createdOn.HasValue)
            {
                createdOnParameter = new ObjectParameter("createdOn", createdOn);
            }
            else
            {
                createdOnParameter = new ObjectParameter("createdOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter modifiedByParameter;
            if (modifiedBy != null)
            {
                modifiedByParameter = new ObjectParameter("modifiedBy", modifiedBy);
            }
            else
            {
                modifiedByParameter = new ObjectParameter("modifiedBy", typeof(global::System.String));
            }
    
            ObjectParameter modifiedOnParameter;
            if (modifiedOn.HasValue)
            {
                modifiedOnParameter = new ObjectParameter("modifiedOn", modifiedOn);
            }
            else
            {
                modifiedOnParameter = new ObjectParameter("modifiedOn", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int64>>("usp_InsertFileInfo", presentationIDParameter, fileNameParameter, fileDataParameter, createdByParameter, createdOnParameter, modifiedByParameter, modifiedOnParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<Nullable<global::System.Single>> usp_SelectMeetingInfoDistinctMeetingDates()
        {
            return base.ExecuteFunction<Nullable<global::System.Single>>("usp_SelectMeetingInfoDistinctMeetingDates");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public int usp_SelectPresentationInfo()
        {
            return base.ExecuteFunction("usp_SelectPresentationInfo");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="meetingDate">No Metadata Documentation available.</param>
        /// <param name="presenter">No Metadata Documentation available.</param>
        /// <param name="status">No Metadata Documentation available.</param>
        public int usp_SelectPresentationInfoByMeetingDatePresenterStatus(Nullable<global::System.DateTime> meetingDate, global::System.String presenter, global::System.String status)
        {
            ObjectParameter meetingDateParameter;
            if (meetingDate.HasValue)
            {
                meetingDateParameter = new ObjectParameter("meetingDate", meetingDate);
            }
            else
            {
                meetingDateParameter = new ObjectParameter("meetingDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter presenterParameter;
            if (presenter != null)
            {
                presenterParameter = new ObjectParameter("presenter", presenter);
            }
            else
            {
                presenterParameter = new ObjectParameter("presenter", typeof(global::System.String));
            }
    
            ObjectParameter statusParameter;
            if (status != null)
            {
                statusParameter = new ObjectParameter("status", status);
            }
            else
            {
                statusParameter = new ObjectParameter("status", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_SelectPresentationInfoByMeetingDatePresenterStatus", meetingDateParameter, presenterParameter, statusParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="meetingID">No Metadata Documentation available.</param>
        public int usp_SelectPresentationInfoByMeetingID(Nullable<global::System.Int64> meetingID)
        {
            ObjectParameter meetingIDParameter;
            if (meetingID.HasValue)
            {
                meetingIDParameter = new ObjectParameter("meetingID", meetingID);
            }
            else
            {
                meetingIDParameter = new ObjectParameter("meetingID", typeof(global::System.Int64));
            }
    
            return base.ExecuteFunction("usp_SelectPresentationInfoByMeetingID", meetingIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="presentationDate">No Metadata Documentation available.</param>
        public int usp_SelectPresentationInfoByPresentationDate(Nullable<global::System.DateTime> presentationDate)
        {
            ObjectParameter presentationDateParameter;
            if (presentationDate.HasValue)
            {
                presentationDateParameter = new ObjectParameter("presentationDate", presentationDate);
            }
            else
            {
                presentationDateParameter = new ObjectParameter("presentationDate", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction("usp_SelectPresentationInfoByPresentationDate", presentationDateParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<global::System.String> usp_SelectPresentationInfoDistinctPresenters()
        {
            return base.ExecuteFunction<global::System.String>("usp_SelectPresentationInfoDistinctPresenters");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="presentationID">No Metadata Documentation available.</param>
        /// <param name="postMeetingFlag">No Metadata Documentation available.</param>
        public ObjectResult<VoterInfoByPresentationIDResult> usp_SelectVoterInfoByPresentationIDPostMeetingFlag(Nullable<global::System.Int64> presentationID, Nullable<global::System.Boolean> postMeetingFlag)
        {
            ObjectParameter presentationIDParameter;
            if (presentationID.HasValue)
            {
                presentationIDParameter = new ObjectParameter("presentationID", presentationID);
            }
            else
            {
                presentationIDParameter = new ObjectParameter("presentationID", typeof(global::System.Int64));
            }
    
            ObjectParameter postMeetingFlagParameter;
            if (postMeetingFlag.HasValue)
            {
                postMeetingFlagParameter = new ObjectParameter("postMeetingFlag", postMeetingFlag);
            }
            else
            {
                postMeetingFlagParameter = new ObjectParameter("postMeetingFlag", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<VoterInfoByPresentationIDResult>("usp_SelectVoterInfoByPresentationIDPostMeetingFlag", presentationIDParameter, postMeetingFlagParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="meetingDateTime">No Metadata Documentation available.</param>
        /// <param name="meetingClosedDateTime">No Metadata Documentation available.</param>
        /// <param name="description">No Metadata Documentation available.</param>
        /// <param name="modifiedBy">No Metadata Documentation available.</param>
        /// <param name="modifiedOn">No Metadata Documentation available.</param>
        /// <param name="meetingID">No Metadata Documentation available.</param>
        public int usp_UpdateMeetingInfo(Nullable<global::System.DateTime> meetingDateTime, Nullable<global::System.DateTime> meetingClosedDateTime, global::System.String description, global::System.String modifiedBy, Nullable<global::System.DateTime> modifiedOn, Nullable<global::System.Int64> meetingID)
        {
            ObjectParameter meetingDateTimeParameter;
            if (meetingDateTime.HasValue)
            {
                meetingDateTimeParameter = new ObjectParameter("meetingDateTime", meetingDateTime);
            }
            else
            {
                meetingDateTimeParameter = new ObjectParameter("meetingDateTime", typeof(global::System.DateTime));
            }
    
            ObjectParameter meetingClosedDateTimeParameter;
            if (meetingClosedDateTime.HasValue)
            {
                meetingClosedDateTimeParameter = new ObjectParameter("meetingClosedDateTime", meetingClosedDateTime);
            }
            else
            {
                meetingClosedDateTimeParameter = new ObjectParameter("meetingClosedDateTime", typeof(global::System.DateTime));
            }
    
            ObjectParameter descriptionParameter;
            if (description != null)
            {
                descriptionParameter = new ObjectParameter("description", description);
            }
            else
            {
                descriptionParameter = new ObjectParameter("description", typeof(global::System.String));
            }
    
            ObjectParameter modifiedByParameter;
            if (modifiedBy != null)
            {
                modifiedByParameter = new ObjectParameter("modifiedBy", modifiedBy);
            }
            else
            {
                modifiedByParameter = new ObjectParameter("modifiedBy", typeof(global::System.String));
            }
    
            ObjectParameter modifiedOnParameter;
            if (modifiedOn.HasValue)
            {
                modifiedOnParameter = new ObjectParameter("modifiedOn", modifiedOn);
            }
            else
            {
                modifiedOnParameter = new ObjectParameter("modifiedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter meetingIDParameter;
            if (meetingID.HasValue)
            {
                meetingIDParameter = new ObjectParameter("meetingID", meetingID);
            }
            else
            {
                meetingIDParameter = new ObjectParameter("meetingID", typeof(global::System.Int64));
            }
    
            return base.ExecuteFunction("usp_UpdateMeetingInfo", meetingDateTimeParameter, meetingClosedDateTimeParameter, descriptionParameter, modifiedByParameter, modifiedOnParameter, meetingIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="meetingID">No Metadata Documentation available.</param>
        /// <param name="presentationID">No Metadata Documentation available.</param>
        /// <param name="modifiedBy">No Metadata Documentation available.</param>
        /// <param name="modifiedOn">No Metadata Documentation available.</param>
        public int usp_UpdateMeetingPresentationMappingInfo(Nullable<global::System.Int64> meetingID, Nullable<global::System.Int64> presentationID, global::System.String modifiedBy, Nullable<global::System.DateTime> modifiedOn)
        {
            ObjectParameter meetingIDParameter;
            if (meetingID.HasValue)
            {
                meetingIDParameter = new ObjectParameter("meetingID", meetingID);
            }
            else
            {
                meetingIDParameter = new ObjectParameter("meetingID", typeof(global::System.Int64));
            }
    
            ObjectParameter presentationIDParameter;
            if (presentationID.HasValue)
            {
                presentationIDParameter = new ObjectParameter("presentationID", presentationID);
            }
            else
            {
                presentationIDParameter = new ObjectParameter("presentationID", typeof(global::System.Int64));
            }
    
            ObjectParameter modifiedByParameter;
            if (modifiedBy != null)
            {
                modifiedByParameter = new ObjectParameter("modifiedBy", modifiedBy);
            }
            else
            {
                modifiedByParameter = new ObjectParameter("modifiedBy", typeof(global::System.String));
            }
    
            ObjectParameter modifiedOnParameter;
            if (modifiedOn.HasValue)
            {
                modifiedOnParameter = new ObjectParameter("modifiedOn", modifiedOn);
            }
            else
            {
                modifiedOnParameter = new ObjectParameter("modifiedOn", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction("usp_UpdateMeetingPresentationMappingInfo", meetingIDParameter, presentationIDParameter, modifiedByParameter, modifiedOnParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="presentationID">No Metadata Documentation available.</param>
        /// <param name="presenter">No Metadata Documentation available.</param>
        /// <param name="statusTypeID">No Metadata Documentation available.</param>
        /// <param name="securityTicker">No Metadata Documentation available.</param>
        /// <param name="securityName">No Metadata Documentation available.</param>
        /// <param name="securityCountry">No Metadata Documentation available.</param>
        /// <param name="securityCountryCode">No Metadata Documentation available.</param>
        /// <param name="securityIndustry">No Metadata Documentation available.</param>
        /// <param name="securityCashPosition">No Metadata Documentation available.</param>
        /// <param name="securityPosition">No Metadata Documentation available.</param>
        /// <param name="securityMSCIStdWeight">No Metadata Documentation available.</param>
        /// <param name="securityMSCIIMIWeight">No Metadata Documentation available.</param>
        /// <param name="securityGlobalActiveWeight">No Metadata Documentation available.</param>
        /// <param name="securityLastClosingPrice">No Metadata Documentation available.</param>
        /// <param name="securityMarketCapitalization">No Metadata Documentation available.</param>
        /// <param name="securityPFVMeasure">No Metadata Documentation available.</param>
        /// <param name="securityBuyRange">No Metadata Documentation available.</param>
        /// <param name="securitySellRange">No Metadata Documentation available.</param>
        /// <param name="securityRecommendation">No Metadata Documentation available.</param>
        /// <param name="investmentThesis">No Metadata Documentation available.</param>
        /// <param name="background">No Metadata Documentation available.</param>
        /// <param name="valuations">No Metadata Documentation available.</param>
        /// <param name="earningsOutlook">No Metadata Documentation available.</param>
        /// <param name="competitiveAdvantage">No Metadata Documentation available.</param>
        /// <param name="competitiveDisadvantage">No Metadata Documentation available.</param>
        /// <param name="committeePFVMeasure">No Metadata Documentation available.</param>
        /// <param name="committeeBuyRange">No Metadata Documentation available.</param>
        /// <param name="committeeSellRange">No Metadata Documentation available.</param>
        /// <param name="committeeRecommendation">No Metadata Documentation available.</param>
        /// <param name="committeeRangeEffectiveThrough">No Metadata Documentation available.</param>
        /// <param name="acceptWithoutDiscussionFlag">No Metadata Documentation available.</param>
        /// <param name="adminNotes">No Metadata Documentation available.</param>
        /// <param name="createdBy">No Metadata Documentation available.</param>
        /// <param name="createdOn">No Metadata Documentation available.</param>
        /// <param name="modifiedBy">No Metadata Documentation available.</param>
        /// <param name="modifiedOn">No Metadata Documentation available.</param>
        public int usp_UpdatePresentationInfo(Nullable<global::System.Int64> presentationID, global::System.String presenter, Nullable<global::System.Int64> statusTypeID, global::System.String securityTicker, global::System.String securityName, global::System.String securityCountry, global::System.String securityCountryCode, global::System.String securityIndustry, Nullable<global::System.Single> securityCashPosition, Nullable<global::System.Int64> securityPosition, Nullable<global::System.Single> securityMSCIStdWeight, Nullable<global::System.Single> securityMSCIIMIWeight, Nullable<global::System.Single> securityGlobalActiveWeight, Nullable<global::System.Single> securityLastClosingPrice, Nullable<global::System.Single> securityMarketCapitalization, global::System.String securityPFVMeasure, Nullable<global::System.Single> securityBuyRange, Nullable<global::System.Single> securitySellRange, global::System.String securityRecommendation, global::System.String investmentThesis, global::System.String background, global::System.String valuations, global::System.String earningsOutlook, global::System.String competitiveAdvantage, global::System.String competitiveDisadvantage, global::System.String committeePFVMeasure, Nullable<global::System.Single> committeeBuyRange, Nullable<global::System.Single> committeeSellRange, global::System.String committeeRecommendation, Nullable<global::System.DateTime> committeeRangeEffectiveThrough, Nullable<global::System.Boolean> acceptWithoutDiscussionFlag, global::System.String adminNotes, global::System.String createdBy, Nullable<global::System.DateTime> createdOn, global::System.String modifiedBy, Nullable<global::System.DateTime> modifiedOn)
        {
            ObjectParameter presentationIDParameter;
            if (presentationID.HasValue)
            {
                presentationIDParameter = new ObjectParameter("presentationID", presentationID);
            }
            else
            {
                presentationIDParameter = new ObjectParameter("presentationID", typeof(global::System.Int64));
            }
    
            ObjectParameter presenterParameter;
            if (presenter != null)
            {
                presenterParameter = new ObjectParameter("presenter", presenter);
            }
            else
            {
                presenterParameter = new ObjectParameter("presenter", typeof(global::System.String));
            }
    
            ObjectParameter statusTypeIDParameter;
            if (statusTypeID.HasValue)
            {
                statusTypeIDParameter = new ObjectParameter("statusTypeID", statusTypeID);
            }
            else
            {
                statusTypeIDParameter = new ObjectParameter("statusTypeID", typeof(global::System.Int64));
            }
    
            ObjectParameter securityTickerParameter;
            if (securityTicker != null)
            {
                securityTickerParameter = new ObjectParameter("securityTicker", securityTicker);
            }
            else
            {
                securityTickerParameter = new ObjectParameter("securityTicker", typeof(global::System.String));
            }
    
            ObjectParameter securityNameParameter;
            if (securityName != null)
            {
                securityNameParameter = new ObjectParameter("securityName", securityName);
            }
            else
            {
                securityNameParameter = new ObjectParameter("securityName", typeof(global::System.String));
            }
    
            ObjectParameter securityCountryParameter;
            if (securityCountry != null)
            {
                securityCountryParameter = new ObjectParameter("securityCountry", securityCountry);
            }
            else
            {
                securityCountryParameter = new ObjectParameter("securityCountry", typeof(global::System.String));
            }
    
            ObjectParameter securityCountryCodeParameter;
            if (securityCountryCode != null)
            {
                securityCountryCodeParameter = new ObjectParameter("securityCountryCode", securityCountryCode);
            }
            else
            {
                securityCountryCodeParameter = new ObjectParameter("securityCountryCode", typeof(global::System.String));
            }
    
            ObjectParameter securityIndustryParameter;
            if (securityIndustry != null)
            {
                securityIndustryParameter = new ObjectParameter("securityIndustry", securityIndustry);
            }
            else
            {
                securityIndustryParameter = new ObjectParameter("securityIndustry", typeof(global::System.String));
            }
    
            ObjectParameter securityCashPositionParameter;
            if (securityCashPosition.HasValue)
            {
                securityCashPositionParameter = new ObjectParameter("securityCashPosition", securityCashPosition);
            }
            else
            {
                securityCashPositionParameter = new ObjectParameter("securityCashPosition", typeof(global::System.Single));
            }
    
            ObjectParameter securityPositionParameter;
            if (securityPosition.HasValue)
            {
                securityPositionParameter = new ObjectParameter("securityPosition", securityPosition);
            }
            else
            {
                securityPositionParameter = new ObjectParameter("securityPosition", typeof(global::System.Int64));
            }
    
            ObjectParameter securityMSCIStdWeightParameter;
            if (securityMSCIStdWeight.HasValue)
            {
                securityMSCIStdWeightParameter = new ObjectParameter("securityMSCIStdWeight", securityMSCIStdWeight);
            }
            else
            {
                securityMSCIStdWeightParameter = new ObjectParameter("securityMSCIStdWeight", typeof(global::System.Single));
            }
    
            ObjectParameter securityMSCIIMIWeightParameter;
            if (securityMSCIIMIWeight.HasValue)
            {
                securityMSCIIMIWeightParameter = new ObjectParameter("securityMSCIIMIWeight", securityMSCIIMIWeight);
            }
            else
            {
                securityMSCIIMIWeightParameter = new ObjectParameter("securityMSCIIMIWeight", typeof(global::System.Single));
            }
    
            ObjectParameter securityGlobalActiveWeightParameter;
            if (securityGlobalActiveWeight.HasValue)
            {
                securityGlobalActiveWeightParameter = new ObjectParameter("securityGlobalActiveWeight", securityGlobalActiveWeight);
            }
            else
            {
                securityGlobalActiveWeightParameter = new ObjectParameter("securityGlobalActiveWeight", typeof(global::System.Single));
            }
    
            ObjectParameter securityLastClosingPriceParameter;
            if (securityLastClosingPrice.HasValue)
            {
                securityLastClosingPriceParameter = new ObjectParameter("securityLastClosingPrice", securityLastClosingPrice);
            }
            else
            {
                securityLastClosingPriceParameter = new ObjectParameter("securityLastClosingPrice", typeof(global::System.Single));
            }
    
            ObjectParameter securityMarketCapitalizationParameter;
            if (securityMarketCapitalization.HasValue)
            {
                securityMarketCapitalizationParameter = new ObjectParameter("securityMarketCapitalization", securityMarketCapitalization);
            }
            else
            {
                securityMarketCapitalizationParameter = new ObjectParameter("securityMarketCapitalization", typeof(global::System.Single));
            }
    
            ObjectParameter securityPFVMeasureParameter;
            if (securityPFVMeasure != null)
            {
                securityPFVMeasureParameter = new ObjectParameter("securityPFVMeasure", securityPFVMeasure);
            }
            else
            {
                securityPFVMeasureParameter = new ObjectParameter("securityPFVMeasure", typeof(global::System.String));
            }
    
            ObjectParameter securityBuyRangeParameter;
            if (securityBuyRange.HasValue)
            {
                securityBuyRangeParameter = new ObjectParameter("securityBuyRange", securityBuyRange);
            }
            else
            {
                securityBuyRangeParameter = new ObjectParameter("securityBuyRange", typeof(global::System.Single));
            }
    
            ObjectParameter securitySellRangeParameter;
            if (securitySellRange.HasValue)
            {
                securitySellRangeParameter = new ObjectParameter("securitySellRange", securitySellRange);
            }
            else
            {
                securitySellRangeParameter = new ObjectParameter("securitySellRange", typeof(global::System.Single));
            }
    
            ObjectParameter securityRecommendationParameter;
            if (securityRecommendation != null)
            {
                securityRecommendationParameter = new ObjectParameter("securityRecommendation", securityRecommendation);
            }
            else
            {
                securityRecommendationParameter = new ObjectParameter("securityRecommendation", typeof(global::System.String));
            }
    
            ObjectParameter investmentThesisParameter;
            if (investmentThesis != null)
            {
                investmentThesisParameter = new ObjectParameter("investmentThesis", investmentThesis);
            }
            else
            {
                investmentThesisParameter = new ObjectParameter("investmentThesis", typeof(global::System.String));
            }
    
            ObjectParameter backgroundParameter;
            if (background != null)
            {
                backgroundParameter = new ObjectParameter("background", background);
            }
            else
            {
                backgroundParameter = new ObjectParameter("background", typeof(global::System.String));
            }
    
            ObjectParameter valuationsParameter;
            if (valuations != null)
            {
                valuationsParameter = new ObjectParameter("valuations", valuations);
            }
            else
            {
                valuationsParameter = new ObjectParameter("valuations", typeof(global::System.String));
            }
    
            ObjectParameter earningsOutlookParameter;
            if (earningsOutlook != null)
            {
                earningsOutlookParameter = new ObjectParameter("earningsOutlook", earningsOutlook);
            }
            else
            {
                earningsOutlookParameter = new ObjectParameter("earningsOutlook", typeof(global::System.String));
            }
    
            ObjectParameter competitiveAdvantageParameter;
            if (competitiveAdvantage != null)
            {
                competitiveAdvantageParameter = new ObjectParameter("competitiveAdvantage", competitiveAdvantage);
            }
            else
            {
                competitiveAdvantageParameter = new ObjectParameter("competitiveAdvantage", typeof(global::System.String));
            }
    
            ObjectParameter competitiveDisadvantageParameter;
            if (competitiveDisadvantage != null)
            {
                competitiveDisadvantageParameter = new ObjectParameter("competitiveDisadvantage", competitiveDisadvantage);
            }
            else
            {
                competitiveDisadvantageParameter = new ObjectParameter("competitiveDisadvantage", typeof(global::System.String));
            }
    
            ObjectParameter committeePFVMeasureParameter;
            if (committeePFVMeasure != null)
            {
                committeePFVMeasureParameter = new ObjectParameter("committeePFVMeasure", committeePFVMeasure);
            }
            else
            {
                committeePFVMeasureParameter = new ObjectParameter("committeePFVMeasure", typeof(global::System.String));
            }
    
            ObjectParameter committeeBuyRangeParameter;
            if (committeeBuyRange.HasValue)
            {
                committeeBuyRangeParameter = new ObjectParameter("committeeBuyRange", committeeBuyRange);
            }
            else
            {
                committeeBuyRangeParameter = new ObjectParameter("committeeBuyRange", typeof(global::System.Single));
            }
    
            ObjectParameter committeeSellRangeParameter;
            if (committeeSellRange.HasValue)
            {
                committeeSellRangeParameter = new ObjectParameter("committeeSellRange", committeeSellRange);
            }
            else
            {
                committeeSellRangeParameter = new ObjectParameter("committeeSellRange", typeof(global::System.Single));
            }
    
            ObjectParameter committeeRecommendationParameter;
            if (committeeRecommendation != null)
            {
                committeeRecommendationParameter = new ObjectParameter("committeeRecommendation", committeeRecommendation);
            }
            else
            {
                committeeRecommendationParameter = new ObjectParameter("committeeRecommendation", typeof(global::System.String));
            }
    
            ObjectParameter committeeRangeEffectiveThroughParameter;
            if (committeeRangeEffectiveThrough.HasValue)
            {
                committeeRangeEffectiveThroughParameter = new ObjectParameter("committeeRangeEffectiveThrough", committeeRangeEffectiveThrough);
            }
            else
            {
                committeeRangeEffectiveThroughParameter = new ObjectParameter("committeeRangeEffectiveThrough", typeof(global::System.DateTime));
            }
    
            ObjectParameter acceptWithoutDiscussionFlagParameter;
            if (acceptWithoutDiscussionFlag.HasValue)
            {
                acceptWithoutDiscussionFlagParameter = new ObjectParameter("acceptWithoutDiscussionFlag", acceptWithoutDiscussionFlag);
            }
            else
            {
                acceptWithoutDiscussionFlagParameter = new ObjectParameter("acceptWithoutDiscussionFlag", typeof(global::System.Boolean));
            }
    
            ObjectParameter adminNotesParameter;
            if (adminNotes != null)
            {
                adminNotesParameter = new ObjectParameter("adminNotes", adminNotes);
            }
            else
            {
                adminNotesParameter = new ObjectParameter("adminNotes", typeof(global::System.String));
            }
    
            ObjectParameter createdByParameter;
            if (createdBy != null)
            {
                createdByParameter = new ObjectParameter("createdBy", createdBy);
            }
            else
            {
                createdByParameter = new ObjectParameter("createdBy", typeof(global::System.String));
            }
    
            ObjectParameter createdOnParameter;
            if (createdOn.HasValue)
            {
                createdOnParameter = new ObjectParameter("createdOn", createdOn);
            }
            else
            {
                createdOnParameter = new ObjectParameter("createdOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter modifiedByParameter;
            if (modifiedBy != null)
            {
                modifiedByParameter = new ObjectParameter("modifiedBy", modifiedBy);
            }
            else
            {
                modifiedByParameter = new ObjectParameter("modifiedBy", typeof(global::System.String));
            }
    
            ObjectParameter modifiedOnParameter;
            if (modifiedOn.HasValue)
            {
                modifiedOnParameter = new ObjectParameter("modifiedOn", modifiedOn);
            }
            else
            {
                modifiedOnParameter = new ObjectParameter("modifiedOn", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction("usp_UpdatePresentationInfo", presentationIDParameter, presenterParameter, statusTypeIDParameter, securityTickerParameter, securityNameParameter, securityCountryParameter, securityCountryCodeParameter, securityIndustryParameter, securityCashPositionParameter, securityPositionParameter, securityMSCIStdWeightParameter, securityMSCIIMIWeightParameter, securityGlobalActiveWeightParameter, securityLastClosingPriceParameter, securityMarketCapitalizationParameter, securityPFVMeasureParameter, securityBuyRangeParameter, securitySellRangeParameter, securityRecommendationParameter, investmentThesisParameter, backgroundParameter, valuationsParameter, earningsOutlookParameter, competitiveAdvantageParameter, competitiveDisadvantageParameter, committeePFVMeasureParameter, committeeBuyRangeParameter, committeeSellRangeParameter, committeeRecommendationParameter, committeeRangeEffectiveThroughParameter, acceptWithoutDiscussionFlagParameter, adminNotesParameter, createdByParameter, createdOnParameter, modifiedByParameter, modifiedOnParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<Nullable<global::System.DateTime>> usp_SelectMeetingInfoMeetingDates()
        {
            return base.ExecuteFunction<Nullable<global::System.DateTime>>("usp_SelectMeetingInfoMeetingDates");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="xmlScript">No Metadata Documentation available.</param>
        public int SetICPMeetingMinutesDetails(global::System.String userName, global::System.String xmlScript)
        {
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter xmlScriptParameter;
            if (xmlScript != null)
            {
                xmlScriptParameter = new ObjectParameter("xmlScript", xmlScript);
            }
            else
            {
                xmlScriptParameter = new ObjectParameter("xmlScript", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("SetICPMeetingMinutesDetails", userNameParameter, xmlScriptParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="meetingId">No Metadata Documentation available.</param>
        public ObjectResult<MeetingMinuteData> RetrieveICPMeetingMinuteDetails(Nullable<global::System.Int64> meetingId)
        {
            ObjectParameter meetingIdParameter;
            if (meetingId.HasValue)
            {
                meetingIdParameter = new ObjectParameter("MeetingId", meetingId);
            }
            else
            {
                meetingIdParameter = new ObjectParameter("MeetingId", typeof(global::System.Int64));
            }
    
            return base.ExecuteFunction<MeetingMinuteData>("RetrieveICPMeetingMinuteDetails", meetingIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="presentationStatus">No Metadata Documentation available.</param>
        public ObjectResult<MeetingInfo> RetrieveICMeetingInfoByStatusType(global::System.String presentationStatus)
        {
            ObjectParameter presentationStatusParameter;
            if (presentationStatus != null)
            {
                presentationStatusParameter = new ObjectParameter("PresentationStatus", presentationStatus);
            }
            else
            {
                presentationStatusParameter = new ObjectParameter("PresentationStatus", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<MeetingInfo>("RetrieveICMeetingInfoByStatusType", presentationStatusParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="presentationStatus">No Metadata Documentation available.</param>
        public ObjectResult<MeetingInfo> RetrieveICMeetingInfoByStatusType(global::System.String presentationStatus, MergeOption mergeOption)
        {
            ObjectParameter presentationStatusParameter;
            if (presentationStatus != null)
            {
                presentationStatusParameter = new ObjectParameter("PresentationStatus", presentationStatus);
            }
            else
            {
                presentationStatusParameter = new ObjectParameter("PresentationStatus", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<MeetingInfo>("RetrieveICMeetingInfoByStatusType", mergeOption, presentationStatusParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="xmlScript">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> SetICPresentationDecisionEntryDetails(global::System.String userName, global::System.String xmlScript)
        {
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter xmlScriptParameter;
            if (xmlScript != null)
            {
                xmlScriptParameter = new ObjectParameter("xmlScript", xmlScript);
            }
            else
            {
                xmlScriptParameter = new ObjectParameter("xmlScript", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("SetICPresentationDecisionEntryDetails", userNameParameter, xmlScriptParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<MeetingConfigScheduleData> GetMeetingConfigSchedule()
        {
            return base.ExecuteFunction<MeetingConfigScheduleData>("GetMeetingConfigSchedule");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="xmlScript">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int64>> SetPresentationInfo(global::System.String userName, global::System.String xmlScript)
        {
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("userName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("userName", typeof(global::System.String));
            }
    
            ObjectParameter xmlScriptParameter;
            if (xmlScript != null)
            {
                xmlScriptParameter = new ObjectParameter("xmlScript", xmlScript);
            }
            else
            {
                xmlScriptParameter = new ObjectParameter("xmlScript", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int64>>("SetPresentationInfo", userNameParameter, xmlScriptParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="presentationDay">No Metadata Documentation available.</param>
        /// <param name="presentationTime">No Metadata Documentation available.</param>
        /// <param name="presentationTimeZone">No Metadata Documentation available.</param>
        /// <param name="presentationDeadlineDay">No Metadata Documentation available.</param>
        /// <param name="presentationDeadlineTime">No Metadata Documentation available.</param>
        /// <param name="preMeetingVotingDeadlineDay">No Metadata Documentation available.</param>
        /// <param name="preMeetingVotingDeadlineTime">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> SetMeetingConfigSchedule(global::System.String userName, global::System.String presentationDay, Nullable<global::System.DateTime> presentationTime, global::System.String presentationTimeZone, global::System.String presentationDeadlineDay, Nullable<global::System.DateTime> presentationDeadlineTime, global::System.String preMeetingVotingDeadlineDay, Nullable<global::System.DateTime> preMeetingVotingDeadlineTime)
        {
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("userName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("userName", typeof(global::System.String));
            }
    
            ObjectParameter presentationDayParameter;
            if (presentationDay != null)
            {
                presentationDayParameter = new ObjectParameter("PresentationDay", presentationDay);
            }
            else
            {
                presentationDayParameter = new ObjectParameter("PresentationDay", typeof(global::System.String));
            }
    
            ObjectParameter presentationTimeParameter;
            if (presentationTime.HasValue)
            {
                presentationTimeParameter = new ObjectParameter("PresentationTime", presentationTime);
            }
            else
            {
                presentationTimeParameter = new ObjectParameter("PresentationTime", typeof(global::System.DateTime));
            }
    
            ObjectParameter presentationTimeZoneParameter;
            if (presentationTimeZone != null)
            {
                presentationTimeZoneParameter = new ObjectParameter("PresentationTimeZone", presentationTimeZone);
            }
            else
            {
                presentationTimeZoneParameter = new ObjectParameter("PresentationTimeZone", typeof(global::System.String));
            }
    
            ObjectParameter presentationDeadlineDayParameter;
            if (presentationDeadlineDay != null)
            {
                presentationDeadlineDayParameter = new ObjectParameter("PresentationDeadlineDay", presentationDeadlineDay);
            }
            else
            {
                presentationDeadlineDayParameter = new ObjectParameter("PresentationDeadlineDay", typeof(global::System.String));
            }
    
            ObjectParameter presentationDeadlineTimeParameter;
            if (presentationDeadlineTime.HasValue)
            {
                presentationDeadlineTimeParameter = new ObjectParameter("PresentationDeadlineTime", presentationDeadlineTime);
            }
            else
            {
                presentationDeadlineTimeParameter = new ObjectParameter("PresentationDeadlineTime", typeof(global::System.DateTime));
            }
    
            ObjectParameter preMeetingVotingDeadlineDayParameter;
            if (preMeetingVotingDeadlineDay != null)
            {
                preMeetingVotingDeadlineDayParameter = new ObjectParameter("PreMeetingVotingDeadlineDay", preMeetingVotingDeadlineDay);
            }
            else
            {
                preMeetingVotingDeadlineDayParameter = new ObjectParameter("PreMeetingVotingDeadlineDay", typeof(global::System.String));
            }
    
            ObjectParameter preMeetingVotingDeadlineTimeParameter;
            if (preMeetingVotingDeadlineTime.HasValue)
            {
                preMeetingVotingDeadlineTimeParameter = new ObjectParameter("PreMeetingVotingDeadlineTime", preMeetingVotingDeadlineTime);
            }
            else
            {
                preMeetingVotingDeadlineTimeParameter = new ObjectParameter("PreMeetingVotingDeadlineTime", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("SetMeetingConfigSchedule", userNameParameter, presentationDayParameter, presentationTimeParameter, presentationTimeZoneParameter, presentationDeadlineDayParameter, presentationDeadlineTimeParameter, preMeetingVotingDeadlineDayParameter, preMeetingVotingDeadlineTimeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="presentationID">No Metadata Documentation available.</param>
        /// <param name="comment">No Metadata Documentation available.</param>
        public ObjectResult<CommentInfo> SetICPresentationComments(global::System.String userName, Nullable<global::System.Int64> presentationID, global::System.String comment)
        {
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter presentationIDParameter;
            if (presentationID.HasValue)
            {
                presentationIDParameter = new ObjectParameter("PresentationID", presentationID);
            }
            else
            {
                presentationIDParameter = new ObjectParameter("PresentationID", typeof(global::System.Int64));
            }
    
            ObjectParameter commentParameter;
            if (comment != null)
            {
                commentParameter = new ObjectParameter("Comment", comment);
            }
            else
            {
                commentParameter = new ObjectParameter("Comment", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<CommentInfo>("SetICPresentationComments", userNameParameter, presentationIDParameter, commentParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="presentationID">No Metadata Documentation available.</param>
        /// <param name="comment">No Metadata Documentation available.</param>
        public ObjectResult<CommentInfo> SetICPresentationComments(global::System.String userName, Nullable<global::System.Int64> presentationID, global::System.String comment, MergeOption mergeOption)
        {
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter presentationIDParameter;
            if (presentationID.HasValue)
            {
                presentationIDParameter = new ObjectParameter("PresentationID", presentationID);
            }
            else
            {
                presentationIDParameter = new ObjectParameter("PresentationID", typeof(global::System.Int64));
            }
    
            ObjectParameter commentParameter;
            if (comment != null)
            {
                commentParameter = new ObjectParameter("Comment", comment);
            }
            else
            {
                commentParameter = new ObjectParameter("Comment", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<CommentInfo>("SetICPresentationComments", mergeOption, userNameParameter, presentationIDParameter, commentParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="xmlScript">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> SetICPresentationVoteDetails(global::System.String userName, global::System.String xmlScript)
        {
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter xmlScriptParameter;
            if (xmlScript != null)
            {
                xmlScriptParameter = new ObjectParameter("xmlScript", xmlScript);
            }
            else
            {
                xmlScriptParameter = new ObjectParameter("xmlScript", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("SetICPresentationVoteDetails", userNameParameter, xmlScriptParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="meetingId">No Metadata Documentation available.</param>
        public ObjectResult<FileMaster> RetrieveICPMeetingAttachedFileDetails(Nullable<global::System.Int64> meetingId)
        {
            ObjectParameter meetingIdParameter;
            if (meetingId.HasValue)
            {
                meetingIdParameter = new ObjectParameter("MeetingId", meetingId);
            }
            else
            {
                meetingIdParameter = new ObjectParameter("MeetingId", typeof(global::System.Int64));
            }
    
            return base.ExecuteFunction<FileMaster>("RetrieveICPMeetingAttachedFileDetails", meetingIdParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="meetingId">No Metadata Documentation available.</param>
        public ObjectResult<FileMaster> RetrieveICPMeetingAttachedFileDetails(Nullable<global::System.Int64> meetingId, MergeOption mergeOption)
        {
            ObjectParameter meetingIdParameter;
            if (meetingId.HasValue)
            {
                meetingIdParameter = new ObjectParameter("MeetingId", meetingId);
            }
            else
            {
                meetingIdParameter = new ObjectParameter("MeetingId", typeof(global::System.Int64));
            }
    
            return base.ExecuteFunction<FileMaster>("RetrieveICPMeetingAttachedFileDetails", mergeOption, meetingIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="meetingId">No Metadata Documentation available.</param>
        /// <param name="name">No Metadata Documentation available.</param>
        /// <param name="securityName">No Metadata Documentation available.</param>
        /// <param name="securityTicker">No Metadata Documentation available.</param>
        /// <param name="location">No Metadata Documentation available.</param>
        /// <param name="metaTags">No Metadata Documentation available.</param>
        /// <param name="category">No Metadata Documentation available.</param>
        /// <param name="type">No Metadata Documentation available.</param>
        /// <param name="fileId">No Metadata Documentation available.</param>
        /// <param name="deletionFlag">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> SetICPMeetingAttachedFileInfo(global::System.String userName, Nullable<global::System.Int64> meetingId, global::System.String name, global::System.String securityName, global::System.String securityTicker, global::System.String location, global::System.String metaTags, global::System.String category, global::System.String type, Nullable<global::System.Int64> fileId, Nullable<global::System.Boolean> deletionFlag)
        {
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter meetingIdParameter;
            if (meetingId.HasValue)
            {
                meetingIdParameter = new ObjectParameter("MeetingId", meetingId);
            }
            else
            {
                meetingIdParameter = new ObjectParameter("MeetingId", typeof(global::System.Int64));
            }
    
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("Name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("Name", typeof(global::System.String));
            }
    
            ObjectParameter securityNameParameter;
            if (securityName != null)
            {
                securityNameParameter = new ObjectParameter("SecurityName", securityName);
            }
            else
            {
                securityNameParameter = new ObjectParameter("SecurityName", typeof(global::System.String));
            }
    
            ObjectParameter securityTickerParameter;
            if (securityTicker != null)
            {
                securityTickerParameter = new ObjectParameter("SecurityTicker", securityTicker);
            }
            else
            {
                securityTickerParameter = new ObjectParameter("SecurityTicker", typeof(global::System.String));
            }
    
            ObjectParameter locationParameter;
            if (location != null)
            {
                locationParameter = new ObjectParameter("Location", location);
            }
            else
            {
                locationParameter = new ObjectParameter("Location", typeof(global::System.String));
            }
    
            ObjectParameter metaTagsParameter;
            if (metaTags != null)
            {
                metaTagsParameter = new ObjectParameter("MetaTags", metaTags);
            }
            else
            {
                metaTagsParameter = new ObjectParameter("MetaTags", typeof(global::System.String));
            }
    
            ObjectParameter categoryParameter;
            if (category != null)
            {
                categoryParameter = new ObjectParameter("Category", category);
            }
            else
            {
                categoryParameter = new ObjectParameter("Category", typeof(global::System.String));
            }
    
            ObjectParameter typeParameter;
            if (type != null)
            {
                typeParameter = new ObjectParameter("Type", type);
            }
            else
            {
                typeParameter = new ObjectParameter("Type", typeof(global::System.String));
            }
    
            ObjectParameter fileIdParameter;
            if (fileId.HasValue)
            {
                fileIdParameter = new ObjectParameter("FileId", fileId);
            }
            else
            {
                fileIdParameter = new ObjectParameter("FileId", typeof(global::System.Int64));
            }
    
            ObjectParameter deletionFlagParameter;
            if (deletionFlag.HasValue)
            {
                deletionFlagParameter = new ObjectParameter("DeletionFlag", deletionFlag);
            }
            else
            {
                deletionFlagParameter = new ObjectParameter("DeletionFlag", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("SetICPMeetingAttachedFileInfo", userNameParameter, meetingIdParameter, nameParameter, securityNameParameter, securityTickerParameter, locationParameter, metaTagsParameter, categoryParameter, typeParameter, fileIdParameter, deletionFlagParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="meetingId">No Metadata Documentation available.</param>
        /// <param name="status">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> SetICPMeetingPresentationStatus(global::System.String userName, Nullable<global::System.Int64> meetingId, global::System.String status)
        {
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter meetingIdParameter;
            if (meetingId.HasValue)
            {
                meetingIdParameter = new ObjectParameter("MeetingId", meetingId);
            }
            else
            {
                meetingIdParameter = new ObjectParameter("MeetingId", typeof(global::System.Int64));
            }
    
            ObjectParameter statusParameter;
            if (status != null)
            {
                statusParameter = new ObjectParameter("Status", status);
            }
            else
            {
                statusParameter = new ObjectParameter("Status", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("SetICPMeetingPresentationStatus", userNameParameter, meetingIdParameter, statusParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="presentationId">No Metadata Documentation available.</param>
        /// <param name="meetingId">No Metadata Documentation available.</param>
        /// <param name="meetingDateTime">No Metadata Documentation available.</param>
        /// <param name="meetingClosedDateTime">No Metadata Documentation available.</param>
        /// <param name="meetingVotingClosedDateTime">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> SetICPMeetingPresentationDate(global::System.String userName, Nullable<global::System.Int64> presentationId, Nullable<global::System.Int64> meetingId, Nullable<global::System.DateTime> meetingDateTime, Nullable<global::System.DateTime> meetingClosedDateTime, Nullable<global::System.DateTime> meetingVotingClosedDateTime)
        {
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter presentationIdParameter;
            if (presentationId.HasValue)
            {
                presentationIdParameter = new ObjectParameter("PresentationId", presentationId);
            }
            else
            {
                presentationIdParameter = new ObjectParameter("PresentationId", typeof(global::System.Int64));
            }
    
            ObjectParameter meetingIdParameter;
            if (meetingId.HasValue)
            {
                meetingIdParameter = new ObjectParameter("MeetingId", meetingId);
            }
            else
            {
                meetingIdParameter = new ObjectParameter("MeetingId", typeof(global::System.Int64));
            }
    
            ObjectParameter meetingDateTimeParameter;
            if (meetingDateTime.HasValue)
            {
                meetingDateTimeParameter = new ObjectParameter("MeetingDateTime", meetingDateTime);
            }
            else
            {
                meetingDateTimeParameter = new ObjectParameter("MeetingDateTime", typeof(global::System.DateTime));
            }
    
            ObjectParameter meetingClosedDateTimeParameter;
            if (meetingClosedDateTime.HasValue)
            {
                meetingClosedDateTimeParameter = new ObjectParameter("MeetingClosedDateTime", meetingClosedDateTime);
            }
            else
            {
                meetingClosedDateTimeParameter = new ObjectParameter("MeetingClosedDateTime", typeof(global::System.DateTime));
            }
    
            ObjectParameter meetingVotingClosedDateTimeParameter;
            if (meetingVotingClosedDateTime.HasValue)
            {
                meetingVotingClosedDateTimeParameter = new ObjectParameter("MeetingVotingClosedDateTime", meetingVotingClosedDateTime);
            }
            else
            {
                meetingVotingClosedDateTimeParameter = new ObjectParameter("MeetingVotingClosedDateTime", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("SetICPMeetingPresentationDate", userNameParameter, presentationIdParameter, meetingIdParameter, meetingDateTimeParameter, meetingClosedDateTimeParameter, meetingVotingClosedDateTimeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="presentationId">No Metadata Documentation available.</param>
        public ObjectResult<FileMaster> RetrieveICPresentationAttachedFileDetails(Nullable<global::System.Int64> presentationId)
        {
            ObjectParameter presentationIdParameter;
            if (presentationId.HasValue)
            {
                presentationIdParameter = new ObjectParameter("PresentationId", presentationId);
            }
            else
            {
                presentationIdParameter = new ObjectParameter("PresentationId", typeof(global::System.Int64));
            }
    
            return base.ExecuteFunction<FileMaster>("RetrieveICPresentationAttachedFileDetails", presentationIdParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="presentationId">No Metadata Documentation available.</param>
        public ObjectResult<FileMaster> RetrieveICPresentationAttachedFileDetails(Nullable<global::System.Int64> presentationId, MergeOption mergeOption)
        {
            ObjectParameter presentationIdParameter;
            if (presentationId.HasValue)
            {
                presentationIdParameter = new ObjectParameter("PresentationId", presentationId);
            }
            else
            {
                presentationIdParameter = new ObjectParameter("PresentationId", typeof(global::System.Int64));
            }
    
            return base.ExecuteFunction<FileMaster>("RetrieveICPresentationAttachedFileDetails", mergeOption, presentationIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="searchString">No Metadata Documentation available.</param>
        public ObjectResult<DocumentsData> GetDocumentsData(global::System.String searchString)
        {
            ObjectParameter searchStringParameter;
            if (searchString != null)
            {
                searchStringParameter = new ObjectParameter("searchString", searchString);
            }
            else
            {
                searchStringParameter = new ObjectParameter("searchString", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<DocumentsData>("GetDocumentsData", searchStringParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="presentationId">No Metadata Documentation available.</param>
        /// <param name="name">No Metadata Documentation available.</param>
        /// <param name="securityName">No Metadata Documentation available.</param>
        /// <param name="securityTicker">No Metadata Documentation available.</param>
        /// <param name="location">No Metadata Documentation available.</param>
        /// <param name="metaTags">No Metadata Documentation available.</param>
        /// <param name="category">No Metadata Documentation available.</param>
        /// <param name="type">No Metadata Documentation available.</param>
        /// <param name="fileId">No Metadata Documentation available.</param>
        /// <param name="deletionFlag">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> SetICPresentationAttachedFileInfo(global::System.String userName, Nullable<global::System.Int64> presentationId, global::System.String name, global::System.String securityName, global::System.String securityTicker, global::System.String location, global::System.String metaTags, global::System.String category, global::System.String type, Nullable<global::System.Int64> fileId, Nullable<global::System.Boolean> deletionFlag)
        {
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter presentationIdParameter;
            if (presentationId.HasValue)
            {
                presentationIdParameter = new ObjectParameter("PresentationId", presentationId);
            }
            else
            {
                presentationIdParameter = new ObjectParameter("PresentationId", typeof(global::System.Int64));
            }
    
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("Name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("Name", typeof(global::System.String));
            }
    
            ObjectParameter securityNameParameter;
            if (securityName != null)
            {
                securityNameParameter = new ObjectParameter("SecurityName", securityName);
            }
            else
            {
                securityNameParameter = new ObjectParameter("SecurityName", typeof(global::System.String));
            }
    
            ObjectParameter securityTickerParameter;
            if (securityTicker != null)
            {
                securityTickerParameter = new ObjectParameter("SecurityTicker", securityTicker);
            }
            else
            {
                securityTickerParameter = new ObjectParameter("SecurityTicker", typeof(global::System.String));
            }
    
            ObjectParameter locationParameter;
            if (location != null)
            {
                locationParameter = new ObjectParameter("Location", location);
            }
            else
            {
                locationParameter = new ObjectParameter("Location", typeof(global::System.String));
            }
    
            ObjectParameter metaTagsParameter;
            if (metaTags != null)
            {
                metaTagsParameter = new ObjectParameter("MetaTags", metaTags);
            }
            else
            {
                metaTagsParameter = new ObjectParameter("MetaTags", typeof(global::System.String));
            }
    
            ObjectParameter categoryParameter;
            if (category != null)
            {
                categoryParameter = new ObjectParameter("Category", category);
            }
            else
            {
                categoryParameter = new ObjectParameter("Category", typeof(global::System.String));
            }
    
            ObjectParameter typeParameter;
            if (type != null)
            {
                typeParameter = new ObjectParameter("Type", type);
            }
            else
            {
                typeParameter = new ObjectParameter("Type", typeof(global::System.String));
            }
    
            ObjectParameter fileIdParameter;
            if (fileId.HasValue)
            {
                fileIdParameter = new ObjectParameter("FileId", fileId);
            }
            else
            {
                fileIdParameter = new ObjectParameter("FileId", typeof(global::System.Int64));
            }
    
            ObjectParameter deletionFlagParameter;
            if (deletionFlag.HasValue)
            {
                deletionFlagParameter = new ObjectParameter("DeletionFlag", deletionFlag);
            }
            else
            {
                deletionFlagParameter = new ObjectParameter("DeletionFlag", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("SetICPresentationAttachedFileInfo", userNameParameter, presentationIdParameter, nameParameter, securityNameParameter, securityTickerParameter, locationParameter, metaTagsParameter, categoryParameter, typeParameter, fileIdParameter, deletionFlagParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="name">No Metadata Documentation available.</param>
        /// <param name="location">No Metadata Documentation available.</param>
        /// <param name="securityName">No Metadata Documentation available.</param>
        /// <param name="securityTicker">No Metadata Documentation available.</param>
        /// <param name="type">No Metadata Documentation available.</param>
        /// <param name="metaTags">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> SetUploadFileInfo(global::System.String userName, global::System.String name, global::System.String location, global::System.String securityName, global::System.String securityTicker, global::System.String type, global::System.String metaTags, global::System.String comments)
        {
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("Name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("Name", typeof(global::System.String));
            }
    
            ObjectParameter locationParameter;
            if (location != null)
            {
                locationParameter = new ObjectParameter("Location", location);
            }
            else
            {
                locationParameter = new ObjectParameter("Location", typeof(global::System.String));
            }
    
            ObjectParameter securityNameParameter;
            if (securityName != null)
            {
                securityNameParameter = new ObjectParameter("SecurityName", securityName);
            }
            else
            {
                securityNameParameter = new ObjectParameter("SecurityName", typeof(global::System.String));
            }
    
            ObjectParameter securityTickerParameter;
            if (securityTicker != null)
            {
                securityTickerParameter = new ObjectParameter("SecurityTicker", securityTicker);
            }
            else
            {
                securityTickerParameter = new ObjectParameter("SecurityTicker", typeof(global::System.String));
            }
    
            ObjectParameter typeParameter;
            if (type != null)
            {
                typeParameter = new ObjectParameter("Type", type);
            }
            else
            {
                typeParameter = new ObjectParameter("Type", typeof(global::System.String));
            }
    
            ObjectParameter metaTagsParameter;
            if (metaTags != null)
            {
                metaTagsParameter = new ObjectParameter("MetaTags", metaTags);
            }
            else
            {
                metaTagsParameter = new ObjectParameter("MetaTags", typeof(global::System.String));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("SetUploadFileInfo", userNameParameter, nameParameter, locationParameter, securityNameParameter, securityTickerParameter, typeParameter, metaTagsParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="fileId">No Metadata Documentation available.</param>
        /// <param name="comment">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> SetFileCommentInfo(global::System.String userName, Nullable<global::System.Int64> fileId, global::System.String comment)
        {
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter fileIdParameter;
            if (fileId.HasValue)
            {
                fileIdParameter = new ObjectParameter("FileId", fileId);
            }
            else
            {
                fileIdParameter = new ObjectParameter("FileId", typeof(global::System.Int64));
            }
    
            ObjectParameter commentParameter;
            if (comment != null)
            {
                commentParameter = new ObjectParameter("Comment", comment);
            }
            else
            {
                commentParameter = new ObjectParameter("Comment", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("SetFileCommentInfo", userNameParameter, fileIdParameter, commentParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="presentationId">No Metadata Documentation available.</param>
        /// <param name="status">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> SetICPPresentationStatus(global::System.String userName, Nullable<global::System.Int64> presentationId, global::System.String status)
        {
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter presentationIdParameter;
            if (presentationId.HasValue)
            {
                presentationIdParameter = new ObjectParameter("PresentationId", presentationId);
            }
            else
            {
                presentationIdParameter = new ObjectParameter("PresentationId", typeof(global::System.Int64));
            }
    
            ObjectParameter statusParameter;
            if (status != null)
            {
                statusParameter = new ObjectParameter("Status", status);
            }
            else
            {
                statusParameter = new ObjectParameter("Status", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("SetICPPresentationStatus", userNameParameter, presentationIdParameter, statusParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<ICPresentationOverviewData> RetrieveICPresentationOverviewData()
        {
            return base.ExecuteFunction<ICPresentationOverviewData>("RetrieveICPresentationOverviewData");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="emailTo">No Metadata Documentation available.</param>
        /// <param name="emailCc">No Metadata Documentation available.</param>
        /// <param name="emailSubject">No Metadata Documentation available.</param>
        /// <param name="emailMessageBody">No Metadata Documentation available.</param>
        /// <param name="emailAttachment">No Metadata Documentation available.</param>
        /// <param name="userName">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> SetMessageInfo(global::System.String emailTo, global::System.String emailCc, global::System.String emailSubject, global::System.String emailMessageBody, global::System.String emailAttachment, global::System.String userName)
        {
            ObjectParameter emailToParameter;
            if (emailTo != null)
            {
                emailToParameter = new ObjectParameter("EmailTo", emailTo);
            }
            else
            {
                emailToParameter = new ObjectParameter("EmailTo", typeof(global::System.String));
            }
    
            ObjectParameter emailCcParameter;
            if (emailCc != null)
            {
                emailCcParameter = new ObjectParameter("EmailCc", emailCc);
            }
            else
            {
                emailCcParameter = new ObjectParameter("EmailCc", typeof(global::System.String));
            }
    
            ObjectParameter emailSubjectParameter;
            if (emailSubject != null)
            {
                emailSubjectParameter = new ObjectParameter("EmailSubject", emailSubject);
            }
            else
            {
                emailSubjectParameter = new ObjectParameter("EmailSubject", typeof(global::System.String));
            }
    
            ObjectParameter emailMessageBodyParameter;
            if (emailMessageBody != null)
            {
                emailMessageBodyParameter = new ObjectParameter("EmailMessageBody", emailMessageBody);
            }
            else
            {
                emailMessageBodyParameter = new ObjectParameter("EmailMessageBody", typeof(global::System.String));
            }
    
            ObjectParameter emailAttachmentParameter;
            if (emailAttachment != null)
            {
                emailAttachmentParameter = new ObjectParameter("EmailAttachment", emailAttachment);
            }
            else
            {
                emailAttachmentParameter = new ObjectParameter("EmailAttachment", typeof(global::System.String));
            }
    
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("SetMessageInfo", emailToParameter, emailCcParameter, emailSubjectParameter, emailMessageBodyParameter, emailAttachmentParameter, userNameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="meetingId">No Metadata Documentation available.</param>
        public ObjectResult<MeetingMinutesReportData> GetMeetingMinutesReportDetails(Nullable<global::System.Int64> meetingId)
        {
            ObjectParameter meetingIdParameter;
            if (meetingId.HasValue)
            {
                meetingIdParameter = new ObjectParameter("MeetingId", meetingId);
            }
            else
            {
                meetingIdParameter = new ObjectParameter("MeetingId", typeof(global::System.Int64));
            }
    
            return base.ExecuteFunction<MeetingMinutesReportData>("GetMeetingMinutesReportDetails", meetingIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="presentationId">No Metadata Documentation available.</param>
        public ObjectResult<PresentationVotingDeadlineDetails> GetPreMeetingVotingReportDetails(Nullable<global::System.Int64> presentationId)
        {
            ObjectParameter presentationIdParameter;
            if (presentationId.HasValue)
            {
                presentationIdParameter = new ObjectParameter("PresentationId", presentationId);
            }
            else
            {
                presentationIdParameter = new ObjectParameter("PresentationId", typeof(global::System.Int64));
            }
    
            return base.ExecuteFunction<PresentationVotingDeadlineDetails>("GetPreMeetingVotingReportDetails", presentationIdParameter);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ICPresentationModel", Name="CommentInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CommentInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CommentInfo object.
        /// </summary>
        /// <param name="commentID">Initial value of the CommentID property.</param>
        public static CommentInfo CreateCommentInfo(global::System.Int64 commentID)
        {
            CommentInfo commentInfo = new CommentInfo();
            commentInfo.CommentID = commentID;
            return commentInfo;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 CommentID
        {
            get
            {
                return _CommentID;
            }
            set
            {
                if (_CommentID != value)
                {
                    OnCommentIDChanging(value);
                    ReportPropertyChanging("CommentID");
                    _CommentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CommentID");
                    OnCommentIDChanged();
                }
            }
        }
        private global::System.Int64 _CommentID;
        partial void OnCommentIDChanging(global::System.Int64 value);
        partial void OnCommentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> PresentationID
        {
            get
            {
                return _PresentationID;
            }
            set
            {
                OnPresentationIDChanging(value);
                ReportPropertyChanging("PresentationID");
                _PresentationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PresentationID");
                OnPresentationIDChanged();
            }
        }
        private Nullable<global::System.Int64> _PresentationID;
        partial void OnPresentationIDChanging(Nullable<global::System.Int64> value);
        partial void OnPresentationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> FileID
        {
            get
            {
                return _FileID;
            }
            set
            {
                OnFileIDChanging(value);
                ReportPropertyChanging("FileID");
                _FileID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FileID");
                OnFileIDChanged();
            }
        }
        private Nullable<global::System.Int64> _FileID;
        partial void OnFileIDChanging(Nullable<global::System.Int64> value);
        partial void OnFileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CommentBy
        {
            get
            {
                return _CommentBy;
            }
            set
            {
                OnCommentByChanging(value);
                ReportPropertyChanging("CommentBy");
                _CommentBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CommentBy");
                OnCommentByChanged();
            }
        }
        private global::System.String _CommentBy;
        partial void OnCommentByChanging(global::System.String value);
        partial void OnCommentByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CommentOn
        {
            get
            {
                return _CommentOn;
            }
            set
            {
                OnCommentOnChanging(value);
                ReportPropertyChanging("CommentOn");
                _CommentOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommentOn");
                OnCommentOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CommentOn;
        partial void OnCommentOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCommentOnChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ICPresentationModel", "FK_CommentInfo_FileMaster", "FileMaster")]
        public FileMaster FileMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileMaster>("ICPresentationModel.FK_CommentInfo_FileMaster", "FileMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileMaster>("ICPresentationModel.FK_CommentInfo_FileMaster", "FileMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FileMaster> FileMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileMaster>("ICPresentationModel.FK_CommentInfo_FileMaster", "FileMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FileMaster>("ICPresentationModel.FK_CommentInfo_FileMaster", "FileMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ICPresentationModel", "FK_CommentInfo_PresentationInfo", "PresentationInfo")]
        public PresentationInfo PresentationInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PresentationInfo>("ICPresentationModel.FK_CommentInfo_PresentationInfo", "PresentationInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PresentationInfo>("ICPresentationModel.FK_CommentInfo_PresentationInfo", "PresentationInfo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PresentationInfo> PresentationInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PresentationInfo>("ICPresentationModel.FK_CommentInfo_PresentationInfo", "PresentationInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PresentationInfo>("ICPresentationModel.FK_CommentInfo_PresentationInfo", "PresentationInfo", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ICPresentationModel", Name="FileMaster")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FileMaster : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FileMaster object.
        /// </summary>
        /// <param name="fileID">Initial value of the FileID property.</param>
        public static FileMaster CreateFileMaster(global::System.Int64 fileID)
        {
            FileMaster fileMaster = new FileMaster();
            fileMaster.FileID = fileID;
            return fileMaster;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 FileID
        {
            get
            {
                return _FileID;
            }
            set
            {
                if (_FileID != value)
                {
                    OnFileIDChanging(value);
                    ReportPropertyChanging("FileID");
                    _FileID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FileID");
                    OnFileIDChanged();
                }
            }
        }
        private global::System.Int64 _FileID;
        partial void OnFileIDChanging(global::System.Int64 value);
        partial void OnFileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityName
        {
            get
            {
                return _SecurityName;
            }
            set
            {
                OnSecurityNameChanging(value);
                ReportPropertyChanging("SecurityName");
                _SecurityName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityName");
                OnSecurityNameChanged();
            }
        }
        private global::System.String _SecurityName;
        partial void OnSecurityNameChanging(global::System.String value);
        partial void OnSecurityNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityTicker
        {
            get
            {
                return _SecurityTicker;
            }
            set
            {
                OnSecurityTickerChanging(value);
                ReportPropertyChanging("SecurityTicker");
                _SecurityTicker = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityTicker");
                OnSecurityTickerChanged();
            }
        }
        private global::System.String _SecurityTicker;
        partial void OnSecurityTickerChanging(global::System.String value);
        partial void OnSecurityTickerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MetaTags
        {
            get
            {
                return _MetaTags;
            }
            set
            {
                OnMetaTagsChanging(value);
                ReportPropertyChanging("MetaTags");
                _MetaTags = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MetaTags");
                OnMetaTagsChanged();
            }
        }
        private global::System.String _MetaTags;
        partial void OnMetaTagsChanging(global::System.String value);
        partial void OnMetaTagsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Category
        {
            get
            {
                return _Category;
            }
            set
            {
                OnCategoryChanging(value);
                ReportPropertyChanging("Category");
                _Category = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Category");
                OnCategoryChanged();
            }
        }
        private global::System.String _Category;
        partial void OnCategoryChanging(global::System.String value);
        partial void OnCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedOn
        {
            get
            {
                return _ModifiedOn;
            }
            set
            {
                OnModifiedOnChanging(value);
                ReportPropertyChanging("ModifiedOn");
                _ModifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedOn");
                OnModifiedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedOn;
        partial void OnModifiedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedOnChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ICPresentationModel", "FK_CommentInfo_FileMaster", "CommentInfo")]
        public EntityCollection<CommentInfo> CommentInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CommentInfo>("ICPresentationModel.FK_CommentInfo_FileMaster", "CommentInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CommentInfo>("ICPresentationModel.FK_CommentInfo_FileMaster", "CommentInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ICPresentationModel", "FK_MeetingAttachedFileInfo_FileMaster", "MeetingAttachedFileInfo")]
        public EntityCollection<MeetingAttachedFileInfo> MeetingAttachedFileInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MeetingAttachedFileInfo>("ICPresentationModel.FK_MeetingAttachedFileInfo_FileMaster", "MeetingAttachedFileInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MeetingAttachedFileInfo>("ICPresentationModel.FK_MeetingAttachedFileInfo_FileMaster", "MeetingAttachedFileInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ICPresentationModel", "FK_PresentationAttachedFileInfo_FileMaster", "PresentationAttachedFileInfo")]
        public EntityCollection<PresentationAttachedFileInfo> PresentationAttachedFileInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PresentationAttachedFileInfo>("ICPresentationModel.FK_PresentationAttachedFileInfo_FileMaster", "PresentationAttachedFileInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PresentationAttachedFileInfo>("ICPresentationModel.FK_PresentationAttachedFileInfo_FileMaster", "PresentationAttachedFileInfo", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ICPresentationModel", Name="MeetingAttachedFileInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MeetingAttachedFileInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MeetingAttachedFileInfo object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="fileID">Initial value of the FileID property.</param>
        /// <param name="meetingID">Initial value of the MeetingID property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        /// <param name="modifiedBy">Initial value of the ModifiedBy property.</param>
        /// <param name="modifiedOn">Initial value of the ModifiedOn property.</param>
        public static MeetingAttachedFileInfo CreateMeetingAttachedFileInfo(global::System.Int64 id, global::System.Int64 fileID, global::System.Int64 meetingID, global::System.String createdBy, global::System.DateTime createdOn, global::System.String modifiedBy, global::System.DateTime modifiedOn)
        {
            MeetingAttachedFileInfo meetingAttachedFileInfo = new MeetingAttachedFileInfo();
            meetingAttachedFileInfo.ID = id;
            meetingAttachedFileInfo.FileID = fileID;
            meetingAttachedFileInfo.MeetingID = meetingID;
            meetingAttachedFileInfo.CreatedBy = createdBy;
            meetingAttachedFileInfo.CreatedOn = createdOn;
            meetingAttachedFileInfo.ModifiedBy = modifiedBy;
            meetingAttachedFileInfo.ModifiedOn = modifiedOn;
            return meetingAttachedFileInfo;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 FileID
        {
            get
            {
                return _FileID;
            }
            set
            {
                OnFileIDChanging(value);
                ReportPropertyChanging("FileID");
                _FileID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FileID");
                OnFileIDChanged();
            }
        }
        private global::System.Int64 _FileID;
        partial void OnFileIDChanging(global::System.Int64 value);
        partial void OnFileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MeetingID
        {
            get
            {
                return _MeetingID;
            }
            set
            {
                OnMeetingIDChanging(value);
                ReportPropertyChanging("MeetingID");
                _MeetingID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MeetingID");
                OnMeetingIDChanged();
            }
        }
        private global::System.Int64 _MeetingID;
        partial void OnMeetingIDChanging(global::System.Int64 value);
        partial void OnMeetingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedOn
        {
            get
            {
                return _ModifiedOn;
            }
            set
            {
                OnModifiedOnChanging(value);
                ReportPropertyChanging("ModifiedOn");
                _ModifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedOn");
                OnModifiedOnChanged();
            }
        }
        private global::System.DateTime _ModifiedOn;
        partial void OnModifiedOnChanging(global::System.DateTime value);
        partial void OnModifiedOnChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ICPresentationModel", "FK_MeetingAttachedFileInfo_FileMaster", "FileMaster")]
        public FileMaster FileMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileMaster>("ICPresentationModel.FK_MeetingAttachedFileInfo_FileMaster", "FileMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileMaster>("ICPresentationModel.FK_MeetingAttachedFileInfo_FileMaster", "FileMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FileMaster> FileMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileMaster>("ICPresentationModel.FK_MeetingAttachedFileInfo_FileMaster", "FileMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FileMaster>("ICPresentationModel.FK_MeetingAttachedFileInfo_FileMaster", "FileMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ICPresentationModel", "FK_MeetingAttachedFileInfo_MeetingInfo", "MeetingInfo")]
        public MeetingInfo MeetingInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MeetingInfo>("ICPresentationModel.FK_MeetingAttachedFileInfo_MeetingInfo", "MeetingInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MeetingInfo>("ICPresentationModel.FK_MeetingAttachedFileInfo_MeetingInfo", "MeetingInfo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MeetingInfo> MeetingInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MeetingInfo>("ICPresentationModel.FK_MeetingAttachedFileInfo_MeetingInfo", "MeetingInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MeetingInfo>("ICPresentationModel.FK_MeetingAttachedFileInfo_MeetingInfo", "MeetingInfo", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ICPresentationModel", Name="MeetingConfigurationSchedule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MeetingConfigurationSchedule : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MeetingConfigurationSchedule object.
        /// </summary>
        /// <param name="presentationTime">Initial value of the PresentationTime property.</param>
        /// <param name="presentationTimeZone">Initial value of the PresentationTimeZone property.</param>
        /// <param name="presentationDeadlineTime">Initial value of the PresentationDeadlineTime property.</param>
        /// <param name="preMeetingVotingDeadlineTime">Initial value of the PreMeetingVotingDeadlineTime property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        /// <param name="modifiedBy">Initial value of the ModifiedBy property.</param>
        /// <param name="modifiedOn">Initial value of the ModifiedOn property.</param>
        public static MeetingConfigurationSchedule CreateMeetingConfigurationSchedule(global::System.DateTime presentationTime, global::System.String presentationTimeZone, global::System.DateTime presentationDeadlineTime, global::System.DateTime preMeetingVotingDeadlineTime, global::System.String createdBy, global::System.DateTime createdOn, global::System.String modifiedBy, global::System.DateTime modifiedOn)
        {
            MeetingConfigurationSchedule meetingConfigurationSchedule = new MeetingConfigurationSchedule();
            meetingConfigurationSchedule.PresentationTime = presentationTime;
            meetingConfigurationSchedule.PresentationTimeZone = presentationTimeZone;
            meetingConfigurationSchedule.PresentationDeadlineTime = presentationDeadlineTime;
            meetingConfigurationSchedule.PreMeetingVotingDeadlineTime = preMeetingVotingDeadlineTime;
            meetingConfigurationSchedule.CreatedBy = createdBy;
            meetingConfigurationSchedule.CreatedOn = createdOn;
            meetingConfigurationSchedule.ModifiedBy = modifiedBy;
            meetingConfigurationSchedule.ModifiedOn = modifiedOn;
            return meetingConfigurationSchedule;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PresentationDay
        {
            get
            {
                return _PresentationDay;
            }
            set
            {
                OnPresentationDayChanging(value);
                ReportPropertyChanging("PresentationDay");
                _PresentationDay = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PresentationDay");
                OnPresentationDayChanged();
            }
        }
        private global::System.String _PresentationDay;
        partial void OnPresentationDayChanging(global::System.String value);
        partial void OnPresentationDayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PresentationTime
        {
            get
            {
                return _PresentationTime;
            }
            set
            {
                if (_PresentationTime != value)
                {
                    OnPresentationTimeChanging(value);
                    ReportPropertyChanging("PresentationTime");
                    _PresentationTime = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PresentationTime");
                    OnPresentationTimeChanged();
                }
            }
        }
        private global::System.DateTime _PresentationTime;
        partial void OnPresentationTimeChanging(global::System.DateTime value);
        partial void OnPresentationTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PresentationTimeZone
        {
            get
            {
                return _PresentationTimeZone;
            }
            set
            {
                if (_PresentationTimeZone != value)
                {
                    OnPresentationTimeZoneChanging(value);
                    ReportPropertyChanging("PresentationTimeZone");
                    _PresentationTimeZone = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PresentationTimeZone");
                    OnPresentationTimeZoneChanged();
                }
            }
        }
        private global::System.String _PresentationTimeZone;
        partial void OnPresentationTimeZoneChanging(global::System.String value);
        partial void OnPresentationTimeZoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PresentationDeadlineDay
        {
            get
            {
                return _PresentationDeadlineDay;
            }
            set
            {
                OnPresentationDeadlineDayChanging(value);
                ReportPropertyChanging("PresentationDeadlineDay");
                _PresentationDeadlineDay = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PresentationDeadlineDay");
                OnPresentationDeadlineDayChanged();
            }
        }
        private global::System.String _PresentationDeadlineDay;
        partial void OnPresentationDeadlineDayChanging(global::System.String value);
        partial void OnPresentationDeadlineDayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PresentationDeadlineTime
        {
            get
            {
                return _PresentationDeadlineTime;
            }
            set
            {
                if (_PresentationDeadlineTime != value)
                {
                    OnPresentationDeadlineTimeChanging(value);
                    ReportPropertyChanging("PresentationDeadlineTime");
                    _PresentationDeadlineTime = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PresentationDeadlineTime");
                    OnPresentationDeadlineTimeChanged();
                }
            }
        }
        private global::System.DateTime _PresentationDeadlineTime;
        partial void OnPresentationDeadlineTimeChanging(global::System.DateTime value);
        partial void OnPresentationDeadlineTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PreMeetingVotingDeadlineDay
        {
            get
            {
                return _PreMeetingVotingDeadlineDay;
            }
            set
            {
                OnPreMeetingVotingDeadlineDayChanging(value);
                ReportPropertyChanging("PreMeetingVotingDeadlineDay");
                _PreMeetingVotingDeadlineDay = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PreMeetingVotingDeadlineDay");
                OnPreMeetingVotingDeadlineDayChanged();
            }
        }
        private global::System.String _PreMeetingVotingDeadlineDay;
        partial void OnPreMeetingVotingDeadlineDayChanging(global::System.String value);
        partial void OnPreMeetingVotingDeadlineDayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PreMeetingVotingDeadlineTime
        {
            get
            {
                return _PreMeetingVotingDeadlineTime;
            }
            set
            {
                if (_PreMeetingVotingDeadlineTime != value)
                {
                    OnPreMeetingVotingDeadlineTimeChanging(value);
                    ReportPropertyChanging("PreMeetingVotingDeadlineTime");
                    _PreMeetingVotingDeadlineTime = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PreMeetingVotingDeadlineTime");
                    OnPreMeetingVotingDeadlineTimeChanged();
                }
            }
        }
        private global::System.DateTime _PreMeetingVotingDeadlineTime;
        partial void OnPreMeetingVotingDeadlineTimeChanging(global::System.DateTime value);
        partial void OnPreMeetingVotingDeadlineTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ConfigurablePresentationDeadline
        {
            get
            {
                return _ConfigurablePresentationDeadline;
            }
            set
            {
                OnConfigurablePresentationDeadlineChanging(value);
                ReportPropertyChanging("ConfigurablePresentationDeadline");
                _ConfigurablePresentationDeadline = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ConfigurablePresentationDeadline");
                OnConfigurablePresentationDeadlineChanged();
            }
        }
        private Nullable<global::System.Decimal> _ConfigurablePresentationDeadline;
        partial void OnConfigurablePresentationDeadlineChanging(Nullable<global::System.Decimal> value);
        partial void OnConfigurablePresentationDeadlineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ConfigurablePreMeetingVotingDeadline
        {
            get
            {
                return _ConfigurablePreMeetingVotingDeadline;
            }
            set
            {
                OnConfigurablePreMeetingVotingDeadlineChanging(value);
                ReportPropertyChanging("ConfigurablePreMeetingVotingDeadline");
                _ConfigurablePreMeetingVotingDeadline = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ConfigurablePreMeetingVotingDeadline");
                OnConfigurablePreMeetingVotingDeadlineChanged();
            }
        }
        private Nullable<global::System.Decimal> _ConfigurablePreMeetingVotingDeadline;
        partial void OnConfigurablePreMeetingVotingDeadlineChanging(Nullable<global::System.Decimal> value);
        partial void OnConfigurablePreMeetingVotingDeadlineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                if (_CreatedBy != value)
                {
                    OnCreatedByChanging(value);
                    ReportPropertyChanging("CreatedBy");
                    _CreatedBy = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CreatedBy");
                    OnCreatedByChanged();
                }
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                if (_CreatedOn != value)
                {
                    OnCreatedOnChanging(value);
                    ReportPropertyChanging("CreatedOn");
                    _CreatedOn = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CreatedOn");
                    OnCreatedOnChanged();
                }
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                if (_ModifiedBy != value)
                {
                    OnModifiedByChanging(value);
                    ReportPropertyChanging("ModifiedBy");
                    _ModifiedBy = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ModifiedBy");
                    OnModifiedByChanged();
                }
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedOn
        {
            get
            {
                return _ModifiedOn;
            }
            set
            {
                if (_ModifiedOn != value)
                {
                    OnModifiedOnChanging(value);
                    ReportPropertyChanging("ModifiedOn");
                    _ModifiedOn = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ModifiedOn");
                    OnModifiedOnChanged();
                }
            }
        }
        private global::System.DateTime _ModifiedOn;
        partial void OnModifiedOnChanging(global::System.DateTime value);
        partial void OnModifiedOnChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ICPresentationModel", Name="MeetingInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MeetingInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MeetingInfo object.
        /// </summary>
        /// <param name="meetingID">Initial value of the MeetingID property.</param>
        /// <param name="meetingDateTime">Initial value of the MeetingDateTime property.</param>
        /// <param name="meetingClosedDateTime">Initial value of the MeetingClosedDateTime property.</param>
        /// <param name="meetingVotingClosedDateTime">Initial value of the MeetingVotingClosedDateTime property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        /// <param name="modifiedBy">Initial value of the ModifiedBy property.</param>
        /// <param name="modifiedOn">Initial value of the ModifiedOn property.</param>
        public static MeetingInfo CreateMeetingInfo(global::System.Int64 meetingID, global::System.DateTime meetingDateTime, global::System.DateTime meetingClosedDateTime, global::System.DateTime meetingVotingClosedDateTime, global::System.String createdBy, global::System.DateTime createdOn, global::System.String modifiedBy, global::System.DateTime modifiedOn)
        {
            MeetingInfo meetingInfo = new MeetingInfo();
            meetingInfo.MeetingID = meetingID;
            meetingInfo.MeetingDateTime = meetingDateTime;
            meetingInfo.MeetingClosedDateTime = meetingClosedDateTime;
            meetingInfo.MeetingVotingClosedDateTime = meetingVotingClosedDateTime;
            meetingInfo.CreatedBy = createdBy;
            meetingInfo.CreatedOn = createdOn;
            meetingInfo.ModifiedBy = modifiedBy;
            meetingInfo.ModifiedOn = modifiedOn;
            return meetingInfo;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MeetingID
        {
            get
            {
                return _MeetingID;
            }
            set
            {
                if (_MeetingID != value)
                {
                    OnMeetingIDChanging(value);
                    ReportPropertyChanging("MeetingID");
                    _MeetingID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MeetingID");
                    OnMeetingIDChanged();
                }
            }
        }
        private global::System.Int64 _MeetingID;
        partial void OnMeetingIDChanging(global::System.Int64 value);
        partial void OnMeetingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime MeetingDateTime
        {
            get
            {
                return _MeetingDateTime;
            }
            set
            {
                OnMeetingDateTimeChanging(value);
                ReportPropertyChanging("MeetingDateTime");
                _MeetingDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MeetingDateTime");
                OnMeetingDateTimeChanged();
            }
        }
        private global::System.DateTime _MeetingDateTime;
        partial void OnMeetingDateTimeChanging(global::System.DateTime value);
        partial void OnMeetingDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime MeetingClosedDateTime
        {
            get
            {
                return _MeetingClosedDateTime;
            }
            set
            {
                OnMeetingClosedDateTimeChanging(value);
                ReportPropertyChanging("MeetingClosedDateTime");
                _MeetingClosedDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MeetingClosedDateTime");
                OnMeetingClosedDateTimeChanged();
            }
        }
        private global::System.DateTime _MeetingClosedDateTime;
        partial void OnMeetingClosedDateTimeChanging(global::System.DateTime value);
        partial void OnMeetingClosedDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime MeetingVotingClosedDateTime
        {
            get
            {
                return _MeetingVotingClosedDateTime;
            }
            set
            {
                OnMeetingVotingClosedDateTimeChanging(value);
                ReportPropertyChanging("MeetingVotingClosedDateTime");
                _MeetingVotingClosedDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MeetingVotingClosedDateTime");
                OnMeetingVotingClosedDateTimeChanged();
            }
        }
        private global::System.DateTime _MeetingVotingClosedDateTime;
        partial void OnMeetingVotingClosedDateTimeChanging(global::System.DateTime value);
        partial void OnMeetingVotingClosedDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MeetingDescription
        {
            get
            {
                return _MeetingDescription;
            }
            set
            {
                OnMeetingDescriptionChanging(value);
                ReportPropertyChanging("MeetingDescription");
                _MeetingDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MeetingDescription");
                OnMeetingDescriptionChanged();
            }
        }
        private global::System.String _MeetingDescription;
        partial void OnMeetingDescriptionChanging(global::System.String value);
        partial void OnMeetingDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedOn
        {
            get
            {
                return _ModifiedOn;
            }
            set
            {
                OnModifiedOnChanging(value);
                ReportPropertyChanging("ModifiedOn");
                _ModifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedOn");
                OnModifiedOnChanged();
            }
        }
        private global::System.DateTime _ModifiedOn;
        partial void OnModifiedOnChanging(global::System.DateTime value);
        partial void OnModifiedOnChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ICPresentationModel", "FK_MeetingPresentationMappingInfo_MeetingInfo", "MeetingPresentationMappingInfo")]
        public EntityCollection<MeetingPresentationMappingInfo> MeetingPresentationMappingInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MeetingPresentationMappingInfo>("ICPresentationModel.FK_MeetingPresentationMappingInfo_MeetingInfo", "MeetingPresentationMappingInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MeetingPresentationMappingInfo>("ICPresentationModel.FK_MeetingPresentationMappingInfo_MeetingInfo", "MeetingPresentationMappingInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ICPresentationModel", "FK_MeetingAttachedFileInfo_MeetingInfo", "MeetingAttachedFileInfo")]
        public EntityCollection<MeetingAttachedFileInfo> MeetingAttachedFileInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MeetingAttachedFileInfo>("ICPresentationModel.FK_MeetingAttachedFileInfo_MeetingInfo", "MeetingAttachedFileInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MeetingAttachedFileInfo>("ICPresentationModel.FK_MeetingAttachedFileInfo_MeetingInfo", "MeetingAttachedFileInfo", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ICPresentationModel", Name="MeetingPresentationMappingInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MeetingPresentationMappingInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MeetingPresentationMappingInfo object.
        /// </summary>
        /// <param name="mappingID">Initial value of the MappingID property.</param>
        /// <param name="meetingID">Initial value of the MeetingID property.</param>
        /// <param name="presentationID">Initial value of the PresentationID property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        /// <param name="modifedBy">Initial value of the ModifedBy property.</param>
        /// <param name="modifiedOn">Initial value of the ModifiedOn property.</param>
        public static MeetingPresentationMappingInfo CreateMeetingPresentationMappingInfo(global::System.Int64 mappingID, global::System.Int64 meetingID, global::System.Int64 presentationID, global::System.String createdBy, global::System.DateTime createdOn, global::System.String modifedBy, global::System.DateTime modifiedOn)
        {
            MeetingPresentationMappingInfo meetingPresentationMappingInfo = new MeetingPresentationMappingInfo();
            meetingPresentationMappingInfo.MappingID = mappingID;
            meetingPresentationMappingInfo.MeetingID = meetingID;
            meetingPresentationMappingInfo.PresentationID = presentationID;
            meetingPresentationMappingInfo.CreatedBy = createdBy;
            meetingPresentationMappingInfo.CreatedOn = createdOn;
            meetingPresentationMappingInfo.ModifedBy = modifedBy;
            meetingPresentationMappingInfo.ModifiedOn = modifiedOn;
            return meetingPresentationMappingInfo;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MappingID
        {
            get
            {
                return _MappingID;
            }
            set
            {
                if (_MappingID != value)
                {
                    OnMappingIDChanging(value);
                    ReportPropertyChanging("MappingID");
                    _MappingID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MappingID");
                    OnMappingIDChanged();
                }
            }
        }
        private global::System.Int64 _MappingID;
        partial void OnMappingIDChanging(global::System.Int64 value);
        partial void OnMappingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MeetingID
        {
            get
            {
                return _MeetingID;
            }
            set
            {
                OnMeetingIDChanging(value);
                ReportPropertyChanging("MeetingID");
                _MeetingID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MeetingID");
                OnMeetingIDChanged();
            }
        }
        private global::System.Int64 _MeetingID;
        partial void OnMeetingIDChanging(global::System.Int64 value);
        partial void OnMeetingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PresentationID
        {
            get
            {
                return _PresentationID;
            }
            set
            {
                OnPresentationIDChanging(value);
                ReportPropertyChanging("PresentationID");
                _PresentationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PresentationID");
                OnPresentationIDChanged();
            }
        }
        private global::System.Int64 _PresentationID;
        partial void OnPresentationIDChanging(global::System.Int64 value);
        partial void OnPresentationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ModifedBy
        {
            get
            {
                return _ModifedBy;
            }
            set
            {
                OnModifedByChanging(value);
                ReportPropertyChanging("ModifedBy");
                _ModifedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ModifedBy");
                OnModifedByChanged();
            }
        }
        private global::System.String _ModifedBy;
        partial void OnModifedByChanging(global::System.String value);
        partial void OnModifedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedOn
        {
            get
            {
                return _ModifiedOn;
            }
            set
            {
                OnModifiedOnChanging(value);
                ReportPropertyChanging("ModifiedOn");
                _ModifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedOn");
                OnModifiedOnChanged();
            }
        }
        private global::System.DateTime _ModifiedOn;
        partial void OnModifiedOnChanging(global::System.DateTime value);
        partial void OnModifiedOnChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ICPresentationModel", "FK_MeetingPresentationMappingInfo_MeetingInfo", "MeetingInfo")]
        public MeetingInfo MeetingInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MeetingInfo>("ICPresentationModel.FK_MeetingPresentationMappingInfo_MeetingInfo", "MeetingInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MeetingInfo>("ICPresentationModel.FK_MeetingPresentationMappingInfo_MeetingInfo", "MeetingInfo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MeetingInfo> MeetingInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MeetingInfo>("ICPresentationModel.FK_MeetingPresentationMappingInfo_MeetingInfo", "MeetingInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MeetingInfo>("ICPresentationModel.FK_MeetingPresentationMappingInfo_MeetingInfo", "MeetingInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ICPresentationModel", "FK_MeetingPresentationMappingInfo_PresentationInfo", "PresentationInfo")]
        public PresentationInfo PresentationInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PresentationInfo>("ICPresentationModel.FK_MeetingPresentationMappingInfo_PresentationInfo", "PresentationInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PresentationInfo>("ICPresentationModel.FK_MeetingPresentationMappingInfo_PresentationInfo", "PresentationInfo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PresentationInfo> PresentationInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PresentationInfo>("ICPresentationModel.FK_MeetingPresentationMappingInfo_PresentationInfo", "PresentationInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PresentationInfo>("ICPresentationModel.FK_MeetingPresentationMappingInfo_PresentationInfo", "PresentationInfo", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ICPresentationModel", Name="PresentationAttachedFileInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PresentationAttachedFileInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PresentationAttachedFileInfo object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="fileID">Initial value of the FileID property.</param>
        /// <param name="presentationID">Initial value of the PresentationID property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        /// <param name="modifiedBy">Initial value of the ModifiedBy property.</param>
        /// <param name="modifiedOn">Initial value of the ModifiedOn property.</param>
        public static PresentationAttachedFileInfo CreatePresentationAttachedFileInfo(global::System.Int64 id, global::System.Int64 fileID, global::System.Int64 presentationID, global::System.String createdBy, global::System.DateTime createdOn, global::System.String modifiedBy, global::System.DateTime modifiedOn)
        {
            PresentationAttachedFileInfo presentationAttachedFileInfo = new PresentationAttachedFileInfo();
            presentationAttachedFileInfo.ID = id;
            presentationAttachedFileInfo.FileID = fileID;
            presentationAttachedFileInfo.PresentationID = presentationID;
            presentationAttachedFileInfo.CreatedBy = createdBy;
            presentationAttachedFileInfo.CreatedOn = createdOn;
            presentationAttachedFileInfo.ModifiedBy = modifiedBy;
            presentationAttachedFileInfo.ModifiedOn = modifiedOn;
            return presentationAttachedFileInfo;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 FileID
        {
            get
            {
                return _FileID;
            }
            set
            {
                OnFileIDChanging(value);
                ReportPropertyChanging("FileID");
                _FileID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FileID");
                OnFileIDChanged();
            }
        }
        private global::System.Int64 _FileID;
        partial void OnFileIDChanging(global::System.Int64 value);
        partial void OnFileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PresentationID
        {
            get
            {
                return _PresentationID;
            }
            set
            {
                OnPresentationIDChanging(value);
                ReportPropertyChanging("PresentationID");
                _PresentationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PresentationID");
                OnPresentationIDChanged();
            }
        }
        private global::System.Int64 _PresentationID;
        partial void OnPresentationIDChanging(global::System.Int64 value);
        partial void OnPresentationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedOn
        {
            get
            {
                return _ModifiedOn;
            }
            set
            {
                OnModifiedOnChanging(value);
                ReportPropertyChanging("ModifiedOn");
                _ModifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedOn");
                OnModifiedOnChanged();
            }
        }
        private global::System.DateTime _ModifiedOn;
        partial void OnModifiedOnChanging(global::System.DateTime value);
        partial void OnModifiedOnChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ICPresentationModel", "FK_PresentationAttachedFileInfo_FileMaster", "FileMaster")]
        public FileMaster FileMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileMaster>("ICPresentationModel.FK_PresentationAttachedFileInfo_FileMaster", "FileMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileMaster>("ICPresentationModel.FK_PresentationAttachedFileInfo_FileMaster", "FileMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FileMaster> FileMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileMaster>("ICPresentationModel.FK_PresentationAttachedFileInfo_FileMaster", "FileMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FileMaster>("ICPresentationModel.FK_PresentationAttachedFileInfo_FileMaster", "FileMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ICPresentationModel", "FK_AttachedFileInfo_PresentationInfo", "PresentationInfo")]
        public PresentationInfo PresentationInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PresentationInfo>("ICPresentationModel.FK_AttachedFileInfo_PresentationInfo", "PresentationInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PresentationInfo>("ICPresentationModel.FK_AttachedFileInfo_PresentationInfo", "PresentationInfo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PresentationInfo> PresentationInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PresentationInfo>("ICPresentationModel.FK_AttachedFileInfo_PresentationInfo", "PresentationInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PresentationInfo>("ICPresentationModel.FK_AttachedFileInfo_PresentationInfo", "PresentationInfo", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ICPresentationModel", Name="PresentationInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PresentationInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PresentationInfo object.
        /// </summary>
        /// <param name="presentationID">Initial value of the PresentationID property.</param>
        /// <param name="presenter">Initial value of the Presenter property.</param>
        /// <param name="statusType">Initial value of the StatusType property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        /// <param name="modifiedBy">Initial value of the ModifiedBy property.</param>
        /// <param name="modifiedOn">Initial value of the ModifiedOn property.</param>
        public static PresentationInfo CreatePresentationInfo(global::System.Int64 presentationID, global::System.String presenter, global::System.String statusType, global::System.String createdBy, global::System.DateTime createdOn, global::System.String modifiedBy, global::System.DateTime modifiedOn)
        {
            PresentationInfo presentationInfo = new PresentationInfo();
            presentationInfo.PresentationID = presentationID;
            presentationInfo.Presenter = presenter;
            presentationInfo.StatusType = statusType;
            presentationInfo.CreatedBy = createdBy;
            presentationInfo.CreatedOn = createdOn;
            presentationInfo.ModifiedBy = modifiedBy;
            presentationInfo.ModifiedOn = modifiedOn;
            return presentationInfo;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PresentationID
        {
            get
            {
                return _PresentationID;
            }
            set
            {
                if (_PresentationID != value)
                {
                    OnPresentationIDChanging(value);
                    ReportPropertyChanging("PresentationID");
                    _PresentationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PresentationID");
                    OnPresentationIDChanged();
                }
            }
        }
        private global::System.Int64 _PresentationID;
        partial void OnPresentationIDChanging(global::System.Int64 value);
        partial void OnPresentationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Presenter
        {
            get
            {
                return _Presenter;
            }
            set
            {
                OnPresenterChanging(value);
                ReportPropertyChanging("Presenter");
                _Presenter = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Presenter");
                OnPresenterChanged();
            }
        }
        private global::System.String _Presenter;
        partial void OnPresenterChanging(global::System.String value);
        partial void OnPresenterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StatusType
        {
            get
            {
                return _StatusType;
            }
            set
            {
                OnStatusTypeChanging(value);
                ReportPropertyChanging("StatusType");
                _StatusType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StatusType");
                OnStatusTypeChanged();
            }
        }
        private global::System.String _StatusType;
        partial void OnStatusTypeChanging(global::System.String value);
        partial void OnStatusTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityTicker
        {
            get
            {
                return _SecurityTicker;
            }
            set
            {
                OnSecurityTickerChanging(value);
                ReportPropertyChanging("SecurityTicker");
                _SecurityTicker = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityTicker");
                OnSecurityTickerChanged();
            }
        }
        private global::System.String _SecurityTicker;
        partial void OnSecurityTickerChanging(global::System.String value);
        partial void OnSecurityTickerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityName
        {
            get
            {
                return _SecurityName;
            }
            set
            {
                OnSecurityNameChanging(value);
                ReportPropertyChanging("SecurityName");
                _SecurityName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityName");
                OnSecurityNameChanged();
            }
        }
        private global::System.String _SecurityName;
        partial void OnSecurityNameChanging(global::System.String value);
        partial void OnSecurityNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityCountry
        {
            get
            {
                return _SecurityCountry;
            }
            set
            {
                OnSecurityCountryChanging(value);
                ReportPropertyChanging("SecurityCountry");
                _SecurityCountry = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityCountry");
                OnSecurityCountryChanged();
            }
        }
        private global::System.String _SecurityCountry;
        partial void OnSecurityCountryChanging(global::System.String value);
        partial void OnSecurityCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityCountryCode
        {
            get
            {
                return _SecurityCountryCode;
            }
            set
            {
                OnSecurityCountryCodeChanging(value);
                ReportPropertyChanging("SecurityCountryCode");
                _SecurityCountryCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityCountryCode");
                OnSecurityCountryCodeChanged();
            }
        }
        private global::System.String _SecurityCountryCode;
        partial void OnSecurityCountryCodeChanging(global::System.String value);
        partial void OnSecurityCountryCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityIndustry
        {
            get
            {
                return _SecurityIndustry;
            }
            set
            {
                OnSecurityIndustryChanging(value);
                ReportPropertyChanging("SecurityIndustry");
                _SecurityIndustry = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityIndustry");
                OnSecurityIndustryChanged();
            }
        }
        private global::System.String _SecurityIndustry;
        partial void OnSecurityIndustryChanging(global::System.String value);
        partial void OnSecurityIndustryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> SecurityCashPosition
        {
            get
            {
                return _SecurityCashPosition;
            }
            set
            {
                OnSecurityCashPositionChanging(value);
                ReportPropertyChanging("SecurityCashPosition");
                _SecurityCashPosition = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SecurityCashPosition");
                OnSecurityCashPositionChanged();
            }
        }
        private Nullable<global::System.Single> _SecurityCashPosition;
        partial void OnSecurityCashPositionChanging(Nullable<global::System.Single> value);
        partial void OnSecurityCashPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> SecurityPosition
        {
            get
            {
                return _SecurityPosition;
            }
            set
            {
                OnSecurityPositionChanging(value);
                ReportPropertyChanging("SecurityPosition");
                _SecurityPosition = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SecurityPosition");
                OnSecurityPositionChanged();
            }
        }
        private Nullable<global::System.Int64> _SecurityPosition;
        partial void OnSecurityPositionChanging(Nullable<global::System.Int64> value);
        partial void OnSecurityPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> SecurityMSCIStdWeight
        {
            get
            {
                return _SecurityMSCIStdWeight;
            }
            set
            {
                OnSecurityMSCIStdWeightChanging(value);
                ReportPropertyChanging("SecurityMSCIStdWeight");
                _SecurityMSCIStdWeight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SecurityMSCIStdWeight");
                OnSecurityMSCIStdWeightChanged();
            }
        }
        private Nullable<global::System.Single> _SecurityMSCIStdWeight;
        partial void OnSecurityMSCIStdWeightChanging(Nullable<global::System.Single> value);
        partial void OnSecurityMSCIStdWeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> SecurityMSCIIMIWeight
        {
            get
            {
                return _SecurityMSCIIMIWeight;
            }
            set
            {
                OnSecurityMSCIIMIWeightChanging(value);
                ReportPropertyChanging("SecurityMSCIIMIWeight");
                _SecurityMSCIIMIWeight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SecurityMSCIIMIWeight");
                OnSecurityMSCIIMIWeightChanged();
            }
        }
        private Nullable<global::System.Single> _SecurityMSCIIMIWeight;
        partial void OnSecurityMSCIIMIWeightChanging(Nullable<global::System.Single> value);
        partial void OnSecurityMSCIIMIWeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> SecurityGlobalActiveWeight
        {
            get
            {
                return _SecurityGlobalActiveWeight;
            }
            set
            {
                OnSecurityGlobalActiveWeightChanging(value);
                ReportPropertyChanging("SecurityGlobalActiveWeight");
                _SecurityGlobalActiveWeight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SecurityGlobalActiveWeight");
                OnSecurityGlobalActiveWeightChanged();
            }
        }
        private Nullable<global::System.Single> _SecurityGlobalActiveWeight;
        partial void OnSecurityGlobalActiveWeightChanging(Nullable<global::System.Single> value);
        partial void OnSecurityGlobalActiveWeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> SecurityLastClosingPrice
        {
            get
            {
                return _SecurityLastClosingPrice;
            }
            set
            {
                OnSecurityLastClosingPriceChanging(value);
                ReportPropertyChanging("SecurityLastClosingPrice");
                _SecurityLastClosingPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SecurityLastClosingPrice");
                OnSecurityLastClosingPriceChanged();
            }
        }
        private Nullable<global::System.Single> _SecurityLastClosingPrice;
        partial void OnSecurityLastClosingPriceChanging(Nullable<global::System.Single> value);
        partial void OnSecurityLastClosingPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> SecurityMarketCapitalization
        {
            get
            {
                return _SecurityMarketCapitalization;
            }
            set
            {
                OnSecurityMarketCapitalizationChanging(value);
                ReportPropertyChanging("SecurityMarketCapitalization");
                _SecurityMarketCapitalization = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SecurityMarketCapitalization");
                OnSecurityMarketCapitalizationChanged();
            }
        }
        private Nullable<global::System.Single> _SecurityMarketCapitalization;
        partial void OnSecurityMarketCapitalizationChanging(Nullable<global::System.Single> value);
        partial void OnSecurityMarketCapitalizationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityPFVMeasure
        {
            get
            {
                return _SecurityPFVMeasure;
            }
            set
            {
                OnSecurityPFVMeasureChanging(value);
                ReportPropertyChanging("SecurityPFVMeasure");
                _SecurityPFVMeasure = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityPFVMeasure");
                OnSecurityPFVMeasureChanged();
            }
        }
        private global::System.String _SecurityPFVMeasure;
        partial void OnSecurityPFVMeasureChanging(global::System.String value);
        partial void OnSecurityPFVMeasureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> SecurityBuyRange
        {
            get
            {
                return _SecurityBuyRange;
            }
            set
            {
                OnSecurityBuyRangeChanging(value);
                ReportPropertyChanging("SecurityBuyRange");
                _SecurityBuyRange = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SecurityBuyRange");
                OnSecurityBuyRangeChanged();
            }
        }
        private Nullable<global::System.Single> _SecurityBuyRange;
        partial void OnSecurityBuyRangeChanging(Nullable<global::System.Single> value);
        partial void OnSecurityBuyRangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> SecuritySellRange
        {
            get
            {
                return _SecuritySellRange;
            }
            set
            {
                OnSecuritySellRangeChanging(value);
                ReportPropertyChanging("SecuritySellRange");
                _SecuritySellRange = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SecuritySellRange");
                OnSecuritySellRangeChanged();
            }
        }
        private Nullable<global::System.Single> _SecuritySellRange;
        partial void OnSecuritySellRangeChanging(Nullable<global::System.Single> value);
        partial void OnSecuritySellRangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityRecommendation
        {
            get
            {
                return _SecurityRecommendation;
            }
            set
            {
                OnSecurityRecommendationChanging(value);
                ReportPropertyChanging("SecurityRecommendation");
                _SecurityRecommendation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityRecommendation");
                OnSecurityRecommendationChanged();
            }
        }
        private global::System.String _SecurityRecommendation;
        partial void OnSecurityRecommendationChanging(global::System.String value);
        partial void OnSecurityRecommendationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CommitteePFVMeasure
        {
            get
            {
                return _CommitteePFVMeasure;
            }
            set
            {
                OnCommitteePFVMeasureChanging(value);
                ReportPropertyChanging("CommitteePFVMeasure");
                _CommitteePFVMeasure = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CommitteePFVMeasure");
                OnCommitteePFVMeasureChanged();
            }
        }
        private global::System.String _CommitteePFVMeasure;
        partial void OnCommitteePFVMeasureChanging(global::System.String value);
        partial void OnCommitteePFVMeasureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> CommitteeBuyRange
        {
            get
            {
                return _CommitteeBuyRange;
            }
            set
            {
                OnCommitteeBuyRangeChanging(value);
                ReportPropertyChanging("CommitteeBuyRange");
                _CommitteeBuyRange = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommitteeBuyRange");
                OnCommitteeBuyRangeChanged();
            }
        }
        private Nullable<global::System.Single> _CommitteeBuyRange;
        partial void OnCommitteeBuyRangeChanging(Nullable<global::System.Single> value);
        partial void OnCommitteeBuyRangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> CommitteeSellRange
        {
            get
            {
                return _CommitteeSellRange;
            }
            set
            {
                OnCommitteeSellRangeChanging(value);
                ReportPropertyChanging("CommitteeSellRange");
                _CommitteeSellRange = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommitteeSellRange");
                OnCommitteeSellRangeChanged();
            }
        }
        private Nullable<global::System.Single> _CommitteeSellRange;
        partial void OnCommitteeSellRangeChanging(Nullable<global::System.Single> value);
        partial void OnCommitteeSellRangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CommitteeRecommendation
        {
            get
            {
                return _CommitteeRecommendation;
            }
            set
            {
                OnCommitteeRecommendationChanging(value);
                ReportPropertyChanging("CommitteeRecommendation");
                _CommitteeRecommendation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CommitteeRecommendation");
                OnCommitteeRecommendationChanged();
            }
        }
        private global::System.String _CommitteeRecommendation;
        partial void OnCommitteeRecommendationChanging(global::System.String value);
        partial void OnCommitteeRecommendationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CommitteeRangeEffectiveThrough
        {
            get
            {
                return _CommitteeRangeEffectiveThrough;
            }
            set
            {
                OnCommitteeRangeEffectiveThroughChanging(value);
                ReportPropertyChanging("CommitteeRangeEffectiveThrough");
                _CommitteeRangeEffectiveThrough = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommitteeRangeEffectiveThrough");
                OnCommitteeRangeEffectiveThroughChanged();
            }
        }
        private Nullable<global::System.DateTime> _CommitteeRangeEffectiveThrough;
        partial void OnCommitteeRangeEffectiveThroughChanging(Nullable<global::System.DateTime> value);
        partial void OnCommitteeRangeEffectiveThroughChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> AcceptWithoutDiscussionFlag
        {
            get
            {
                return _AcceptWithoutDiscussionFlag;
            }
            set
            {
                OnAcceptWithoutDiscussionFlagChanging(value);
                ReportPropertyChanging("AcceptWithoutDiscussionFlag");
                _AcceptWithoutDiscussionFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AcceptWithoutDiscussionFlag");
                OnAcceptWithoutDiscussionFlagChanged();
            }
        }
        private Nullable<global::System.Boolean> _AcceptWithoutDiscussionFlag;
        partial void OnAcceptWithoutDiscussionFlagChanging(Nullable<global::System.Boolean> value);
        partial void OnAcceptWithoutDiscussionFlagChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AdminNotes
        {
            get
            {
                return _AdminNotes;
            }
            set
            {
                OnAdminNotesChanging(value);
                ReportPropertyChanging("AdminNotes");
                _AdminNotes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AdminNotes");
                OnAdminNotesChanged();
            }
        }
        private global::System.String _AdminNotes;
        partial void OnAdminNotesChanging(global::System.String value);
        partial void OnAdminNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedOn
        {
            get
            {
                return _ModifiedOn;
            }
            set
            {
                OnModifiedOnChanging(value);
                ReportPropertyChanging("ModifiedOn");
                _ModifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedOn");
                OnModifiedOnChanged();
            }
        }
        private global::System.DateTime _ModifiedOn;
        partial void OnModifiedOnChanging(global::System.DateTime value);
        partial void OnModifiedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Analyst
        {
            get
            {
                return _Analyst;
            }
            set
            {
                OnAnalystChanging(value);
                ReportPropertyChanging("Analyst");
                _Analyst = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Analyst");
                OnAnalystChanged();
            }
        }
        private global::System.String _Analyst;
        partial void OnAnalystChanging(global::System.String value);
        partial void OnAnalystChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.String _Price;
        partial void OnPriceChanging(global::System.String value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FVCalc
        {
            get
            {
                return _FVCalc;
            }
            set
            {
                OnFVCalcChanging(value);
                ReportPropertyChanging("FVCalc");
                _FVCalc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FVCalc");
                OnFVCalcChanged();
            }
        }
        private global::System.String _FVCalc;
        partial void OnFVCalcChanging(global::System.String value);
        partial void OnFVCalcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityBuySellvsCrnt
        {
            get
            {
                return _SecurityBuySellvsCrnt;
            }
            set
            {
                OnSecurityBuySellvsCrntChanging(value);
                ReportPropertyChanging("SecurityBuySellvsCrnt");
                _SecurityBuySellvsCrnt = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityBuySellvsCrnt");
                OnSecurityBuySellvsCrntChanged();
            }
        }
        private global::System.String _SecurityBuySellvsCrnt;
        partial void OnSecurityBuySellvsCrntChanging(global::System.String value);
        partial void OnSecurityBuySellvsCrntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CurrentHoldings
        {
            get
            {
                return _CurrentHoldings;
            }
            set
            {
                OnCurrentHoldingsChanging(value);
                ReportPropertyChanging("CurrentHoldings");
                _CurrentHoldings = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CurrentHoldings");
                OnCurrentHoldingsChanged();
            }
        }
        private global::System.String _CurrentHoldings;
        partial void OnCurrentHoldingsChanging(global::System.String value);
        partial void OnCurrentHoldingsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PercentEMIF
        {
            get
            {
                return _PercentEMIF;
            }
            set
            {
                OnPercentEMIFChanging(value);
                ReportPropertyChanging("PercentEMIF");
                _PercentEMIF = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PercentEMIF");
                OnPercentEMIFChanged();
            }
        }
        private global::System.String _PercentEMIF;
        partial void OnPercentEMIFChanging(global::System.String value);
        partial void OnPercentEMIFChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityBMWeight
        {
            get
            {
                return _SecurityBMWeight;
            }
            set
            {
                OnSecurityBMWeightChanging(value);
                ReportPropertyChanging("SecurityBMWeight");
                _SecurityBMWeight = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityBMWeight");
                OnSecurityBMWeightChanged();
            }
        }
        private global::System.String _SecurityBMWeight;
        partial void OnSecurityBMWeightChanging(global::System.String value);
        partial void OnSecurityBMWeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityActiveWeight
        {
            get
            {
                return _SecurityActiveWeight;
            }
            set
            {
                OnSecurityActiveWeightChanging(value);
                ReportPropertyChanging("SecurityActiveWeight");
                _SecurityActiveWeight = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityActiveWeight");
                OnSecurityActiveWeightChanged();
            }
        }
        private global::System.String _SecurityActiveWeight;
        partial void OnSecurityActiveWeightChanging(global::System.String value);
        partial void OnSecurityActiveWeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String YTDRet_Absolute
        {
            get
            {
                return _YTDRet_Absolute;
            }
            set
            {
                OnYTDRet_AbsoluteChanging(value);
                ReportPropertyChanging("YTDRet_Absolute");
                _YTDRet_Absolute = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("YTDRet_Absolute");
                OnYTDRet_AbsoluteChanged();
            }
        }
        private global::System.String _YTDRet_Absolute;
        partial void OnYTDRet_AbsoluteChanging(global::System.String value);
        partial void OnYTDRet_AbsoluteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String YTDRet_RELtoLOC
        {
            get
            {
                return _YTDRet_RELtoLOC;
            }
            set
            {
                OnYTDRet_RELtoLOCChanging(value);
                ReportPropertyChanging("YTDRet_RELtoLOC");
                _YTDRet_RELtoLOC = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("YTDRet_RELtoLOC");
                OnYTDRet_RELtoLOCChanged();
            }
        }
        private global::System.String _YTDRet_RELtoLOC;
        partial void OnYTDRet_RELtoLOCChanging(global::System.String value);
        partial void OnYTDRet_RELtoLOCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String YTDRet_RELtoEM
        {
            get
            {
                return _YTDRet_RELtoEM;
            }
            set
            {
                OnYTDRet_RELtoEMChanging(value);
                ReportPropertyChanging("YTDRet_RELtoEM");
                _YTDRet_RELtoEM = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("YTDRet_RELtoEM");
                OnYTDRet_RELtoEMChanged();
            }
        }
        private global::System.String _YTDRet_RELtoEM;
        partial void OnYTDRet_RELtoEMChanging(global::System.String value);
        partial void OnYTDRet_RELtoEMChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ICPresentationModel", "FK_CommentInfo_PresentationInfo", "CommentInfo")]
        public EntityCollection<CommentInfo> CommentInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CommentInfo>("ICPresentationModel.FK_CommentInfo_PresentationInfo", "CommentInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CommentInfo>("ICPresentationModel.FK_CommentInfo_PresentationInfo", "CommentInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ICPresentationModel", "FK_MeetingPresentationMappingInfo_PresentationInfo", "MeetingPresentationMappingInfo")]
        public EntityCollection<MeetingPresentationMappingInfo> MeetingPresentationMappingInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MeetingPresentationMappingInfo>("ICPresentationModel.FK_MeetingPresentationMappingInfo_PresentationInfo", "MeetingPresentationMappingInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MeetingPresentationMappingInfo>("ICPresentationModel.FK_MeetingPresentationMappingInfo_PresentationInfo", "MeetingPresentationMappingInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ICPresentationModel", "FK_AttachedFileInfo_PresentationInfo", "PresentationAttachedFileInfo")]
        public EntityCollection<PresentationAttachedFileInfo> PresentationAttachedFileInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PresentationAttachedFileInfo>("ICPresentationModel.FK_AttachedFileInfo_PresentationInfo", "PresentationAttachedFileInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PresentationAttachedFileInfo>("ICPresentationModel.FK_AttachedFileInfo_PresentationInfo", "PresentationAttachedFileInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ICPresentationModel", "FK_VoterInfo_PresentationInfo", "VoterInfo")]
        public EntityCollection<VoterInfo> VoterInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<VoterInfo>("ICPresentationModel.FK_VoterInfo_PresentationInfo", "VoterInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<VoterInfo>("ICPresentationModel.FK_VoterInfo_PresentationInfo", "VoterInfo", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ICPresentationModel", Name="VoterInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VoterInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VoterInfo object.
        /// </summary>
        /// <param name="voterID">Initial value of the VoterID property.</param>
        /// <param name="presentationID">Initial value of the PresentationID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        /// <param name="modifiedBy">Initial value of the ModifiedBy property.</param>
        /// <param name="modifiedOn">Initial value of the ModifiedOn property.</param>
        public static VoterInfo CreateVoterInfo(global::System.Int64 voterID, global::System.Int64 presentationID, global::System.String name, global::System.String createdBy, global::System.DateTime createdOn, global::System.String modifiedBy, global::System.DateTime modifiedOn)
        {
            VoterInfo voterInfo = new VoterInfo();
            voterInfo.VoterID = voterID;
            voterInfo.PresentationID = presentationID;
            voterInfo.Name = name;
            voterInfo.CreatedBy = createdBy;
            voterInfo.CreatedOn = createdOn;
            voterInfo.ModifiedBy = modifiedBy;
            voterInfo.ModifiedOn = modifiedOn;
            return voterInfo;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 VoterID
        {
            get
            {
                return _VoterID;
            }
            set
            {
                if (_VoterID != value)
                {
                    OnVoterIDChanging(value);
                    ReportPropertyChanging("VoterID");
                    _VoterID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VoterID");
                    OnVoterIDChanged();
                }
            }
        }
        private global::System.Int64 _VoterID;
        partial void OnVoterIDChanging(global::System.Int64 value);
        partial void OnVoterIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PresentationID
        {
            get
            {
                return _PresentationID;
            }
            set
            {
                OnPresentationIDChanging(value);
                ReportPropertyChanging("PresentationID");
                _PresentationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PresentationID");
                OnPresentationIDChanged();
            }
        }
        private global::System.Int64 _PresentationID;
        partial void OnPresentationIDChanging(global::System.Int64 value);
        partial void OnPresentationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VoteType
        {
            get
            {
                return _VoteType;
            }
            set
            {
                OnVoteTypeChanging(value);
                ReportPropertyChanging("VoteType");
                _VoteType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VoteType");
                OnVoteTypeChanged();
            }
        }
        private global::System.String _VoteType;
        partial void OnVoteTypeChanging(global::System.String value);
        partial void OnVoteTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AttendanceType
        {
            get
            {
                return _AttendanceType;
            }
            set
            {
                OnAttendanceTypeChanging(value);
                ReportPropertyChanging("AttendanceType");
                _AttendanceType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AttendanceType");
                OnAttendanceTypeChanged();
            }
        }
        private global::System.String _AttendanceType;
        partial void OnAttendanceTypeChanging(global::System.String value);
        partial void OnAttendanceTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> PostMeetingFlag
        {
            get
            {
                return _PostMeetingFlag;
            }
            set
            {
                OnPostMeetingFlagChanging(value);
                ReportPropertyChanging("PostMeetingFlag");
                _PostMeetingFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostMeetingFlag");
                OnPostMeetingFlagChanged();
            }
        }
        private Nullable<global::System.Boolean> _PostMeetingFlag;
        partial void OnPostMeetingFlagChanging(Nullable<global::System.Boolean> value);
        partial void OnPostMeetingFlagChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DiscussionFlag
        {
            get
            {
                return _DiscussionFlag;
            }
            set
            {
                OnDiscussionFlagChanging(value);
                ReportPropertyChanging("DiscussionFlag");
                _DiscussionFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DiscussionFlag");
                OnDiscussionFlagChanged();
            }
        }
        private Nullable<global::System.Boolean> _DiscussionFlag;
        partial void OnDiscussionFlagChanging(Nullable<global::System.Boolean> value);
        partial void OnDiscussionFlagChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VoterPFVMeasure
        {
            get
            {
                return _VoterPFVMeasure;
            }
            set
            {
                OnVoterPFVMeasureChanging(value);
                ReportPropertyChanging("VoterPFVMeasure");
                _VoterPFVMeasure = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VoterPFVMeasure");
                OnVoterPFVMeasureChanged();
            }
        }
        private global::System.String _VoterPFVMeasure;
        partial void OnVoterPFVMeasureChanging(global::System.String value);
        partial void OnVoterPFVMeasureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> VoterBuyRange
        {
            get
            {
                return _VoterBuyRange;
            }
            set
            {
                OnVoterBuyRangeChanging(value);
                ReportPropertyChanging("VoterBuyRange");
                _VoterBuyRange = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VoterBuyRange");
                OnVoterBuyRangeChanged();
            }
        }
        private Nullable<global::System.Single> _VoterBuyRange;
        partial void OnVoterBuyRangeChanging(Nullable<global::System.Single> value);
        partial void OnVoterBuyRangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> VoterSellRange
        {
            get
            {
                return _VoterSellRange;
            }
            set
            {
                OnVoterSellRangeChanging(value);
                ReportPropertyChanging("VoterSellRange");
                _VoterSellRange = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VoterSellRange");
                OnVoterSellRangeChanged();
            }
        }
        private Nullable<global::System.Single> _VoterSellRange;
        partial void OnVoterSellRangeChanging(Nullable<global::System.Single> value);
        partial void OnVoterSellRangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VoterRecommendation
        {
            get
            {
                return _VoterRecommendation;
            }
            set
            {
                OnVoterRecommendationChanging(value);
                ReportPropertyChanging("VoterRecommendation");
                _VoterRecommendation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VoterRecommendation");
                OnVoterRecommendationChanged();
            }
        }
        private global::System.String _VoterRecommendation;
        partial void OnVoterRecommendationChanging(global::System.String value);
        partial void OnVoterRecommendationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedOn
        {
            get
            {
                return _ModifiedOn;
            }
            set
            {
                OnModifiedOnChanging(value);
                ReportPropertyChanging("ModifiedOn");
                _ModifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedOn");
                OnModifiedOnChanged();
            }
        }
        private global::System.DateTime _ModifiedOn;
        partial void OnModifiedOnChanging(global::System.DateTime value);
        partial void OnModifiedOnChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ICPresentationModel", "FK_VoterInfo_PresentationInfo", "PresentationInfo")]
        public PresentationInfo PresentationInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PresentationInfo>("ICPresentationModel.FK_VoterInfo_PresentationInfo", "PresentationInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PresentationInfo>("ICPresentationModel.FK_VoterInfo_PresentationInfo", "PresentationInfo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PresentationInfo> PresentationInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PresentationInfo>("ICPresentationModel.FK_VoterInfo_PresentationInfo", "PresentationInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PresentationInfo>("ICPresentationModel.FK_VoterInfo_PresentationInfo", "PresentationInfo", value);
                }
            }
        }

        #endregion
    }

    #endregion
    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ICPresentationModel", Name="DocumentsData")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class DocumentsData : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DocumentsData object.
        /// </summary>
        /// <param name="fileID">Initial value of the FileID property.</param>
        public static DocumentsData CreateDocumentsData(global::System.Int64 fileID)
        {
            DocumentsData documentsData = new DocumentsData();
            documentsData.FileID = fileID;
            return documentsData;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 FileID
        {
            get
            {
                return _FileID;
            }
            set
            {
                OnFileIDChanging(value);
                ReportPropertyChanging("FileID");
                _FileID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FileID");
                OnFileIDChanged();
            }
        }
        private global::System.Int64 _FileID;
        partial void OnFileIDChanging(global::System.Int64 value);
        partial void OnFileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityName
        {
            get
            {
                return _SecurityName;
            }
            set
            {
                OnSecurityNameChanging(value);
                ReportPropertyChanging("SecurityName");
                _SecurityName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityName");
                OnSecurityNameChanged();
            }
        }
        private global::System.String _SecurityName;
        partial void OnSecurityNameChanging(global::System.String value);
        partial void OnSecurityNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityTicker
        {
            get
            {
                return _SecurityTicker;
            }
            set
            {
                OnSecurityTickerChanging(value);
                ReportPropertyChanging("SecurityTicker");
                _SecurityTicker = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityTicker");
                OnSecurityTickerChanged();
            }
        }
        private global::System.String _SecurityTicker;
        partial void OnSecurityTickerChanging(global::System.String value);
        partial void OnSecurityTickerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MetaTags
        {
            get
            {
                return _MetaTags;
            }
            set
            {
                OnMetaTagsChanging(value);
                ReportPropertyChanging("MetaTags");
                _MetaTags = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MetaTags");
                OnMetaTagsChanged();
            }
        }
        private global::System.String _MetaTags;
        partial void OnMetaTagsChanging(global::System.String value);
        partial void OnMetaTagsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedOn
        {
            get
            {
                return _ModifiedOn;
            }
            set
            {
                OnModifiedOnChanging(value);
                ReportPropertyChanging("ModifiedOn");
                _ModifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedOn");
                OnModifiedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedOn;
        partial void OnModifiedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CommentBy
        {
            get
            {
                return _CommentBy;
            }
            set
            {
                OnCommentByChanging(value);
                ReportPropertyChanging("CommentBy");
                _CommentBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CommentBy");
                OnCommentByChanged();
            }
        }
        private global::System.String _CommentBy;
        partial void OnCommentByChanging(global::System.String value);
        partial void OnCommentByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CommentOn
        {
            get
            {
                return _CommentOn;
            }
            set
            {
                OnCommentOnChanging(value);
                ReportPropertyChanging("CommentOn");
                _CommentOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommentOn");
                OnCommentOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CommentOn;
        partial void OnCommentOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCommentOnChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ICPresentationModel", Name="ICPresentationOverviewData")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ICPresentationOverviewData : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ICPresentationOverviewData object.
        /// </summary>
        /// <param name="presentationID">Initial value of the PresentationID property.</param>
        /// <param name="presenter">Initial value of the Presenter property.</param>
        /// <param name="statusType">Initial value of the StatusType property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        /// <param name="modifiedBy">Initial value of the ModifiedBy property.</param>
        /// <param name="modifiedOn">Initial value of the ModifiedOn property.</param>
        public static ICPresentationOverviewData CreateICPresentationOverviewData(global::System.Int64 presentationID, global::System.String presenter, global::System.String statusType, global::System.String createdBy, global::System.DateTime createdOn, global::System.String modifiedBy, global::System.DateTime modifiedOn)
        {
            ICPresentationOverviewData iCPresentationOverviewData = new ICPresentationOverviewData();
            iCPresentationOverviewData.PresentationID = presentationID;
            iCPresentationOverviewData.Presenter = presenter;
            iCPresentationOverviewData.StatusType = statusType;
            iCPresentationOverviewData.CreatedBy = createdBy;
            iCPresentationOverviewData.CreatedOn = createdOn;
            iCPresentationOverviewData.ModifiedBy = modifiedBy;
            iCPresentationOverviewData.ModifiedOn = modifiedOn;
            return iCPresentationOverviewData;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PresentationID
        {
            get
            {
                return _PresentationID;
            }
            set
            {
                OnPresentationIDChanging(value);
                ReportPropertyChanging("PresentationID");
                _PresentationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PresentationID");
                OnPresentationIDChanged();
            }
        }
        private global::System.Int64 _PresentationID;
        partial void OnPresentationIDChanging(global::System.Int64 value);
        partial void OnPresentationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Presenter
        {
            get
            {
                return _Presenter;
            }
            set
            {
                OnPresenterChanging(value);
                ReportPropertyChanging("Presenter");
                _Presenter = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Presenter");
                OnPresenterChanged();
            }
        }
        private global::System.String _Presenter;
        partial void OnPresenterChanging(global::System.String value);
        partial void OnPresenterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StatusType
        {
            get
            {
                return _StatusType;
            }
            set
            {
                OnStatusTypeChanging(value);
                ReportPropertyChanging("StatusType");
                _StatusType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StatusType");
                OnStatusTypeChanged();
            }
        }
        private global::System.String _StatusType;
        partial void OnStatusTypeChanging(global::System.String value);
        partial void OnStatusTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityTicker
        {
            get
            {
                return _SecurityTicker;
            }
            set
            {
                OnSecurityTickerChanging(value);
                ReportPropertyChanging("SecurityTicker");
                _SecurityTicker = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityTicker");
                OnSecurityTickerChanged();
            }
        }
        private global::System.String _SecurityTicker;
        partial void OnSecurityTickerChanging(global::System.String value);
        partial void OnSecurityTickerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityName
        {
            get
            {
                return _SecurityName;
            }
            set
            {
                OnSecurityNameChanging(value);
                ReportPropertyChanging("SecurityName");
                _SecurityName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityName");
                OnSecurityNameChanged();
            }
        }
        private global::System.String _SecurityName;
        partial void OnSecurityNameChanging(global::System.String value);
        partial void OnSecurityNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityCountry
        {
            get
            {
                return _SecurityCountry;
            }
            set
            {
                OnSecurityCountryChanging(value);
                ReportPropertyChanging("SecurityCountry");
                _SecurityCountry = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityCountry");
                OnSecurityCountryChanged();
            }
        }
        private global::System.String _SecurityCountry;
        partial void OnSecurityCountryChanging(global::System.String value);
        partial void OnSecurityCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityCountryCode
        {
            get
            {
                return _SecurityCountryCode;
            }
            set
            {
                OnSecurityCountryCodeChanging(value);
                ReportPropertyChanging("SecurityCountryCode");
                _SecurityCountryCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityCountryCode");
                OnSecurityCountryCodeChanged();
            }
        }
        private global::System.String _SecurityCountryCode;
        partial void OnSecurityCountryCodeChanging(global::System.String value);
        partial void OnSecurityCountryCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityIndustry
        {
            get
            {
                return _SecurityIndustry;
            }
            set
            {
                OnSecurityIndustryChanging(value);
                ReportPropertyChanging("SecurityIndustry");
                _SecurityIndustry = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityIndustry");
                OnSecurityIndustryChanged();
            }
        }
        private global::System.String _SecurityIndustry;
        partial void OnSecurityIndustryChanging(global::System.String value);
        partial void OnSecurityIndustryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> SecurityCashPosition
        {
            get
            {
                return _SecurityCashPosition;
            }
            set
            {
                OnSecurityCashPositionChanging(value);
                ReportPropertyChanging("SecurityCashPosition");
                _SecurityCashPosition = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SecurityCashPosition");
                OnSecurityCashPositionChanged();
            }
        }
        private Nullable<global::System.Single> _SecurityCashPosition;
        partial void OnSecurityCashPositionChanging(Nullable<global::System.Single> value);
        partial void OnSecurityCashPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> SecurityPosition
        {
            get
            {
                return _SecurityPosition;
            }
            set
            {
                OnSecurityPositionChanging(value);
                ReportPropertyChanging("SecurityPosition");
                _SecurityPosition = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SecurityPosition");
                OnSecurityPositionChanged();
            }
        }
        private Nullable<global::System.Int64> _SecurityPosition;
        partial void OnSecurityPositionChanging(Nullable<global::System.Int64> value);
        partial void OnSecurityPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> SecurityMSCIStdWeight
        {
            get
            {
                return _SecurityMSCIStdWeight;
            }
            set
            {
                OnSecurityMSCIStdWeightChanging(value);
                ReportPropertyChanging("SecurityMSCIStdWeight");
                _SecurityMSCIStdWeight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SecurityMSCIStdWeight");
                OnSecurityMSCIStdWeightChanged();
            }
        }
        private Nullable<global::System.Single> _SecurityMSCIStdWeight;
        partial void OnSecurityMSCIStdWeightChanging(Nullable<global::System.Single> value);
        partial void OnSecurityMSCIStdWeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> SecurityMSCIIMIWeight
        {
            get
            {
                return _SecurityMSCIIMIWeight;
            }
            set
            {
                OnSecurityMSCIIMIWeightChanging(value);
                ReportPropertyChanging("SecurityMSCIIMIWeight");
                _SecurityMSCIIMIWeight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SecurityMSCIIMIWeight");
                OnSecurityMSCIIMIWeightChanged();
            }
        }
        private Nullable<global::System.Single> _SecurityMSCIIMIWeight;
        partial void OnSecurityMSCIIMIWeightChanging(Nullable<global::System.Single> value);
        partial void OnSecurityMSCIIMIWeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> SecurityGlobalActiveWeight
        {
            get
            {
                return _SecurityGlobalActiveWeight;
            }
            set
            {
                OnSecurityGlobalActiveWeightChanging(value);
                ReportPropertyChanging("SecurityGlobalActiveWeight");
                _SecurityGlobalActiveWeight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SecurityGlobalActiveWeight");
                OnSecurityGlobalActiveWeightChanged();
            }
        }
        private Nullable<global::System.Single> _SecurityGlobalActiveWeight;
        partial void OnSecurityGlobalActiveWeightChanging(Nullable<global::System.Single> value);
        partial void OnSecurityGlobalActiveWeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> SecurityLastClosingPrice
        {
            get
            {
                return _SecurityLastClosingPrice;
            }
            set
            {
                OnSecurityLastClosingPriceChanging(value);
                ReportPropertyChanging("SecurityLastClosingPrice");
                _SecurityLastClosingPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SecurityLastClosingPrice");
                OnSecurityLastClosingPriceChanged();
            }
        }
        private Nullable<global::System.Single> _SecurityLastClosingPrice;
        partial void OnSecurityLastClosingPriceChanging(Nullable<global::System.Single> value);
        partial void OnSecurityLastClosingPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> SecurityMarketCapitalization
        {
            get
            {
                return _SecurityMarketCapitalization;
            }
            set
            {
                OnSecurityMarketCapitalizationChanging(value);
                ReportPropertyChanging("SecurityMarketCapitalization");
                _SecurityMarketCapitalization = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SecurityMarketCapitalization");
                OnSecurityMarketCapitalizationChanged();
            }
        }
        private Nullable<global::System.Single> _SecurityMarketCapitalization;
        partial void OnSecurityMarketCapitalizationChanging(Nullable<global::System.Single> value);
        partial void OnSecurityMarketCapitalizationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityPFVMeasure
        {
            get
            {
                return _SecurityPFVMeasure;
            }
            set
            {
                OnSecurityPFVMeasureChanging(value);
                ReportPropertyChanging("SecurityPFVMeasure");
                _SecurityPFVMeasure = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityPFVMeasure");
                OnSecurityPFVMeasureChanged();
            }
        }
        private global::System.String _SecurityPFVMeasure;
        partial void OnSecurityPFVMeasureChanging(global::System.String value);
        partial void OnSecurityPFVMeasureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> SecurityBuyRange
        {
            get
            {
                return _SecurityBuyRange;
            }
            set
            {
                OnSecurityBuyRangeChanging(value);
                ReportPropertyChanging("SecurityBuyRange");
                _SecurityBuyRange = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SecurityBuyRange");
                OnSecurityBuyRangeChanged();
            }
        }
        private Nullable<global::System.Single> _SecurityBuyRange;
        partial void OnSecurityBuyRangeChanging(Nullable<global::System.Single> value);
        partial void OnSecurityBuyRangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> SecuritySellRange
        {
            get
            {
                return _SecuritySellRange;
            }
            set
            {
                OnSecuritySellRangeChanging(value);
                ReportPropertyChanging("SecuritySellRange");
                _SecuritySellRange = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SecuritySellRange");
                OnSecuritySellRangeChanged();
            }
        }
        private Nullable<global::System.Single> _SecuritySellRange;
        partial void OnSecuritySellRangeChanging(Nullable<global::System.Single> value);
        partial void OnSecuritySellRangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityRecommendation
        {
            get
            {
                return _SecurityRecommendation;
            }
            set
            {
                OnSecurityRecommendationChanging(value);
                ReportPropertyChanging("SecurityRecommendation");
                _SecurityRecommendation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityRecommendation");
                OnSecurityRecommendationChanged();
            }
        }
        private global::System.String _SecurityRecommendation;
        partial void OnSecurityRecommendationChanging(global::System.String value);
        partial void OnSecurityRecommendationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CommitteePFVMeasure
        {
            get
            {
                return _CommitteePFVMeasure;
            }
            set
            {
                OnCommitteePFVMeasureChanging(value);
                ReportPropertyChanging("CommitteePFVMeasure");
                _CommitteePFVMeasure = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CommitteePFVMeasure");
                OnCommitteePFVMeasureChanged();
            }
        }
        private global::System.String _CommitteePFVMeasure;
        partial void OnCommitteePFVMeasureChanging(global::System.String value);
        partial void OnCommitteePFVMeasureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> CommitteeBuyRange
        {
            get
            {
                return _CommitteeBuyRange;
            }
            set
            {
                OnCommitteeBuyRangeChanging(value);
                ReportPropertyChanging("CommitteeBuyRange");
                _CommitteeBuyRange = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommitteeBuyRange");
                OnCommitteeBuyRangeChanged();
            }
        }
        private Nullable<global::System.Single> _CommitteeBuyRange;
        partial void OnCommitteeBuyRangeChanging(Nullable<global::System.Single> value);
        partial void OnCommitteeBuyRangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> CommitteeSellRange
        {
            get
            {
                return _CommitteeSellRange;
            }
            set
            {
                OnCommitteeSellRangeChanging(value);
                ReportPropertyChanging("CommitteeSellRange");
                _CommitteeSellRange = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommitteeSellRange");
                OnCommitteeSellRangeChanged();
            }
        }
        private Nullable<global::System.Single> _CommitteeSellRange;
        partial void OnCommitteeSellRangeChanging(Nullable<global::System.Single> value);
        partial void OnCommitteeSellRangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CommitteeRecommendation
        {
            get
            {
                return _CommitteeRecommendation;
            }
            set
            {
                OnCommitteeRecommendationChanging(value);
                ReportPropertyChanging("CommitteeRecommendation");
                _CommitteeRecommendation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CommitteeRecommendation");
                OnCommitteeRecommendationChanged();
            }
        }
        private global::System.String _CommitteeRecommendation;
        partial void OnCommitteeRecommendationChanging(global::System.String value);
        partial void OnCommitteeRecommendationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CommitteeRangeEffectiveThrough
        {
            get
            {
                return _CommitteeRangeEffectiveThrough;
            }
            set
            {
                OnCommitteeRangeEffectiveThroughChanging(value);
                ReportPropertyChanging("CommitteeRangeEffectiveThrough");
                _CommitteeRangeEffectiveThrough = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommitteeRangeEffectiveThrough");
                OnCommitteeRangeEffectiveThroughChanged();
            }
        }
        private Nullable<global::System.DateTime> _CommitteeRangeEffectiveThrough;
        partial void OnCommitteeRangeEffectiveThroughChanging(Nullable<global::System.DateTime> value);
        partial void OnCommitteeRangeEffectiveThroughChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> AcceptWithoutDiscussionFlag
        {
            get
            {
                return _AcceptWithoutDiscussionFlag;
            }
            set
            {
                OnAcceptWithoutDiscussionFlagChanging(value);
                ReportPropertyChanging("AcceptWithoutDiscussionFlag");
                _AcceptWithoutDiscussionFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AcceptWithoutDiscussionFlag");
                OnAcceptWithoutDiscussionFlagChanged();
            }
        }
        private Nullable<global::System.Boolean> _AcceptWithoutDiscussionFlag;
        partial void OnAcceptWithoutDiscussionFlagChanging(Nullable<global::System.Boolean> value);
        partial void OnAcceptWithoutDiscussionFlagChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AdminNotes
        {
            get
            {
                return _AdminNotes;
            }
            set
            {
                OnAdminNotesChanging(value);
                ReportPropertyChanging("AdminNotes");
                _AdminNotes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AdminNotes");
                OnAdminNotesChanged();
            }
        }
        private global::System.String _AdminNotes;
        partial void OnAdminNotesChanging(global::System.String value);
        partial void OnAdminNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedOn
        {
            get
            {
                return _ModifiedOn;
            }
            set
            {
                OnModifiedOnChanging(value);
                ReportPropertyChanging("ModifiedOn");
                _ModifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedOn");
                OnModifiedOnChanged();
            }
        }
        private global::System.DateTime _ModifiedOn;
        partial void OnModifiedOnChanging(global::System.DateTime value);
        partial void OnModifiedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Analyst
        {
            get
            {
                return _Analyst;
            }
            set
            {
                OnAnalystChanging(value);
                ReportPropertyChanging("Analyst");
                _Analyst = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Analyst");
                OnAnalystChanged();
            }
        }
        private global::System.String _Analyst;
        partial void OnAnalystChanging(global::System.String value);
        partial void OnAnalystChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.String _Price;
        partial void OnPriceChanging(global::System.String value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FVCalc
        {
            get
            {
                return _FVCalc;
            }
            set
            {
                OnFVCalcChanging(value);
                ReportPropertyChanging("FVCalc");
                _FVCalc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FVCalc");
                OnFVCalcChanged();
            }
        }
        private global::System.String _FVCalc;
        partial void OnFVCalcChanging(global::System.String value);
        partial void OnFVCalcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityBuySellvsCrnt
        {
            get
            {
                return _SecurityBuySellvsCrnt;
            }
            set
            {
                OnSecurityBuySellvsCrntChanging(value);
                ReportPropertyChanging("SecurityBuySellvsCrnt");
                _SecurityBuySellvsCrnt = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityBuySellvsCrnt");
                OnSecurityBuySellvsCrntChanged();
            }
        }
        private global::System.String _SecurityBuySellvsCrnt;
        partial void OnSecurityBuySellvsCrntChanging(global::System.String value);
        partial void OnSecurityBuySellvsCrntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CurrentHoldings
        {
            get
            {
                return _CurrentHoldings;
            }
            set
            {
                OnCurrentHoldingsChanging(value);
                ReportPropertyChanging("CurrentHoldings");
                _CurrentHoldings = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CurrentHoldings");
                OnCurrentHoldingsChanged();
            }
        }
        private global::System.String _CurrentHoldings;
        partial void OnCurrentHoldingsChanging(global::System.String value);
        partial void OnCurrentHoldingsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PercentEMIF
        {
            get
            {
                return _PercentEMIF;
            }
            set
            {
                OnPercentEMIFChanging(value);
                ReportPropertyChanging("PercentEMIF");
                _PercentEMIF = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PercentEMIF");
                OnPercentEMIFChanged();
            }
        }
        private global::System.String _PercentEMIF;
        partial void OnPercentEMIFChanging(global::System.String value);
        partial void OnPercentEMIFChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityBMWeight
        {
            get
            {
                return _SecurityBMWeight;
            }
            set
            {
                OnSecurityBMWeightChanging(value);
                ReportPropertyChanging("SecurityBMWeight");
                _SecurityBMWeight = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityBMWeight");
                OnSecurityBMWeightChanged();
            }
        }
        private global::System.String _SecurityBMWeight;
        partial void OnSecurityBMWeightChanging(global::System.String value);
        partial void OnSecurityBMWeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityActiveWeight
        {
            get
            {
                return _SecurityActiveWeight;
            }
            set
            {
                OnSecurityActiveWeightChanging(value);
                ReportPropertyChanging("SecurityActiveWeight");
                _SecurityActiveWeight = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityActiveWeight");
                OnSecurityActiveWeightChanged();
            }
        }
        private global::System.String _SecurityActiveWeight;
        partial void OnSecurityActiveWeightChanging(global::System.String value);
        partial void OnSecurityActiveWeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String YTDRet_Absolute
        {
            get
            {
                return _YTDRet_Absolute;
            }
            set
            {
                OnYTDRet_AbsoluteChanging(value);
                ReportPropertyChanging("YTDRet_Absolute");
                _YTDRet_Absolute = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("YTDRet_Absolute");
                OnYTDRet_AbsoluteChanged();
            }
        }
        private global::System.String _YTDRet_Absolute;
        partial void OnYTDRet_AbsoluteChanging(global::System.String value);
        partial void OnYTDRet_AbsoluteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String YTDRet_RELtoLOC
        {
            get
            {
                return _YTDRet_RELtoLOC;
            }
            set
            {
                OnYTDRet_RELtoLOCChanging(value);
                ReportPropertyChanging("YTDRet_RELtoLOC");
                _YTDRet_RELtoLOC = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("YTDRet_RELtoLOC");
                OnYTDRet_RELtoLOCChanged();
            }
        }
        private global::System.String _YTDRet_RELtoLOC;
        partial void OnYTDRet_RELtoLOCChanging(global::System.String value);
        partial void OnYTDRet_RELtoLOCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String YTDRet_RELtoEM
        {
            get
            {
                return _YTDRet_RELtoEM;
            }
            set
            {
                OnYTDRet_RELtoEMChanging(value);
                ReportPropertyChanging("YTDRet_RELtoEM");
                _YTDRet_RELtoEM = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("YTDRet_RELtoEM");
                OnYTDRet_RELtoEMChanged();
            }
        }
        private global::System.String _YTDRet_RELtoEM;
        partial void OnYTDRet_RELtoEMChanging(global::System.String value);
        partial void OnYTDRet_RELtoEMChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> MeetingDateTime
        {
            get
            {
                return _MeetingDateTime;
            }
            set
            {
                OnMeetingDateTimeChanging(value);
                ReportPropertyChanging("MeetingDateTime");
                _MeetingDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MeetingDateTime");
                OnMeetingDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _MeetingDateTime;
        partial void OnMeetingDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnMeetingDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> MeetingClosedDateTime
        {
            get
            {
                return _MeetingClosedDateTime;
            }
            set
            {
                OnMeetingClosedDateTimeChanging(value);
                ReportPropertyChanging("MeetingClosedDateTime");
                _MeetingClosedDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MeetingClosedDateTime");
                OnMeetingClosedDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _MeetingClosedDateTime;
        partial void OnMeetingClosedDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnMeetingClosedDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> MeetingVotingClosedDateTime
        {
            get
            {
                return _MeetingVotingClosedDateTime;
            }
            set
            {
                OnMeetingVotingClosedDateTimeChanging(value);
                ReportPropertyChanging("MeetingVotingClosedDateTime");
                _MeetingVotingClosedDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MeetingVotingClosedDateTime");
                OnMeetingVotingClosedDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _MeetingVotingClosedDateTime;
        partial void OnMeetingVotingClosedDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnMeetingVotingClosedDateTimeChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ICPresentationModel", Name="MeetingConfigScheduleData")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class MeetingConfigScheduleData : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MeetingConfigScheduleData object.
        /// </summary>
        /// <param name="presentationDateTime">Initial value of the PresentationDateTime property.</param>
        /// <param name="presentationTimeZone">Initial value of the PresentationTimeZone property.</param>
        /// <param name="preMeetingVotingDeadline">Initial value of the PreMeetingVotingDeadline property.</param>
        /// <param name="presentationDeadline">Initial value of the PresentationDeadline property.</param>
        public static MeetingConfigScheduleData CreateMeetingConfigScheduleData(global::System.DateTime presentationDateTime, global::System.String presentationTimeZone, global::System.DateTime preMeetingVotingDeadline, global::System.DateTime presentationDeadline)
        {
            MeetingConfigScheduleData meetingConfigScheduleData = new MeetingConfigScheduleData();
            meetingConfigScheduleData.PresentationDateTime = presentationDateTime;
            meetingConfigScheduleData.PresentationTimeZone = presentationTimeZone;
            meetingConfigScheduleData.PreMeetingVotingDeadline = preMeetingVotingDeadline;
            meetingConfigScheduleData.PresentationDeadline = presentationDeadline;
            return meetingConfigScheduleData;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PresentationDateTime
        {
            get
            {
                return _PresentationDateTime;
            }
            set
            {
                OnPresentationDateTimeChanging(value);
                ReportPropertyChanging("PresentationDateTime");
                _PresentationDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PresentationDateTime");
                OnPresentationDateTimeChanged();
            }
        }
        private global::System.DateTime _PresentationDateTime;
        partial void OnPresentationDateTimeChanging(global::System.DateTime value);
        partial void OnPresentationDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PresentationTimeZone
        {
            get
            {
                return _PresentationTimeZone;
            }
            set
            {
                OnPresentationTimeZoneChanging(value);
                ReportPropertyChanging("PresentationTimeZone");
                _PresentationTimeZone = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PresentationTimeZone");
                OnPresentationTimeZoneChanged();
            }
        }
        private global::System.String _PresentationTimeZone;
        partial void OnPresentationTimeZoneChanging(global::System.String value);
        partial void OnPresentationTimeZoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PreMeetingVotingDeadline
        {
            get
            {
                return _PreMeetingVotingDeadline;
            }
            set
            {
                OnPreMeetingVotingDeadlineChanging(value);
                ReportPropertyChanging("PreMeetingVotingDeadline");
                _PreMeetingVotingDeadline = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PreMeetingVotingDeadline");
                OnPreMeetingVotingDeadlineChanged();
            }
        }
        private global::System.DateTime _PreMeetingVotingDeadline;
        partial void OnPreMeetingVotingDeadlineChanging(global::System.DateTime value);
        partial void OnPreMeetingVotingDeadlineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PresentationDeadline
        {
            get
            {
                return _PresentationDeadline;
            }
            set
            {
                OnPresentationDeadlineChanging(value);
                ReportPropertyChanging("PresentationDeadline");
                _PresentationDeadline = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PresentationDeadline");
                OnPresentationDeadlineChanged();
            }
        }
        private global::System.DateTime _PresentationDeadline;
        partial void OnPresentationDeadlineChanging(global::System.DateTime value);
        partial void OnPresentationDeadlineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ConfigurablePresentationDeadline
        {
            get
            {
                return _ConfigurablePresentationDeadline;
            }
            set
            {
                OnConfigurablePresentationDeadlineChanging(value);
                ReportPropertyChanging("ConfigurablePresentationDeadline");
                _ConfigurablePresentationDeadline = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ConfigurablePresentationDeadline");
                OnConfigurablePresentationDeadlineChanged();
            }
        }
        private Nullable<global::System.Decimal> _ConfigurablePresentationDeadline;
        partial void OnConfigurablePresentationDeadlineChanging(Nullable<global::System.Decimal> value);
        partial void OnConfigurablePresentationDeadlineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ConfigurablePreMeetingVotingDeadline
        {
            get
            {
                return _ConfigurablePreMeetingVotingDeadline;
            }
            set
            {
                OnConfigurablePreMeetingVotingDeadlineChanging(value);
                ReportPropertyChanging("ConfigurablePreMeetingVotingDeadline");
                _ConfigurablePreMeetingVotingDeadline = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ConfigurablePreMeetingVotingDeadline");
                OnConfigurablePreMeetingVotingDeadlineChanged();
            }
        }
        private Nullable<global::System.Decimal> _ConfigurablePreMeetingVotingDeadline;
        partial void OnConfigurablePreMeetingVotingDeadlineChanging(Nullable<global::System.Decimal> value);
        partial void OnConfigurablePreMeetingVotingDeadlineChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ICPresentationModel", Name="MeetingMinuteData")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class MeetingMinuteData : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MeetingMinuteData object.
        /// </summary>
        /// <param name="presentationID">Initial value of the PresentationID property.</param>
        /// <param name="presenter">Initial value of the Presenter property.</param>
        /// <param name="securityName">Initial value of the SecurityName property.</param>
        /// <param name="securityTicker">Initial value of the SecurityTicker property.</param>
        /// <param name="securityCountry">Initial value of the SecurityCountry property.</param>
        /// <param name="securityIndustry">Initial value of the SecurityIndustry property.</param>
        public static MeetingMinuteData CreateMeetingMinuteData(global::System.Int64 presentationID, global::System.String presenter, global::System.String securityName, global::System.String securityTicker, global::System.String securityCountry, global::System.String securityIndustry)
        {
            MeetingMinuteData meetingMinuteData = new MeetingMinuteData();
            meetingMinuteData.PresentationID = presentationID;
            meetingMinuteData.Presenter = presenter;
            meetingMinuteData.SecurityName = securityName;
            meetingMinuteData.SecurityTicker = securityTicker;
            meetingMinuteData.SecurityCountry = securityCountry;
            meetingMinuteData.SecurityIndustry = securityIndustry;
            return meetingMinuteData;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PresentationID
        {
            get
            {
                return _PresentationID;
            }
            set
            {
                OnPresentationIDChanging(value);
                ReportPropertyChanging("PresentationID");
                _PresentationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PresentationID");
                OnPresentationIDChanged();
            }
        }
        private global::System.Int64 _PresentationID;
        partial void OnPresentationIDChanging(global::System.Int64 value);
        partial void OnPresentationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Presenter
        {
            get
            {
                return _Presenter;
            }
            set
            {
                OnPresenterChanging(value);
                ReportPropertyChanging("Presenter");
                _Presenter = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Presenter");
                OnPresenterChanged();
            }
        }
        private global::System.String _Presenter;
        partial void OnPresenterChanging(global::System.String value);
        partial void OnPresenterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SecurityName
        {
            get
            {
                return _SecurityName;
            }
            set
            {
                OnSecurityNameChanging(value);
                ReportPropertyChanging("SecurityName");
                _SecurityName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SecurityName");
                OnSecurityNameChanged();
            }
        }
        private global::System.String _SecurityName;
        partial void OnSecurityNameChanging(global::System.String value);
        partial void OnSecurityNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SecurityTicker
        {
            get
            {
                return _SecurityTicker;
            }
            set
            {
                OnSecurityTickerChanging(value);
                ReportPropertyChanging("SecurityTicker");
                _SecurityTicker = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SecurityTicker");
                OnSecurityTickerChanged();
            }
        }
        private global::System.String _SecurityTicker;
        partial void OnSecurityTickerChanging(global::System.String value);
        partial void OnSecurityTickerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SecurityCountry
        {
            get
            {
                return _SecurityCountry;
            }
            set
            {
                OnSecurityCountryChanging(value);
                ReportPropertyChanging("SecurityCountry");
                _SecurityCountry = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SecurityCountry");
                OnSecurityCountryChanged();
            }
        }
        private global::System.String _SecurityCountry;
        partial void OnSecurityCountryChanging(global::System.String value);
        partial void OnSecurityCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SecurityIndustry
        {
            get
            {
                return _SecurityIndustry;
            }
            set
            {
                OnSecurityIndustryChanging(value);
                ReportPropertyChanging("SecurityIndustry");
                _SecurityIndustry = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SecurityIndustry");
                OnSecurityIndustryChanged();
            }
        }
        private global::System.String _SecurityIndustry;
        partial void OnSecurityIndustryChanging(global::System.String value);
        partial void OnSecurityIndustryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> VoterID
        {
            get
            {
                return _VoterID;
            }
            set
            {
                OnVoterIDChanging(value);
                ReportPropertyChanging("VoterID");
                _VoterID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VoterID");
                OnVoterIDChanged();
            }
        }
        private Nullable<global::System.Int64> _VoterID;
        partial void OnVoterIDChanging(Nullable<global::System.Int64> value);
        partial void OnVoterIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AttendanceType
        {
            get
            {
                return _AttendanceType;
            }
            set
            {
                OnAttendanceTypeChanging(value);
                ReportPropertyChanging("AttendanceType");
                _AttendanceType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AttendanceType");
                OnAttendanceTypeChanged();
            }
        }
        private global::System.String _AttendanceType;
        partial void OnAttendanceTypeChanging(global::System.String value);
        partial void OnAttendanceTypeChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ICPresentationModel", Name="MeetingMinutesReportData")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class MeetingMinutesReportData : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> MeetingID
        {
            get
            {
                return _MeetingID;
            }
            set
            {
                OnMeetingIDChanging(value);
                ReportPropertyChanging("MeetingID");
                _MeetingID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MeetingID");
                OnMeetingIDChanged();
            }
        }
        private Nullable<global::System.Int64> _MeetingID;
        partial void OnMeetingIDChanging(Nullable<global::System.Int64> value);
        partial void OnMeetingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> MeetingDateTime
        {
            get
            {
                return _MeetingDateTime;
            }
            set
            {
                OnMeetingDateTimeChanging(value);
                ReportPropertyChanging("MeetingDateTime");
                _MeetingDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MeetingDateTime");
                OnMeetingDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _MeetingDateTime;
        partial void OnMeetingDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnMeetingDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> MeetingClosedDateTime
        {
            get
            {
                return _MeetingClosedDateTime;
            }
            set
            {
                OnMeetingClosedDateTimeChanging(value);
                ReportPropertyChanging("MeetingClosedDateTime");
                _MeetingClosedDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MeetingClosedDateTime");
                OnMeetingClosedDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _MeetingClosedDateTime;
        partial void OnMeetingClosedDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnMeetingClosedDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MeetingDescription
        {
            get
            {
                return _MeetingDescription;
            }
            set
            {
                OnMeetingDescriptionChanging(value);
                ReportPropertyChanging("MeetingDescription");
                _MeetingDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MeetingDescription");
                OnMeetingDescriptionChanged();
            }
        }
        private global::System.String _MeetingDescription;
        partial void OnMeetingDescriptionChanging(global::System.String value);
        partial void OnMeetingDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> MeetingVotingClosedDateTime
        {
            get
            {
                return _MeetingVotingClosedDateTime;
            }
            set
            {
                OnMeetingVotingClosedDateTimeChanging(value);
                ReportPropertyChanging("MeetingVotingClosedDateTime");
                _MeetingVotingClosedDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MeetingVotingClosedDateTime");
                OnMeetingVotingClosedDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _MeetingVotingClosedDateTime;
        partial void OnMeetingVotingClosedDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnMeetingVotingClosedDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> PresentationID
        {
            get
            {
                return _PresentationID;
            }
            set
            {
                OnPresentationIDChanging(value);
                ReportPropertyChanging("PresentationID");
                _PresentationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PresentationID");
                OnPresentationIDChanged();
            }
        }
        private Nullable<global::System.Int64> _PresentationID;
        partial void OnPresentationIDChanging(Nullable<global::System.Int64> value);
        partial void OnPresentationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AdminNotes
        {
            get
            {
                return _AdminNotes;
            }
            set
            {
                OnAdminNotesChanging(value);
                ReportPropertyChanging("AdminNotes");
                _AdminNotes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AdminNotes");
                OnAdminNotesChanged();
            }
        }
        private global::System.String _AdminNotes;
        partial void OnAdminNotesChanging(global::System.String value);
        partial void OnAdminNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> CommitteeBuyRange
        {
            get
            {
                return _CommitteeBuyRange;
            }
            set
            {
                OnCommitteeBuyRangeChanging(value);
                ReportPropertyChanging("CommitteeBuyRange");
                _CommitteeBuyRange = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommitteeBuyRange");
                OnCommitteeBuyRangeChanged();
            }
        }
        private Nullable<global::System.Single> _CommitteeBuyRange;
        partial void OnCommitteeBuyRangeChanging(Nullable<global::System.Single> value);
        partial void OnCommitteeBuyRangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> CommitteeSellRange
        {
            get
            {
                return _CommitteeSellRange;
            }
            set
            {
                OnCommitteeSellRangeChanging(value);
                ReportPropertyChanging("CommitteeSellRange");
                _CommitteeSellRange = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommitteeSellRange");
                OnCommitteeSellRangeChanged();
            }
        }
        private Nullable<global::System.Single> _CommitteeSellRange;
        partial void OnCommitteeSellRangeChanging(Nullable<global::System.Single> value);
        partial void OnCommitteeSellRangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CommitteePFVMeasure
        {
            get
            {
                return _CommitteePFVMeasure;
            }
            set
            {
                OnCommitteePFVMeasureChanging(value);
                ReportPropertyChanging("CommitteePFVMeasure");
                _CommitteePFVMeasure = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CommitteePFVMeasure");
                OnCommitteePFVMeasureChanged();
            }
        }
        private global::System.String _CommitteePFVMeasure;
        partial void OnCommitteePFVMeasureChanging(global::System.String value);
        partial void OnCommitteePFVMeasureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CommitteeRecommendation
        {
            get
            {
                return _CommitteeRecommendation;
            }
            set
            {
                OnCommitteeRecommendationChanging(value);
                ReportPropertyChanging("CommitteeRecommendation");
                _CommitteeRecommendation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CommitteeRecommendation");
                OnCommitteeRecommendationChanged();
            }
        }
        private global::System.String _CommitteeRecommendation;
        partial void OnCommitteeRecommendationChanging(global::System.String value);
        partial void OnCommitteeRecommendationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Presenter
        {
            get
            {
                return _Presenter;
            }
            set
            {
                OnPresenterChanging(value);
                ReportPropertyChanging("Presenter");
                _Presenter = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Presenter");
                OnPresenterChanged();
            }
        }
        private global::System.String _Presenter;
        partial void OnPresenterChanging(global::System.String value);
        partial void OnPresenterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityName
        {
            get
            {
                return _SecurityName;
            }
            set
            {
                OnSecurityNameChanging(value);
                ReportPropertyChanging("SecurityName");
                _SecurityName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityName");
                OnSecurityNameChanged();
            }
        }
        private global::System.String _SecurityName;
        partial void OnSecurityNameChanging(global::System.String value);
        partial void OnSecurityNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityTicker
        {
            get
            {
                return _SecurityTicker;
            }
            set
            {
                OnSecurityTickerChanging(value);
                ReportPropertyChanging("SecurityTicker");
                _SecurityTicker = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityTicker");
                OnSecurityTickerChanged();
            }
        }
        private global::System.String _SecurityTicker;
        partial void OnSecurityTickerChanging(global::System.String value);
        partial void OnSecurityTickerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityCountry
        {
            get
            {
                return _SecurityCountry;
            }
            set
            {
                OnSecurityCountryChanging(value);
                ReportPropertyChanging("SecurityCountry");
                _SecurityCountry = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityCountry");
                OnSecurityCountryChanged();
            }
        }
        private global::System.String _SecurityCountry;
        partial void OnSecurityCountryChanging(global::System.String value);
        partial void OnSecurityCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityIndustry
        {
            get
            {
                return _SecurityIndustry;
            }
            set
            {
                OnSecurityIndustryChanging(value);
                ReportPropertyChanging("SecurityIndustry");
                _SecurityIndustry = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityIndustry");
                OnSecurityIndustryChanged();
            }
        }
        private global::System.String _SecurityIndustry;
        partial void OnSecurityIndustryChanging(global::System.String value);
        partial void OnSecurityIndustryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> SecurityBuyRange
        {
            get
            {
                return _SecurityBuyRange;
            }
            set
            {
                OnSecurityBuyRangeChanging(value);
                ReportPropertyChanging("SecurityBuyRange");
                _SecurityBuyRange = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SecurityBuyRange");
                OnSecurityBuyRangeChanged();
            }
        }
        private Nullable<global::System.Single> _SecurityBuyRange;
        partial void OnSecurityBuyRangeChanging(Nullable<global::System.Single> value);
        partial void OnSecurityBuyRangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> SecuritySellRange
        {
            get
            {
                return _SecuritySellRange;
            }
            set
            {
                OnSecuritySellRangeChanging(value);
                ReportPropertyChanging("SecuritySellRange");
                _SecuritySellRange = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SecuritySellRange");
                OnSecuritySellRangeChanged();
            }
        }
        private Nullable<global::System.Single> _SecuritySellRange;
        partial void OnSecuritySellRangeChanging(Nullable<global::System.Single> value);
        partial void OnSecuritySellRangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityPFVMeasure
        {
            get
            {
                return _SecurityPFVMeasure;
            }
            set
            {
                OnSecurityPFVMeasureChanging(value);
                ReportPropertyChanging("SecurityPFVMeasure");
                _SecurityPFVMeasure = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityPFVMeasure");
                OnSecurityPFVMeasureChanged();
            }
        }
        private global::System.String _SecurityPFVMeasure;
        partial void OnSecurityPFVMeasureChanging(global::System.String value);
        partial void OnSecurityPFVMeasureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityRecommendation
        {
            get
            {
                return _SecurityRecommendation;
            }
            set
            {
                OnSecurityRecommendationChanging(value);
                ReportPropertyChanging("SecurityRecommendation");
                _SecurityRecommendation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityRecommendation");
                OnSecurityRecommendationChanged();
            }
        }
        private global::System.String _SecurityRecommendation;
        partial void OnSecurityRecommendationChanging(global::System.String value);
        partial void OnSecurityRecommendationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> VoterID
        {
            get
            {
                return _VoterID;
            }
            set
            {
                OnVoterIDChanging(value);
                ReportPropertyChanging("VoterID");
                _VoterID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VoterID");
                OnVoterIDChanged();
            }
        }
        private Nullable<global::System.Int64> _VoterID;
        partial void OnVoterIDChanging(Nullable<global::System.Int64> value);
        partial void OnVoterIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VoteType
        {
            get
            {
                return _VoteType;
            }
            set
            {
                OnVoteTypeChanging(value);
                ReportPropertyChanging("VoteType");
                _VoteType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VoteType");
                OnVoteTypeChanged();
            }
        }
        private global::System.String _VoteType;
        partial void OnVoteTypeChanging(global::System.String value);
        partial void OnVoteTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VoterPFVMeasure
        {
            get
            {
                return _VoterPFVMeasure;
            }
            set
            {
                OnVoterPFVMeasureChanging(value);
                ReportPropertyChanging("VoterPFVMeasure");
                _VoterPFVMeasure = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VoterPFVMeasure");
                OnVoterPFVMeasureChanged();
            }
        }
        private global::System.String _VoterPFVMeasure;
        partial void OnVoterPFVMeasureChanging(global::System.String value);
        partial void OnVoterPFVMeasureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> VoterBuyRange
        {
            get
            {
                return _VoterBuyRange;
            }
            set
            {
                OnVoterBuyRangeChanging(value);
                ReportPropertyChanging("VoterBuyRange");
                _VoterBuyRange = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VoterBuyRange");
                OnVoterBuyRangeChanged();
            }
        }
        private Nullable<global::System.Single> _VoterBuyRange;
        partial void OnVoterBuyRangeChanging(Nullable<global::System.Single> value);
        partial void OnVoterBuyRangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> VoterSellRange
        {
            get
            {
                return _VoterSellRange;
            }
            set
            {
                OnVoterSellRangeChanging(value);
                ReportPropertyChanging("VoterSellRange");
                _VoterSellRange = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VoterSellRange");
                OnVoterSellRangeChanged();
            }
        }
        private Nullable<global::System.Single> _VoterSellRange;
        partial void OnVoterSellRangeChanging(Nullable<global::System.Single> value);
        partial void OnVoterSellRangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DiscussionFlag
        {
            get
            {
                return _DiscussionFlag;
            }
            set
            {
                OnDiscussionFlagChanging(value);
                ReportPropertyChanging("DiscussionFlag");
                _DiscussionFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DiscussionFlag");
                OnDiscussionFlagChanged();
            }
        }
        private Nullable<global::System.Boolean> _DiscussionFlag;
        partial void OnDiscussionFlagChanging(Nullable<global::System.Boolean> value);
        partial void OnDiscussionFlagChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AttendanceType
        {
            get
            {
                return _AttendanceType;
            }
            set
            {
                OnAttendanceTypeChanging(value);
                ReportPropertyChanging("AttendanceType");
                _AttendanceType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AttendanceType");
                OnAttendanceTypeChanged();
            }
        }
        private global::System.String _AttendanceType;
        partial void OnAttendanceTypeChanging(global::System.String value);
        partial void OnAttendanceTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> FileID
        {
            get
            {
                return _FileID;
            }
            set
            {
                OnFileIDChanging(value);
                ReportPropertyChanging("FileID");
                _FileID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FileID");
                OnFileIDChanged();
            }
        }
        private Nullable<global::System.Int64> _FileID;
        partial void OnFileIDChanging(Nullable<global::System.Int64> value);
        partial void OnFileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Category
        {
            get
            {
                return _Category;
            }
            set
            {
                OnCategoryChanging(value);
                ReportPropertyChanging("Category");
                _Category = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Category");
                OnCategoryChanged();
            }
        }
        private global::System.String _Category;
        partial void OnCategoryChanging(global::System.String value);
        partial void OnCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ICPresentationModel", Name="PresentationVotingDeadlineDetails")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class PresentationVotingDeadlineDetails : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> MeetingID
        {
            get
            {
                return _MeetingID;
            }
            set
            {
                OnMeetingIDChanging(value);
                ReportPropertyChanging("MeetingID");
                _MeetingID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MeetingID");
                OnMeetingIDChanged();
            }
        }
        private Nullable<global::System.Int64> _MeetingID;
        partial void OnMeetingIDChanging(Nullable<global::System.Int64> value);
        partial void OnMeetingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> MeetingDateTime
        {
            get
            {
                return _MeetingDateTime;
            }
            set
            {
                OnMeetingDateTimeChanging(value);
                ReportPropertyChanging("MeetingDateTime");
                _MeetingDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MeetingDateTime");
                OnMeetingDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _MeetingDateTime;
        partial void OnMeetingDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnMeetingDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> MeetingClosedDateTime
        {
            get
            {
                return _MeetingClosedDateTime;
            }
            set
            {
                OnMeetingClosedDateTimeChanging(value);
                ReportPropertyChanging("MeetingClosedDateTime");
                _MeetingClosedDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MeetingClosedDateTime");
                OnMeetingClosedDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _MeetingClosedDateTime;
        partial void OnMeetingClosedDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnMeetingClosedDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> PresentationID
        {
            get
            {
                return _PresentationID;
            }
            set
            {
                OnPresentationIDChanging(value);
                ReportPropertyChanging("PresentationID");
                _PresentationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PresentationID");
                OnPresentationIDChanged();
            }
        }
        private Nullable<global::System.Int64> _PresentationID;
        partial void OnPresentationIDChanging(Nullable<global::System.Int64> value);
        partial void OnPresentationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityName
        {
            get
            {
                return _SecurityName;
            }
            set
            {
                OnSecurityNameChanging(value);
                ReportPropertyChanging("SecurityName");
                _SecurityName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityName");
                OnSecurityNameChanged();
            }
        }
        private global::System.String _SecurityName;
        partial void OnSecurityNameChanging(global::System.String value);
        partial void OnSecurityNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityTicker
        {
            get
            {
                return _SecurityTicker;
            }
            set
            {
                OnSecurityTickerChanging(value);
                ReportPropertyChanging("SecurityTicker");
                _SecurityTicker = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityTicker");
                OnSecurityTickerChanged();
            }
        }
        private global::System.String _SecurityTicker;
        partial void OnSecurityTickerChanging(global::System.String value);
        partial void OnSecurityTickerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityCountry
        {
            get
            {
                return _SecurityCountry;
            }
            set
            {
                OnSecurityCountryChanging(value);
                ReportPropertyChanging("SecurityCountry");
                _SecurityCountry = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityCountry");
                OnSecurityCountryChanged();
            }
        }
        private global::System.String _SecurityCountry;
        partial void OnSecurityCountryChanging(global::System.String value);
        partial void OnSecurityCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> SecurityBuyRange
        {
            get
            {
                return _SecurityBuyRange;
            }
            set
            {
                OnSecurityBuyRangeChanging(value);
                ReportPropertyChanging("SecurityBuyRange");
                _SecurityBuyRange = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SecurityBuyRange");
                OnSecurityBuyRangeChanged();
            }
        }
        private Nullable<global::System.Single> _SecurityBuyRange;
        partial void OnSecurityBuyRangeChanging(Nullable<global::System.Single> value);
        partial void OnSecurityBuyRangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> SecuritySellRange
        {
            get
            {
                return _SecuritySellRange;
            }
            set
            {
                OnSecuritySellRangeChanging(value);
                ReportPropertyChanging("SecuritySellRange");
                _SecuritySellRange = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SecuritySellRange");
                OnSecuritySellRangeChanged();
            }
        }
        private Nullable<global::System.Single> _SecuritySellRange;
        partial void OnSecuritySellRangeChanging(Nullable<global::System.Single> value);
        partial void OnSecuritySellRangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityPFVMeasure
        {
            get
            {
                return _SecurityPFVMeasure;
            }
            set
            {
                OnSecurityPFVMeasureChanging(value);
                ReportPropertyChanging("SecurityPFVMeasure");
                _SecurityPFVMeasure = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityPFVMeasure");
                OnSecurityPFVMeasureChanged();
            }
        }
        private global::System.String _SecurityPFVMeasure;
        partial void OnSecurityPFVMeasureChanging(global::System.String value);
        partial void OnSecurityPFVMeasureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityRecommendation
        {
            get
            {
                return _SecurityRecommendation;
            }
            set
            {
                OnSecurityRecommendationChanging(value);
                ReportPropertyChanging("SecurityRecommendation");
                _SecurityRecommendation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityRecommendation");
                OnSecurityRecommendationChanged();
            }
        }
        private global::System.String _SecurityRecommendation;
        partial void OnSecurityRecommendationChanging(global::System.String value);
        partial void OnSecurityRecommendationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> VoterID
        {
            get
            {
                return _VoterID;
            }
            set
            {
                OnVoterIDChanging(value);
                ReportPropertyChanging("VoterID");
                _VoterID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VoterID");
                OnVoterIDChanged();
            }
        }
        private Nullable<global::System.Int64> _VoterID;
        partial void OnVoterIDChanging(Nullable<global::System.Int64> value);
        partial void OnVoterIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VoteType
        {
            get
            {
                return _VoteType;
            }
            set
            {
                OnVoteTypeChanging(value);
                ReportPropertyChanging("VoteType");
                _VoteType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VoteType");
                OnVoteTypeChanged();
            }
        }
        private global::System.String _VoteType;
        partial void OnVoteTypeChanging(global::System.String value);
        partial void OnVoteTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> VoterBuyRange
        {
            get
            {
                return _VoterBuyRange;
            }
            set
            {
                OnVoterBuyRangeChanging(value);
                ReportPropertyChanging("VoterBuyRange");
                _VoterBuyRange = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VoterBuyRange");
                OnVoterBuyRangeChanged();
            }
        }
        private Nullable<global::System.Single> _VoterBuyRange;
        partial void OnVoterBuyRangeChanging(Nullable<global::System.Single> value);
        partial void OnVoterBuyRangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> VoterSellRange
        {
            get
            {
                return _VoterSellRange;
            }
            set
            {
                OnVoterSellRangeChanging(value);
                ReportPropertyChanging("VoterSellRange");
                _VoterSellRange = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VoterSellRange");
                OnVoterSellRangeChanged();
            }
        }
        private Nullable<global::System.Single> _VoterSellRange;
        partial void OnVoterSellRangeChanging(Nullable<global::System.Single> value);
        partial void OnVoterSellRangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DiscussionFlag
        {
            get
            {
                return _DiscussionFlag;
            }
            set
            {
                OnDiscussionFlagChanging(value);
                ReportPropertyChanging("DiscussionFlag");
                _DiscussionFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DiscussionFlag");
                OnDiscussionFlagChanged();
            }
        }
        private Nullable<global::System.Boolean> _DiscussionFlag;
        partial void OnDiscussionFlagChanging(Nullable<global::System.Boolean> value);
        partial void OnDiscussionFlagChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> FileID
        {
            get
            {
                return _FileID;
            }
            set
            {
                OnFileIDChanging(value);
                ReportPropertyChanging("FileID");
                _FileID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FileID");
                OnFileIDChanged();
            }
        }
        private Nullable<global::System.Int64> _FileID;
        partial void OnFileIDChanging(Nullable<global::System.Int64> value);
        partial void OnFileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Category
        {
            get
            {
                return _Category;
            }
            set
            {
                OnCategoryChanging(value);
                ReportPropertyChanging("Category");
                _Category = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Category");
                OnCategoryChanged();
            }
        }
        private global::System.String _Category;
        partial void OnCategoryChanging(global::System.String value);
        partial void OnCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ICPresentationModel", Name="VoterInfoByPresentationIDResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class VoterInfoByPresentationIDResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VoterInfoByPresentationIDResult object.
        /// </summary>
        /// <param name="voterID">Initial value of the VoterID property.</param>
        /// <param name="presentationID">Initial value of the PresentationID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        /// <param name="modifiedBy">Initial value of the ModifiedBy property.</param>
        /// <param name="modifiedOn">Initial value of the ModifiedOn property.</param>
        public static VoterInfoByPresentationIDResult CreateVoterInfoByPresentationIDResult(global::System.Int64 voterID, global::System.Int64 presentationID, global::System.String name, global::System.String createdBy, global::System.DateTime createdOn, global::System.String modifiedBy, global::System.DateTime modifiedOn)
        {
            VoterInfoByPresentationIDResult voterInfoByPresentationIDResult = new VoterInfoByPresentationIDResult();
            voterInfoByPresentationIDResult.VoterID = voterID;
            voterInfoByPresentationIDResult.PresentationID = presentationID;
            voterInfoByPresentationIDResult.Name = name;
            voterInfoByPresentationIDResult.CreatedBy = createdBy;
            voterInfoByPresentationIDResult.CreatedOn = createdOn;
            voterInfoByPresentationIDResult.ModifiedBy = modifiedBy;
            voterInfoByPresentationIDResult.ModifiedOn = modifiedOn;
            return voterInfoByPresentationIDResult;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 VoterID
        {
            get
            {
                return _VoterID;
            }
            set
            {
                OnVoterIDChanging(value);
                ReportPropertyChanging("VoterID");
                _VoterID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VoterID");
                OnVoterIDChanged();
            }
        }
        private global::System.Int64 _VoterID;
        partial void OnVoterIDChanging(global::System.Int64 value);
        partial void OnVoterIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PresentationID
        {
            get
            {
                return _PresentationID;
            }
            set
            {
                OnPresentationIDChanging(value);
                ReportPropertyChanging("PresentationID");
                _PresentationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PresentationID");
                OnPresentationIDChanged();
            }
        }
        private global::System.Int64 _PresentationID;
        partial void OnPresentationIDChanging(global::System.Int64 value);
        partial void OnPresentationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> VoteTypeID
        {
            get
            {
                return _VoteTypeID;
            }
            set
            {
                OnVoteTypeIDChanging(value);
                ReportPropertyChanging("VoteTypeID");
                _VoteTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VoteTypeID");
                OnVoteTypeIDChanged();
            }
        }
        private Nullable<global::System.Int64> _VoteTypeID;
        partial void OnVoteTypeIDChanging(Nullable<global::System.Int64> value);
        partial void OnVoteTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> AttendanceTypeID
        {
            get
            {
                return _AttendanceTypeID;
            }
            set
            {
                OnAttendanceTypeIDChanging(value);
                ReportPropertyChanging("AttendanceTypeID");
                _AttendanceTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AttendanceTypeID");
                OnAttendanceTypeIDChanged();
            }
        }
        private Nullable<global::System.Int64> _AttendanceTypeID;
        partial void OnAttendanceTypeIDChanging(Nullable<global::System.Int64> value);
        partial void OnAttendanceTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> PostMeetingFlag
        {
            get
            {
                return _PostMeetingFlag;
            }
            set
            {
                OnPostMeetingFlagChanging(value);
                ReportPropertyChanging("PostMeetingFlag");
                _PostMeetingFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostMeetingFlag");
                OnPostMeetingFlagChanged();
            }
        }
        private Nullable<global::System.Boolean> _PostMeetingFlag;
        partial void OnPostMeetingFlagChanging(Nullable<global::System.Boolean> value);
        partial void OnPostMeetingFlagChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DiscussionFlag
        {
            get
            {
                return _DiscussionFlag;
            }
            set
            {
                OnDiscussionFlagChanging(value);
                ReportPropertyChanging("DiscussionFlag");
                _DiscussionFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DiscussionFlag");
                OnDiscussionFlagChanged();
            }
        }
        private Nullable<global::System.Boolean> _DiscussionFlag;
        partial void OnDiscussionFlagChanging(Nullable<global::System.Boolean> value);
        partial void OnDiscussionFlagChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VoterPFVMeasure
        {
            get
            {
                return _VoterPFVMeasure;
            }
            set
            {
                OnVoterPFVMeasureChanging(value);
                ReportPropertyChanging("VoterPFVMeasure");
                _VoterPFVMeasure = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VoterPFVMeasure");
                OnVoterPFVMeasureChanged();
            }
        }
        private global::System.String _VoterPFVMeasure;
        partial void OnVoterPFVMeasureChanging(global::System.String value);
        partial void OnVoterPFVMeasureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> VoterBuyRange
        {
            get
            {
                return _VoterBuyRange;
            }
            set
            {
                OnVoterBuyRangeChanging(value);
                ReportPropertyChanging("VoterBuyRange");
                _VoterBuyRange = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VoterBuyRange");
                OnVoterBuyRangeChanged();
            }
        }
        private Nullable<global::System.Single> _VoterBuyRange;
        partial void OnVoterBuyRangeChanging(Nullable<global::System.Single> value);
        partial void OnVoterBuyRangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> VoterSellRange
        {
            get
            {
                return _VoterSellRange;
            }
            set
            {
                OnVoterSellRangeChanging(value);
                ReportPropertyChanging("VoterSellRange");
                _VoterSellRange = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VoterSellRange");
                OnVoterSellRangeChanged();
            }
        }
        private Nullable<global::System.Single> _VoterSellRange;
        partial void OnVoterSellRangeChanging(Nullable<global::System.Single> value);
        partial void OnVoterSellRangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VoterRecommendation
        {
            get
            {
                return _VoterRecommendation;
            }
            set
            {
                OnVoterRecommendationChanging(value);
                ReportPropertyChanging("VoterRecommendation");
                _VoterRecommendation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VoterRecommendation");
                OnVoterRecommendationChanged();
            }
        }
        private global::System.String _VoterRecommendation;
        partial void OnVoterRecommendationChanging(global::System.String value);
        partial void OnVoterRecommendationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedOn
        {
            get
            {
                return _ModifiedOn;
            }
            set
            {
                OnModifiedOnChanging(value);
                ReportPropertyChanging("ModifiedOn");
                _ModifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedOn");
                OnModifiedOnChanged();
            }
        }
        private global::System.DateTime _ModifiedOn;
        partial void OnModifiedOnChanging(global::System.DateTime value);
        partial void OnModifiedOnChanged();

        #endregion
    }

    #endregion
    
}
