//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace GreenField.DAL
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Template_EditorEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new Template_EditorEntities object using the connection string found in the 'Template_EditorEntities' section of the application configuration file.
        /// </summary>
        public Template_EditorEntities() : base("name=Template_EditorEntities", "Template_EditorEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Template_EditorEntities object.
        /// </summary>
        public Template_EditorEntities(string connectionString) : base(connectionString, "Template_EditorEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Template_EditorEntities object.
        /// </summary>
        public Template_EditorEntities(EntityConnection connection) : base(connection, "Template_EditorEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StoredUserPreference> StoredUserPreferences
        {
            get
            {
                if ((_StoredUserPreferences == null))
                {
                    _StoredUserPreferences = base.CreateObjectSet<StoredUserPreference>("StoredUserPreferences");
                }
                return _StoredUserPreferences;
            }
        }
        private ObjectSet<StoredUserPreference> _StoredUserPreferences;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StoredUserPreferences EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStoredUserPreferences(StoredUserPreference storedUserPreference)
        {
            base.AddObject("StoredUserPreferences", storedUserPreference);
        }

        #endregion
        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userId">No Metadata Documentation available.</param>
        /// <param name="storedValue">No Metadata Documentation available.</param>
        public int StoreDashboardInfo(Nullable<global::System.Int32> userId, global::System.String storedValue)
        {
            ObjectParameter userIdParameter;
            if (userId.HasValue)
            {
                userIdParameter = new ObjectParameter("UserId", userId);
            }
            else
            {
                userIdParameter = new ObjectParameter("UserId", typeof(global::System.Int32));
            }
    
            ObjectParameter storedValueParameter;
            if (storedValue != null)
            {
                storedValueParameter = new ObjectParameter("StoredValue", storedValue);
            }
            else
            {
                storedValueParameter = new ObjectParameter("StoredValue", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("StoreDashboardInfo", userIdParameter, storedValueParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userID">No Metadata Documentation available.</param>
        public ObjectResult<StoredUserPreference> GetDashboardData(Nullable<global::System.Int32> userID)
        {
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<StoredUserPreference>("GetDashboardData", userIDParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="userID">No Metadata Documentation available.</param>
        public ObjectResult<StoredUserPreference> GetDashboardData(Nullable<global::System.Int32> userID, MergeOption mergeOption)
        {
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<StoredUserPreference>("GetDashboardData", mergeOption, userIDParameter);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Template_EditorModel", Name="StoredUserPreference")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StoredUserPreference : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StoredUserPreference object.
        /// </summary>
        /// <param name="userID">Initial value of the UserID property.</param>
        public static StoredUserPreference CreateStoredUserPreference(global::System.Int32 userID)
        {
            StoredUserPreference storedUserPreference = new StoredUserPreference();
            storedUserPreference.UserID = userID;
            return storedUserPreference;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserPreference
        {
            get
            {
                return _UserPreference;
            }
            set
            {
                OnUserPreferenceChanging(value);
                ReportPropertyChanging("UserPreference");
                _UserPreference = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserPreference");
                OnUserPreferenceChanged();
            }
        }
        private global::System.String _UserPreference;
        partial void OnUserPreferenceChanging(global::System.String value);
        partial void OnUserPreferenceChanged();

        #endregion
    
    }

    #endregion
    
}
