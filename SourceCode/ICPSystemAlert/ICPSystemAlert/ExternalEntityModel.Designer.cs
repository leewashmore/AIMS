//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace ICPSystemAlert
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ExternalEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ExternalEntities object using the connection string found in the 'ExternalEntities' section of the application configuration file.
        /// </summary>
        public ExternalEntities() : base("name=ExternalEntities", "ExternalEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ExternalEntities object.
        /// </summary>
        public ExternalEntities(string connectionString) : base(connectionString, "ExternalEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ExternalEntities object.
        /// </summary>
        public ExternalEntities(EntityConnection connection) : base(connection, "ExternalEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FAIR_VALUE> FAIR_VALUE
        {
            get
            {
                if ((_FAIR_VALUE == null))
                {
                    _FAIR_VALUE = base.CreateObjectSet<FAIR_VALUE>("FAIR_VALUE");
                }
                return _FAIR_VALUE;
            }
        }
        private ObjectSet<FAIR_VALUE> _FAIR_VALUE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DATA_MASTER> DATA_MASTER
        {
            get
            {
                if ((_DATA_MASTER == null))
                {
                    _DATA_MASTER = base.CreateObjectSet<DATA_MASTER>("DATA_MASTER");
                }
                return _DATA_MASTER;
            }
        }
        private ObjectSet<DATA_MASTER> _DATA_MASTER;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PERIOD_FINANCIALS> PERIOD_FINANCIALS
        {
            get
            {
                if ((_PERIOD_FINANCIALS == null))
                {
                    _PERIOD_FINANCIALS = base.CreateObjectSet<PERIOD_FINANCIALS>("PERIOD_FINANCIALS");
                }
                return _PERIOD_FINANCIALS;
            }
        }
        private ObjectSet<PERIOD_FINANCIALS> _PERIOD_FINANCIALS;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FAIR_VALUE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFAIR_VALUE(FAIR_VALUE fAIR_VALUE)
        {
            base.AddObject("FAIR_VALUE", fAIR_VALUE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DATA_MASTER EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDATA_MASTER(DATA_MASTER dATA_MASTER)
        {
            base.AddObject("DATA_MASTER", dATA_MASTER);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PERIOD_FINANCIALS EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPERIOD_FINANCIALS(PERIOD_FINANCIALS pERIOD_FINANCIALS)
        {
            base.AddObject("PERIOD_FINANCIALS", pERIOD_FINANCIALS);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExternalModel", Name="DATA_MASTER")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DATA_MASTER : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DATA_MASTER object.
        /// </summary>
        /// <param name="dATA_ID">Initial value of the DATA_ID property.</param>
        /// <param name="fX_CONV_TYPE">Initial value of the FX_CONV_TYPE property.</param>
        /// <param name="cALENDARIZE">Initial value of the CALENDARIZE property.</param>
        /// <param name="iNDUSTRIAL">Initial value of the INDUSTRIAL property.</param>
        /// <param name="bANK">Initial value of the BANK property.</param>
        /// <param name="iNSURANCE">Initial value of the INSURANCE property.</param>
        /// <param name="uTILITY">Initial value of the UTILITY property.</param>
        /// <param name="qUARTERLY">Initial value of the QUARTERLY property.</param>
        /// <param name="dATA_DESC">Initial value of the DATA_DESC property.</param>
        public static DATA_MASTER CreateDATA_MASTER(global::System.Int32 dATA_ID, global::System.String fX_CONV_TYPE, global::System.String cALENDARIZE, global::System.String iNDUSTRIAL, global::System.String bANK, global::System.String iNSURANCE, global::System.String uTILITY, global::System.String qUARTERLY, global::System.String dATA_DESC)
        {
            DATA_MASTER dATA_MASTER = new DATA_MASTER();
            dATA_MASTER.DATA_ID = dATA_ID;
            dATA_MASTER.FX_CONV_TYPE = fX_CONV_TYPE;
            dATA_MASTER.CALENDARIZE = cALENDARIZE;
            dATA_MASTER.INDUSTRIAL = iNDUSTRIAL;
            dATA_MASTER.BANK = bANK;
            dATA_MASTER.INSURANCE = iNSURANCE;
            dATA_MASTER.UTILITY = uTILITY;
            dATA_MASTER.QUARTERLY = qUARTERLY;
            dATA_MASTER.DATA_DESC = dATA_DESC;
            return dATA_MASTER;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DATA_ID
        {
            get
            {
                return _DATA_ID;
            }
            set
            {
                if (_DATA_ID != value)
                {
                    OnDATA_IDChanging(value);
                    ReportPropertyChanging("DATA_ID");
                    _DATA_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DATA_ID");
                    OnDATA_IDChanged();
                }
            }
        }
        private global::System.Int32 _DATA_ID;
        partial void OnDATA_IDChanging(global::System.Int32 value);
        partial void OnDATA_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String COA
        {
            get
            {
                return _COA;
            }
            set
            {
                OnCOAChanging(value);
                ReportPropertyChanging("COA");
                _COA = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("COA");
                OnCOAChanged();
            }
        }
        private global::System.String _COA;
        partial void OnCOAChanging(global::System.String value);
        partial void OnCOAChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FX_CONV_TYPE
        {
            get
            {
                return _FX_CONV_TYPE;
            }
            set
            {
                if (_FX_CONV_TYPE != value)
                {
                    OnFX_CONV_TYPEChanging(value);
                    ReportPropertyChanging("FX_CONV_TYPE");
                    _FX_CONV_TYPE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("FX_CONV_TYPE");
                    OnFX_CONV_TYPEChanged();
                }
            }
        }
        private global::System.String _FX_CONV_TYPE;
        partial void OnFX_CONV_TYPEChanging(global::System.String value);
        partial void OnFX_CONV_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CALENDARIZE
        {
            get
            {
                return _CALENDARIZE;
            }
            set
            {
                if (_CALENDARIZE != value)
                {
                    OnCALENDARIZEChanging(value);
                    ReportPropertyChanging("CALENDARIZE");
                    _CALENDARIZE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CALENDARIZE");
                    OnCALENDARIZEChanged();
                }
            }
        }
        private global::System.String _CALENDARIZE;
        partial void OnCALENDARIZEChanging(global::System.String value);
        partial void OnCALENDARIZEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String INDUSTRIAL
        {
            get
            {
                return _INDUSTRIAL;
            }
            set
            {
                if (_INDUSTRIAL != value)
                {
                    OnINDUSTRIALChanging(value);
                    ReportPropertyChanging("INDUSTRIAL");
                    _INDUSTRIAL = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("INDUSTRIAL");
                    OnINDUSTRIALChanged();
                }
            }
        }
        private global::System.String _INDUSTRIAL;
        partial void OnINDUSTRIALChanging(global::System.String value);
        partial void OnINDUSTRIALChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BANK
        {
            get
            {
                return _BANK;
            }
            set
            {
                if (_BANK != value)
                {
                    OnBANKChanging(value);
                    ReportPropertyChanging("BANK");
                    _BANK = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("BANK");
                    OnBANKChanged();
                }
            }
        }
        private global::System.String _BANK;
        partial void OnBANKChanging(global::System.String value);
        partial void OnBANKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String INSURANCE
        {
            get
            {
                return _INSURANCE;
            }
            set
            {
                if (_INSURANCE != value)
                {
                    OnINSURANCEChanging(value);
                    ReportPropertyChanging("INSURANCE");
                    _INSURANCE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("INSURANCE");
                    OnINSURANCEChanged();
                }
            }
        }
        private global::System.String _INSURANCE;
        partial void OnINSURANCEChanging(global::System.String value);
        partial void OnINSURANCEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UTILITY
        {
            get
            {
                return _UTILITY;
            }
            set
            {
                if (_UTILITY != value)
                {
                    OnUTILITYChanging(value);
                    ReportPropertyChanging("UTILITY");
                    _UTILITY = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UTILITY");
                    OnUTILITYChanged();
                }
            }
        }
        private global::System.String _UTILITY;
        partial void OnUTILITYChanging(global::System.String value);
        partial void OnUTILITYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String QUARTERLY
        {
            get
            {
                return _QUARTERLY;
            }
            set
            {
                if (_QUARTERLY != value)
                {
                    OnQUARTERLYChanging(value);
                    ReportPropertyChanging("QUARTERLY");
                    _QUARTERLY = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("QUARTERLY");
                    OnQUARTERLYChanged();
                }
            }
        }
        private global::System.String _QUARTERLY;
        partial void OnQUARTERLYChanging(global::System.String value);
        partial void OnQUARTERLYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DATA_DESC
        {
            get
            {
                return _DATA_DESC;
            }
            set
            {
                if (_DATA_DESC != value)
                {
                    OnDATA_DESCChanging(value);
                    ReportPropertyChanging("DATA_DESC");
                    _DATA_DESC = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DATA_DESC");
                    OnDATA_DESCChanged();
                }
            }
        }
        private global::System.String _DATA_DESC;
        partial void OnDATA_DESCChanging(global::System.String value);
        partial void OnDATA_DESCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String COA_TYPE
        {
            get
            {
                return _COA_TYPE;
            }
            set
            {
                OnCOA_TYPEChanging(value);
                ReportPropertyChanging("COA_TYPE");
                _COA_TYPE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("COA_TYPE");
                OnCOA_TYPEChanged();
            }
        }
        private global::System.String _COA_TYPE;
        partial void OnCOA_TYPEChanging(global::System.String value);
        partial void OnCOA_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ANNUAL
        {
            get
            {
                return _ANNUAL;
            }
            set
            {
                OnANNUALChanging(value);
                ReportPropertyChanging("ANNUAL");
                _ANNUAL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ANNUAL");
                OnANNUALChanged();
            }
        }
        private global::System.String _ANNUAL;
        partial void OnANNUALChanging(global::System.String value);
        partial void OnANNUALChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CURRENT
        {
            get
            {
                return _CURRENT;
            }
            set
            {
                OnCURRENTChanging(value);
                ReportPropertyChanging("CURRENT");
                _CURRENT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CURRENT");
                OnCURRENTChanged();
            }
        }
        private global::System.String _CURRENT;
        partial void OnCURRENTChanging(global::System.String value);
        partial void OnCURRENTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String STATEMENT_TYPE
        {
            get
            {
                return _STATEMENT_TYPE;
            }
            set
            {
                OnSTATEMENT_TYPEChanging(value);
                ReportPropertyChanging("STATEMENT_TYPE");
                _STATEMENT_TYPE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("STATEMENT_TYPE");
                OnSTATEMENT_TYPEChanged();
            }
        }
        private global::System.String _STATEMENT_TYPE;
        partial void OnSTATEMENT_TYPEChanging(global::System.String value);
        partial void OnSTATEMENT_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CONVERT_FLAG
        {
            get
            {
                return _CONVERT_FLAG;
            }
            set
            {
                OnCONVERT_FLAGChanging(value);
                ReportPropertyChanging("CONVERT_FLAG");
                _CONVERT_FLAG = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CONVERT_FLAG");
                OnCONVERT_FLAGChanged();
            }
        }
        private global::System.String _CONVERT_FLAG;
        partial void OnCONVERT_FLAGChanging(global::System.String value);
        partial void OnCONVERT_FLAGChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExternalModel", Name="FAIR_VALUE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FAIR_VALUE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FAIR_VALUE object.
        /// </summary>
        /// <param name="vALUE_TYPE">Initial value of the VALUE_TYPE property.</param>
        /// <param name="sECURITY_ID">Initial value of the SECURITY_ID property.</param>
        /// <param name="fV_MEASURE">Initial value of the FV_MEASURE property.</param>
        /// <param name="fV_BUY">Initial value of the FV_BUY property.</param>
        /// <param name="fV_SELL">Initial value of the FV_SELL property.</param>
        /// <param name="cURRENT_MEASURE_VALUE">Initial value of the CURRENT_MEASURE_VALUE property.</param>
        /// <param name="uPSIDE">Initial value of the UPSIDE property.</param>
        public static FAIR_VALUE CreateFAIR_VALUE(global::System.String vALUE_TYPE, global::System.String sECURITY_ID, global::System.Int32 fV_MEASURE, global::System.Decimal fV_BUY, global::System.Decimal fV_SELL, global::System.Decimal cURRENT_MEASURE_VALUE, global::System.Decimal uPSIDE)
        {
            FAIR_VALUE fAIR_VALUE = new FAIR_VALUE();
            fAIR_VALUE.VALUE_TYPE = vALUE_TYPE;
            fAIR_VALUE.SECURITY_ID = sECURITY_ID;
            fAIR_VALUE.FV_MEASURE = fV_MEASURE;
            fAIR_VALUE.FV_BUY = fV_BUY;
            fAIR_VALUE.FV_SELL = fV_SELL;
            fAIR_VALUE.CURRENT_MEASURE_VALUE = cURRENT_MEASURE_VALUE;
            fAIR_VALUE.UPSIDE = uPSIDE;
            return fAIR_VALUE;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String VALUE_TYPE
        {
            get
            {
                return _VALUE_TYPE;
            }
            set
            {
                if (_VALUE_TYPE != value)
                {
                    OnVALUE_TYPEChanging(value);
                    ReportPropertyChanging("VALUE_TYPE");
                    _VALUE_TYPE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("VALUE_TYPE");
                    OnVALUE_TYPEChanged();
                }
            }
        }
        private global::System.String _VALUE_TYPE;
        partial void OnVALUE_TYPEChanging(global::System.String value);
        partial void OnVALUE_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SECURITY_ID
        {
            get
            {
                return _SECURITY_ID;
            }
            set
            {
                if (_SECURITY_ID != value)
                {
                    OnSECURITY_IDChanging(value);
                    ReportPropertyChanging("SECURITY_ID");
                    _SECURITY_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SECURITY_ID");
                    OnSECURITY_IDChanged();
                }
            }
        }
        private global::System.String _SECURITY_ID;
        partial void OnSECURITY_IDChanging(global::System.String value);
        partial void OnSECURITY_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FV_MEASURE
        {
            get
            {
                return _FV_MEASURE;
            }
            set
            {
                if (_FV_MEASURE != value)
                {
                    OnFV_MEASUREChanging(value);
                    ReportPropertyChanging("FV_MEASURE");
                    _FV_MEASURE = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FV_MEASURE");
                    OnFV_MEASUREChanged();
                }
            }
        }
        private global::System.Int32 _FV_MEASURE;
        partial void OnFV_MEASUREChanging(global::System.Int32 value);
        partial void OnFV_MEASUREChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal FV_BUY
        {
            get
            {
                return _FV_BUY;
            }
            set
            {
                if (_FV_BUY != value)
                {
                    OnFV_BUYChanging(value);
                    ReportPropertyChanging("FV_BUY");
                    _FV_BUY = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FV_BUY");
                    OnFV_BUYChanged();
                }
            }
        }
        private global::System.Decimal _FV_BUY;
        partial void OnFV_BUYChanging(global::System.Decimal value);
        partial void OnFV_BUYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal FV_SELL
        {
            get
            {
                return _FV_SELL;
            }
            set
            {
                if (_FV_SELL != value)
                {
                    OnFV_SELLChanging(value);
                    ReportPropertyChanging("FV_SELL");
                    _FV_SELL = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FV_SELL");
                    OnFV_SELLChanged();
                }
            }
        }
        private global::System.Decimal _FV_SELL;
        partial void OnFV_SELLChanging(global::System.Decimal value);
        partial void OnFV_SELLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal CURRENT_MEASURE_VALUE
        {
            get
            {
                return _CURRENT_MEASURE_VALUE;
            }
            set
            {
                if (_CURRENT_MEASURE_VALUE != value)
                {
                    OnCURRENT_MEASURE_VALUEChanging(value);
                    ReportPropertyChanging("CURRENT_MEASURE_VALUE");
                    _CURRENT_MEASURE_VALUE = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CURRENT_MEASURE_VALUE");
                    OnCURRENT_MEASURE_VALUEChanged();
                }
            }
        }
        private global::System.Decimal _CURRENT_MEASURE_VALUE;
        partial void OnCURRENT_MEASURE_VALUEChanging(global::System.Decimal value);
        partial void OnCURRENT_MEASURE_VALUEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal UPSIDE
        {
            get
            {
                return _UPSIDE;
            }
            set
            {
                if (_UPSIDE != value)
                {
                    OnUPSIDEChanging(value);
                    ReportPropertyChanging("UPSIDE");
                    _UPSIDE = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UPSIDE");
                    OnUPSIDEChanged();
                }
            }
        }
        private global::System.Decimal _UPSIDE;
        partial void OnUPSIDEChanging(global::System.Decimal value);
        partial void OnUPSIDEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UPDATED
        {
            get
            {
                return _UPDATED;
            }
            set
            {
                OnUPDATEDChanging(value);
                ReportPropertyChanging("UPDATED");
                _UPDATED = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UPDATED");
                OnUPDATEDChanged();
            }
        }
        private Nullable<global::System.DateTime> _UPDATED;
        partial void OnUPDATEDChanging(Nullable<global::System.DateTime> value);
        partial void OnUPDATEDChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExternalModel", Name="PERIOD_FINANCIALS")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PERIOD_FINANCIALS : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PERIOD_FINANCIALS object.
        /// </summary>
        /// <param name="iSSUER_ID">Initial value of the ISSUER_ID property.</param>
        /// <param name="sECURITY_ID">Initial value of the SECURITY_ID property.</param>
        /// <param name="cOA_TYPE">Initial value of the COA_TYPE property.</param>
        /// <param name="dATA_SOURCE">Initial value of the DATA_SOURCE property.</param>
        /// <param name="rOOT_SOURCE">Initial value of the ROOT_SOURCE property.</param>
        /// <param name="rOOT_SOURCE_DATE">Initial value of the ROOT_SOURCE_DATE property.</param>
        /// <param name="pERIOD_TYPE">Initial value of the PERIOD_TYPE property.</param>
        /// <param name="pERIOD_YEAR">Initial value of the PERIOD_YEAR property.</param>
        /// <param name="pERIOD_END_DATE">Initial value of the PERIOD_END_DATE property.</param>
        /// <param name="fISCAL_TYPE">Initial value of the FISCAL_TYPE property.</param>
        /// <param name="cURRENCY">Initial value of the CURRENCY property.</param>
        /// <param name="dATA_ID">Initial value of the DATA_ID property.</param>
        /// <param name="aMOUNT">Initial value of the AMOUNT property.</param>
        /// <param name="sOURCE_CURRENCY">Initial value of the SOURCE_CURRENCY property.</param>
        /// <param name="aMOUNT_TYPE">Initial value of the AMOUNT_TYPE property.</param>
        public static PERIOD_FINANCIALS CreatePERIOD_FINANCIALS(global::System.String iSSUER_ID, global::System.String sECURITY_ID, global::System.String cOA_TYPE, global::System.String dATA_SOURCE, global::System.String rOOT_SOURCE, global::System.DateTime rOOT_SOURCE_DATE, global::System.String pERIOD_TYPE, global::System.Int32 pERIOD_YEAR, global::System.DateTime pERIOD_END_DATE, global::System.String fISCAL_TYPE, global::System.String cURRENCY, global::System.Int32 dATA_ID, global::System.Decimal aMOUNT, global::System.String sOURCE_CURRENCY, global::System.String aMOUNT_TYPE)
        {
            PERIOD_FINANCIALS pERIOD_FINANCIALS = new PERIOD_FINANCIALS();
            pERIOD_FINANCIALS.ISSUER_ID = iSSUER_ID;
            pERIOD_FINANCIALS.SECURITY_ID = sECURITY_ID;
            pERIOD_FINANCIALS.COA_TYPE = cOA_TYPE;
            pERIOD_FINANCIALS.DATA_SOURCE = dATA_SOURCE;
            pERIOD_FINANCIALS.ROOT_SOURCE = rOOT_SOURCE;
            pERIOD_FINANCIALS.ROOT_SOURCE_DATE = rOOT_SOURCE_DATE;
            pERIOD_FINANCIALS.PERIOD_TYPE = pERIOD_TYPE;
            pERIOD_FINANCIALS.PERIOD_YEAR = pERIOD_YEAR;
            pERIOD_FINANCIALS.PERIOD_END_DATE = pERIOD_END_DATE;
            pERIOD_FINANCIALS.FISCAL_TYPE = fISCAL_TYPE;
            pERIOD_FINANCIALS.CURRENCY = cURRENCY;
            pERIOD_FINANCIALS.DATA_ID = dATA_ID;
            pERIOD_FINANCIALS.AMOUNT = aMOUNT;
            pERIOD_FINANCIALS.SOURCE_CURRENCY = sOURCE_CURRENCY;
            pERIOD_FINANCIALS.AMOUNT_TYPE = aMOUNT_TYPE;
            return pERIOD_FINANCIALS;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ISSUER_ID
        {
            get
            {
                return _ISSUER_ID;
            }
            set
            {
                if (_ISSUER_ID != value)
                {
                    OnISSUER_IDChanging(value);
                    ReportPropertyChanging("ISSUER_ID");
                    _ISSUER_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ISSUER_ID");
                    OnISSUER_IDChanged();
                }
            }
        }
        private global::System.String _ISSUER_ID;
        partial void OnISSUER_IDChanging(global::System.String value);
        partial void OnISSUER_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SECURITY_ID
        {
            get
            {
                return _SECURITY_ID;
            }
            set
            {
                if (_SECURITY_ID != value)
                {
                    OnSECURITY_IDChanging(value);
                    ReportPropertyChanging("SECURITY_ID");
                    _SECURITY_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SECURITY_ID");
                    OnSECURITY_IDChanged();
                }
            }
        }
        private global::System.String _SECURITY_ID;
        partial void OnSECURITY_IDChanging(global::System.String value);
        partial void OnSECURITY_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String COA_TYPE
        {
            get
            {
                return _COA_TYPE;
            }
            set
            {
                if (_COA_TYPE != value)
                {
                    OnCOA_TYPEChanging(value);
                    ReportPropertyChanging("COA_TYPE");
                    _COA_TYPE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("COA_TYPE");
                    OnCOA_TYPEChanged();
                }
            }
        }
        private global::System.String _COA_TYPE;
        partial void OnCOA_TYPEChanging(global::System.String value);
        partial void OnCOA_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DATA_SOURCE
        {
            get
            {
                return _DATA_SOURCE;
            }
            set
            {
                if (_DATA_SOURCE != value)
                {
                    OnDATA_SOURCEChanging(value);
                    ReportPropertyChanging("DATA_SOURCE");
                    _DATA_SOURCE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DATA_SOURCE");
                    OnDATA_SOURCEChanged();
                }
            }
        }
        private global::System.String _DATA_SOURCE;
        partial void OnDATA_SOURCEChanging(global::System.String value);
        partial void OnDATA_SOURCEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ROOT_SOURCE
        {
            get
            {
                return _ROOT_SOURCE;
            }
            set
            {
                if (_ROOT_SOURCE != value)
                {
                    OnROOT_SOURCEChanging(value);
                    ReportPropertyChanging("ROOT_SOURCE");
                    _ROOT_SOURCE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ROOT_SOURCE");
                    OnROOT_SOURCEChanged();
                }
            }
        }
        private global::System.String _ROOT_SOURCE;
        partial void OnROOT_SOURCEChanging(global::System.String value);
        partial void OnROOT_SOURCEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ROOT_SOURCE_DATE
        {
            get
            {
                return _ROOT_SOURCE_DATE;
            }
            set
            {
                if (_ROOT_SOURCE_DATE != value)
                {
                    OnROOT_SOURCE_DATEChanging(value);
                    ReportPropertyChanging("ROOT_SOURCE_DATE");
                    _ROOT_SOURCE_DATE = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ROOT_SOURCE_DATE");
                    OnROOT_SOURCE_DATEChanged();
                }
            }
        }
        private global::System.DateTime _ROOT_SOURCE_DATE;
        partial void OnROOT_SOURCE_DATEChanging(global::System.DateTime value);
        partial void OnROOT_SOURCE_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PERIOD_TYPE
        {
            get
            {
                return _PERIOD_TYPE;
            }
            set
            {
                if (_PERIOD_TYPE != value)
                {
                    OnPERIOD_TYPEChanging(value);
                    ReportPropertyChanging("PERIOD_TYPE");
                    _PERIOD_TYPE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PERIOD_TYPE");
                    OnPERIOD_TYPEChanged();
                }
            }
        }
        private global::System.String _PERIOD_TYPE;
        partial void OnPERIOD_TYPEChanging(global::System.String value);
        partial void OnPERIOD_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PERIOD_YEAR
        {
            get
            {
                return _PERIOD_YEAR;
            }
            set
            {
                if (_PERIOD_YEAR != value)
                {
                    OnPERIOD_YEARChanging(value);
                    ReportPropertyChanging("PERIOD_YEAR");
                    _PERIOD_YEAR = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PERIOD_YEAR");
                    OnPERIOD_YEARChanged();
                }
            }
        }
        private global::System.Int32 _PERIOD_YEAR;
        partial void OnPERIOD_YEARChanging(global::System.Int32 value);
        partial void OnPERIOD_YEARChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PERIOD_END_DATE
        {
            get
            {
                return _PERIOD_END_DATE;
            }
            set
            {
                if (_PERIOD_END_DATE != value)
                {
                    OnPERIOD_END_DATEChanging(value);
                    ReportPropertyChanging("PERIOD_END_DATE");
                    _PERIOD_END_DATE = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PERIOD_END_DATE");
                    OnPERIOD_END_DATEChanged();
                }
            }
        }
        private global::System.DateTime _PERIOD_END_DATE;
        partial void OnPERIOD_END_DATEChanging(global::System.DateTime value);
        partial void OnPERIOD_END_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FISCAL_TYPE
        {
            get
            {
                return _FISCAL_TYPE;
            }
            set
            {
                if (_FISCAL_TYPE != value)
                {
                    OnFISCAL_TYPEChanging(value);
                    ReportPropertyChanging("FISCAL_TYPE");
                    _FISCAL_TYPE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("FISCAL_TYPE");
                    OnFISCAL_TYPEChanged();
                }
            }
        }
        private global::System.String _FISCAL_TYPE;
        partial void OnFISCAL_TYPEChanging(global::System.String value);
        partial void OnFISCAL_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CURRENCY
        {
            get
            {
                return _CURRENCY;
            }
            set
            {
                if (_CURRENCY != value)
                {
                    OnCURRENCYChanging(value);
                    ReportPropertyChanging("CURRENCY");
                    _CURRENCY = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CURRENCY");
                    OnCURRENCYChanged();
                }
            }
        }
        private global::System.String _CURRENCY;
        partial void OnCURRENCYChanging(global::System.String value);
        partial void OnCURRENCYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DATA_ID
        {
            get
            {
                return _DATA_ID;
            }
            set
            {
                if (_DATA_ID != value)
                {
                    OnDATA_IDChanging(value);
                    ReportPropertyChanging("DATA_ID");
                    _DATA_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DATA_ID");
                    OnDATA_IDChanged();
                }
            }
        }
        private global::System.Int32 _DATA_ID;
        partial void OnDATA_IDChanging(global::System.Int32 value);
        partial void OnDATA_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal AMOUNT
        {
            get
            {
                return _AMOUNT;
            }
            set
            {
                if (_AMOUNT != value)
                {
                    OnAMOUNTChanging(value);
                    ReportPropertyChanging("AMOUNT");
                    _AMOUNT = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AMOUNT");
                    OnAMOUNTChanged();
                }
            }
        }
        private global::System.Decimal _AMOUNT;
        partial void OnAMOUNTChanging(global::System.Decimal value);
        partial void OnAMOUNTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CALCULATION_DIAGRAM
        {
            get
            {
                return _CALCULATION_DIAGRAM;
            }
            set
            {
                OnCALCULATION_DIAGRAMChanging(value);
                ReportPropertyChanging("CALCULATION_DIAGRAM");
                _CALCULATION_DIAGRAM = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CALCULATION_DIAGRAM");
                OnCALCULATION_DIAGRAMChanged();
            }
        }
        private global::System.String _CALCULATION_DIAGRAM;
        partial void OnCALCULATION_DIAGRAMChanging(global::System.String value);
        partial void OnCALCULATION_DIAGRAMChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SOURCE_CURRENCY
        {
            get
            {
                return _SOURCE_CURRENCY;
            }
            set
            {
                if (_SOURCE_CURRENCY != value)
                {
                    OnSOURCE_CURRENCYChanging(value);
                    ReportPropertyChanging("SOURCE_CURRENCY");
                    _SOURCE_CURRENCY = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SOURCE_CURRENCY");
                    OnSOURCE_CURRENCYChanged();
                }
            }
        }
        private global::System.String _SOURCE_CURRENCY;
        partial void OnSOURCE_CURRENCYChanging(global::System.String value);
        partial void OnSOURCE_CURRENCYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AMOUNT_TYPE
        {
            get
            {
                return _AMOUNT_TYPE;
            }
            set
            {
                if (_AMOUNT_TYPE != value)
                {
                    OnAMOUNT_TYPEChanging(value);
                    ReportPropertyChanging("AMOUNT_TYPE");
                    _AMOUNT_TYPE = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("AMOUNT_TYPE");
                    OnAMOUNT_TYPEChanged();
                }
            }
        }
        private global::System.String _AMOUNT_TYPE;
        partial void OnAMOUNT_TYPEChanging(global::System.String value);
        partial void OnAMOUNT_TYPEChanged();

        #endregion
    
    }

    #endregion
    
}
